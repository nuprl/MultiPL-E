{
  "name": "mbpp_70_get_equal",
  "language": "php",
  "prompt": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_70_get_equal.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $equal = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != $length) {\n            $equal = false;\n        }\n    }\n    return $equal;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpft12xujn.php:19\nStack trace:\n#0 /tmp/tmpft12xujn.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpft12xujn.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\" \", $Input[0]);\n    $arr1 = explode(\" \", $Input[1]);\n    $arr2 = explode(\" \", $Input[2]);\n    $arr3 = explode(\" \", $Input[3]);\n    $arr4 = explode(\" \", $Input[4]);\n    $arr5 = explode(\" \", $Input[5]);\n    $arr6 = explode(\" \", $Input[6]);\n    $arr7 = explode(\" \", $Input[7]);\n    $arr8 = explode(\" \", $Input[8]);\n    $arr9 = explode(\" \", $Input[9]);\n    $arr10 = explode(\" \", $Input[10]);\n    $arr11 = explode(\" \", $Input[11]);\n    $arr12 = explode(\" \", $Input[12]);\n    $arr13 = explode(\" \", $Input[13]);\n    $arr14 = explode(\" \", $Input[14]);\n    $arr15 = explode(\" \", $Input[15]);\n    $arr16 = explode(\" \", $Input[16]);\n    $arr17 = explode(\" \", $Input[17]);\n    $arr18 = explode(\" \", $Input[18]);\n    $arr19 = explode(\" \", $Input[19]);\n    $arr20 = explode(\" \", $Input[20]);\n    $arr21 = explode(\" \", $Input[21]);\n    $arr22 = explode(\" \", $Input[22]);\n    $arr23 = explode(\" \", $Input[23]);\n    $arr24 = explode(\" \", $Input[24]);\n    $arr25 = explode(\" \", $Input[25]);\n    $arr26 = explode(\" \", $Input[26]);\n    $arr27 = explode(\" \", $Input[27]);\n    $arr28 = explode(\" \", $Input[28]);\n    $arr29 = explode(\" \", $Input[29]);\n    $arr30 = explode(\" \", $Input[30]);\n    $arr31 = explode(\" \", $Input[31]);\n    $arr32 = explode(\" \", $Input[32]);\n    $arr33 = explode(\" \", $Input[33]);\n    $arr34 = explode(\" \", $Input[34]);\n    $arr35 = explode(\" \", $Input[35]);\n    $arr36 = explode(\" \",\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjoc41rfd.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\" \", $Input[0]);\n    $arr1 = explode(\" \", $Input[1]);\n    $arr2 = explode(\" \", $Input[2]);\n    $arr3 = explode(\" \", $Input[3]);\n    $arr4 = explode(\" \", $Input[4]);\n    $arr5 = explode(\" \", $Input[5]);\n    $arr6 = explode(\" \", $Input[6]);\n    $arr7 = explode(\" \", $Input[7]);\n    $arr8 = explode(\" \", $Input[8]);\n    $arr9 = explode(\" \", $Input[9]);\n    $arr10 = explode(\" \", $Input[10]);\n    $arr11 = explode(\" \", $Input[11]);\n    $arr12 = explode(\" \", $Input[12]);\n    $arr13 = explode(\" \", $Input[13]);\n    $arr14 = explode(\" \", $Input[14]);\n    $arr15 = explode(\" \", $Input[15]);\n    $arr16 = explode(\" \", $Input[16]);\n    $arr17 = explode(\" \", $Input[17]);\n    $arr18 = explode(\" \", $Input[18]);\n    $arr19 = explode(\" \", $Input[19]);\n    $arr20 = explode(\" \", $Input[20]);\n    $arr21 = explode(\" \", $Input[21]);\n    $arr22 = explode(\" \", $Input[22]);\n    $arr23 = explode(\" \", $Input[23]);\n    $arr24 = explode(\" \", $Input[24]);\n    $arr25 = explode(\" \", $Input[25]);\n    $arr26 = explode(\" \", $Input[26]);\n    $arr27 = explode(\" \", $Input[27]);\n    $arr28 = explode(\" \", $Input[28]);\n    $arr29 = explode(\" \", $Input[29]);\n    $arr30 = explode(\" \", $Input[30]);\n    $arr31 = explode(\" \", $Input[31]);\n    $arr32 = explode(\" \", $Input[32]);\n    $arr33 = explode(\" \", $Input[33]);\n    $arr34 = explode(\" \", $Input[34]);\n    $arr35 = explode(\" \", $Input[35]);\n    $arr36 = explode(\" \",\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjoc41rfd.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $result = [];\n    for($i = 0; $i < $length; $i++) {\n        $result[$i] = count($Input[$i]);\n    }\n    if(count(array_unique($result)) === 1) {\n        return \"Equal\";\n    } else {\n        return \"Not Equal\";\n    }\n}\n$Input = [[1,2,3,4],[1,2,3,4],[1,2,3,4]];\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "Equal\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07o362t5.php:22\nStack trace:\n#0 /tmp/tmp07o362t5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp07o362t5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    $arr5 = explode(\",\", $Input['array5']);\n    $arr6 = explode(\",\", $Input['array6']);\n    $arr7 = explode(\",\", $Input['array7']);\n    $arr8 = explode(\",\", $Input['array8']);\n    $arr9 = explode(\",\", $Input['array9']);\n    $arr10 = explode(\",\", $Input['array10']);\n    $arr11 = explode(\",\", $Input['array11']);\n    $arr12 = explode(\",\", $Input['array12']);\n    $arr13 = explode(\",\", $Input['array13']);\n    $arr14 = explode(\",\", $Input['array14']);\n    $arr15 = explode(\",\", $Input['array15']);\n    $arr16 = explode(\",\", $Input['array16']);\n    $arr17 = explode(\",\", $Input['array17']);\n    $arr18 = explode(\",\", $Input['array18']);\n    $arr19 = explode(\",\", $Input['array19']);\n    $arr20 = explode(\",\", $Input['array20']);\n    $arr21 = explode(\",\", $Input['array21']);\n    $arr22 = explode(\",\", $Input['array22']);\n    $arr23 = explode(\",\", $Input['array23']);\n    $arr24 = explode(\",\", $Input['array24']);\n    $arr25 = explode(\",\", $Input['array25']);\n    $arr26 = explode(\",\", $Input['array26']);\n    $arr27 = explode(\",\", $Input['array27']);\n    $arr28 = explode(\",\", $Input['array28']);\n    $arr29 = explode(\",\", $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoowhlxww.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    $equal = true;\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            $equal = false;\n            break;\n        }\n    }\n    if ($equal) {\n        echo \"All arrays are equal\";\n    } else {\n        echo \"All arrays are not equal\";\n    }\n}\nget_equal(\"abc,def,ghi,jkl\");\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "All arrays are equal\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmprc8ww6j_.php:4\nStack trace:\n#0 /tmp/tmprc8ww6j_.php(4): explode(',', Array)\n#1 /tmp/tmprc8ww6j_.php(21): get_equal(Array)\n#2 /tmp/tmprc8ww6j_.php(25): candidate(Array)\n#3 /tmp/tmprc8ww6j_.php(30): test()\n#4 {main}\n  thrown in /tmp/tmprc8ww6j_.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    $arr5 = explode(\",\", $Input['array5']);\n    $arr6 = explode(\",\", $Input['array6']);\n    $arr7 = explode(\",\", $Input['array7']);\n    $arr8 = explode(\",\", $Input['array8']);\n    $arr9 = explode(\",\", $Input['array9']);\n    $arr10 = explode(\",\", $Input['array10']);\n    $arr11 = explode(\",\", $Input['array11']);\n    $arr12 = explode(\",\", $Input['array12']);\n    $arr13 = explode(\",\", $Input['array13']);\n    $arr14 = explode(\",\", $Input['array14']);\n    $arr15 = explode(\",\", $Input['array15']);\n    $arr16 = explode(\",\", $Input['array16']);\n    $arr17 = explode(\",\", $Input['array17']);\n    $arr18 = explode(\",\", $Input['array18']);\n    $arr19 = explode(\",\", $Input['array19']);\n    $arr20 = explode(\",\", $Input['array20']);\n    $arr21 = explode(\",\", $Input['array21']);\n    $arr22 = explode(\",\", $Input['array22']);\n    $arr23 = explode(\",\", $Input['array23']);\n    $arr24 = explode(\",\", $Input['array24']);\n    $arr25 = explode(\",\", $Input['array25']);\n    $arr26 = explode(\",\", $Input['array26']);\n    $arr27 = explode(\",\", $Input['array27']);\n    $arr28 = explode(\",\", $Input['array28']);\n    $arr29 = explode(\",\", $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoowhlxww.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['arr']);\n    $arr1 = explode(\",\", $Input['arr1']);\n    $arr2 = explode(\",\", $Input['arr2']);\n    $arr3 = explode(\",\", $Input['arr3']);\n    $arr4 = explode(\",\", $Input['arr4']);\n    $arr5 = explode(\",\", $Input['arr5']);\n    $arr6 = explode(\",\", $Input['arr6']);\n    $arr7 = explode(\",\", $Input['arr7']);\n    $arr8 = explode(\",\", $Input['arr8']);\n    $arr9 = explode(\",\", $Input['arr9']);\n    $arr10 = explode(\",\", $Input['arr10']);\n    $arr11 = explode(\",\", $Input['arr11']);\n    $arr12 = explode(\",\", $Input['arr12']);\n    $arr13 = explode(\",\", $Input['arr13']);\n    $arr14 = explode(\",\", $Input['arr14']);\n    $arr15 = explode(\",\", $Input['arr15']);\n    $arr16 = explode(\",\", $Input['arr16']);\n    $arr17 = explode(\",\", $Input['arr17']);\n    $arr18 = explode(\",\", $Input['arr18']);\n    $arr19 = explode(\",\", $Input['arr19']);\n    $arr20 = explode(\",\", $Input['arr20']);\n    $arr21 = explode(\",\", $Input['arr21']);\n    $arr22 = explode(\",\", $Input['arr22']);\n    $arr23 = explode(\",\", $Input['arr23']);\n    $arr24 = explode(\",\", $Input['arr24']);\n    $arr25 = explode(\",\", $Input['arr25']);\n    $arr26 = explode(\",\", $Input['arr26']);\n    $arr27 = explode(\",\", $Input['arr27']);\n    $arr28 = explode(\",\", $Input['arr28']);\n    $arr29 = explode(\",\", $Input['arr29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpwhfvc67q.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['arr']);\n    $arr1 = explode(\",\", $Input['arr1']);\n    $arr2 = explode(\",\", $Input['arr2']);\n    if (count($arr) == count($arr1) && count($arr) == count($arr2)) {\n        return \"All arrays are equal\";\n    } else {\n        return \"All arrays are not equal\";\n    }\n}\n\n$Input = array(\"arr\" => \"1,2,3,4,5\", \"arr1\" => \"1,2,3,4,5\", \"arr2\" => \"1,2,3,4,5\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "All arrays are equal\nWarning: Undefined array key \"arr\" in /tmp/tmpvpscl9pq.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpvpscl9pq.php on line 4\n\nWarning: Undefined array key \"arr1\" in /tmp/tmpvpscl9pq.php on line 5\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpvpscl9pq.php on line 5\n\nWarning: Undefined array key \"arr2\" in /tmp/tmpvpscl9pq.php on line 6\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpvpscl9pq.php on line 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvpscl9pq.php:21\nStack trace:\n#0 /tmp/tmpvpscl9pq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvpscl9pq.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i = 0; $i < $count; $i++) {\n        if($length != strlen($Input[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\", \"def\", \"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmp4awpzzjv.php:5\nStack trace:\n#0 /tmp/tmp4awpzzjv.php(16): get_equal(Array)\n#1 /tmp/tmp4awpzzjv.php(20): candidate(Array)\n#2 /tmp/tmp4awpzzjv.php(25): test()\n#3 {main}\n  thrown in /tmp/tmp4awpzzjv.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input['array']);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$Input = array(\"array\" => \"abc,def,ghi,jkl\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "1\nWarning: Undefined array key \"array\" in /tmp/tmpyev2ckuf.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpyev2ckuf.php on line 4\n\nWarning: Undefined array key \"array\" in /tmp/tmpyev2ckuf.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpyev2ckuf.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyev2ckuf.php:22\nStack trace:\n#0 /tmp/tmpyev2ckuf.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyev2ckuf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return \"false\";\n        }\n    }\n    return \"true\";\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpnp7ujxrw.php:4\nStack trace:\n#0 /tmp/tmpnp7ujxrw.php(4): explode(',', Array)\n#1 /tmp/tmpnp7ujxrw.php(15): get_equal(Array)\n#2 /tmp/tmpnp7ujxrw.php(19): candidate(Array)\n#3 /tmp/tmpnp7ujxrw.php(24): test()\n#4 {main}\n  thrown in /tmp/tmpnp7ujxrw.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = count($Input[0]);\n    for ($i = 0; $i < $count; $i++) {\n        if (count($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$Input = array(\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n);\n\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $array = explode(\",\", $Input['array']);\n    $result = \"\";\n    $length = count($array);\n    for ($i = 0; $i < $length; $i++) {\n        $array[$i] = explode(\" \", $array[$i]);\n        if (count($array[$i]) != $length) {\n            $result = \"false\";\n            break;\n        }\n    }\n    if ($result != \"false\") {\n        $result = \"true\";\n    }\n    return $result;\n}\n\n$Input = array(\"array\" => \"1 2 3,2 3 4,3 4 5,4 5 6\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "false\nWarning: Undefined array key \"array\" in /tmp/tmpvk34tk2z.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpvk34tk2z.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvk34tk2z.php:27\nStack trace:\n#0 /tmp/tmpvk34tk2z.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvk34tk2z.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input['array']);\n    $length = strlen($arrays[0]);\n    $count = 0;\n    foreach($arrays as $array) {\n        if(strlen($array) == $length) {\n            $count++;\n        }\n    }\n    if($count == count($arrays)) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nWarning: Undefined array key \"array\" in /tmp/tmp6ugigcjp.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmp6ugigcjp.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ugigcjp.php:24\nStack trace:\n#0 /tmp/tmp6ugigcjp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6ugigcjp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\" \", $Input[1]);\n    $length = strlen($arrays[0]);\n    $equal = true;\n    foreach ($arrays as $array) {\n        if (strlen($array) != $length) {\n            $equal = false;\n            break;\n        }\n    }\n    if ($equal) {\n        echo \"true\";\n    } else {\n        echo \"false\";\n    }\n}\n$Input = array(\"5\", \"abcde abcde abcde abcde\");\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "true\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpl23cll0a.php:4\nStack trace:\n#0 /tmp/tmpl23cll0a.php(4): explode(' ', Array)\n#1 /tmp/tmpl23cll0a.php(22): get_equal(Array)\n#2 /tmp/tmpl23cll0a.php(26): candidate(Array)\n#3 /tmp/tmpl23cll0a.php(31): test()\n#4 {main}\n  thrown in /tmp/tmpl23cll0a.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\" \", $Input[0]);\n    $arr1 = explode(\" \", $Input[1]);\n    $arr2 = explode(\" \", $Input[2]);\n    $arr3 = explode(\" \", $Input[3]);\n    $arr4 = explode(\" \", $Input[4]);\n    $arr5 = explode(\" \", $Input[5]);\n    $arr6 = explode(\" \", $Input[6]);\n    $arr7 = explode(\" \", $Input[7]);\n    $arr8 = explode(\" \", $Input[8]);\n    $arr9 = explode(\" \", $Input[9]);\n    $arr10 = explode(\" \", $Input[10]);\n    $arr11 = explode(\" \", $Input[11]);\n    $arr12 = explode(\" \", $Input[12]);\n    $arr13 = explode(\" \", $Input[13]);\n    $arr14 = explode(\" \", $Input[14]);\n    $arr15 = explode(\" \", $Input[15]);\n    $arr16 = explode(\" \", $Input[16]);\n    $arr17 = explode(\" \", $Input[17]);\n    $arr18 = explode(\" \", $Input[18]);\n    $arr19 = explode(\" \", $Input[19]);\n    $arr20 = explode(\" \", $Input[20]);\n    $arr21 = explode(\" \", $Input[21]);\n    $arr22 = explode(\" \", $Input[22]);\n    $arr23 = explode(\" \", $Input[23]);\n    $arr24 = explode(\" \", $Input[24]);\n    $arr25 = explode(\" \", $Input[25]);\n    $arr26 = explode(\" \", $Input[26]);\n    $arr27 = explode(\" \", $Input[27]);\n    $arr28 = explode(\" \", $Input[28]);\n    $arr29 = explode(\" \", $Input[29]);\n    $arr30 = explode(\" \", $Input[30]);\n    $arr31 = explode(\" \", $Input[31]);\n    $arr32 = explode(\" \", $Input[32]);\n    $arr33 = explode(\" \", $Input[33]);\n    $arr34 = explode(\" \", $Input[34]);\n    $arr35 = explode(\" \", $Input[35]);\n    $arr36 = explode(\" \",\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjoc41rfd.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $equal = true;\n    for($i = 0; $i < $length; $i++) {\n        if(count($Input[$i]) != count($Input[$i+1])) {\n            $equal = false;\n            break;\n        }\n    }\n    return $equal;\n}\n$Input = [[1,2,3],[2,3,4],[3,4,5]];\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nWarning: Undefined array key 3 in /tmp/tmpsyxokh8y.php on line 7\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmpsyxokh8y.php:7\nStack trace:\n#0 /tmp/tmpsyxokh8y.php(15): get_equal(Array)\n#1 {main}\n  thrown in /tmp/tmpsyxokh8y.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $count = count($arr);\n    $result = \"\";\n    for ($i = 0; $i < $count; $i++) {\n        $result = $result . $arr[$i];\n    }\n    return $result;\n}\n\n$Input = array(\"array\" => \"1,2,3,4,5,6,7,8,9,10\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "12345678910\nWarning: Undefined array key \"array\" in /tmp/tmpf5jqel66.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpf5jqel66.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5jqel66.php:20\nStack trace:\n#0 /tmp/tmpf5jqel66.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf5jqel66.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(',', $Input['arrays']);\n    $length = strlen($arrays[0]);\n    $result = true;\n    foreach ($arrays as $array) {\n        if ($length != strlen($array)) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nWarning: Undefined array key \"arrays\" in /tmp/tmpweup4isr.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpweup4isr.php on line 4\n\nWarning: Undefined array key \"arrays\" in /tmp/tmpweup4isr.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpweup4isr.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpweup4isr.php:22\nStack trace:\n#0 /tmp/tmpweup4isr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpweup4isr.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i=1; $i<$count; $i++) {\n        if($length != strlen($Input[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmp2up2rkk9.php:5\nStack trace:\n#0 /tmp/tmp2up2rkk9.php(15): get_equal(Array)\n#1 /tmp/tmp2up2rkk9.php(19): candidate(Array)\n#2 /tmp/tmp2up2rkk9.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp2up2rkk9.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i = 1; $i < $count; $i++) {\n        if(strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\", \"def\", \"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpn_9d7023.php:5\nStack trace:\n#0 /tmp/tmpn_9d7023.php(16): get_equal(Array)\n#1 /tmp/tmpn_9d7023.php(20): candidate(Array)\n#2 /tmp/tmpn_9d7023.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpn_9d7023.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if ($length != strlen($arrays[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpqrudqm5j.php:4\nStack trace:\n#0 /tmp/tmpqrudqm5j.php(4): explode(',', Array)\n#1 /tmp/tmpqrudqm5j.php(15): get_equal(Array)\n#2 /tmp/tmpqrudqm5j.php(19): candidate(Array)\n#3 /tmp/tmpqrudqm5j.php(24): test()\n#4 {main}\n  thrown in /tmp/tmpqrudqm5j.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\" \", $Input[0]);\n    $len = count($arr);\n    for($i=1;$i<count($Input);$i++) {\n        $arr = explode(\" \", $Input[$i]);\n        if(count($arr) != $len) {\n            echo \"False\";\n            return;\n        }\n    }\n    echo \"True\";\n}\n$Input=array(\"1 2 3 4 5\",\"1 2 3 4 5\",\"1 2 3 4 5\");\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "True\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpdv_n3cgo.php:4\nStack trace:\n#0 /tmp/tmpdv_n3cgo.php(4): explode(' ', Array)\n#1 /tmp/tmpdv_n3cgo.php(18): get_equal(Array)\n#2 /tmp/tmpdv_n3cgo.php(22): candidate(Array)\n#3 /tmp/tmpdv_n3cgo.php(27): test()\n#4 {main}\n  thrown in /tmp/tmpdv_n3cgo.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i=1;$i<$count;$i++){\n        if(strlen($Input[$i])!=$length){\n            return \"false\";\n        }\n    }\n    return \"true\";\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpcmax4ywq.php:5\nStack trace:\n#0 /tmp/tmpcmax4ywq.php(15): get_equal(Array)\n#1 /tmp/tmpcmax4ywq.php(19): candidate(Array)\n#2 /tmp/tmpcmax4ywq.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpcmax4ywq.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $flag = 0;\n    for($i = 0; $i < $count; $i++) {\n        if(count($Input[$i]) == count($Input[$i+1])) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            break;\n        }\n    }\n    if($flag == 1) {\n        echo \"All arrays are equal\";\n    }\n    else {\n        echo \"All arrays are not equal\";\n    }\n}\n$Input = array(array(1,2,3,4),array(1,2,3,4),array(1,2,3,4));\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nWarning: Undefined array key 3 in /tmp/tmp2wwiifut.php on line 7\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmp2wwiifut.php:7\nStack trace:\n#0 /tmp/tmp2wwiifut.php(23): get_equal(Array)\n#1 {main}\n  thrown in /tmp/tmp2wwiifut.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $result = \"true\";\n    $length = strlen($Input[0]);\n    for($i=1; $i<count($Input); $i++) {\n        if($length != strlen($Input[$i])) {\n            $result = \"false\";\n            break;\n        }\n    }\n    return $result;\n}\n$Input = array(\"abcd\",\"abcd\",\"abcd\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpj05rg_c4.php:5\nStack trace:\n#0 /tmp/tmpj05rg_c4.php(17): get_equal(Array)\n#1 /tmp/tmpj05rg_c4.php(21): candidate(Array)\n#2 /tmp/tmpj05rg_c4.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpj05rg_c4.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = \"abc,def,ghi,jkl\";\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpwcwr9e86.php:4\nStack trace:\n#0 /tmp/tmpwcwr9e86.php(4): explode(',', Array)\n#1 /tmp/tmpwcwr9e86.php(16): get_equal(Array)\n#2 /tmp/tmpwcwr9e86.php(20): candidate(Array)\n#3 /tmp/tmpwcwr9e86.php(25): test()\n#4 {main}\n  thrown in /tmp/tmpwcwr9e86.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['input']);\n    $arr1 = explode(\",\", $Input['input1']);\n    $arr2 = explode(\",\", $Input['input2']);\n    $arr3 = explode(\",\", $Input['input3']);\n    $arr4 = explode(\",\", $Input['input4']);\n    $arr5 = explode(\",\", $Input['input5']);\n    $arr6 = explode(\",\", $Input['input6']);\n    $arr7 = explode(\",\", $Input['input7']);\n    $arr8 = explode(\",\", $Input['input8']);\n    $arr9 = explode(\",\", $Input['input9']);\n    $arr10 = explode(\",\", $Input['input10']);\n    $arr11 = explode(\",\", $Input['input11']);\n    $arr12 = explode(\",\", $Input['input12']);\n    $arr13 = explode(\",\", $Input['input13']);\n    $arr14 = explode(\",\", $Input['input14']);\n    $arr15 = explode(\",\", $Input['input15']);\n    $arr16 = explode(\",\", $Input['input16']);\n    $arr17 = explode(\",\", $Input['input17']);\n    $arr18 = explode(\",\", $Input['input18']);\n    $arr19 = explode(\",\", $Input['input19']);\n    $arr20 = explode(\",\", $Input['input20']);\n    $arr21 = explode(\",\", $Input['input21']);\n    $arr22 = explode(\",\", $Input['input22']);\n    $arr23 = explode(\",\", $Input['input23']);\n    $arr24 = explode(\",\", $Input['input24']);\n    $arr25 = explode(\",\", $Input['input25']);\n    $arr26 = explode(\",\", $Input['input26']);\n    $arr27 = explode(\",\", $Input['input27']);\n    $arr28 = explode(\",\", $Input['input28']);\n    $arr29 = explode(\",\", $Input['input29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpvpruioo3.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for($i=1; $i<count($arrays); $i++) {\n        if(strlen($arrays[$i]) != $length) {\n            return \"False\";\n        }\n    }\n    return \"True\";\n}\necho get_equal(\"abc,bcd,cde\");\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "True\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmph0zgok2r.php:4\nStack trace:\n#0 /tmp/tmph0zgok2r.php(4): explode(',', Array)\n#1 /tmp/tmph0zgok2r.php(15): get_equal(Array)\n#2 /tmp/tmph0zgok2r.php(19): candidate(Array)\n#3 /tmp/tmph0zgok2r.php(24): test()\n#4 {main}\n  thrown in /tmp/tmph0zgok2r.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\" \", $Input[1]);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            echo \"False\";\n            return;\n        }\n    }\n    echo \"True\";\n}\n$Input = \"5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\";\nget_equal(explode(\"\\n\", $Input));\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "True\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmphg5erwb6.php:4\nStack trace:\n#0 /tmp/tmphg5erwb6.php(4): explode(' ', Array)\n#1 /tmp/tmphg5erwb6.php(22): get_equal(Array)\n#2 /tmp/tmphg5erwb6.php(26): candidate(Array)\n#3 /tmp/tmphg5erwb6.php(31): test()\n#4 {main}\n  thrown in /tmp/tmphg5erwb6.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $result = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != count($Input[$i + 1])) {\n            $result = false;\n        }\n    }\n    return $result;\n}\n$Input = array(\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nWarning: Undefined array key 5 in /tmp/tmpw8u9yt5t.php on line 7\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmpw8u9yt5t.php:7\nStack trace:\n#0 /tmp/tmpw8u9yt5t.php(20): get_equal(Array)\n#1 {main}\n  thrown in /tmp/tmpw8u9yt5t.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    $flag = 1;\n    for($i = 1; $i < count($arrays); $i++) {\n        if(strlen($arrays[$i]) != $length) {\n            $flag = 0;\n            break;\n        }\n    }\n    if($flag == 1) {\n        echo \"Equal\";\n    }\n    else {\n        echo \"Not Equal\";\n    }\n}\n$Input = \"abc,def,ghi\";\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "Equal\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmp3y2i8fws.php:4\nStack trace:\n#0 /tmp/tmp3y2i8fws.php(4): explode(',', Array)\n#1 /tmp/tmp3y2i8fws.php(23): get_equal(Array)\n#2 /tmp/tmp3y2i8fws.php(27): candidate(Array)\n#3 /tmp/tmp3y2i8fws.php(32): test()\n#4 {main}\n  thrown in /tmp/tmp3y2i8fws.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpw8sp3xpg.php:4\nStack trace:\n#0 /tmp/tmpw8sp3xpg.php(4): explode(',', Array)\n#1 /tmp/tmpw8sp3xpg.php(15): get_equal(Array)\n#2 /tmp/tmpw8sp3xpg.php(19): candidate(Array)\n#3 /tmp/tmpw8sp3xpg.php(24): test()\n#4 {main}\n  thrown in /tmp/tmpw8sp3xpg.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i=1;$i<$count;$i++) {\n        if($length != strlen($Input[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\",\"def\",\"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpid64mr6z.php:5\nStack trace:\n#0 /tmp/tmpid64mr6z.php(16): get_equal(Array)\n#1 /tmp/tmpid64mr6z.php(20): candidate(Array)\n#2 /tmp/tmpid64mr6z.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpid64mr6z.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\" \", $Input[1]);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return \"False\";\n        }\n    }\n    return \"True\";\n}\n$Input = \"5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\";\necho get_equal(explode(\"\\n\", $Input));\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "True\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmp7rk5e6a4.php:4\nStack trace:\n#0 /tmp/tmp7rk5e6a4.php(4): explode(' ', Array)\n#1 /tmp/tmp7rk5e6a4.php(21): get_equal(Array)\n#2 /tmp/tmp7rk5e6a4.php(25): candidate(Array)\n#3 /tmp/tmp7rk5e6a4.php(30): test()\n#4 {main}\n  thrown in /tmp/tmp7rk5e6a4.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\" \", $Input[1]);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return \"False\";\n        }\n    }\n    return \"True\";\n}\n$Input = \"5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\";\necho get_equal(explode(\"\\n\", $Input));\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "True\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmp7rk5e6a4.php:4\nStack trace:\n#0 /tmp/tmp7rk5e6a4.php(4): explode(' ', Array)\n#1 /tmp/tmp7rk5e6a4.php(21): get_equal(Array)\n#2 /tmp/tmp7rk5e6a4.php(25): candidate(Array)\n#3 /tmp/tmp7rk5e6a4.php(30): test()\n#4 {main}\n  thrown in /tmp/tmp7rk5e6a4.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        $arr[$i] = explode(\" \", $arr[$i]);\n        if (count($arr[$i]) != $len) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$Input = array(\"array\" => \"1 2 3,4 5 6,7 8 9\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nWarning: Undefined array key \"array\" in /tmp/tmp8ip1798u.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmp8ip1798u.php on line 4\n\nWarning: Undefined array key \"array\" in /tmp/tmp8ip1798u.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmp8ip1798u.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ip1798u.php:23\nStack trace:\n#0 /tmp/tmp8ip1798u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8ip1798u.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input['arrays']);\n    $length = strlen($arrays[0]);\n    $equal = true;\n    foreach($arrays as $array) {\n        if(strlen($array) != $length) {\n            $equal = false;\n            break;\n        }\n    }\n    return $equal;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nWarning: Undefined array key \"arrays\" in /tmp/tmpsrs1xncm.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpsrs1xncm.php on line 4\n\nWarning: Undefined array key \"arrays\" in /tmp/tmpsrs1xncm.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpsrs1xncm.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsrs1xncm.php:22\nStack trace:\n#0 /tmp/tmpsrs1xncm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsrs1xncm.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\" \", $Input[1]);\n    $length = strlen($arrays[0]);\n    $equal = true;\n    foreach ($arrays as $array) {\n        if (strlen($array) != $length) {\n            $equal = false;\n            break;\n        }\n    }\n    if ($equal) {\n        echo \"true\";\n    } else {\n        echo \"false\";\n    }\n}\n$Input = \"5\nabcde edcab\";\nget_equal(explode(\"\\n\", $Input));\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmp1iik8s8a.php:4\nStack trace:\n#0 /tmp/tmp1iik8s8a.php(4): explode(' ', Array)\n#1 /tmp/tmp1iik8s8a.php(23): get_equal(Array)\n#2 /tmp/tmp1iik8s8a.php(27): candidate(Array)\n#3 /tmp/tmp1iik8s8a.php(32): test()\n#4 {main}\n  thrown in /tmp/tmp1iik8s8a.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    $arr5 = explode(\",\", $Input['array5']);\n    $arr6 = explode(\",\", $Input['array6']);\n    $arr7 = explode(\",\", $Input['array7']);\n    $arr8 = explode(\",\", $Input['array8']);\n    $arr9 = explode(\",\", $Input['array9']);\n    $arr10 = explode(\",\", $Input['array10']);\n    $arr11 = explode(\",\", $Input['array11']);\n    $arr12 = explode(\",\", $Input['array12']);\n    $arr13 = explode(\",\", $Input['array13']);\n    $arr14 = explode(\",\", $Input['array14']);\n    $arr15 = explode(\",\", $Input['array15']);\n    $arr16 = explode(\",\", $Input['array16']);\n    $arr17 = explode(\",\", $Input['array17']);\n    $arr18 = explode(\",\", $Input['array18']);\n    $arr19 = explode(\",\", $Input['array19']);\n    $arr20 = explode(\",\", $Input['array20']);\n    $arr21 = explode(\",\", $Input['array21']);\n    $arr22 = explode(\",\", $Input['array22']);\n    $arr23 = explode(\",\", $Input['array23']);\n    $arr24 = explode(\",\", $Input['array24']);\n    $arr25 = explode(\",\", $Input['array25']);\n    $arr26 = explode(\",\", $Input['array26']);\n    $arr27 = explode(\",\", $Input['array27']);\n    $arr28 = explode(\",\", $Input['array28']);\n    $arr29 = explode(\",\", $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoowhlxww.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $result = true;\n    $length = strlen($Input[0]);\n    for ($i=1; $i < count($Input); $i++) { \n        if ($length != strlen($Input[$i])) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n\n$Input = array(\"abc\", \"def\", \"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpbfitpicr.php:5\nStack trace:\n#0 /tmp/tmpbfitpicr.php(18): get_equal(Array)\n#1 /tmp/tmpbfitpicr.php(22): candidate(Array)\n#2 /tmp/tmpbfitpicr.php(27): test()\n#3 {main}\n  thrown in /tmp/tmpbfitpicr.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    $equal = true;\n    foreach ($arrays as $array) {\n        if (strlen($array) != $length) {\n            $equal = false;\n            break;\n        }\n    }\n    if ($equal) {\n        echo \"All arrays are equal\";\n    } else {\n        echo \"All arrays are not equal\";\n    }\n}\nget_equal(\"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \")\" in /tmp/tmpis8u_851.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i = 1; $i < $count; $i++) {\n        if(strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abcd\", \"abcd\", \"abcd\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpx9crwrlt.php:5\nStack trace:\n#0 /tmp/tmpx9crwrlt.php(16): get_equal(Array)\n#1 /tmp/tmpx9crwrlt.php(20): candidate(Array)\n#2 /tmp/tmpx9crwrlt.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpx9crwrlt.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i=1;$i<$count;$i++){\n        if(strlen($Input[$i]) != $length){\n            return \"False\";\n        }\n    }\n    return \"True\";\n}\n$Input = array(\"abc\",\"def\",\"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "True\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmp5rhh299o.php:5\nStack trace:\n#0 /tmp/tmp5rhh299o.php(16): get_equal(Array)\n#1 /tmp/tmp5rhh299o.php(20): candidate(Array)\n#2 /tmp/tmp5rhh299o.php(25): test()\n#3 {main}\n  thrown in /tmp/tmp5rhh299o.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i=1; $i<$count; $i++) {\n        if($length != strlen($Input[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\", \"def\", \"ghi\");\n$result = get_equal($Input);\nif($result) {\n    echo \"All the given arrays have equal length.\";\n}\nelse {\n    echo \"All the given arrays do not have equal length.\";\n}\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "All the given arrays have equal length.\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpzntda4ee.php:5\nStack trace:\n#0 /tmp/tmpzntda4ee.php(22): get_equal(Array)\n#1 /tmp/tmpzntda4ee.php(26): candidate(Array)\n#2 /tmp/tmpzntda4ee.php(31): test()\n#3 {main}\n  thrown in /tmp/tmpzntda4ee.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(',', $Input['array']);\n    $arr1 = explode(',', $Input['array1']);\n    $arr2 = explode(',', $Input['array2']);\n    $arr3 = explode(',', $Input['array3']);\n    $arr4 = explode(',', $Input['array4']);\n    $arr5 = explode(',', $Input['array5']);\n    $arr6 = explode(',', $Input['array6']);\n    $arr7 = explode(',', $Input['array7']);\n    $arr8 = explode(',', $Input['array8']);\n    $arr9 = explode(',', $Input['array9']);\n    $arr10 = explode(',', $Input['array10']);\n    $arr11 = explode(',', $Input['array11']);\n    $arr12 = explode(',', $Input['array12']);\n    $arr13 = explode(',', $Input['array13']);\n    $arr14 = explode(',', $Input['array14']);\n    $arr15 = explode(',', $Input['array15']);\n    $arr16 = explode(',', $Input['array16']);\n    $arr17 = explode(',', $Input['array17']);\n    $arr18 = explode(',', $Input['array18']);\n    $arr19 = explode(',', $Input['array19']);\n    $arr20 = explode(',', $Input['array20']);\n    $arr21 = explode(',', $Input['array21']);\n    $arr22 = explode(',', $Input['array22']);\n    $arr23 = explode(',', $Input['array23']);\n    $arr24 = explode(',', $Input['array24']);\n    $arr25 = explode(',', $Input['array25']);\n    $arr26 = explode(',', $Input['array26']);\n    $arr27 = explode(',', $Input['array27']);\n    $arr28 = explode(',', $Input['array28']);\n    $arr29 = explode(',', $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp2ndtv7l5.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(',', $Input['array']);\n    $arr1 = explode(',', $Input['array1']);\n    $arr2 = explode(',', $Input['array2']);\n    $arr3 = explode(',', $Input['array3']);\n    $arr4 = explode(',', $Input['array4']);\n    $arr5 = explode(',', $Input['array5']);\n    $arr6 = explode(',', $Input['array6']);\n    $arr7 = explode(',', $Input['array7']);\n    $arr8 = explode(',', $Input['array8']);\n    $arr9 = explode(',', $Input['array9']);\n    $arr10 = explode(',', $Input['array10']);\n    $arr11 = explode(',', $Input['array11']);\n    $arr12 = explode(',', $Input['array12']);\n    $arr13 = explode(',', $Input['array13']);\n    $arr14 = explode(',', $Input['array14']);\n    $arr15 = explode(',', $Input['array15']);\n    $arr16 = explode(',', $Input['array16']);\n    $arr17 = explode(',', $Input['array17']);\n    $arr18 = explode(',', $Input['array18']);\n    $arr19 = explode(',', $Input['array19']);\n    $arr20 = explode(',', $Input['array20']);\n    $arr21 = explode(',', $Input['array21']);\n    $arr22 = explode(',', $Input['array22']);\n    $arr23 = explode(',', $Input['array23']);\n    $arr24 = explode(',', $Input['array24']);\n    $arr25 = explode(',', $Input['array25']);\n    $arr26 = explode(',', $Input['array26']);\n    $arr27 = explode(',', $Input['array27']);\n    $arr28 = explode(',', $Input['array28']);\n    $arr29 = explode(',', $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp2ndtv7l5.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $len = count($Input);\n    $flag = 0;\n    for($i=0;$i<$len;$i++) {\n        if(count($Input[$i]) != $len) {\n            $flag = 1;\n        }\n    }\n    if($flag == 1) {\n        echo \"Not Equal\";\n    } else {\n        echo \"Equal\";\n    }\n}\n$Input = array(\n    array(1,2,3),\n    array(1,2,3),\n    array(1,2,3),\n);\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "EqualNot Equal\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35kn11x_.php:28\nStack trace:\n#0 /tmp/tmp35kn11x_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp35kn11x_.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $len = count($arr);\n    $flag = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $arr[$i] = explode(\" \", $arr[$i]);\n        if (count($arr[$i]) != $len) {\n            $flag = 1;\n            break;\n        }\n    }\n    if ($flag == 0) {\n        return \"All the given arrays have equal length\";\n    } else {\n        return \"All the given arrays have not equal length\";\n    }\n}\n\n$Input = array(\"array\" => \"1 2 3 4,2 3 4 5,3 4 5 6,4 5 6 7\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "All the given arrays have equal length\nWarning: Undefined array key \"array\" in /tmp/tmpzg594_ho.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpzg594_ho.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzg594_ho.php:28\nStack trace:\n#0 /tmp/tmpzg594_ho.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzg594_ho.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if ($length != strlen($Input[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$Input = array(\"abc\", \"def\", \"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpq2l1fjwx.php:5\nStack trace:\n#0 /tmp/tmpq2l1fjwx.php(17): get_equal(Array)\n#1 /tmp/tmpq2l1fjwx.php(21): candidate(Array)\n#2 /tmp/tmpq2l1fjwx.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpq2l1fjwx.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(',', $Input['array']);\n    $length = strlen($arrays[0]);\n    $result = true;\n    foreach ($arrays as $array) {\n        if ($length != strlen($array)) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nWarning: Undefined array key \"array\" in /tmp/tmpn97psxcj.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpn97psxcj.php on line 4\n\nWarning: Undefined array key \"array\" in /tmp/tmpn97psxcj.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpn97psxcj.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn97psxcj.php:22\nStack trace:\n#0 /tmp/tmpn97psxcj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpn97psxcj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if (strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$Input = array(\"abc\", \"def\", \"ghi\");\n$result = get_equal($Input);\nif ($result) {\n    echo \"All the given arrays have equal length\";\n} else {\n    echo \"All the given arrays have not equal length\";\n}\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "All the given arrays have equal length\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmp0qbq25p7.php:5\nStack trace:\n#0 /tmp/tmp0qbq25p7.php(22): get_equal(Array)\n#1 /tmp/tmp0qbq25p7.php(26): candidate(Array)\n#2 /tmp/tmp0qbq25p7.php(31): test()\n#3 {main}\n  thrown in /tmp/tmp0qbq25p7.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\" \", $Input[0]);\n    $arr1 = explode(\" \", $Input[1]);\n    $arr2 = explode(\" \", $Input[2]);\n    $arr3 = explode(\" \", $Input[3]);\n    $arr4 = explode(\" \", $Input[4]);\n    $arr5 = explode(\" \", $Input[5]);\n    $arr6 = explode(\" \", $Input[6]);\n    $arr7 = explode(\" \", $Input[7]);\n    $arr8 = explode(\" \", $Input[8]);\n    $arr9 = explode(\" \", $Input[9]);\n    $arr10 = explode(\" \", $Input[10]);\n    $arr11 = explode(\" \", $Input[11]);\n    $arr12 = explode(\" \", $Input[12]);\n    $arr13 = explode(\" \", $Input[13]);\n    $arr14 = explode(\" \", $Input[14]);\n    $arr15 = explode(\" \", $Input[15]);\n    $arr16 = explode(\" \", $Input[16]);\n    $arr17 = explode(\" \", $Input[17]);\n    $arr18 = explode(\" \", $Input[18]);\n    $arr19 = explode(\" \", $Input[19]);\n    $arr20 = explode(\" \", $Input[20]);\n    $arr21 = explode(\" \", $Input[21]);\n    $arr22 = explode(\" \", $Input[22]);\n    $arr23 = explode(\" \", $Input[23]);\n    $arr24 = explode(\" \", $Input[24]);\n    $arr25 = explode(\" \", $Input[25]);\n    $arr26 = explode(\" \", $Input[26]);\n    $arr27 = explode(\" \", $Input[27]);\n    $arr28 = explode(\" \", $Input[28]);\n    $arr29 = explode(\" \", $Input[29]);\n    $arr30 = explode(\" \", $Input[30]);\n    $arr31 = explode(\" \", $Input[31]);\n    $arr32 = explode(\" \", $Input[32]);\n    $arr33 = explode(\" \", $Input[33]);\n    $arr34 = explode(\" \", $Input[34]);\n    $arr35 = explode(\" \", $Input[35]);\n    $arr36 = explode(\" \",\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjoc41rfd.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $result = array();\n    for($i = 0; $i < $count; $i++) {\n        $result[$i] = count($Input[$i]);\n    }\n    $result = array_unique($result);\n    if(count($result) == 1) {\n        return \"true\";\n    }\n    else {\n        return \"false\";\n    }\n}\n$Input = array(\n    array(1,2,3,4),\n    array(1,2,3,4),\n    array(1,2,3,4),\n    array(1,2,3,4),\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2soerjn1.php:29\nStack trace:\n#0 /tmp/tmp2soerjn1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2soerjn1.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['Input']);\n    $arr_length = count($arr);\n    $equal = true;\n    for ($i = 0; $i < $arr_length; $i++) {\n        if (strlen($arr[$i]) != strlen($arr[$i + 1])) {\n            $equal = false;\n            break;\n        }\n    }\n    if ($equal) {\n        return \"All the given arrays have equal length\";\n    } else {\n        return \"All the given arrays have not equal length\";\n    }\n}\n\n$Input = array(\"Input\" => \"abc,bcd,cde,def\");\necho get_equal($Input);\necho \"\\n\";\n$Input = array(\"Input\" => \"abc,bcd,cde,defg\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nWarning: Undefined array key 4 in /tmp/tmpg__g105e.php on line 8\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmpg__g105e.php on line 8\nAll the given arrays have not equal length\nAll the given arrays have not equal length\nWarning: Undefined array key \"Input\" in /tmp/tmpg__g105e.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpg__g105e.php on line 4\n\nWarning: Undefined array key 1 in /tmp/tmpg__g105e.php on line 8\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmpg__g105e.php on line 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg__g105e.php:30\nStack trace:\n#0 /tmp/tmpg__g105e.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpg__g105e.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i=1;$i<$count;$i++){\n        if(strlen($Input[$i]) != $length){\n            return false;\n        }\n    }\n    return true;\n}\n$Input=array(\"abc\",\"def\",\"ghi\",\"jkl\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmptpxrjmho.php:5\nStack trace:\n#0 /tmp/tmptpxrjmho.php(16): get_equal(Array)\n#1 /tmp/tmptpxrjmho.php(20): candidate(Array)\n#2 /tmp/tmptpxrjmho.php(25): test()\n#3 {main}\n  thrown in /tmp/tmptpxrjmho.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $len = strlen($Input[0]);\n    for($i=1;$i<$count;$i++) {\n        if(strlen($Input[$i]) != $len) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abcd\",\"abcd\",\"abcd\",\"abcd\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmp5ahgq387.php:5\nStack trace:\n#0 /tmp/tmp5ahgq387.php(16): get_equal(Array)\n#1 /tmp/tmp5ahgq387.php(20): candidate(Array)\n#2 /tmp/tmp5ahgq387.php(25): test()\n#3 {main}\n  thrown in /tmp/tmp5ahgq387.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i = 1; $i < $count; $i++) {\n        if(strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abcd\", \"abcd\", \"abcd\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpx9crwrlt.php:5\nStack trace:\n#0 /tmp/tmpx9crwrlt.php(16): get_equal(Array)\n#1 /tmp/tmpx9crwrlt.php(20): candidate(Array)\n#2 /tmp/tmpx9crwrlt.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpx9crwrlt.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $array_length = count($Input);\n    $count = 0;\n    for($i = 0; $i < $array_length; $i++) {\n        $count = count($Input[$i]);\n        for($j = 0; $j < $array_length; $j++) {\n            if($count != count($Input[$j])) {\n                return \"false\";\n            }\n        }\n    }\n    return \"true\";\n}\n$Input = array(array(1,2,3),array(1,2,3),array(1,2,3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmeolwaey.php:23\nStack trace:\n#0 /tmp/tmpmeolwaey.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmeolwaey.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n\t$arr = explode(\",\", $Input);\n\t$len = count($arr);\n\t$count = 0;\n\tfor ($i = 0; $i < $len; $i++) {\n\t\t$arr1 = explode(\" \", $arr[$i]);\n\t\t$len1 = count($arr1);\n\t\tif ($len1 == $len) {\n\t\t\t$count++;\n\t\t}\n\t}\n\tif ($count == $len) {\n\t\techo \"true\";\n\t} else {\n\t\techo \"false\";\n\t}\n}\n$Input = \"1 2 3,4 5 6,7 8 9\";\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpenxmofjp.php:4\nStack trace:\n#0 /tmp/tmpenxmofjp.php(4): explode(',', Array)\n#1 /tmp/tmpenxmofjp.php(23): get_equal(Array)\n#2 /tmp/tmpenxmofjp.php(27): candidate(Array)\n#3 /tmp/tmpenxmofjp.php(32): test()\n#4 {main}\n  thrown in /tmp/tmpenxmofjp.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpw8sp3xpg.php:4\nStack trace:\n#0 /tmp/tmpw8sp3xpg.php(4): explode(',', Array)\n#1 /tmp/tmpw8sp3xpg.php(15): get_equal(Array)\n#2 /tmp/tmpw8sp3xpg.php(19): candidate(Array)\n#3 /tmp/tmpw8sp3xpg.php(24): test()\n#4 {main}\n  thrown in /tmp/tmpw8sp3xpg.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpw8sp3xpg.php:4\nStack trace:\n#0 /tmp/tmpw8sp3xpg.php(4): explode(',', Array)\n#1 /tmp/tmpw8sp3xpg.php(15): get_equal(Array)\n#2 /tmp/tmpw8sp3xpg.php(19): candidate(Array)\n#3 /tmp/tmpw8sp3xpg.php(24): test()\n#4 {main}\n  thrown in /tmp/tmpw8sp3xpg.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 0; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$Input = \"abc,def,ghi\";\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpuvso80th.php:4\nStack trace:\n#0 /tmp/tmpuvso80th.php(4): explode(',', Array)\n#1 /tmp/tmpuvso80th.php(17): get_equal(Array)\n#2 /tmp/tmpuvso80th.php(21): candidate(Array)\n#3 /tmp/tmpuvso80th.php(26): test()\n#4 {main}\n  thrown in /tmp/tmpuvso80th.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i=1; $i<$count; $i++) {\n        if(strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\", \"def\", \"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpy9t_u0mt.php:5\nStack trace:\n#0 /tmp/tmpy9t_u0mt.php(16): get_equal(Array)\n#1 /tmp/tmpy9t_u0mt.php(20): candidate(Array)\n#2 /tmp/tmpy9t_u0mt.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpy9t_u0mt.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i = 1; $i < $count; $i++) {\n        if($length != strlen($Input[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$Input = array(\"abc\", \"def\", \"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpky9zzh4c.php:5\nStack trace:\n#0 /tmp/tmpky9zzh4c.php(17): get_equal(Array)\n#1 /tmp/tmpky9zzh4c.php(21): candidate(Array)\n#2 /tmp/tmpky9zzh4c.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpky9zzh4c.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    $arr5 = explode(\",\", $Input['array5']);\n    $arr6 = explode(\",\", $Input['array6']);\n    $arr7 = explode(\",\", $Input['array7']);\n    $arr8 = explode(\",\", $Input['array8']);\n    $arr9 = explode(\",\", $Input['array9']);\n    $arr10 = explode(\",\", $Input['array10']);\n    $arr11 = explode(\",\", $Input['array11']);\n    $arr12 = explode(\",\", $Input['array12']);\n    $arr13 = explode(\",\", $Input['array13']);\n    $arr14 = explode(\",\", $Input['array14']);\n    $arr15 = explode(\",\", $Input['array15']);\n    $arr16 = explode(\",\", $Input['array16']);\n    $arr17 = explode(\",\", $Input['array17']);\n    $arr18 = explode(\",\", $Input['array18']);\n    $arr19 = explode(\",\", $Input['array19']);\n    $arr20 = explode(\",\", $Input['array20']);\n    $arr21 = explode(\",\", $Input['array21']);\n    $arr22 = explode(\",\", $Input['array22']);\n    $arr23 = explode(\",\", $Input['array23']);\n    $arr24 = explode(\",\", $Input['array24']);\n    $arr25 = explode(\",\", $Input['array25']);\n    $arr26 = explode(\",\", $Input['array26']);\n    $arr27 = explode(\",\", $Input['array27']);\n    $arr28 = explode(\",\", $Input['array28']);\n    $arr29 = explode(\",\", $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoowhlxww.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $array = explode(\" \", $Input[0]);\n    $array1 = explode(\" \", $Input[1]);\n    $array2 = explode(\" \", $Input[2]);\n    if (count($array) == count($array1) && count($array1) == count($array2)) {\n        echo \"true\";\n    } else {\n        echo \"false\";\n    }\n}\n$Input = array(\"1 2 3 4 5\", \"1 2 3 4 5\", \"1 2 3 4 5\");\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpeqgi4dtq.php:4\nStack trace:\n#0 /tmp/tmpeqgi4dtq.php(4): explode(' ', Array)\n#1 /tmp/tmpeqgi4dtq.php(16): get_equal(Array)\n#2 /tmp/tmpeqgi4dtq.php(20): candidate(Array)\n#3 /tmp/tmpeqgi4dtq.php(25): test()\n#4 {main}\n  thrown in /tmp/tmpeqgi4dtq.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\" \", $Input[0]);\n    $len = count($arr);\n    for ($i = 1; $i < count($Input); $i++) {\n        $arr = explode(\" \", $Input[$i]);\n        if (count($arr) != $len) {\n            return \"False\";\n        }\n    }\n    return \"True\";\n}\n$Input = array(\"1 2 3 4 5\", \"1 2 3 4 5\", \"1 2 3 4 5\", \"1 2 3 4 5\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "True\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpkeohqkzx.php:4\nStack trace:\n#0 /tmp/tmpkeohqkzx.php(4): explode(' ', Array)\n#1 /tmp/tmpkeohqkzx.php(17): get_equal(Array)\n#2 /tmp/tmpkeohqkzx.php(21): candidate(Array)\n#3 /tmp/tmpkeohqkzx.php(26): test()\n#4 {main}\n  thrown in /tmp/tmpkeohqkzx.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\" \", $Input[1]);\n    $length = strlen($arrays[0]);\n    $equal = true;\n    foreach ($arrays as $array) {\n        if (strlen($array) != $length) {\n            $equal = false;\n            break;\n        }\n    }\n    if ($equal) {\n        echo \"true\";\n    } else {\n        echo \"false\";\n    }\n}\n$Input = array(\"5\", \"abcde abcde abcde abcde\");\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "true\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpl23cll0a.php:4\nStack trace:\n#0 /tmp/tmpl23cll0a.php(4): explode(' ', Array)\n#1 /tmp/tmpl23cll0a.php(22): get_equal(Array)\n#2 /tmp/tmpl23cll0a.php(26): candidate(Array)\n#3 /tmp/tmpl23cll0a.php(31): test()\n#4 {main}\n  thrown in /tmp/tmpl23cll0a.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $length = count($arr);\n    for ($i = 0; $i < $length; $i++) {\n        $arr[$i] = explode(\" \", $arr[$i]);\n        if (count($arr[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$Input = array(\"array\" => \"1 2 3 4,2 3 4 5,3 4 5 6,4 5 6 7\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nWarning: Undefined array key \"array\" in /tmp/tmp8i3u6718.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmp8i3u6718.php on line 4\n\nWarning: Undefined array key \"array\" in /tmp/tmp8i3u6718.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmp8i3u6718.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8i3u6718.php:23\nStack trace:\n#0 /tmp/tmp8i3u6718.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8i3u6718.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $len = count($Input);\n    $count = 0;\n    for($i = 0; $i < $len; $i++) {\n        if(count($Input[$i]) == $len) {\n            $count++;\n        }\n    }\n    if($count == $len) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n$Input = array(array(1,2,3),array(1,2,3),array(1,2,3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3iukqzv4.php:25\nStack trace:\n#0 /tmp/tmp3iukqzv4.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp3iukqzv4.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $array = explode(\" \", $Input);\n    $count = count($array);\n    $result = 0;\n    for ($i = 0; $i < $count; $i++) {\n        if ($array[$i] == $array[$i + 1]) {\n            $result = 1;\n        } else {\n            $result = 0;\n            break;\n        }\n    }\n    if ($result == 1) {\n        echo \"true\";\n    } else {\n        echo \"false\";\n    }\n}\n$Input = \"1 2 3 4 5\";\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "false\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpfmy8ezhd.php:4\nStack trace:\n#0 /tmp/tmpfmy8ezhd.php(4): explode(' ', Array)\n#1 /tmp/tmpfmy8ezhd.php(24): get_equal(Array)\n#2 /tmp/tmpfmy8ezhd.php(28): candidate(Array)\n#3 /tmp/tmpfmy8ezhd.php(33): test()\n#4 {main}\n  thrown in /tmp/tmpfmy8ezhd.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $count = count($arr);\n    $result = \"\";\n    for ($i = 0; $i < $count; $i++) {\n        $result .= strlen($arr[$i]) . \",\";\n    }\n    return $result;\n}\n\n$Input = array(\"array\" => \"abcd,abc,abcd,abc\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "4,3,4,3,\nWarning: Undefined array key \"array\" in /tmp/tmpohmsd2lc.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpohmsd2lc.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohmsd2lc.php:20\nStack trace:\n#0 /tmp/tmpohmsd2lc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpohmsd2lc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $array_length = array_map('count', $Input);\n    $array_length = array_unique($array_length);\n    if (count($array_length) == 1) {\n        return \"Equal\";\n    } else {\n        return \"Not Equal\";\n    }\n}\n$Input = array(\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "Equal\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeg23is7s.php:24\nStack trace:\n#0 /tmp/tmpeg23is7s.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpeg23is7s.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $len = count($Input);\n    $result = array();\n    for ($i = 0; $i < $len; $i++) {\n        $result[$i] = count($Input[$i]);\n    }\n    $result = array_unique($result);\n    if (count($result) == 1) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n$Input = array(array(1, 2, 3), array(1, 2, 3), array(1, 2, 3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84bgbpbj.php:23\nStack trace:\n#0 /tmp/tmp84bgbpbj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp84bgbpbj.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    $arr5 = explode(\",\", $Input['array5']);\n    $arr6 = explode(\",\", $Input['array6']);\n    $arr7 = explode(\",\", $Input['array7']);\n    $arr8 = explode(\",\", $Input['array8']);\n    $arr9 = explode(\",\", $Input['array9']);\n    $arr10 = explode(\",\", $Input['array10']);\n    $arr11 = explode(\",\", $Input['array11']);\n    $arr12 = explode(\",\", $Input['array12']);\n    $arr13 = explode(\",\", $Input['array13']);\n    $arr14 = explode(\",\", $Input['array14']);\n    $arr15 = explode(\",\", $Input['array15']);\n    $arr16 = explode(\",\", $Input['array16']);\n    $arr17 = explode(\",\", $Input['array17']);\n    $arr18 = explode(\",\", $Input['array18']);\n    $arr19 = explode(\",\", $Input['array19']);\n    $arr20 = explode(\",\", $Input['array20']);\n    $arr21 = explode(\",\", $Input['array21']);\n    $arr22 = explode(\",\", $Input['array22']);\n    $arr23 = explode(\",\", $Input['array23']);\n    $arr24 = explode(\",\", $Input['array24']);\n    $arr25 = explode(\",\", $Input['array25']);\n    $arr26 = explode(\",\", $Input['array26']);\n    $arr27 = explode(\",\", $Input['array27']);\n    $arr28 = explode(\",\", $Input['array28']);\n    $arr29 = explode(\",\", $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoowhlxww.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $result = array();\n    $length = array();\n    for ($i = 0; $i < $count; $i++) {\n        $length[$i] = count($Input[$i]);\n    }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n            if ($length[$i] == $length[$j]) {\n                $result[$i] = $length[$i];\n            }\n        }\n    }\n    return $result;\n}\n$Input = array(array(1, 2, 3), array(1, 2, 3), array(1, 2, 3));\n$result = get_equal($Input);\nprint_r($result);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_864ezi.php:27\nStack trace:\n#0 /tmp/tmpi_864ezi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpi_864ezi.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = count($Input[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if ($length != count($Input[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpw5ga65hf.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = count($arrays);\n    $result = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($arrays[$i]) != count($arrays[$i + 1])) {\n            $result = false;\n        }\n    }\n    return $result;\n}\n$Input = \"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\" in /tmp/tmpbyejjnh8.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return \"False\";\n        }\n    }\n    return \"True\";\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmp0kix_oc6.php:4\nStack trace:\n#0 /tmp/tmp0kix_oc6.php(4): explode(',', Array)\n#1 /tmp/tmp0kix_oc6.php(15): get_equal(Array)\n#2 /tmp/tmp0kix_oc6.php(19): candidate(Array)\n#3 /tmp/tmp0kix_oc6.php(24): test()\n#4 {main}\n  thrown in /tmp/tmp0kix_oc6.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $result = [];\n    for ($i = 0; $i < $count; $i++) {\n        $result[] = count($Input[$i]);\n    }\n    $result = array_unique($result);\n    if (count($result) == 1) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n$Input = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvdmsu2nr.php:23\nStack trace:\n#0 /tmp/tmpvdmsu2nr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvdmsu2nr.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    $result = \"true\";\n    foreach ($arrays as $array) {\n        if (strlen($array) != $length) {\n            $result = \"false\";\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmprm1pqgs5.php:4\nStack trace:\n#0 /tmp/tmprm1pqgs5.php(4): explode(',', Array)\n#1 /tmp/tmprm1pqgs5.php(16): get_equal(Array)\n#2 /tmp/tmprm1pqgs5.php(20): candidate(Array)\n#3 /tmp/tmprm1pqgs5.php(25): test()\n#4 {main}\n  thrown in /tmp/tmprm1pqgs5.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\" \", $Input[0]);\n    $arr1 = explode(\" \", $Input[1]);\n    $arr2 = explode(\" \", $Input[2]);\n    if (count($arr) == count($arr1) && count($arr) == count($arr2)) {\n        echo \"true\";\n    } else {\n        echo \"false\";\n    }\n}\n$Input = array(\"1 2 3 4\", \"1 2 3 4\", \"1 2 3 4\");\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpb55vqyb1.php:4\nStack trace:\n#0 /tmp/tmpb55vqyb1.php(4): explode(' ', Array)\n#1 /tmp/tmpb55vqyb1.php(16): get_equal(Array)\n#2 /tmp/tmpb55vqyb1.php(20): candidate(Array)\n#3 /tmp/tmpb55vqyb1.php(25): test()\n#4 {main}\n  thrown in /tmp/tmpb55vqyb1.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    $equal = true;\n    foreach ($arrays as $array) {\n        if (strlen($array) != $length) {\n            $equal = false;\n        }\n    }\n    return $equal;\n}\n\necho get_equal(\"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \")\" in /tmp/tmpufssb_au.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i=1;$i<$count;$i++) {\n        if(strlen($Input[$i]) != $length) {\n            return \"false\";\n        }\n    }\n    return \"true\";\n}\n$Input = array(\"abcd\",\"abcd\",\"abcd\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmptdecmaba.php:5\nStack trace:\n#0 /tmp/tmptdecmaba.php(16): get_equal(Array)\n#1 /tmp/tmptdecmaba.php(20): candidate(Array)\n#2 /tmp/tmptdecmaba.php(25): test()\n#3 {main}\n  thrown in /tmp/tmptdecmaba.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    $arr5 = explode(\",\", $Input['array5']);\n    $arr6 = explode(\",\", $Input['array6']);\n    $arr7 = explode(\",\", $Input['array7']);\n    $arr8 = explode(\",\", $Input['array8']);\n    $arr9 = explode(\",\", $Input['array9']);\n    $arr10 = explode(\",\", $Input['array10']);\n    $arr11 = explode(\",\", $Input['array11']);\n    $arr12 = explode(\",\", $Input['array12']);\n    $arr13 = explode(\",\", $Input['array13']);\n    $arr14 = explode(\",\", $Input['array14']);\n    $arr15 = explode(\",\", $Input['array15']);\n    $arr16 = explode(\",\", $Input['array16']);\n    $arr17 = explode(\",\", $Input['array17']);\n    $arr18 = explode(\",\", $Input['array18']);\n    $arr19 = explode(\",\", $Input['array19']);\n    $arr20 = explode(\",\", $Input['array20']);\n    $arr21 = explode(\",\", $Input['array21']);\n    $arr22 = explode(\",\", $Input['array22']);\n    $arr23 = explode(\",\", $Input['array23']);\n    $arr24 = explode(\",\", $Input['array24']);\n    $arr25 = explode(\",\", $Input['array25']);\n    $arr26 = explode(\",\", $Input['array26']);\n    $arr27 = explode(\",\", $Input['array27']);\n    $arr28 = explode(\",\", $Input['array28']);\n    $arr29 = explode(\",\", $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoowhlxww.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $len = strlen($Input[0]);\n    for($i=1;$i<$count;$i++) {\n        if($len != strlen($Input[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\", \"def\", \"ghi\", \"jkl\");\n$result = get_equal($Input);\nif($result) {\n    echo \"All arrays have equal length\";\n} else {\n    echo \"All arrays do not have equal length\";\n}\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "All arrays have equal length\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpd5wt7u2d.php:5\nStack trace:\n#0 /tmp/tmpd5wt7u2d.php(21): get_equal(Array)\n#1 /tmp/tmpd5wt7u2d.php(25): candidate(Array)\n#2 /tmp/tmpd5wt7u2d.php(30): test()\n#3 {main}\n  thrown in /tmp/tmpd5wt7u2d.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    $result = \"true\";\n    foreach ($arrays as $array) {\n        if ($length != strlen($array)) {\n            $result = \"false\";\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpmwrqty27.php:4\nStack trace:\n#0 /tmp/tmpmwrqty27.php(4): explode(',', Array)\n#1 /tmp/tmpmwrqty27.php(17): get_equal(Array)\n#2 /tmp/tmpmwrqty27.php(21): candidate(Array)\n#3 /tmp/tmpmwrqty27.php(26): test()\n#4 {main}\n  thrown in /tmp/tmpmwrqty27.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $array = explode(\" \", $Input[1]);\n    $count = count($array);\n    $array1 = explode(\" \", $Input[2]);\n    $count1 = count($array1);\n    if ($count == $count1) {\n        echo \"true\";\n    } else {\n        echo \"false\";\n    }\n}\n$Input = array(\"3\", \"1 2 3\", \"1 2 3\");\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpg_gnfl_p.php:4\nStack trace:\n#0 /tmp/tmpg_gnfl_p.php(4): explode(' ', Array)\n#1 /tmp/tmpg_gnfl_p.php(17): get_equal(Array)\n#2 /tmp/tmpg_gnfl_p.php(21): candidate(Array)\n#3 /tmp/tmpg_gnfl_p.php(26): test()\n#4 {main}\n  thrown in /tmp/tmpg_gnfl_p.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i=1;$i<$count;$i++) {\n        if(strlen($Input[$i]) != $length) {\n            return \"false\";\n        }\n    }\n    return \"true\";\n}\n$Input = array(\"abc\",\"def\",\"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpczpnoj0m.php:5\nStack trace:\n#0 /tmp/tmpczpnoj0m.php(16): get_equal(Array)\n#1 /tmp/tmpczpnoj0m.php(20): candidate(Array)\n#2 /tmp/tmpczpnoj0m.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpczpnoj0m.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $result = [];\n    for($i=0;$i<$count;$i++) {\n        $result[$i] = count($Input[$i]);\n    }\n    $result = array_unique($result);\n    if(count($result) == 1) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n$Input = [[1,2,3],[1,2,3],[1,2,3]];\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprijpy9ef.php:23\nStack trace:\n#0 /tmp/tmprijpy9ef.php(28): test()\n#1 {main}\n  thrown in /tmp/tmprijpy9ef.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = count($arrays);\n    $equal = true;\n    for ($i = 0; $i < $length; $i++) {\n        $arrays[$i] = explode(\" \", $arrays[$i]);\n        $length_arrays = count($arrays[$i]);\n        if ($i > 0) {\n            if ($length_arrays != $length_arrays_pre) {\n                $equal = false;\n                break;\n            }\n        }\n        $length_arrays_pre = $length_arrays;\n    }\n    if ($equal) {\n        echo \"Equal\";\n    } else {\n        echo \"Not Equal\";\n    }\n}\n$Input = \"1 2 3 4 5,1 2 3 4 5,1 2 3 4 5,1 2 3 4 5\";\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "Equal\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpe1anp6e5.php:4\nStack trace:\n#0 /tmp/tmpe1anp6e5.php(4): explode(',', Array)\n#1 /tmp/tmpe1anp6e5.php(27): get_equal(Array)\n#2 /tmp/tmpe1anp6e5.php(31): candidate(Array)\n#3 /tmp/tmpe1anp6e5.php(36): test()\n#4 {main}\n  thrown in /tmp/tmpe1anp6e5.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(',', $Input['arr']);\n    $arr1 = explode(',', $Input['arr1']);\n    $arr2 = explode(',', $Input['arr2']);\n    $arr3 = explode(',', $Input['arr3']);\n    $arr4 = explode(',', $Input['arr4']);\n    $arr5 = explode(',', $Input['arr5']);\n    $arr6 = explode(',', $Input['arr6']);\n    $arr7 = explode(',', $Input['arr7']);\n    $arr8 = explode(',', $Input['arr8']);\n    $arr9 = explode(',', $Input['arr9']);\n    $arr10 = explode(',', $Input['arr10']);\n    $arr11 = explode(',', $Input['arr11']);\n    $arr12 = explode(',', $Input['arr12']);\n    $arr13 = explode(',', $Input['arr13']);\n    $arr14 = explode(',', $Input['arr14']);\n    $arr15 = explode(',', $Input['arr15']);\n    $arr16 = explode(',', $Input['arr16']);\n    $arr17 = explode(',', $Input['arr17']);\n    $arr18 = explode(',', $Input['arr18']);\n    $arr19 = explode(',', $Input['arr19']);\n    $arr20 = explode(',', $Input['arr20']);\n    $arr21 = explode(',', $Input['arr21']);\n    $arr22 = explode(',', $Input['arr22']);\n    $arr23 = explode(',', $Input['arr23']);\n    $arr24 = explode(',', $Input['arr24']);\n    $arr25 = explode(',', $Input['arr25']);\n    $arr26 = explode(',', $Input['arr26']);\n    $arr27 = explode(',', $Input['arr27']);\n    $arr28 = explode(',', $Input['arr28']);\n    $arr29 = explode(',', $Input['arr29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpavusajvy.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $result = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != $length) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n\n$Input = array(\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3)\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s34_4jn.php:26\nStack trace:\n#0 /tmp/tmp9s34_4jn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9s34_4jn.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $result = array();\n    for($i=0;$i<$count;$i++) {\n        $result[$i] = count($Input[$i]);\n    }\n    if(count(array_unique($result)) === 1) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n$Input = array(\n    array(1,2,3,4),\n    array(1,2,3,4),\n    array(1,2,3,4),\n    array(1,2,3,4),\n    array(1,2,3,4),\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3gfavio7.php:28\nStack trace:\n#0 /tmp/tmp3gfavio7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp3gfavio7.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = count($Input[0]);\n    for($i=0;$i<$count;$i++) {\n        if(count($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\n    array(1,2,3,4),\n    array(1,2,3,4),\n    array(1,2,3,4)\n);\nvar_dump(get_equal($Input));\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "bool(true)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $len = count($arr);\n    $arr1 = explode(\",\", $Input['array1']);\n    $len1 = count($arr1);\n    $arr2 = explode(\",\", $Input['array2']);\n    $len2 = count($arr2);\n    if ($len == $len1 && $len1 == $len2) {\n        echo \"All arrays are equal\";\n    } else {\n        echo \"All arrays are not equal\";\n    }\n}\n$Input = array(\"array\" => \"1,2,3,4,5\", \"array1\" => \"1,2,3,4,5\", \"array2\" => \"1,2,3,4,5\");\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "All arrays are equal\nWarning: Undefined array key \"array\" in /tmp/tmphymqqfjk.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmphymqqfjk.php on line 4\n\nWarning: Undefined array key \"array1\" in /tmp/tmphymqqfjk.php on line 6\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmphymqqfjk.php on line 6\n\nWarning: Undefined array key \"array2\" in /tmp/tmphymqqfjk.php on line 8\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmphymqqfjk.php on line 8\nAll arrays are equal\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphymqqfjk.php:23\nStack trace:\n#0 /tmp/tmphymqqfjk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphymqqfjk.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\" \", $Input[0]);\n    $arr1 = explode(\" \", $Input[1]);\n    $arr2 = explode(\" \", $Input[2]);\n    $arr3 = explode(\" \", $Input[3]);\n    $arr4 = explode(\" \", $Input[4]);\n    $arr5 = explode(\" \", $Input[5]);\n    $arr6 = explode(\" \", $Input[6]);\n    $arr7 = explode(\" \", $Input[7]);\n    $arr8 = explode(\" \", $Input[8]);\n    $arr9 = explode(\" \", $Input[9]);\n    $arr10 = explode(\" \", $Input[10]);\n    $arr11 = explode(\" \", $Input[11]);\n    $arr12 = explode(\" \", $Input[12]);\n    $arr13 = explode(\" \", $Input[13]);\n    $arr14 = explode(\" \", $Input[14]);\n    $arr15 = explode(\" \", $Input[15]);\n    $arr16 = explode(\" \", $Input[16]);\n    $arr17 = explode(\" \", $Input[17]);\n    $arr18 = explode(\" \", $Input[18]);\n    $arr19 = explode(\" \", $Input[19]);\n    $arr20 = explode(\" \", $Input[20]);\n    $arr21 = explode(\" \", $Input[21]);\n    $arr22 = explode(\" \", $Input[22]);\n    $arr23 = explode(\" \", $Input[23]);\n    $arr24 = explode(\" \", $Input[24]);\n    $arr25 = explode(\" \", $Input[25]);\n    $arr26 = explode(\" \", $Input[26]);\n    $arr27 = explode(\" \", $Input[27]);\n    $arr28 = explode(\" \", $Input[28]);\n    $arr29 = explode(\" \", $Input[29]);\n    $arr30 = explode(\" \", $Input[30]);\n    $arr31 = explode(\" \", $Input[31]);\n    $arr32 = explode(\" \", $Input[32]);\n    $arr33 = explode(\" \", $Input[33]);\n    $arr34 = explode(\" \", $Input[34]);\n    $arr35 = explode(\" \", $Input[35]);\n    $arr36 = explode(\" \",\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjoc41rfd.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $result = array();\n    for($i=0; $i<$count; $i++) {\n        $result[$i] = count($Input[$i]);\n    }\n    $result = array_unique($result);\n    if(count($result) == 1) {\n        return \"Equal\";\n    }\n    else {\n        return \"Not Equal\";\n    }\n}\n$Input = array(array(1,2,3),array(1,2,3),array(1,2,3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "Equal\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_g1qql0.php:24\nStack trace:\n#0 /tmp/tmpi_g1qql0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpi_g1qql0.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if (strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$Input = array(\"abc\", \"def\", \"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpqkfzxbj3.php:5\nStack trace:\n#0 /tmp/tmpqkfzxbj3.php(17): get_equal(Array)\n#1 /tmp/tmpqkfzxbj3.php(21): candidate(Array)\n#2 /tmp/tmpqkfzxbj3.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpqkfzxbj3.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i = 1; $i < $count; $i++) {\n        if(strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\", \"def\", \"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpn_9d7023.php:5\nStack trace:\n#0 /tmp/tmpn_9d7023.php(16): get_equal(Array)\n#1 /tmp/tmpn_9d7023.php(20): candidate(Array)\n#2 /tmp/tmpn_9d7023.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpn_9d7023.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $result = true;\n    for($i = 0; $i < $length; $i++) {\n        if(count($Input[$i]) != count($Input[$i+1])) {\n            $result = false;\n        }\n    }\n    return $result;\n}\n$Input = [[1,2,3], [1,2,3], [1,2,3]];\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nWarning: Undefined array key 3 in /tmp/tmpxi5wq8w1.php on line 7\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmpxi5wq8w1.php:7\nStack trace:\n#0 /tmp/tmpxi5wq8w1.php(14): get_equal(Array)\n#1 {main}\n  thrown in /tmp/tmpxi5wq8w1.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i = 1; $i < $count; $i++) {\n        if(strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abcd\", \"abcd\", \"abcd\", \"abcd\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpfc1g5dzw.php:5\nStack trace:\n#0 /tmp/tmpfc1g5dzw.php(16): get_equal(Array)\n#1 /tmp/tmpfc1g5dzw.php(20): candidate(Array)\n#2 /tmp/tmpfc1g5dzw.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpfc1g5dzw.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n\t$result = true;\n\t$length = count($Input[0]);\n\tfor($i = 1; $i < count($Input); $i++) {\n\t\tif(count($Input[$i]) != $length) {\n\t\t\t$result = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$Input = array(\n\t\t\tarray(1, 2, 3),\n\t\t\tarray(1, 2, 3),\n\t\t\tarray(1, 2, 3)\n\t\t);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $result = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != $length) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n\n$Input = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqudct4cd.php:27\nStack trace:\n#0 /tmp/tmpqudct4cd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqudct4cd.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i=1;$i<$count;$i++) {\n        if(strlen($Input[$i]) != $length) {\n            return \"False\";\n        }\n    }\n    return \"True\";\n}\n$Input = array(\"abc\",\"def\",\"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "True\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpil8ymxe4.php:5\nStack trace:\n#0 /tmp/tmpil8ymxe4.php(16): get_equal(Array)\n#1 /tmp/tmpil8ymxe4.php(20): candidate(Array)\n#2 /tmp/tmpil8ymxe4.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpil8ymxe4.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $result = array();\n    for ($i = 0; $i < $count; $i++) {\n        $result[$i] = count($Input[$i]);\n    }\n    $result = array_unique($result);\n    if (count($result) == 1) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n$Input = array(array(1, 2, 3), array(1, 2, 3), array(1, 2, 3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j7fa4q0.php:23\nStack trace:\n#0 /tmp/tmp9j7fa4q0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9j7fa4q0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input[0]);\n    for ($i = 1; $i < count($Input); $i++) {\n        if (count($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5)\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $equal = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != $length) {\n            $equal = false;\n            break;\n        }\n    }\n    return $equal;\n}\n\n$Input = array(\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n);\n\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkhukmo4m.php:27\nStack trace:\n#0 /tmp/tmpkhukmo4m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkhukmo4m.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(',', $Input['array']);\n    $length = strlen($arrays[0]);\n    $result = 'true';\n    foreach ($arrays as $array) {\n        if ($length != strlen($array)) {\n            $result = 'false';\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nWarning: Undefined array key \"array\" in /tmp/tmp0qtgu7m2.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmp0qtgu7m2.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qtgu7m2.php:20\nStack trace:\n#0 /tmp/tmp0qtgu7m2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0qtgu7m2.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $result = array();\n    for ($i = 0; $i < $count; $i++) {\n        $result[$i] = count($Input[$i]);\n    }\n    $count = count($result);\n    $equal = true;\n    for ($i = 0; $i < $count; $i++) {\n        if ($result[$i] != $result[0]) {\n            $equal = false;\n        }\n    }\n    return $equal;\n}\n$Input = array(array(1, 2, 3), array(1, 2, 3), array(1, 2, 3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\" \", $Input[0]);\n    $arr1 = explode(\" \", $Input[1]);\n    $arr2 = explode(\" \", $Input[2]);\n    if (count($arr) == count($arr1) && count($arr1) == count($arr2)) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpn324039t.php:4\nStack trace:\n#0 /tmp/tmpn324039t.php(4): explode(' ', Array)\n#1 /tmp/tmpn324039t.php(15): get_equal(Array)\n#2 /tmp/tmpn324039t.php(19): candidate(Array)\n#3 /tmp/tmpn324039t.php(24): test()\n#4 {main}\n  thrown in /tmp/tmpn324039t.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    $arr5 = explode(\",\", $Input['array5']);\n    $arr6 = explode(\",\", $Input['array6']);\n    $arr7 = explode(\",\", $Input['array7']);\n    $arr8 = explode(\",\", $Input['array8']);\n    $arr9 = explode(\",\", $Input['array9']);\n    $arr10 = explode(\",\", $Input['array10']);\n    $arr11 = explode(\",\", $Input['array11']);\n    $arr12 = explode(\",\", $Input['array12']);\n    $arr13 = explode(\",\", $Input['array13']);\n    $arr14 = explode(\",\", $Input['array14']);\n    $arr15 = explode(\",\", $Input['array15']);\n    $arr16 = explode(\",\", $Input['array16']);\n    $arr17 = explode(\",\", $Input['array17']);\n    $arr18 = explode(\",\", $Input['array18']);\n    $arr19 = explode(\",\", $Input['array19']);\n    $arr20 = explode(\",\", $Input['array20']);\n    $arr21 = explode(\",\", $Input['array21']);\n    $arr22 = explode(\",\", $Input['array22']);\n    $arr23 = explode(\",\", $Input['array23']);\n    $arr24 = explode(\",\", $Input['array24']);\n    $arr25 = explode(\",\", $Input['array25']);\n    $arr26 = explode(\",\", $Input['array26']);\n    $arr27 = explode(\",\", $Input['array27']);\n    $arr28 = explode(\",\", $Input['array28']);\n    $arr29 = explode(\",\", $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoowhlxww.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $result = array_unique(array_map('count', $Input));\n    if(count($result) == 1) {\n        return \"All arrays are equal\";\n    } else {\n        return \"All arrays are not equal\";\n    }\n}\n$Input = array(\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4)\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "All arrays are equal\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfp7m_0b1.php:23\nStack trace:\n#0 /tmp/tmpfp7m_0b1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpfp7m_0b1.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\" \", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return \"False\";\n        }\n    }\n    return \"True\";\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmp6dgppbcu.php:4\nStack trace:\n#0 /tmp/tmp6dgppbcu.php(4): explode(' ', Array)\n#1 /tmp/tmp6dgppbcu.php(15): get_equal(Array)\n#2 /tmp/tmp6dgppbcu.php(19): candidate(Array)\n#3 /tmp/tmp6dgppbcu.php(24): test()\n#4 {main}\n  thrown in /tmp/tmp6dgppbcu.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $equal = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != $length) {\n            $equal = false;\n            break;\n        }\n    }\n    return $equal;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpau798yy5.php:20\nStack trace:\n#0 /tmp/tmpau798yy5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpau798yy5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != count($Input[$i + 1])) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(array(1, 2, 3), array(1, 2, 3), array(1, 2, 3));\n$result = get_equal($Input);\nif ($result) {\n    echo \"All arrays are equal\";\n} else {\n    echo \"All arrays are not equal\";\n}\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nWarning: Undefined array key 3 in /tmp/tmp1qy9su1b.php on line 6\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmp1qy9su1b.php:6\nStack trace:\n#0 /tmp/tmp1qy9su1b.php(13): get_equal(Array)\n#1 {main}\n  thrown in /tmp/tmp1qy9su1b.php on line 6\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $result = [];\n    for($i = 0; $i < $length; $i++) {\n        $result[] = count($Input[$i]);\n    }\n    $result = array_unique($result);\n    if(count($result) == 1) {\n        return true;\n    }\n    return false;\n}\n$Input = [[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]];\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $result = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != $length) {\n            $result = false;\n        }\n    }\n    return $result;\n}\n$Input = array(\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvv23nn2j.php:25\nStack trace:\n#0 /tmp/tmpvv23nn2j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvv23nn2j.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $result = true;\n    for($i = 0; $i < $length; $i++) {\n        if(count($Input[$i]) != count($Input[$i+1])) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n$Input = array(\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nWarning: Undefined array key 4 in /tmp/tmphyq9auqp.php on line 7\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmphyq9auqp.php:7\nStack trace:\n#0 /tmp/tmphyq9auqp.php(20): get_equal(Array)\n#1 {main}\n  thrown in /tmp/tmphyq9auqp.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    foreach ($arrays as $array) {\n        if (strlen($array) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = \"1234,1234,1234,1234\";\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmp8unbm1_3.php:4\nStack trace:\n#0 /tmp/tmp8unbm1_3.php(4): explode(',', Array)\n#1 /tmp/tmp8unbm1_3.php(16): get_equal(Array)\n#2 /tmp/tmp8unbm1_3.php(20): candidate(Array)\n#3 /tmp/tmp8unbm1_3.php(25): test()\n#4 {main}\n  thrown in /tmp/tmp8unbm1_3.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(',', $Input['array']);\n    $arr_len = count($arr);\n    $arr_len_1 = strlen($arr[0]);\n    $arr_len_2 = strlen($arr[1]);\n    $arr_len_3 = strlen($arr[2]);\n    if($arr_len == 3) {\n        if($arr_len_1 == $arr_len_2 && $arr_len_2 == $arr_len_3) {\n            return \"All arrays are equal\";\n        } else {\n            return \"All arrays are not equal\";\n        }\n    } else {\n        return \"Please enter 3 arrays\";\n    }\n}\n\n$Input = array(\"array\" => \"abc,xyz,pqr\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "All arrays are equal\nWarning: Undefined array key \"array\" in /tmp/tmp3xruj4f8.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmp3xruj4f8.php on line 4\n\nWarning: Undefined array key 1 in /tmp/tmp3xruj4f8.php on line 7\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmp3xruj4f8.php on line 7\n\nWarning: Undefined array key 2 in /tmp/tmp3xruj4f8.php on line 8\n\nDeprecated: strlen(): Passing null to parameter #1 ($string) of type string is deprecated in /tmp/tmp3xruj4f8.php on line 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xruj4f8.php:27\nStack trace:\n#0 /tmp/tmp3xruj4f8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3xruj4f8.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = count($Input[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if (count($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$result = get_equal($Input);\necho $result;\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    $arr5 = explode(\",\", $Input['array5']);\n    $arr6 = explode(\",\", $Input['array6']);\n    $arr7 = explode(\",\", $Input['array7']);\n    $arr8 = explode(\",\", $Input['array8']);\n    $arr9 = explode(\",\", $Input['array9']);\n    $arr10 = explode(\",\", $Input['array10']);\n    $arr11 = explode(\",\", $Input['array11']);\n    $arr12 = explode(\",\", $Input['array12']);\n    $arr13 = explode(\",\", $Input['array13']);\n    $arr14 = explode(\",\", $Input['array14']);\n    $arr15 = explode(\",\", $Input['array15']);\n    $arr16 = explode(\",\", $Input['array16']);\n    $arr17 = explode(\",\", $Input['array17']);\n    $arr18 = explode(\",\", $Input['array18']);\n    $arr19 = explode(\",\", $Input['array19']);\n    $arr20 = explode(\",\", $Input['array20']);\n    $arr21 = explode(\",\", $Input['array21']);\n    $arr22 = explode(\",\", $Input['array22']);\n    $arr23 = explode(\",\", $Input['array23']);\n    $arr24 = explode(\",\", $Input['array24']);\n    $arr25 = explode(\",\", $Input['array25']);\n    $arr26 = explode(\",\", $Input['array26']);\n    $arr27 = explode(\",\", $Input['array27']);\n    $arr28 = explode(\",\", $Input['array28']);\n    $arr29 = explode(\",\", $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoowhlxww.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\" \", $Input[1]);\n    $length = strlen($arrays[0]);\n    $equal = true;\n    foreach ($arrays as $array) {\n        if (strlen($array) != $length) {\n            $equal = false;\n            break;\n        }\n    }\n    if ($equal) {\n        echo \"true\";\n    } else {\n        echo \"false\";\n    }\n}\n$Input = array(\"5\", \"abc abc abc abc\");\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "true\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpk5lv__nr.php:4\nStack trace:\n#0 /tmp/tmpk5lv__nr.php(4): explode(' ', Array)\n#1 /tmp/tmpk5lv__nr.php(22): get_equal(Array)\n#2 /tmp/tmpk5lv__nr.php(26): candidate(Array)\n#3 /tmp/tmpk5lv__nr.php(31): test()\n#4 {main}\n  thrown in /tmp/tmpk5lv__nr.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input[0]);\n    for ($i = 1; $i < count($Input); $i++) {\n        if (count($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $array = explode(\",\", $Input['array']);\n    $array1 = explode(\",\", $Input['array1']);\n    $array2 = explode(\",\", $Input['array2']);\n    $array3 = explode(\",\", $Input['array3']);\n    $array4 = explode(\",\", $Input['array4']);\n    $array5 = explode(\",\", $Input['array5']);\n    $array6 = explode(\",\", $Input['array6']);\n    $array7 = explode(\",\", $Input['array7']);\n    $array8 = explode(\",\", $Input['array8']);\n    $array9 = explode(\",\", $Input['array9']);\n    $array10 = explode(\",\", $Input['array10']);\n    $array11 = explode(\",\", $Input['array11']);\n    $array12 = explode(\",\", $Input['array12']);\n    $array13 = explode(\",\", $Input['array13']);\n    $array14 = explode(\",\", $Input['array14']);\n    $array15 = explode(\",\", $Input['array15']);\n    $array16 = explode(\",\", $Input['array16']);\n    $array17 = explode(\",\", $Input['array17']);\n    $array18 = explode(\",\", $Input['array18']);\n    $array19 = explode(\",\", $Input['array19']);\n    $array20 = explode(\",\", $Input['array20']);\n    $array21 = explode(\",\", $Input['array21']);\n    $array22 = explode(\",\", $Input['array22']);\n    $array23 = explode(\",\", $Input['array23']);\n    $array24 = explode(\",\", $Input['array24']);\n    $array25 = explode(\",\", $Input['array25']);\n    $array26 = explode(\",\", $Input['array26']);\n    $array27 = explode(\",\", $Input['array27']);\n    $array28 = explode(\",\", $Input['array28']);\n    $array29 = explode(\",\", $Input['array29']);\n    $array\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpkd61ikfq.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $result = array();\n    for ($i = 0; $i < $count; $i++) {\n        $result[$i] = count($Input[$i]);\n    }\n    $result = array_unique($result);\n    if (count($result) == 1) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n$Input = array(array(1, 2, 3), array(1, 2, 3), array(1, 2, 3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j7fa4q0.php:23\nStack trace:\n#0 /tmp/tmp9j7fa4q0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9j7fa4q0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input[0]);\n    for ($i = 1; $i < count($Input); $i++) {\n        if (count($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $len = count($Input);\n    $count = 0;\n    for($i = 0; $i < $len; $i++) {\n        $count = count($Input[$i]);\n        for($j = 0; $j < $len; $j++) {\n            if($count != count($Input[$j])) {\n                return \"Not Equal\";\n            }\n        }\n    }\n    return \"Equal\";\n}\n$Input = array(array(1,2,3),array(1,2,3),array(1,2,3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "Equal\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj24ulbet.php:23\nStack trace:\n#0 /tmp/tmpj24ulbet.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpj24ulbet.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $result = array();\n    for($i = 0; $i < $count; $i++) {\n        $result[$i] = count($Input[$i]);\n    }\n    $result = array_unique($result);\n    if(count($result) == 1) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n$Input = array(array(1,2,3),array(1,2,3),array(1,2,3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcrwzgj_p.php:23\nStack trace:\n#0 /tmp/tmpcrwzgj_p.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcrwzgj_p.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    $arr5 = explode(\",\", $Input['array5']);\n    $arr6 = explode(\",\", $Input['array6']);\n    $arr7 = explode(\",\", $Input['array7']);\n    $arr8 = explode(\",\", $Input['array8']);\n    $arr9 = explode(\",\", $Input['array9']);\n    $arr10 = explode(\",\", $Input['array10']);\n    $arr11 = explode(\",\", $Input['array11']);\n    $arr12 = explode(\",\", $Input['array12']);\n    $arr13 = explode(\",\", $Input['array13']);\n    $arr14 = explode(\",\", $Input['array14']);\n    $arr15 = explode(\",\", $Input['array15']);\n    $arr16 = explode(\",\", $Input['array16']);\n    $arr17 = explode(\",\", $Input['array17']);\n    $arr18 = explode(\",\", $Input['array18']);\n    $arr19 = explode(\",\", $Input['array19']);\n    $arr20 = explode(\",\", $Input['array20']);\n    $arr21 = explode(\",\", $Input['array21']);\n    $arr22 = explode(\",\", $Input['array22']);\n    $arr23 = explode(\",\", $Input['array23']);\n    $arr24 = explode(\",\", $Input['array24']);\n    $arr25 = explode(\",\", $Input['array25']);\n    $arr26 = explode(\",\", $Input['array26']);\n    $arr27 = explode(\",\", $Input['array27']);\n    $arr28 = explode(\",\", $Input['array28']);\n    $arr29 = explode(\",\", $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoowhlxww.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $result = true;\n    $length = count($Input[0]);\n    for ($i = 1; $i < count($Input); $i++) {\n        if (count($Input[$i]) != $length) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n$Input = array(\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2,\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp_1ozwvg3.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i = 1; $i < $count; $i++) {\n        if(strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\", \"def\", \"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpn_9d7023.php:5\nStack trace:\n#0 /tmp/tmpn_9d7023.php(16): get_equal(Array)\n#1 /tmp/tmpn_9d7023.php(20): candidate(Array)\n#2 /tmp/tmpn_9d7023.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpn_9d7023.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$Input = \"abc,bcd,cde,def\";\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmp9336jau3.php:4\nStack trace:\n#0 /tmp/tmp9336jau3.php(4): explode(',', Array)\n#1 /tmp/tmp9336jau3.php(17): get_equal(Array)\n#2 /tmp/tmp9336jau3.php(21): candidate(Array)\n#3 /tmp/tmp9336jau3.php(26): test()\n#4 {main}\n  thrown in /tmp/tmp9336jau3.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n\t$arrays = explode(\",\", $Input);\n\t$length = strlen($arrays[0]);\n\t$count = 0;\n\tforeach ($arrays as $array) {\n\t\tif (strlen($array) == $length) {\n\t\t\t$count++;\n\t\t}\n\t}\n\tif ($count == count($arrays)) {\n\t\treturn \"true\";\n\t} else {\n\t\treturn \"false\";\n\t}\n}\necho get_equal(\"abc,bcd,cde,def\");\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "true\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpvheq8u44.php:4\nStack trace:\n#0 /tmp/tmpvheq8u44.php(4): explode(',', Array)\n#1 /tmp/tmpvheq8u44.php(20): get_equal(Array)\n#2 /tmp/tmpvheq8u44.php(24): candidate(Array)\n#3 /tmp/tmpvheq8u44.php(29): test()\n#4 {main}\n  thrown in /tmp/tmpvheq8u44.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input[0]);\n    for ($i = 1; $i < count($Input); $i++) {\n        if (count($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$Input = array(\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n);\n\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $result = array();\n    for ($i = 0; $i < $length; $i++) {\n        $result[] = count($Input[$i]);\n    }\n    $result = array_unique($result);\n    if (count($result) == 1) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n$Input = array(\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1a9xwgv.php:27\nStack trace:\n#0 /tmp/tmpf1a9xwgv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf1a9xwgv.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    $arr5 = explode(\",\", $Input['array5']);\n    $arr6 = explode(\",\", $Input['array6']);\n    $arr7 = explode(\",\", $Input['array7']);\n    $arr8 = explode(\",\", $Input['array8']);\n    $arr9 = explode(\",\", $Input['array9']);\n    $arr10 = explode(\",\", $Input['array10']);\n    $arr11 = explode(\",\", $Input['array11']);\n    $arr12 = explode(\",\", $Input['array12']);\n    $arr13 = explode(\",\", $Input['array13']);\n    $arr14 = explode(\",\", $Input['array14']);\n    $arr15 = explode(\",\", $Input['array15']);\n    $arr16 = explode(\",\", $Input['array16']);\n    $arr17 = explode(\",\", $Input['array17']);\n    $arr18 = explode(\",\", $Input['array18']);\n    $arr19 = explode(\",\", $Input['array19']);\n    $arr20 = explode(\",\", $Input['array20']);\n    $arr21 = explode(\",\", $Input['array21']);\n    $arr22 = explode(\",\", $Input['array22']);\n    $arr23 = explode(\",\", $Input['array23']);\n    $arr24 = explode(\",\", $Input['array24']);\n    $arr25 = explode(\",\", $Input['array25']);\n    $arr26 = explode(\",\", $Input['array26']);\n    $arr27 = explode(\",\", $Input['array27']);\n    $arr28 = explode(\",\", $Input['array28']);\n    $arr29 = explode(\",\", $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoowhlxww.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(',', $Input['array']);\n    $arr1 = explode(',', $Input['array1']);\n    $arr2 = explode(',', $Input['array2']);\n    $arr3 = explode(',', $Input['array3']);\n    $arr4 = explode(',', $Input['array4']);\n    $arr5 = explode(',', $Input['array5']);\n    $arr6 = explode(',', $Input['array6']);\n    $arr7 = explode(',', $Input['array7']);\n    $arr8 = explode(',', $Input['array8']);\n    $arr9 = explode(',', $Input['array9']);\n    $arr10 = explode(',', $Input['array10']);\n    $arr11 = explode(',', $Input['array11']);\n    $arr12 = explode(',', $Input['array12']);\n    $arr13 = explode(',', $Input['array13']);\n    $arr14 = explode(',', $Input['array14']);\n    $arr15 = explode(',', $Input['array15']);\n    $arr16 = explode(',', $Input['array16']);\n    $arr17 = explode(',', $Input['array17']);\n    $arr18 = explode(',', $Input['array18']);\n    $arr19 = explode(',', $Input['array19']);\n    $arr20 = explode(',', $Input['array20']);\n    $arr21 = explode(',', $Input['array21']);\n    $arr22 = explode(',', $Input['array22']);\n    $arr23 = explode(',', $Input['array23']);\n    $arr24 = explode(',', $Input['array24']);\n    $arr25 = explode(',', $Input['array25']);\n    $arr26 = explode(',', $Input['array26']);\n    $arr27 = explode(',', $Input['array27']);\n    $arr28 = explode(',', $Input['array28']);\n    $arr29 = explode(',', $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp2ndtv7l5.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i=1;$i<$count;$i++) {\n        if(strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\",\"def\",\"ghi\");\n$result = get_equal($Input);\nif($result) {\n    echo \"All the given arrays have equal length.\";\n}\nelse {\n    echo \"All the given arrays have not equal length.\";\n}\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "All the given arrays have equal length.\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpntqky9z4.php:5\nStack trace:\n#0 /tmp/tmpntqky9z4.php(22): get_equal(Array)\n#1 /tmp/tmpntqky9z4.php(26): candidate(Array)\n#2 /tmp/tmpntqky9z4.php(31): test()\n#3 {main}\n  thrown in /tmp/tmpntqky9z4.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $array1 = $Input[0];\n    $array2 = $Input[1];\n    $array3 = $Input[2];\n    $array4 = $Input[3];\n    $array5 = $Input[4];\n    $array6 = $Input[5];\n    $array7 = $Input[6];\n    $array8 = $Input[7];\n    $array9 = $Input[8];\n    $array10 = $Input[9];\n    $array11 = $Input[10];\n    $array12 = $Input[11];\n    $array13 = $Input[12];\n    $array14 = $Input[13];\n    $array15 = $Input[14];\n    $array16 = $Input[15];\n    $array17 = $Input[16];\n    $array18 = $Input[17];\n    $array19 = $Input[18];\n    $array20 = $Input[19];\n    $array21 = $Input[20];\n    $array22 = $Input[21];\n    $array23 = $Input[22];\n    $array24 = $Input[23];\n    $array25 = $Input[24];\n    $array26 = $Input[25];\n    $array27 = $Input[26];\n    $array28 = $Input[27];\n    $array29 = $Input[28];\n    $array30 = $Input[29];\n    $array31 = $Input[30];\n    $array32 = $Input[31];\n    $array33 = $Input[32];\n    $array34 = $Input[33];\n    $array35 = $Input[34];\n    $array36 = $Input[35];\n    $array37 = $Input[36];\n    $array38 = $Input[37];\n    $array39 = $Input[38];\n    $array40 = $Input[39];\n    $array41 = $Input[40];\n    $array42 = $Input[41];\n    $array43 = $Input[42];\n    $array44 = $Input[43];\n    $array45 = $Input[44];\n    $array46 = $Input[45];\n    $array47 =\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp3vw1q8rv.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $count = 0;\n    for($i=0;$i<$length;$i++) {\n        if(count($Input[$i]) == $length) {\n            $count++;\n        }\n    }\n    if($count == $length) {\n        return \"true\";\n    }\n    else {\n        return \"false\";\n    }\n}\n$Input = array(\n    array(1,2,3,4),\n    array(1,2,3,4),\n    array(1,2,3,4),\n    array(1,2,3,4)\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp49fm_4_5.php:30\nStack trace:\n#0 /tmp/tmp49fm_4_5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp49fm_4_5.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $len = count($arr);\n    $i = 0;\n    $j = 0;\n    $flag = 0;\n    while ($i < $len) {\n        $j = 0;\n        while ($j < $len) {\n            if ($arr[$i] == $arr[$j]) {\n                $flag++;\n            }\n            $j++;\n        }\n        $i++;\n    }\n    if ($flag == $len) {\n        return \"All the given arrays have equal length\";\n    } else {\n        return \"All the given arrays have not equal length\";\n    }\n}\n\n$Input = array(\"array\" => \"1,2,3,4,5,6,7,8,9,10\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "All the given arrays have equal length\nWarning: Undefined array key \"array\" in /tmp/tmp25khbzzi.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmp25khbzzi.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25khbzzi.php:33\nStack trace:\n#0 /tmp/tmp25khbzzi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp25khbzzi.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    $equal = true;\n    foreach ($arrays as $array) {\n        if ($length != strlen($array)) {\n            $equal = false;\n            break;\n        }\n    }\n    return $equal;\n}\necho get_equal(\"abc,bcd,cde\");\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpraa5ehap.php:4\nStack trace:\n#0 /tmp/tmpraa5ehap.php(4): explode(',', Array)\n#1 /tmp/tmpraa5ehap.php(17): get_equal(Array)\n#2 /tmp/tmpraa5ehap.php(21): candidate(Array)\n#3 /tmp/tmpraa5ehap.php(26): test()\n#4 {main}\n  thrown in /tmp/tmpraa5ehap.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $result = true;\n    for($i = 0; $i < $length; $i++) {\n        if(count($Input[$i]) != $length) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n$Input = [[1,2,3], [1,2,3], [1,2,3]];\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplohhn0aa.php:21\nStack trace:\n#0 /tmp/tmplohhn0aa.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplohhn0aa.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $equal = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != count($Input[$i + 1])) {\n            $equal = false;\n        }\n    }\n    return $equal;\n}\n$Input = array(\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4)\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nWarning: Undefined array key 4 in /tmp/tmp5ybo33qq.php on line 7\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmp5ybo33qq.php:7\nStack trace:\n#0 /tmp/tmp5ybo33qq.php(19): get_equal(Array)\n#1 {main}\n  thrown in /tmp/tmp5ybo33qq.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $result = true;\n    $length = strlen($Input[0]);\n    for ($i = 1; $i < count($Input); $i++) {\n        if (strlen($Input[$i]) != $length) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n$Input = array(\"abc\", \"def\", \"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpdop79v63.php:5\nStack trace:\n#0 /tmp/tmpdop79v63.php(17): get_equal(Array)\n#1 /tmp/tmpdop79v63.php(21): candidate(Array)\n#2 /tmp/tmpdop79v63.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpdop79v63.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $array_length = array_map('count', $Input);\n    $array_length = array_unique($array_length);\n    if (count($array_length) == 1) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n$Input = array(\n    array(1, 2, 3, 4),\n    array(5, 6, 7, 8),\n    array(9, 10, 11, 12),\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3fuvyrby.php:23\nStack trace:\n#0 /tmp/tmp3fuvyrby.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3fuvyrby.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    $arr5 = explode(\",\", $Input['array5']);\n    $arr6 = explode(\",\", $Input['array6']);\n    $arr7 = explode(\",\", $Input['array7']);\n    $arr8 = explode(\",\", $Input['array8']);\n    $arr9 = explode(\",\", $Input['array9']);\n    $arr10 = explode(\",\", $Input['array10']);\n    $arr11 = explode(\",\", $Input['array11']);\n    $arr12 = explode(\",\", $Input['array12']);\n    $arr13 = explode(\",\", $Input['array13']);\n    $arr14 = explode(\",\", $Input['array14']);\n    $arr15 = explode(\",\", $Input['array15']);\n    $arr16 = explode(\",\", $Input['array16']);\n    $arr17 = explode(\",\", $Input['array17']);\n    $arr18 = explode(\",\", $Input['array18']);\n    $arr19 = explode(\",\", $Input['array19']);\n    $arr20 = explode(\",\", $Input['array20']);\n    $arr21 = explode(\",\", $Input['array21']);\n    $arr22 = explode(\",\", $Input['array22']);\n    $arr23 = explode(\",\", $Input['array23']);\n    $arr24 = explode(\",\", $Input['array24']);\n    $arr25 = explode(\",\", $Input['array25']);\n    $arr26 = explode(\",\", $Input['array26']);\n    $arr27 = explode(\",\", $Input['array27']);\n    $arr28 = explode(\",\", $Input['array28']);\n    $arr29 = explode(\",\", $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoowhlxww.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $len = strlen($Input[0]);\n    for($i = 0; $i < $count; $i++) {\n        if(strlen($Input[$i]) != $len) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\", \"abcd\", \"ab\", \"abcde\");\n$result = get_equal($Input);\nif($result) {\n    echo \"All the given arrays have equal length.\";\n} else {\n    echo \"All the given arrays have not equal length.\";\n}\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "All the given arrays have not equal length.\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpwsl1kwhq.php:5\nStack trace:\n#0 /tmp/tmpwsl1kwhq.php(21): get_equal(Array)\n#1 /tmp/tmpwsl1kwhq.php(25): candidate(Array)\n#2 /tmp/tmpwsl1kwhq.php(30): test()\n#3 {main}\n  thrown in /tmp/tmpwsl1kwhq.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input[0]);\n    for ($i = 0; $i < count($Input); $i++) {\n        if (count($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4)\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $equal = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != $length) {\n            $equal = false;\n            break;\n        }\n    }\n    return $equal;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpau798yy5.php:20\nStack trace:\n#0 /tmp/tmpau798yy5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpau798yy5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $count = 0;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) == $length) {\n            $count++;\n        }\n    }\n    if ($count == $length) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n$Input = array(array(1, 2, 3, 4), array(1, 2, 3, 4), array(1, 2, 3, 4));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "false\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuhi1l3z9.php:24\nStack trace:\n#0 /tmp/tmpuhi1l3z9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuhi1l3z9.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $count = 0;\n    for($i = 0; $i < $length; $i++) {\n        $count = count($Input[$i]);\n        for($j = 0; $j < $length; $j++) {\n            if($count == count($Input[$j])) {\n                $result = \"true\";\n            }\n            else {\n                $result = \"false\";\n                break;\n            }\n        }\n    }\n    return $result;\n}\n$Input = array(array(1,2,3,4),array(1,2,3,4),array(1,2,3,4));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "true\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7gaxkil.php:27\nStack trace:\n#0 /tmp/tmpj7gaxkil.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj7gaxkil.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\" \", $Input[0]);\n    $arr1 = explode(\" \", $Input[1]);\n    $arr2 = explode(\" \", $Input[2]);\n    $arr3 = explode(\" \", $Input[3]);\n    $arr4 = explode(\" \", $Input[4]);\n    if (count($arr) == count($arr1) && count($arr1) == count($arr2) && count($arr2) == count($arr3) && count($arr3) == count($arr4)) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpwtd2bggr.php:4\nStack trace:\n#0 /tmp/tmpwtd2bggr.php(4): explode(' ', Array)\n#1 /tmp/tmpwtd2bggr.php(17): get_equal(Array)\n#2 /tmp/tmpwtd2bggr.php(21): candidate(Array)\n#3 /tmp/tmpwtd2bggr.php(26): test()\n#4 {main}\n  thrown in /tmp/tmpwtd2bggr.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    $arr5 = explode(\",\", $Input['array5']);\n    $arr6 = explode(\",\", $Input['array6']);\n    $arr7 = explode(\",\", $Input['array7']);\n    $arr8 = explode(\",\", $Input['array8']);\n    $arr9 = explode(\",\", $Input['array9']);\n    $arr10 = explode(\",\", $Input['array10']);\n    $arr11 = explode(\",\", $Input['array11']);\n    $arr12 = explode(\",\", $Input['array12']);\n    $arr13 = explode(\",\", $Input['array13']);\n    $arr14 = explode(\",\", $Input['array14']);\n    $arr15 = explode(\",\", $Input['array15']);\n    $arr16 = explode(\",\", $Input['array16']);\n    $arr17 = explode(\",\", $Input['array17']);\n    $arr18 = explode(\",\", $Input['array18']);\n    $arr19 = explode(\",\", $Input['array19']);\n    $arr20 = explode(\",\", $Input['array20']);\n    $arr21 = explode(\",\", $Input['array21']);\n    $arr22 = explode(\",\", $Input['array22']);\n    $arr23 = explode(\",\", $Input['array23']);\n    $arr24 = explode(\",\", $Input['array24']);\n    $arr25 = explode(\",\", $Input['array25']);\n    $arr26 = explode(\",\", $Input['array26']);\n    $arr27 = explode(\",\", $Input['array27']);\n    $arr28 = explode(\",\", $Input['array28']);\n    $arr29 = explode(\",\", $Input['array29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpoowhlxww.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input[0]);\n    for($i=1;$i<count($Input);$i++){\n        if(count($Input[$i])!=$length){\n            return false;\n        }\n    }\n    return true;\n}\n$Input=array(array(1,2,3),array(1,2,3),array(1,2,3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $result = true;\n    for ($i = 0; $i < $count; $i++) {\n        if ($i == 0) {\n            $length = count($Input[$i]);\n        } else {\n            if ($length != count($Input[$i])) {\n                $result = false;\n                break;\n            }\n        }\n    }\n    return $result;\n}\n\n$Input = array(\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n    array(1, 2, 3, 4, 5),\n);\n\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    $flag = 1;\n    for($i=1; $i<count($arrays); $i++) {\n        if(strlen($arrays[$i]) != $length) {\n            $flag = 0;\n            break;\n        }\n    }\n    if($flag == 1) {\n        echo \"All arrays are equal\";\n    } else {\n        echo \"All arrays are not equal\";\n    }\n}\n\n$Input = \"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\" in /tmp/tmpjq4k9ynw.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input['arrays']);\n    $length = strlen($arrays[0]);\n    $result = \"true\";\n    for ($i = 1; $i < count($arrays); $i++) {\n        if ($length != strlen($arrays[$i])) {\n            $result = \"false\";\n            break;\n        }\n    }\n    return $result;\n}\n\n$Input = array(\"arrays\" => \"abcd,efgh,ijkl\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "true\nWarning: Undefined array key \"arrays\" in /tmp/tmpnhl4k0xx.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpnhl4k0xx.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhl4k0xx.php:23\nStack trace:\n#0 /tmp/tmpnhl4k0xx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpnhl4k0xx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $count = 0;\n    for($i = 0; $i < $length; $i++) {\n        if(count($Input[$i]) == $length) {\n            $count++;\n        }\n    }\n    if($count == $length) {\n        echo \"All arrays are equal\";\n    } else {\n        echo \"All arrays are not equal\";\n    }\n}\n$Input = array(array(1,2,3),array(4,5,6),array(7,8,9));\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "All arrays are equalAll arrays are not equal\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1foif1b.php:24\nStack trace:\n#0 /tmp/tmpb1foif1b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpb1foif1b.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n\t$arrays = explode(\",\", $Input[0]);\n\t$length = strlen($arrays[0]);\n\tfor ($i = 1; $i < count($arrays); $i++) {\n\t\tif (strlen($arrays[$i]) != $length) {\n\t\t\treturn \"False\";\n\t\t}\n\t}\n\treturn \"True\";\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpvsd23g7g.php:4\nStack trace:\n#0 /tmp/tmpvsd23g7g.php(4): explode(',', Array)\n#1 /tmp/tmpvsd23g7g.php(15): get_equal(Array)\n#2 /tmp/tmpvsd23g7g.php(19): candidate(Array)\n#3 /tmp/tmpvsd23g7g.php(24): test()\n#4 {main}\n  thrown in /tmp/tmpvsd23g7g.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $count = 0;\n    for($i = 0; $i < $length; $i++) {\n        if(count($Input[$i]) == $length) {\n            $count++;\n        }\n    }\n    if($count == $length) {\n        echo \"All arrays are equal in length\";\n    }\n    else {\n        echo \"All arrays are not equal in length\";\n    }\n}\n$Input = array(\n    array(1,2,3,4),\n    array(1,2,3,4),\n    array(1,2,3,4),\n    array(1,2,3,4),\n);\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "All arrays are equal in lengthAll arrays are not equal in length\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc900demx.php:30\nStack trace:\n#0 /tmp/tmpc900demx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpc900demx.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $array = explode(\",\", $Input['array']);\n    $array1 = explode(\",\", $Input['array1']);\n    $array2 = explode(\",\", $Input['array2']);\n    $array3 = explode(\",\", $Input['array3']);\n    $array4 = explode(\",\", $Input['array4']);\n    $array5 = explode(\",\", $Input['array5']);\n    $array6 = explode(\",\", $Input['array6']);\n    $array7 = explode(\",\", $Input['array7']);\n    $array8 = explode(\",\", $Input['array8']);\n    $array9 = explode(\",\", $Input['array9']);\n    $array10 = explode(\",\", $Input['array10']);\n    $array11 = explode(\",\", $Input['array11']);\n    $array12 = explode(\",\", $Input['array12']);\n    $array13 = explode(\",\", $Input['array13']);\n    $array14 = explode(\",\", $Input['array14']);\n    $array15 = explode(\",\", $Input['array15']);\n    $array16 = explode(\",\", $Input['array16']);\n    $array17 = explode(\",\", $Input['array17']);\n    $array18 = explode(\",\", $Input['array18']);\n    $array19 = explode(\",\", $Input['array19']);\n    $array20 = explode(\",\", $Input['array20']);\n    $array21 = explode(\",\", $Input['array21']);\n    $array22 = explode(\",\", $Input['array22']);\n    $array23 = explode(\",\", $Input['array23']);\n    $array24 = explode(\",\", $Input['array24']);\n    $array25 = explode(\",\", $Input['array25']);\n    $array26 = explode(\",\", $Input['array26']);\n    $array27 = explode(\",\", $Input['array27']);\n    $array28 = explode(\",\", $Input['array28']);\n    $array29 = explode(\",\", $Input['array29']);\n    $array\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpkd61ikfq.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\" \", $Input[1]);\n    $length = strlen($arrays[0]);\n    foreach($arrays as $array) {\n        if(strlen($array) != $length) {\n            echo \"false\";\n            return;\n        }\n    }\n    echo \"true\";\n}\n$Input = \"5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\";\nget_equal(explode(\"\\n\", $Input));\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "true\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpn5vayztn.php:4\nStack trace:\n#0 /tmp/tmpn5vayztn.php(4): explode(' ', Array)\n#1 /tmp/tmpn5vayztn.php(22): get_equal(Array)\n#2 /tmp/tmpn5vayztn.php(26): candidate(Array)\n#3 /tmp/tmpn5vayztn.php(31): test()\n#4 {main}\n  thrown in /tmp/tmpn5vayztn.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = strlen($Input[0]);\n    for ($i = 1; $i < count($Input); $i++) {\n        if (strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array('abc', 'def', 'ghi', 'jkl');\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpjn5i_l0h.php:4\nStack trace:\n#0 /tmp/tmpjn5i_l0h.php(15): get_equal(Array)\n#1 /tmp/tmpjn5i_l0h.php(19): candidate(Array)\n#2 /tmp/tmpjn5i_l0h.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpjn5i_l0h.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    $result = \"true\";\n    for ($i = 0; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            $result = \"false\";\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpotyle0mg.php:4\nStack trace:\n#0 /tmp/tmpotyle0mg.php(4): explode(',', Array)\n#1 /tmp/tmpotyle0mg.php(17): get_equal(Array)\n#2 /tmp/tmpotyle0mg.php(21): candidate(Array)\n#3 /tmp/tmpotyle0mg.php(26): test()\n#4 {main}\n  thrown in /tmp/tmpotyle0mg.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    $arr3 = explode(\",\", $Input['array3']);\n    $arr4 = explode(\",\", $Input['array4']);\n    if (count($arr) == count($arr1) && count($arr) == count($arr2) && count($arr) == count($arr3) && count($arr) == count($arr4)) {\n        return \"All arrays are equal\";\n    } else {\n        return \"All arrays are not equal\";\n    }\n}\n\n$Input = array(\"array\" => \"1,2,3,4,5\", \"array1\" => \"1,2,3,4,5\", \"array2\" => \"1,2,3,4,5\", \"array3\" => \"1,2,3,4,5\", \"array4\" => \"1,2,3,4,5\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "All arrays are equal\nWarning: Undefined array key \"array\" in /tmp/tmpyjezdky_.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpyjezdky_.php on line 4\n\nWarning: Undefined array key \"array1\" in /tmp/tmpyjezdky_.php on line 5\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpyjezdky_.php on line 5\n\nWarning: Undefined array key \"array2\" in /tmp/tmpyjezdky_.php on line 6\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpyjezdky_.php on line 6\n\nWarning: Undefined array key \"array3\" in /tmp/tmpyjezdky_.php on line 7\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpyjezdky_.php on line 7\n\nWarning: Undefined array key \"array4\" in /tmp/tmpyjezdky_.php on line 8\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpyjezdky_.php on line 8\n\nFatal err",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = count($arrays);\n    $equal = true;\n    for ($i = 0; $i < $length; $i++) {\n        $arrays[$i] = explode(\" \", $arrays[$i]);\n        if (count($arrays[$i]) != count($arrays[0])) {\n            $equal = false;\n        }\n    }\n    return $equal;\n}\n\n$Input = \"1 2 3 4,5 6 7 8,9 10 11 12\";\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpzjbdyov5.php:4\nStack trace:\n#0 /tmp/tmpzjbdyov5.php(4): explode(',', Array)\n#1 /tmp/tmpzjbdyov5.php(19): get_equal(Array)\n#2 /tmp/tmpzjbdyov5.php(23): candidate(Array)\n#3 /tmp/tmpzjbdyov5.php(28): test()\n#4 {main}\n  thrown in /tmp/tmpzjbdyov5.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input['arrays']);\n    $length = strlen($arrays[0]);\n    $result = \"true\";\n    for ($i = 1; $i < count($arrays); $i++) {\n        if ($length != strlen($arrays[$i])) {\n            $result = \"false\";\n            break;\n        }\n    }\n    return $result;\n}\n\n$Input = array(\"arrays\" => \"abc,def,ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "true\nWarning: Undefined array key \"arrays\" in /tmp/tmpdx4rcfhf.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpdx4rcfhf.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdx4rcfhf.php:23\nStack trace:\n#0 /tmp/tmpdx4rcfhf.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdx4rcfhf.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\necho get_equal(\"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \")\" in /tmp/tmpagmt1lvv.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $result = array();\n    for($i=0;$i<$count;$i++) {\n        $result[$i] = count($Input[$i]);\n    }\n    $count_result = count($result);\n    for($i=0;$i<$count_result;$i++) {\n        if($result[$i] != $result[$i+1]) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(array(1,2,3),array(1,2,3),array(1,2,3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nWarning: Undefined array key 3 in /tmp/tmpvf7c5otl.php on line 11\n\nWarning: Undefined array key 2 in /tmp/tmpvf7c5otl.php on line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvf7c5otl.php:24\nStack trace:\n#0 /tmp/tmpvf7c5otl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvf7c5otl.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $length = strlen($arr[0]);\n    for ($i = 1; $i < count($arr); $i++) {\n        if (strlen($arr[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$Input = array(\"array\" => \"abcd,efgh,ijkl\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1\nWarning: Undefined array key \"array\" in /tmp/tmpyxszg6rt.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpyxszg6rt.php on line 4\n\nWarning: Undefined array key \"array\" in /tmp/tmpyxszg6rt.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmpyxszg6rt.php on line 4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxszg6rt.php:22\nStack trace:\n#0 /tmp/tmpyxszg6rt.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyxszg6rt.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $array = explode(\" \", $Input[1]);\n    $length = count($array);\n    for ($i = 2; $i < count($Input); $i++) {\n        $array = explode(\" \", $Input[$i]);\n        if (count($array) != $length) {\n            echo \"false\";\n            return;\n        }\n    }\n    echo \"true\";\n}\n$Input = array(\"5\", \"1 2 3 4 5\", \"1 2 3 4 5\", \"1 2 3 4 5\", \"1 2 3 4 5\", \"1 2 3 4 5\");\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "true\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpzm_nvw7i.php:4\nStack trace:\n#0 /tmp/tmpzm_nvw7i.php(4): explode(' ', Array)\n#1 /tmp/tmpzm_nvw7i.php(18): get_equal(Array)\n#2 /tmp/tmpzm_nvw7i.php(22): candidate(Array)\n#3 /tmp/tmpzm_nvw7i.php(27): test()\n#4 {main}\n  thrown in /tmp/tmpzm_nvw7i.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $result = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != count($Input[$i + 1])) {\n            $result = false;\n        }\n    }\n    return $result;\n}\n$Input = array(array(1, 2, 3), array(1, 2, 3), array(1, 2, 3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nWarning: Undefined array key 3 in /tmp/tmpov_4lvrm.php on line 7\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmpov_4lvrm.php:7\nStack trace:\n#0 /tmp/tmpov_4lvrm.php(14): get_equal(Array)\n#1 {main}\n  thrown in /tmp/tmpov_4lvrm.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return \"false\";\n        }\n    }\n    return \"true\";\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpnp7ujxrw.php:4\nStack trace:\n#0 /tmp/tmpnp7ujxrw.php(4): explode(',', Array)\n#1 /tmp/tmpnp7ujxrw.php(15): get_equal(Array)\n#2 /tmp/tmpnp7ujxrw.php(19): candidate(Array)\n#3 /tmp/tmpnp7ujxrw.php(24): test()\n#4 {main}\n  thrown in /tmp/tmpnp7ujxrw.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $equal = true;\n    for($i = 0; $i < $length; $i++) {\n        if(count($Input[$i]) != count($Input[$i+1])) {\n            $equal = false;\n            break;\n        }\n    }\n    return $equal;\n}\n\n$Input = array(\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4)\n);\n\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nWarning: Undefined array key 4 in /tmp/tmp527kmtxh.php on line 7\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmp527kmtxh.php:7\nStack trace:\n#0 /tmp/tmp527kmtxh.php(22): get_equal(Array)\n#1 {main}\n  thrown in /tmp/tmp527kmtxh.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    $result = \"true\";\n    foreach ($arrays as $array) {\n        if (strlen($array) != $length) {\n            $result = \"false\";\n            break;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmp778tqe_v.php:4\nStack trace:\n#0 /tmp/tmp778tqe_v.php(4): explode(',', Array)\n#1 /tmp/tmp778tqe_v.php(17): get_equal(Array)\n#2 /tmp/tmp778tqe_v.php(21): candidate(Array)\n#3 /tmp/tmp778tqe_v.php(26): test()\n#4 {main}\n  thrown in /tmp/tmp778tqe_v.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $equal = true;\n    for($i=0; $i<$length; $i++) {\n        if(count($Input[$i]) != count($Input[$i+1])) {\n            $equal = false;\n        }\n    }\n    return $equal;\n}\n$Input = array(array(1,2,3),array(1,2,3),array(1,2,3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nWarning: Undefined array key 3 in /tmp/tmp10j6wt5k.php on line 7\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmp10j6wt5k.php:7\nStack trace:\n#0 /tmp/tmp10j6wt5k.php(14): get_equal(Array)\n#1 {main}\n  thrown in /tmp/tmp10j6wt5k.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['array']);\n    $arr1 = explode(\",\", $Input['array1']);\n    $arr2 = explode(\",\", $Input['array2']);\n    if (count($arr) == count($arr1) && count($arr1) == count($arr2)) {\n        return \"All arrays are equal\";\n    } else {\n        return \"All arrays are not equal\";\n    }\n}\n\n$Input = array(\"array\" => \"1,2,3,4,5\", \"array1\" => \"1,2,3,4,5\", \"array2\" => \"1,2,3,4,5\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "All arrays are equal\nWarning: Undefined array key \"array\" in /tmp/tmprv79ib1y.php on line 4\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmprv79ib1y.php on line 4\n\nWarning: Undefined array key \"array1\" in /tmp/tmprv79ib1y.php on line 5\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmprv79ib1y.php on line 5\n\nWarning: Undefined array key \"array2\" in /tmp/tmprv79ib1y.php on line 6\n\nDeprecated: explode(): Passing null to parameter #2 ($string) of type string is deprecated in /tmp/tmprv79ib1y.php on line 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprv79ib1y.php:21\nStack trace:\n#0 /tmp/tmprv79ib1y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprv79ib1y.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3)\n);\n$result = get_equal($Input);\nif ($result) {\n    echo \"All the given arrays have equal length.\";\n} else {\n    echo \"All the given arrays have not equal length.\";\n}\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "All the given arrays have equal length.\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsemmzshj.php:28\nStack trace:\n#0 /tmp/tmpsemmzshj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsemmzshj.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $len = strlen($Input[0]);\n    for($i = 1; $i < $count; $i++) {\n        if(strlen($Input[$i]) != $len) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abcd\", \"abcd\", \"abcd\");\n$result = get_equal($Input);\necho $result;\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpoc5s16xn.php:5\nStack trace:\n#0 /tmp/tmpoc5s16xn.php(17): get_equal(Array)\n#1 /tmp/tmpoc5s16xn.php(21): candidate(Array)\n#2 /tmp/tmpoc5s16xn.php(26): test()\n#3 {main}\n  thrown in /tmp/tmpoc5s16xn.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\" \", $Input[0]);\n    $arr1 = explode(\" \", $Input[1]);\n    $arr2 = explode(\" \", $Input[2]);\n    if (count($arr) == count($arr1) && count($arr1) == count($arr2)) {\n        echo \"true\";\n    } else {\n        echo \"false\";\n    }\n}\n$Input = array(\"1 2 3 4 5\", \"1 2 3 4 5\", \"1 2 3 4 5\");\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "true\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpumssqiwf.php:4\nStack trace:\n#0 /tmp/tmpumssqiwf.php(4): explode(' ', Array)\n#1 /tmp/tmpumssqiwf.php(16): get_equal(Array)\n#2 /tmp/tmpumssqiwf.php(20): candidate(Array)\n#3 /tmp/tmpumssqiwf.php(25): test()\n#4 {main}\n  thrown in /tmp/tmpumssqiwf.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $array = explode(\",\", $Input['array']);\n    $array1 = explode(\",\", $Input['array1']);\n    $array2 = explode(\",\", $Input['array2']);\n    $array3 = explode(\",\", $Input['array3']);\n    $array4 = explode(\",\", $Input['array4']);\n    $array5 = explode(\",\", $Input['array5']);\n    $array6 = explode(\",\", $Input['array6']);\n    $array7 = explode(\",\", $Input['array7']);\n    $array8 = explode(\",\", $Input['array8']);\n    $array9 = explode(\",\", $Input['array9']);\n    $array10 = explode(\",\", $Input['array10']);\n    $array11 = explode(\",\", $Input['array11']);\n    $array12 = explode(\",\", $Input['array12']);\n    $array13 = explode(\",\", $Input['array13']);\n    $array14 = explode(\",\", $Input['array14']);\n    $array15 = explode(\",\", $Input['array15']);\n    $array16 = explode(\",\", $Input['array16']);\n    $array17 = explode(\",\", $Input['array17']);\n    $array18 = explode(\",\", $Input['array18']);\n    $array19 = explode(\",\", $Input['array19']);\n    $array20 = explode(\",\", $Input['array20']);\n    $array21 = explode(\",\", $Input['array21']);\n    $array22 = explode(\",\", $Input['array22']);\n    $array23 = explode(\",\", $Input['array23']);\n    $array24 = explode(\",\", $Input['array24']);\n    $array25 = explode(\",\", $Input['array25']);\n    $array26 = explode(\",\", $Input['array26']);\n    $array27 = explode(\",\", $Input['array27']);\n    $array28 = explode(\",\", $Input['array28']);\n    $array29 = explode(\",\", $Input['array29']);\n    $array\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpkd61ikfq.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $result = array_unique(array_map('count', $Input));\n    if (count($result) === 1) {\n        echo \"All arrays are equal\";\n    } else {\n        echo \"All arrays are not equal\";\n    }\n}\n$Input = array(\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n);\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "All arrays are equalAll arrays are equal\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7_xasw2.php:23\nStack trace:\n#0 /tmp/tmpa7_xasw2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpa7_xasw2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $result = [];\n    $length = count($Input);\n    for ($i = 0; $i < $length; $i++) {\n        $result[$i] = count($Input[$i]);\n    }\n    $result = array_unique($result);\n    if (count($result) == 1) {\n        return \"All arrays are equal\";\n    } else {\n        return \"All arrays are not equal\";\n    }\n}\n$Input = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "All arrays are equal\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3sy8d6v.php:23\nStack trace:\n#0 /tmp/tmpy3sy8d6v.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpy3sy8d6v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arr = explode(\",\", $Input['arr']);\n    $arr1 = explode(\",\", $Input['arr1']);\n    $arr2 = explode(\",\", $Input['arr2']);\n    $arr3 = explode(\",\", $Input['arr3']);\n    $arr4 = explode(\",\", $Input['arr4']);\n    $arr5 = explode(\",\", $Input['arr5']);\n    $arr6 = explode(\",\", $Input['arr6']);\n    $arr7 = explode(\",\", $Input['arr7']);\n    $arr8 = explode(\",\", $Input['arr8']);\n    $arr9 = explode(\",\", $Input['arr9']);\n    $arr10 = explode(\",\", $Input['arr10']);\n    $arr11 = explode(\",\", $Input['arr11']);\n    $arr12 = explode(\",\", $Input['arr12']);\n    $arr13 = explode(\",\", $Input['arr13']);\n    $arr14 = explode(\",\", $Input['arr14']);\n    $arr15 = explode(\",\", $Input['arr15']);\n    $arr16 = explode(\",\", $Input['arr16']);\n    $arr17 = explode(\",\", $Input['arr17']);\n    $arr18 = explode(\",\", $Input['arr18']);\n    $arr19 = explode(\",\", $Input['arr19']);\n    $arr20 = explode(\",\", $Input['arr20']);\n    $arr21 = explode(\",\", $Input['arr21']);\n    $arr22 = explode(\",\", $Input['arr22']);\n    $arr23 = explode(\",\", $Input['arr23']);\n    $arr24 = explode(\",\", $Input['arr24']);\n    $arr25 = explode(\",\", $Input['arr25']);\n    $arr26 = explode(\",\", $Input['arr26']);\n    $arr27 = explode(\",\", $Input['arr27']);\n    $arr28 = explode(\",\", $Input['arr28']);\n    $arr29 = explode(\",\", $Input['arr29']);\n    $arr\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpwhfvc67q.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i = 1; $i < $count; $i++) {\n        if(strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\", \"def\", \"ghi\");\n$result = get_equal($Input);\necho $result;\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmp22v0yati.php:5\nStack trace:\n#0 /tmp/tmp22v0yati.php(17): get_equal(Array)\n#1 /tmp/tmp22v0yati.php(21): candidate(Array)\n#2 /tmp/tmp22v0yati.php(26): test()\n#3 {main}\n  thrown in /tmp/tmp22v0yati.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $equal = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != count($Input[$i + 1])) {\n            $equal = false;\n        }\n    }\n    return $equal;\n}\n\n$Input = array(\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n);\n\n$Input1 = array(\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4),\n    array(1, 2, 3, 4, 5),\n);\n\necho get_equal($Input) . \"\\n\";\necho get_equal($Input1) . \"\\n\";\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nWarning: Undefined array key 6 in /tmp/tmpi_392gc8.php on line 7\n\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, null given in /tmp/tmpi_392gc8.php:7\nStack trace:\n#0 /tmp/tmpi_392gc8.php(32): get_equal(Array)\n#1 {main}\n  thrown in /tmp/tmpi_392gc8.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(\",\", $Input);\n    $length = strlen($arrays[0]);\n    for ($i = 1; $i < count($arrays); $i++) {\n        if (strlen($arrays[$i]) != $length) {\n            return \"false\";\n        }\n    }\n    return \"true\";\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517552,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpnp7ujxrw.php:4\nStack trace:\n#0 /tmp/tmpnp7ujxrw.php(4): explode(',', Array)\n#1 /tmp/tmpnp7ujxrw.php(15): get_equal(Array)\n#2 /tmp/tmpnp7ujxrw.php(19): candidate(Array)\n#3 /tmp/tmpnp7ujxrw.php(24): test()\n#4 {main}\n  thrown in /tmp/tmpnp7ujxrw.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for($i = 1; $i < $count; $i++) {\n        if(strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\", \"def\", \"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123599,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpn_9d7023.php:5\nStack trace:\n#0 /tmp/tmpn_9d7023.php(16): get_equal(Array)\n#1 /tmp/tmpn_9d7023.php(20): candidate(Array)\n#2 /tmp/tmpn_9d7023.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpn_9d7023.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $count = 0;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) == $length) {\n            $count++;\n        }\n    }\n    if ($count == $length) {\n        return \"Equal\";\n    } else {\n        return \"Not Equal\";\n    }\n}\n$Input = array(array(1, 2, 3), array(1, 2, 3), array(1, 2, 3));\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "Equal\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfis69cp.php:24\nStack trace:\n#0 /tmp/tmpnfis69cp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpnfis69cp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $arrays = explode(',', $Input);\n    $length = count($arrays);\n    $result = true;\n    for ($i = 0; $i < $length; $i++) {\n        $arrays[$i] = explode(' ', $arrays[$i]);\n        if ($i > 0) {\n            if (count($arrays[$i]) != count($arrays[$i - 1])) {\n                $result = false;\n                break;\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpj_nv4yt0.php:4\nStack trace:\n#0 /tmp/tmpj_nv4yt0.php(4): explode(',', Array)\n#1 /tmp/tmpj_nv4yt0.php(20): get_equal(Array)\n#2 /tmp/tmpj_nv4yt0.php(24): candidate(Array)\n#3 /tmp/tmpj_nv4yt0.php(29): test()\n#4 {main}\n  thrown in /tmp/tmpj_nv4yt0.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $length = strlen($Input[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if (strlen($Input[$i]) != $length) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\"abc\", \"def\", \"ghi\");\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpw725mhq4.php:5\nStack trace:\n#0 /tmp/tmpw725mhq4.php(16): get_equal(Array)\n#1 /tmp/tmpw725mhq4.php(20): candidate(Array)\n#2 /tmp/tmpw725mhq4.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpw725mhq4.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input[0]);\n    for($i=1;$i<count($Input);$i++) {\n        if($length != count($Input[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n$Input = array(\n    array(1,2,3),\n    array(1,2,3),\n    array(1,2,3)\n);\necho get_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $len = count($Input);\n    $flag = 1;\n    for($i = 0; $i < $len; $i++) {\n        if(count($Input[$i]) != $len) {\n            $flag = 0;\n            break;\n        }\n    }\n    if($flag == 1) {\n        echo \"All arrays are equal\";\n    }\n    else {\n        echo \"All arrays are not equal\";\n    }\n}\n$Input = array(array(1,2,3),array(1,2,3),array(1,2,3));\nget_equal($Input);\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "All arrays are equalAll arrays are not equal\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23gdhizy.php:26\nStack trace:\n#0 /tmp/tmp23gdhizy.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp23gdhizy.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $length = count($Input);\n    $equal = true;\n    for ($i = 0; $i < $length; $i++) {\n        if (count($Input[$i]) != count($Input[$i + 1])) {\n            $equal = false;\n            break;\n        }\n    }\n    return $equal;\n}\n$Input = array(\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(1, 2, 3),\n    array(\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpym_e6te7.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find whether all the given arrays have equal length or not.\nfunction get_equal($Input) {\n    $count = count($Input);\n    $len = strlen($Input[0]);\n    for($i=1;$i<$count;$i++) {\n        if($len != strlen($Input[$i])) {\n            return \"false\";\n        }\n    }\n    return \"true\";\n}\n\nfunction candidate(...$args) {\n    return get_equal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(11, 22, 33), array(44, 55, 66))) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6, 7))) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2), array(3, 4))) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123600,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmpqg5ehvua.php:5\nStack trace:\n#0 /tmp/tmpqg5ehvua.php(15): get_equal(Array)\n#1 /tmp/tmpqg5ehvua.php(19): candidate(Array)\n#2 /tmp/tmpqg5ehvua.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpqg5ehvua.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_606_radian_degree",
  "language": "php",
  "prompt": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_606_radian_degree.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(90);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\n\necho radian_degree(180);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "3.1415926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\treturn $degree * (pi()/180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(30);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.5235987755983",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (M_PI / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(180);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "3.1415926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    return $degree * (pi()/180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n  return $degree * (M_PI / 180);\n}\n\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(30);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.5235987755983",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\treturn $degree * pi() / 180;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(180);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "3.1415926535898\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = ($degree * pi())/180;\n    return $radian;\n}\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = ($degree * pi())/180;\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(30);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.5235987755983",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\t$radian = $degree * (pi() / 180);\n\treturn $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n  return $degree * (pi() / 180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(30);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.5235987755983",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(180);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "3.1415926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(30);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.5235987755983",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\treturn $degree * (pi() / 180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(180);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "3.1415926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (M_PI / 180);\n    return $radian;\n}\n\necho radian_degree(30);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.5235987755983",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\n\necho radian_degree(180);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "3.1415926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\n\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (M_PI / 180);\n    return $radian;\n}\n\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(30);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.5235987755983",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(90);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(45);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(45);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(30);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.5235987755983",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\n\necho radian_degree(90);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\t$radian = $degree * (pi() / 180);\n\treturn $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * pi() / 180;\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    return $degree * (pi() / 180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (M_PI / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (M_PI / 180);\n    return $radian;\n}\n\necho radian_degree(45);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n  $radian = $degree * (pi()/180);\n  return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(180);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "3.1415926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\n$degree = 45;\necho \"The radian of $degree is \" . radian_degree($degree);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "The radian of 45 is 0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\t$radian = $degree * (pi() / 180);\n\treturn $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (M_PI / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(180);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "3.1415926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * pi() / 180;\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    return $degree * (pi() / 180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\treturn $degree * (pi() / 180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(180);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "3.1415926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (M_PI / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    return $degree * (M_PI / 180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(30);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.5235987755983",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n  return $degree * (M_PI / 180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    return $degree * (pi() / 180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (M_PI / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    return $degree * (pi() / 180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (M_PI / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = ($degree * pi())/180;\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\t$radian = $degree * (pi() / 180);\n\treturn $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\treturn $degree * (pi() / 180);\n}\n\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\treturn $degree * (pi() / 180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = ($degree * pi())/180;\n    return $radian;\n}\n\necho radian_degree(90);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\t$radian = $degree * (pi()/180);\n\treturn $radian;\n}\n\necho radian_degree(90);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (M_PI / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\t$radian = $degree * (pi()/180);\n\treturn $radian;\n}\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = ($degree * pi())/180;\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(45);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\t$radian = $degree * (pi() / 180);\n\treturn $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\t$radian = $degree * (pi() / 180);\n\treturn $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\t$radian = $degree * (pi()/180);\n\treturn $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    return $degree * (pi() / 180);\n}\n\necho radian_degree(90);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(30);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.5235987755983",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\n\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(45);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "0.78539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(90);\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    return $degree * (pi() / 180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(180);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "3.1415926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(180);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "3.1415926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (M_PI / 180);\n    return $radian;\n}\n\necho radian_degree(90);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "1.5707963267949",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n\treturn $degree * (pi()/180);\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510308,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n    $radian = $degree * (pi()/180);\n    return $radian;\n}\n\necho radian_degree(30);\nfunction candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123127,
      "stdout": "0.5235987755983",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
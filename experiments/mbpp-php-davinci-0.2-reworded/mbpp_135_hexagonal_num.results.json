{
  "name": "mbpp_135_hexagonal_num",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_135_hexagonal_num.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n*(2*$n-1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return ($n * (2 * $n - 1));\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return ($n * (2 * $n - 1));\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return ($n * (2 * $n - 1));\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\n$n = 1;\nwhile (true) {\n  $hex = hexagonal_num($n);\n  $tri = 0;\n  $pent = 0;\n  for ($i = 1; $i < $hex; $i++) {\n    if (is_triangular($i)) {\n      $tri = $i;\n    }\n    if (is_pentagonal($i)) {\n      $pent = $i;\n    }\n    if ($tri == $pent && $tri == $hex) {\n      echo $hex . \"\\n\";\n      exit;\n    }\n  }\n  $n++;\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122704,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function is_triangular() in /tmp/tmpvv8ze12a.php:13\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpvv8ze12a.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return ($n * (2 * $n - 1));\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n*(2*$n-1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n\treturn $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n  return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the nth hexagonal number.\nfunction hexagonal_num($n) {\n    return $n * (2 * $n - 1);\n}\n\nfunction candidate(...$args) {\n    return hexagonal_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 190) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 45) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 91) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510008,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
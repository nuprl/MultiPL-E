{
  "name": "mbpp_791_remove_nested",
  "language": "php",
  "prompt": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_791_remove_nested.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8)), 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35moljjt.php:21\nStack trace:\n#0 /tmp/tmp35moljjt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp35moljjt.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8h982qy.php:19\nStack trace:\n#0 /tmp/tmpc8h982qy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc8h982qy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $tup) {\n        if (!is_array($tup)) {\n            $result[] = $tup;\n        } else {\n            $result = array_merge($result, remove_nested($tup));\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, array(3, 4), 5, array(array(6, 7), 8), 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpged2i5c0.php:22\nStack trace:\n#0 /tmp/tmpged2i5c0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpged2i5c0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp064rt4h0.php:21\nStack trace:\n#0 /tmp/tmp064rt4h0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp064rt4h0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11, array(12, 13, 14)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n    [9] => 12\n    [10] => 13\n    [11] => 14\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpryc42l7p.php:21\nStack trace:\n#0 /tmp/tmpryc42l7p.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpryc42l7p.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n    [6] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgxiipa_f.php:20\nStack trace:\n#0 /tmp/tmpgxiipa_f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgxiipa_f.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\n$result = remove_nested($test_tup);\necho \"Original array: \";\necho \"<br>\";\nprint_r($test_tup);\necho \"<br>\";\necho \"After removing nested array: \";\necho \"<br>\";\nprint_r($result);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Original array: <br>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [4] => 7\n    [5] => 8\n    [6] => Array\n        (\n            [0] => 9\n            [1] => 10\n            [2] => 11\n        )\n\n)\n<br>After removing nested array: <br>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpim7hsoto.php:28\nStack trace:\n#0 /tmp/tmpim7hsoto.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpim7hsoto.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, array(16, 17, 18, 19, 20)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25s5rxh3.php:20\nStack trace:\n#0 /tmp/tmp25s5rxh3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp25s5rxh3.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $item) {\n        if (!is_array($item)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrjqjyw1.php:19\nStack trace:\n#0 /tmp/tmpbrjqjyw1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbrjqjyw1.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrjqjyw1.php:19\nStack trace:\n#0 /tmp/tmpbrjqjyw1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbrjqjyw1.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach($test_tup as $key => $value) {\n        if(!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8tdwpx12.php:19\nStack trace:\n#0 /tmp/tmp8tdwpx12.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8tdwpx12.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11), 12, 13);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 12\n    [8] => 13\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4jil7er3.php:22\nStack trace:\n#0 /tmp/tmp4jil7er3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4jil7er3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $element) {\n        if (is_array($element)) {\n            $result = array_merge($result, remove_nested($element));\n        } else {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf96dnfw4.php:20\nStack trace:\n#0 /tmp/tmpf96dnfw4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpf96dnfw4.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, array(9, 10, 11, 12, 13, 14, 15, array(16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206,\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpw8pv4dh1.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrjqjyw1.php:19\nStack trace:\n#0 /tmp/tmpbrjqjyw1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbrjqjyw1.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (!is_array($value)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, 7));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach($test_tup as $key => $value) {\n        if(!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10), 11, 12, 13, 14, 15);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [6] => 11\n    [7] => 12\n    [8] => 13\n    [9] => 14\n    [10] => 15\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshenr5l9.php:19\nStack trace:\n#0 /tmp/tmpshenr5l9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpshenr5l9.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $tup) {\n        if (!is_array($tup)) {\n            $result[] = $tup;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8)), 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 5\n    [4] => 6\n    [5] => 9\n    [6] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpftnozksk.php:21\nStack trace:\n#0 /tmp/tmpftnozksk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpftnozksk.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (!is_array($value)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgc0e0v6.php:22\nStack trace:\n#0 /tmp/tmpvgc0e0v6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvgc0e0v6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $res = array();\n    foreach ($test_tup as $val) {\n        if (!is_array($val)) {\n            $res[] = $val;\n        }\n    }\n    return $res;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            unset($test_tup[$key]);\n        }\n    }\n    return $test_tup;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xhqnyjf.php:18\nStack trace:\n#0 /tmp/tmp2xhqnyjf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2xhqnyjf.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\n$result = remove_nested($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3z0bkbu8.php:22\nStack trace:\n#0 /tmp/tmp3z0bkbu8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3z0bkbu8.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20), 21, 22, 23, 24, 25, 26, 27, 28, 29, 30);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [11] => 21\n    [12] => 22\n    [13] => 23\n    [14] => 24\n    [15] => 25\n    [16] => 26\n    [17] => 27\n    [18] => 28\n    [19] => 29\n    [20] => 30\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6brztibn.php:20\nStack trace:\n#0 /tmp/tmp6brztibn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6brztibn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7w0htjp.php:21\nStack trace:\n#0 /tmp/tmpr7w0htjp.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpr7w0htjp.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10), 11, 12, 13, 14, 15, array(16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 11\n    [7] => 12\n    [8] => 13\n    [9] => 14\n    [10] => 15\n    [11] => 16\n    [12] => 17\n    [13] => 18\n    [14] => 19\n    [15] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu6kuaell.php:21\nStack trace:\n#0 /tmp/tmpu6kuaell.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpu6kuaell.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2evblnl1.php:21\nStack trace:\n#0 /tmp/tmp2evblnl1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2evblnl1.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $item) {\n        if (!is_array($item)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 5\n    [4] => 6\n    [5] => 7\n    [6] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl53i4kq9.php:21\nStack trace:\n#0 /tmp/tmpl53i4kq9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpl53i4kq9.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            unset($test_tup[$key]);\n        }\n    }\n    return $test_tup;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xhqnyjf.php:18\nStack trace:\n#0 /tmp/tmp2xhqnyjf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2xhqnyjf.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), array(7, 8, 9));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2mfl_y8.php:21\nStack trace:\n#0 /tmp/tmpb2mfl_y8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpb2mfl_y8.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_nb92rzh.php:22\nStack trace:\n#0 /tmp/tmp_nb92rzh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_nb92rzh.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8, array(9, 10, 11, 12)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpexumppnr.php:21\nStack trace:\n#0 /tmp/tmpexumppnr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpexumppnr.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $item) {\n        if (!is_array($item)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $new_tup = array();\n    foreach ($test_tup as $value) {\n        if (!is_array($value)) {\n            $new_tup[] = $value;\n        }\n    }\n    return $new_tup;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jhw4vw0.php:20\nStack trace:\n#0 /tmp/tmp8jhw4vw0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8jhw4vw0.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $new_tup = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $new_tup[$key] = $value;\n        }\n    }\n    return $new_tup;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuewaoue4.php:20\nStack trace:\n#0 /tmp/tmpuewaoue4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpuewaoue4.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20, array(21, 22, 23, 24, 25, 26, 27, 28, 29, 30, array(31, 32, 33, 34, 35, 36, 37, 38, 39, 40, array(41, 42, 43, 44, 45, 46, 47, 48, 49, 50, array(51, 52, 53, 54, 55, 56, 57, 58, 59, 60, array(61, 62, 63, 64, 65, 66, 67, 68, 69, 70, array(71, 72, 73, 74, 75, 76, 77, 78, 79, 80, array(81, 82, 83, 84, 85, 86, 87, 88, 89, 90, array(91, 92, 93, 94, 95, 96, 97, 98, 99, 100, array(101, 102, 103, 104, 105, 106, 107, 108, 109, 110, array(111, 112, 113, 114, 115, 116, 117, 118, 119, 120, array(121, 122, 123, 124, 125, 126, 127, 128, 129, 130, array(131, 132, 133, 134, 135, 136, 137, 138, 139, 140, array(141, 142, 143, 144, 145, 146, 147, 148, 149, 150, array(151, 152, 153, 154, 155, 156, 157, 158, 159, 160, array(161, 162, 163, 164, 165, 166, 167, 168, 169, 170, array(171, 172, 173, 174, 175, 176, 177, 178, 179, 180, array(181, 182, 183, 184, 185, 186, 187, 188, 189, 190, array(191, 192, 193,\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpt5ofyk07.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $item) {\n        if (!is_array($item)) {\n            $result[] = $item;\n        } else {\n            $result = array_merge($result, remove_nested($item));\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, array(11, 12, 13)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsia2rn5d.php:22\nStack trace:\n#0 /tmp/tmpsia2rn5d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsia2rn5d.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (!is_array($value)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 5\n    [4] => 6\n    [5] => 7\n    [6] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0_99jhv.php:21\nStack trace:\n#0 /tmp/tmps0_99jhv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmps0_99jhv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, array(9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpzc7hvpuo.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 5\n    [4] => 6\n    [5] => 7\n    [6] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0_99jhv.php:21\nStack trace:\n#0 /tmp/tmps0_99jhv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmps0_99jhv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        } else {\n            $result = array_merge($result, remove_nested($value));\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8, array(9, 10, 11, 12, array(13, 14, 15, 16))));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0estrns.php:21\nStack trace:\n#0 /tmp/tmpx0estrns.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx0estrns.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        } else {\n            $result = array_merge($result, remove_nested($value));\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz8fgajoj.php:21\nStack trace:\n#0 /tmp/tmpz8fgajoj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpz8fgajoj.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, array(16, 17, 18, 19, 20)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_rgbvcbi.php:21\nStack trace:\n#0 /tmp/tmp_rgbvcbi.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_rgbvcbi.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgt1i9pv.php:21\nStack trace:\n#0 /tmp/tmpcgt1i9pv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcgt1i9pv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach($test_tup as $tup) {\n        if(!is_array($tup)) {\n            $result[] = $tup;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5kufhg8d.php:19\nStack trace:\n#0 /tmp/tmp5kufhg8d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5kufhg8d.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, array(3, 4, array(5, 6, 7)), 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 8\n    [4] => 9\n    [5] => 6\n    [6] => 7\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5i2aq_0.php:22\nStack trace:\n#0 /tmp/tmpx5i2aq_0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpx5i2aq_0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4, array(5, 6, 7, array(8, 9, 10))));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn00zltlh.php:21\nStack trace:\n#0 /tmp/tmpn00zltlh.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpn00zltlh.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaiaub_8g.php:21\nStack trace:\n#0 /tmp/tmpaiaub_8g.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpaiaub_8g.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 5\n    [4] => 6\n    [5] => 7\n    [6] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpltlq0p7x.php:22\nStack trace:\n#0 /tmp/tmpltlq0p7x.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpltlq0p7x.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8h982qy.php:19\nStack trace:\n#0 /tmp/tmpc8h982qy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc8h982qy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3t6ukr73.php:22\nStack trace:\n#0 /tmp/tmp3t6ukr73.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3t6ukr73.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4, array(5, 6, 7)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4zxf1aax.php:21\nStack trace:\n#0 /tmp/tmp4zxf1aax.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp4zxf1aax.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10, array(11, 12, 13, 14, 15)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7o_emk96.php:21\nStack trace:\n#0 /tmp/tmp7o_emk96.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7o_emk96.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $new_tup = [];\n    foreach ($test_tup as $item) {\n        if (!is_array($item)) {\n            $new_tup[] = $item;\n        }\n    }\n    return $new_tup;\n}\n\n$test_tup = [1, [2, 3], 4, [5, 6], 7, 8, 9];\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 7\n    [3] => 8\n    [4] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0h5uzyg.php:19\nStack trace:\n#0 /tmp/tmpj0h5uzyg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj0h5uzyg.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8h982qy.php:19\nStack trace:\n#0 /tmp/tmpc8h982qy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc8h982qy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10, array(11, 12, 13, 14, 15)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7jzhhmv.php:22\nStack trace:\n#0 /tmp/tmpz7jzhhmv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpz7jzhhmv.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n    [6] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgxiipa_f.php:20\nStack trace:\n#0 /tmp/tmpgxiipa_f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgxiipa_f.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n    [6] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcx3903oe.php:19\nStack trace:\n#0 /tmp/tmpcx3903oe.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpcx3903oe.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $item) {\n        if (!is_array($item)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, 7));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            unset($test_tup[$key]);\n        }\n    }\n    return $test_tup;\n}\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8, array(9, 10, 11, 12, array(13, 14, 15, 16))));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9h6spcr_.php:18\nStack trace:\n#0 /tmp/tmp9h6spcr_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9h6spcr_.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0h5uzyg.php:19\nStack trace:\n#0 /tmp/tmpj0h5uzyg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj0h5uzyg.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0h5uzyg.php:19\nStack trace:\n#0 /tmp/tmpj0h5uzyg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj0h5uzyg.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $tup) {\n        if (!is_array($tup)) {\n            $result[] = $tup;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n    [5] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10, array(11, 12, 13, 14, 15)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7o_emk96.php:21\nStack trace:\n#0 /tmp/tmp7o_emk96.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7o_emk96.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehvkjgcj.php:22\nStack trace:\n#0 /tmp/tmpehvkjgcj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpehvkjgcj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $new_tup = array();\n    foreach($test_tup as $item) {\n        if(!is_array($item)) {\n            $new_tup[] = $item;\n        }\n    }\n    return $new_tup;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n    [5] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvi286v6.php:21\nStack trace:\n#0 /tmp/tmplvi286v6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplvi286v6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $element) {\n        if (is_array($element)) {\n            $result = array_merge($result, remove_nested($element));\n        } else {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, array(2, 3), array(array(4, 5), 6));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcclti4o7.php:21\nStack trace:\n#0 /tmp/tmpcclti4o7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcclti4o7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8h982qy.php:19\nStack trace:\n#0 /tmp/tmpc8h982qy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc8h982qy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $item) {\n        if (!is_array($item)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, array(3, 4), 5, array(6, 7, 8));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10), 11, 12, 13, 14, 15, array(16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 11\n    [7] => 12\n    [8] => 13\n    [9] => 14\n    [10] => 15\n    [11] => 16\n    [12] => 17\n    [13] => 18\n    [14] => 19\n    [15] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpupysxvi6.php:22\nStack trace:\n#0 /tmp/tmpupysxvi6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpupysxvi6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, array(16, 17, 18, 19, 20)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg5a7cdnc.php:21\nStack trace:\n#0 /tmp/tmpg5a7cdnc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpg5a7cdnc.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7w0htjp.php:21\nStack trace:\n#0 /tmp/tmpr7w0htjp.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpr7w0htjp.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3t6ukr73.php:22\nStack trace:\n#0 /tmp/tmp3t6ukr73.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3t6ukr73.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $new_tup = array();\n    foreach($test_tup as $key => $value) {\n        if(!is_array($value)) {\n            $new_tup[$key] = $value;\n        }\n    }\n    return $new_tup;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n    [6] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3a5ccti.php:19\nStack trace:\n#0 /tmp/tmpx3a5ccti.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpx3a5ccti.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, array(9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9lb0st4w.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppo_648fu.php:22\nStack trace:\n#0 /tmp/tmppo_648fu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppo_648fu.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach($test_tup as $key => $value) {\n        if(!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpok01ezex.php:19\nStack trace:\n#0 /tmp/tmpok01ezex.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpok01ezex.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, array(3, 4, array(5, 6, 7)), 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 8\n    [4] => 9\n    [5] => 6\n    [6] => 7\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4wzh31d.php:22\nStack trace:\n#0 /tmp/tmpo4wzh31d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpo4wzh31d.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8)), 9, 10);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1j_16xxy.php:22\nStack trace:\n#0 /tmp/tmp1j_16xxy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1j_16xxy.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtjax6of.php:19\nStack trace:\n#0 /tmp/tmpdtjax6of.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdtjax6of.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtjax6of.php:19\nStack trace:\n#0 /tmp/tmpdtjax6of.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdtjax6of.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $element) {\n        if (is_array($element)) {\n            $result = array_merge($result, remove_nested($element));\n        } else {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\n$result = remove_nested($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnv8fpifz.php:22\nStack trace:\n#0 /tmp/tmpnv8fpifz.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpnv8fpifz.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, array(14, 15, 16, array(17, 18, 19, 20))));\n$result = remove_nested($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9qnwb9hr.php:22\nStack trace:\n#0 /tmp/tmp9qnwb9hr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9qnwb9hr.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg5e6uiyc.php:19\nStack trace:\n#0 /tmp/tmpg5e6uiyc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpg5e6uiyc.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 5\n    [4] => 6\n    [5] => 10\n    [6] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7yvsoyz.php:21\nStack trace:\n#0 /tmp/tmpj7yvsoyz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpj7yvsoyz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, array(9, 10, 11, 12, 13, array(14, 15, 16, 17, 18, 19, 20, array(21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205,\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpgwmp8i8t.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5), 6, 7, 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [6] => 6\n    [7] => 7\n    [8] => 8\n    [9] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz9m86u7.php:19\nStack trace:\n#0 /tmp/tmpdz9m86u7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdz9m86u7.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzw8im50.php:21\nStack trace:\n#0 /tmp/tmpwzw8im50.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwzw8im50.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), array(array(5, 6), 7), 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ly_utb4.php:21\nStack trace:\n#0 /tmp/tmp7ly_utb4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7ly_utb4.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $new_tup = array();\n    foreach($test_tup as $val) {\n        if(!is_array($val)) {\n            $new_tup[] = $val;\n        }\n    }\n    return $new_tup;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\n$result = remove_nested($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), array(7, 8, 9));\n$result = remove_nested($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46kasmcu.php:22\nStack trace:\n#0 /tmp/tmp46kasmcu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp46kasmcu.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach($test_tup as $item) {\n        if(!is_array($item)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8, array(9, 10, 11, 12, array(13, 14, 15, 16))));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0gs9dmfa.php:22\nStack trace:\n#0 /tmp/tmp0gs9dmfa.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0gs9dmfa.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach($test_tup as $tup) {\n        if(!is_array($tup)) {\n            $result[] = $tup;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\n\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach($test_tup as $key => $value) {\n        if(!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10), 11, 12, 13, 14, 15);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [6] => 11\n    [7] => 12\n    [8] => 13\n    [9] => 14\n    [10] => 15\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshenr5l9.php:19\nStack trace:\n#0 /tmp/tmpshenr5l9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpshenr5l9.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp69zbf0x8.php:21\nStack trace:\n#0 /tmp/tmp69zbf0x8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp69zbf0x8.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgc0e0v6.php:22\nStack trace:\n#0 /tmp/tmpvgc0e0v6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvgc0e0v6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6x34s64b.php:21\nStack trace:\n#0 /tmp/tmp6x34s64b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6x34s64b.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1,2,3,4,5,6,7,8,9,10);\n$test_tup1 = array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10));\n$test_tup2 = array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10));\n$test_tup3 = array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10));\n$test_tup4 = array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10));\n$test_tup5 = array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,4,5,6,7,8,9,10),array(1,2,3,\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpsfx458p3.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, array(9, 10, 11, 12, 13, array(14, 15, 16, 17, 18, 19, 20))));\n$result = remove_nested($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoj2nbihv.php:23\nStack trace:\n#0 /tmp/tmpoj2nbihv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpoj2nbihv.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzw8im50.php:21\nStack trace:\n#0 /tmp/tmpwzw8im50.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwzw8im50.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaplwtntr.php:22\nStack trace:\n#0 /tmp/tmpaplwtntr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpaplwtntr.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, 7, 8));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 5\n    [4] => 6\n    [5] => 7\n    [6] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1q8k_zs6.php:21\nStack trace:\n#0 /tmp/tmp1q8k_zs6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1q8k_zs6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8h982qy.php:19\nStack trace:\n#0 /tmp/tmpc8h982qy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc8h982qy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (!is_array($value)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8, array(9, 10, 11, 12)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, array(7, 8, 9, 10, array(11, 12, 13, 14, 15, array(16, 17, 18, 19, 20))));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2zfbsanr.php:21\nStack trace:\n#0 /tmp/tmp2zfbsanr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2zfbsanr.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $val) {\n        if (!is_array($val)) {\n            $result[] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8), 9, 10);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 9\n    [5] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5oxwh50.php:20\nStack trace:\n#0 /tmp/tmpv5oxwh50.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpv5oxwh50.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $element) {\n        if (is_array($element)) {\n            $result = array_merge($result, remove_nested($element));\n        } else {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp575jzrx7.php:21\nStack trace:\n#0 /tmp/tmp575jzrx7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp575jzrx7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $val) {\n        if (!is_array($val)) {\n            $result[] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8h982qy.php:19\nStack trace:\n#0 /tmp/tmpc8h982qy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc8h982qy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach($test_tup as $key => $val) {\n        if(!is_array($val)) {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, array(16, 17, 18, 19, 20)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7wj8wmg.php:19\nStack trace:\n#0 /tmp/tmph7wj8wmg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph7wj8wmg.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\n$result = remove_nested($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0bp3_8_.php:23\nStack trace:\n#0 /tmp/tmpe0bp3_8_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpe0bp3_8_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n\t$result = array();\n\tforeach ($test_tup as $value) {\n\t\tif (!is_array($value)) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8, array(9, 10, 11, 12)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnban9hgb.php:22\nStack trace:\n#0 /tmp/tmpnban9hgb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpnban9hgb.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8), 9, 10);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2n9aeo76.php:21\nStack trace:\n#0 /tmp/tmp2n9aeo76.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2n9aeo76.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0h5uzyg.php:19\nStack trace:\n#0 /tmp/tmpj0h5uzyg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj0h5uzyg.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, array(3, 4), 5, array(array(6, 7), 8), 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 5\n    [4] => 6\n    [5] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5e9s6agn.php:22\nStack trace:\n#0 /tmp/tmp5e9s6agn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5e9s6agn.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0h5uzyg.php:19\nStack trace:\n#0 /tmp/tmpj0h5uzyg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj0h5uzyg.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaplwtntr.php:22\nStack trace:\n#0 /tmp/tmpaplwtntr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpaplwtntr.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7w0htjp.php:21\nStack trace:\n#0 /tmp/tmpr7w0htjp.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpr7w0htjp.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, array(16, 17, 18, 19, 20)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw761ht7o.php:22\nStack trace:\n#0 /tmp/tmpw761ht7o.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw761ht7o.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (!is_array($value)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10), 11, 12, 13, 14, 15);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 11\n    [6] => 12\n    [7] => 13\n    [8] => 14\n    [9] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $tup) {\n        if (!is_array($tup)) {\n            $result[] = $tup;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n    [5] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, 7));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [3] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4mym4m_.php:19\nStack trace:\n#0 /tmp/tmpd4mym4m_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpd4mym4m_.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11, array(12, 13, 14)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n    [9] => 12\n    [10] => 13\n    [11] => 14\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpryc42l7p.php:21\nStack trace:\n#0 /tmp/tmpryc42l7p.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpryc42l7p.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n\t$result = array();\n\tforeach($test_tup as $tup) {\n\t\tif(!is_array($tup)) {\n\t\t\t$result[] = $tup;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10), 11, 12, 13, 14, 15, array(16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 11\n    [7] => 12\n    [8] => 13\n    [9] => 14\n    [10] => 15\n    [11] => 16\n    [12] => 17\n    [13] => 18\n    [14] => 19\n    [15] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu6kuaell.php:21\nStack trace:\n#0 /tmp/tmpu6kuaell.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpu6kuaell.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrjqjyw1.php:19\nStack trace:\n#0 /tmp/tmpbrjqjyw1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbrjqjyw1.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $res = array();\n    foreach ($test_tup as $val) {\n        if (!is_array($val)) {\n            $res[] = $val;\n        }\n    }\n    return $res;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\n$res = remove_nested($test_tup);\nprint_r($res);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, array(1, 2, 3, 4, 5, 6));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92a3lhv6.php:19\nStack trace:\n#0 /tmp/tmp92a3lhv6.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp92a3lhv6.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $item) {\n        if (!is_array($item)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\n\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $item) {\n        if (!is_array($item)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\n$result = remove_nested($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1c2l77r.php:21\nStack trace:\n#0 /tmp/tmpk1c2l77r.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk1c2l77r.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqwrgkxie.php:20\nStack trace:\n#0 /tmp/tmpqwrgkxie.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqwrgkxie.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2evblnl1.php:21\nStack trace:\n#0 /tmp/tmp2evblnl1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2evblnl1.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $item) {\n        if (!is_array($item)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)), 11);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 5\n    [4] => 6\n    [5] => 11\n    [6] => 8\n    [7] => 9\n    [8] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvgmt22_.php:21\nStack trace:\n#0 /tmp/tmpyvgmt22_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpyvgmt22_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20, array(21, 22, 23, 24, 25, 26, 27, 28, 29, 30, array(31, 32, 33, 34, 35, 36, 37, 38, 39, 40, array(41, 42, 43, 44, 45, 46, 47, 48, 49, 50, array(51, 52, 53, 54, 55, 56, 57, 58, 59, 60, array(61, 62, 63, 64, 65, 66, 67, 68, 69, 70, array(71, 72, 73, 74, 75, 76, 77, 78, 79, 80, array(81, 82, 83, 84, 85, 86, 87, 88, 89, 90, array(91, 92, 93, 94, 95, 96, 97, 98, 99, 100))))))))));\n$result = remove_nested($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxfe86ch.php:21\nStack trace:\n#0 /tmp/tmpwxfe86ch.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwxfe86ch.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $new_tup = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $new_tup[$key] = $value;\n        }\n    }\n    return $new_tup;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgxetipl.php:19\nStack trace:\n#0 /tmp/tmpsgxetipl.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsgxetipl.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgc0e0v6.php:22\nStack trace:\n#0 /tmp/tmpvgc0e0v6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvgc0e0v6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $tup) {\n        if (!is_array($tup)) {\n            $result[] = $tup;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $val) {\n        if (!is_array($val)) {\n            $result[] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1,2,3,4,5,6,7,8,9);\n$test_tup = array(1,2,3,4,5,6,7,8,9,array(1,2,3,4,5,6,7,8,9));\n$test_tup = array(1,2,3,4,5,6,7,8,9,array(1,2,3,4,5,6,7,8,9),array(1,2,3,4,5,6,7,8,9));\n$test_tup = array(1,2,3,4,5,6,7,8,9,array(1,2,3,4,5,6,7,8,9),array(1,2,3,4,5,6,7,8,9),array(1,2,3,4,5,6,7,8,9));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, array(16, 17, 18, 19, 20)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgitfwa1g.php:22\nStack trace:\n#0 /tmp/tmpgitfwa1g.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgitfwa1g.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $tup) {\n        if (!is_array($tup)) {\n            $result[] = $tup;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $item) {\n        if (!is_array($item)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n    [5] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $tup) {\n        if (!is_array($tup)) {\n            $result[] = $tup;\n        } else {\n            $result = array_merge($result, remove_nested($tup));\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, array(6, 7, 8, array(9, 10, 11))));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwri0nfv7.php:22\nStack trace:\n#0 /tmp/tmpwri0nfv7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwri0nfv7.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $new_arr = array();\n    foreach($test_tup as $key => $value) {\n        if(!is_array($value)) {\n            $new_arr[$key] = $value;\n        }\n    }\n    return $new_arr;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n    [6] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1a_uega1.php:20\nStack trace:\n#0 /tmp/tmp1a_uega1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1a_uega1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\n$result = remove_nested($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpe0uc_c.php:22\nStack trace:\n#0 /tmp/tmptpe0uc_c.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptpe0uc_c.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (!is_array($value)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1,2,3,4,5,6,7,8,9,10,array(1,2,3,4,5,6,7,8,9,10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4, array(5, 6)), 7, 8);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n    [5] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxfyiqp9o.php:21\nStack trace:\n#0 /tmp/tmpxfyiqp9o.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxfyiqp9o.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $item) {\n        if (!is_array($item)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (!is_array($value)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20, array(21, 22, 23, 24, 25, 26, 27, 28, 29, 30, array(31, 32, 33, 34, 35, 36, 37, 38, 39, 40))));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8b2yj049.php:22\nStack trace:\n#0 /tmp/tmp8b2yj049.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp8b2yj049.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1,2,3,4,5,6,7,8,9,10,array(11,12,13,14,15,array(16,17,18,19,20)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5cw300tv.php:22\nStack trace:\n#0 /tmp/tmp5cw300tv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5cw300tv.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5oxwh50.php:20\nStack trace:\n#0 /tmp/tmpv5oxwh50.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpv5oxwh50.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach($test_tup as $key => $value) {\n        if(!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9vk2hbz.php:19\nStack trace:\n#0 /tmp/tmpb9vk2hbz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpb9vk2hbz.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtjax6of.php:19\nStack trace:\n#0 /tmp/tmpdtjax6of.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdtjax6of.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $new_tup = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $new_tup[] = $value;\n        }\n    }\n    return $new_tup;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, array(7, 8, 9, 10, 11, 12, array(13, 14, 15, 16, 17, 18, array(19, 20, 21, 22, 23, 24))));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuo4nrf92.php:21\nStack trace:\n#0 /tmp/tmpuo4nrf92.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpuo4nrf92.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 5\n    [4] => 6\n    [5] => 10\n    [6] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7yvsoyz.php:21\nStack trace:\n#0 /tmp/tmpj7yvsoyz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpj7yvsoyz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209,\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0ni_gja6.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtjax6of.php:19\nStack trace:\n#0 /tmp/tmpdtjax6of.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdtjax6of.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgt1i9pv.php:21\nStack trace:\n#0 /tmp/tmpcgt1i9pv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcgt1i9pv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nph8yxb.php:19\nStack trace:\n#0 /tmp/tmp3nph8yxb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3nph8yxb.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 5\n    [4] => 6\n    [5] => 10\n    [6] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7yvsoyz.php:21\nStack trace:\n#0 /tmp/tmpj7yvsoyz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpj7yvsoyz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, array(16, 17, 18, 19, 20)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw761ht7o.php:22\nStack trace:\n#0 /tmp/tmpw761ht7o.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw761ht7o.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(remove_nested($test_tup));\n\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__c_x1k_.php:21\nStack trace:\n#0 /tmp/tmp__c_x1k_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp__c_x1k_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8h982qy.php:19\nStack trace:\n#0 /tmp/tmpc8h982qy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc8h982qy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8), 9, 10, array(11, 12, 13, 14, array(15, 16, 17, 18, 19, 20)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 9\n    [6] => 10\n    [7] => 8\n    [8] => 11\n    [9] => 12\n    [10] => 13\n    [11] => 14\n    [12] => 15\n    [13] => 16\n    [14] => 17\n    [15] => 18\n    [16] => 19\n    [17] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps3tff790.php:22\nStack trace:\n#0 /tmp/tmps3tff790.php(28): test()\n#1 {main}\n  thrown in /tmp/tmps3tff790.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgc0e0v6.php:22\nStack trace:\n#0 /tmp/tmpvgc0e0v6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvgc0e0v6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, array(16, 17, 18, 19, 20)));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgitfwa1g.php:22\nStack trace:\n#0 /tmp/tmpgitfwa1g.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgitfwa1g.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, array(9, 10, 11, array(12, 13, 14))));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03l0os1g.php:22\nStack trace:\n#0 /tmp/tmp03l0os1g.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp03l0os1g.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $tup) {\n        if (!is_array($tup)) {\n            $result[] = $tup;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8), 9, 10, array(11, 12, 13, 14));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 9\n    [5] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, array(6, 7, 8, array(9, 10))));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87jn81yc.php:22\nStack trace:\n#0 /tmp/tmp87jn81yc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp87jn81yc.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0h5uzyg.php:19\nStack trace:\n#0 /tmp/tmpj0h5uzyg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj0h5uzyg.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $val) {\n        if (!is_array($val)) {\n            $result[] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(6, 7, 8, 9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8h982qy.php:19\nStack trace:\n#0 /tmp/tmpc8h982qy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc8h982qy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach($test_tup as $tup) {\n        if(!is_array($tup)) {\n            $result[] = $tup;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\n$result = remove_nested($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $tup) {\n        if (!is_array($tup)) {\n            $result[] = $tup;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517345,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n    [4] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypd5trzv.php:21\nStack trace:\n#0 /tmp/tmpypd5trzv.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpypd5trzv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgc0e0v6.php:22\nStack trace:\n#0 /tmp/tmpvgc0e0v6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvgc0e0v6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $val) {\n        if (is_array($val)) {\n            $result = array_merge($result, remove_nested($val));\n        } else {\n            $result[$key] = $val;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 7\n    [5] => 8\n    [6] => 9\n    [7] => 10\n    [8] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehvkjgcj.php:22\nStack trace:\n#0 /tmp/tmpehvkjgcj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpehvkjgcj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5kufhg8d.php:19\nStack trace:\n#0 /tmp/tmp5kufhg8d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5kufhg8d.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, 9);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 7\n    [5] => 8\n    [6] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcx3903oe.php:19\nStack trace:\n#0 /tmp/tmpcx3903oe.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpcx3903oe.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, array(5, 6, 7, 8));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpch6j39zl.php:19\nStack trace:\n#0 /tmp/tmpch6j39zl.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpch6j39zl.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtjax6of.php:19\nStack trace:\n#0 /tmp/tmpdtjax6of.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdtjax6of.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $key => $value) {\n        if (!is_array($value)) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5), 6, 7, 8, 9, 10);\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [6] => 6\n    [7] => 7\n    [8] => 8\n    [9] => 9\n    [10] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkgtl1vqa.php:20\nStack trace:\n#0 /tmp/tmpkgtl1vqa.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpkgtl1vqa.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $tup) {\n        if (!is_array($tup)) {\n            $result[] = $tup;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach ($test_tup as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, remove_nested($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$test_tup = array(1, 2, 3, array(4, 5, 6), 7, 8, array(9, 10, 11));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123224,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2evblnl1.php:21\nStack trace:\n#0 /tmp/tmp2evblnl1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2evblnl1.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to remove arrays from the given array.\nfunction remove_nested($test_tup) {\n    $result = array();\n    foreach($test_tup as $tup) {\n        if(!is_array($tup)) {\n            $result[] = $tup;\n        }\n    }\n    return $result;\n}\n\n$test_tup = array(1, 2, 3, array(4, 5, 6));\nprint_r(remove_nested($test_tup));\nfunction candidate(...$args) {\n    return remove_nested(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, array(4, 6), 10)) !== array(1, 5, 7, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 6, 8, array(5, 7), 11)) !== array(2, 6, 8, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 7, 9, array(6, 8), array(5, 12), 12)) !== array(3, 7, 9, 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123225,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
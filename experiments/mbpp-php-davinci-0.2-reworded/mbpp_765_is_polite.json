{
  "name": "mbpp_765_is_polite",
  "language": "php",
  "prompt": "<?php\n// Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/\nfunction is_polite($n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_765_is_polite.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return is_polite(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7) !== 11) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 13) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $i = 1;\n    while ($n % $i == 0) {\n        $i++;\n    }\n    return $i;\n}\n",
    "    $n = (string)$n;\n    $len = strlen($n);\n    $sum = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $sum += $n[$i];\n    }\n    if ($sum % 2 == 0) {\n        return true;\n    }\n    return false;\n}\n",
    "\t$i = 1;\n\twhile ($i < $n) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn false;\n\t\t}\n\t\t$i++;\n\t}\n\treturn true;\n}\n",
    "\t$sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\tif ($n % $i == 0) {\n\t\t\t$sum += $i;\n\t\t}\n\t}\n\treturn $sum;\n}\n",
    "\t$i = 1;\n\twhile($n > 0) {\n\t\tif($n % $i == 0) {\n\t\t\t$n = $n / $i;\n\t\t}\n\t\telse {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $i;\n}\n",
    "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    if ($count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $i = 1;\n    while ($n % $i == 0) {\n        $i++;\n    }\n    return $i;\n}\n",
    "    $i = 1;\n    while ($i < $n) {\n        if ($n % $i == 0) {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n}\n",
    "    $i = 1;\n    while ($n % $i == 0) {\n        $i++;\n    }\n    return $i;\n}\n",
    "\t$sum = 0;\n\tfor($i = 1; $i <= $n; $i++) {\n\t\tif($n % $i == 0) {\n\t\t\t$sum += $i;\n\t\t}\n\t}\n\treturn $sum;\n}\n",
    "\t$i = 1;\n\t$sum = 0;\n\twhile($sum < $n) {\n\t\t$sum += $i;\n\t\t$i++;\n\t}\n\tif($sum == $n) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    $i = 1;\n    while ($i < $n) {\n        if ($n % $i == 0) {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n}\n",
    "    $i = 1;\n    while ($n % $i == 0) {\n        $i++;\n    }\n    return $i;\n}\n",
    "    $i = 1;\n    while ($n % $i == 0) {\n        $i++;\n    }\n    return $i;\n}\n",
    "    $i = 1;\n    while ($n % $i != 0) {\n        $i++;\n    }\n    return $i;\n}\n",
    "\t$i = 1;\n\twhile ($n % $i == 0) {\n\t\t$i++;\n\t}\n\treturn $i;\n}\n",
    "    $i = 1;\n    while ($n % $i == 0) {\n        $i++;\n    }\n    return $i;\n}\n",
    "    $i = 1;\n    while ($n % $i == 0) {\n        $i++;\n    }\n    return $i;\n}\n",
    "    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $i = 1;\n    while ($n % $i == 0) {\n        $i++;\n    }\n    return $i;\n}\n"
  ]
}
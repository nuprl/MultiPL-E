{
  "name": "mbpp_120_max_product_tuple",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple($list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_120_max_product_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return max_product_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(2, 7), array(2, 6), array(1, 8), array(4, 9))) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(10, 20), array(15, 2), array(5, 10))) !== 200) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(11, 44), array(10, 15), array(20, 5), array(12, 9))) !== 484) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]];\necho max_product_tuple($list1);",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]];\necho max_product_tuple($list1);",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\necho max_product_tuple($list1);",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\necho max_product_tuple($list1);",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]];\necho max_product_tuple($list1);",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[-1, -2, -3], [4, 5, 6], [7, 8, 9]];\necho max_product_tuple($list1);",
    "    $max_product = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($k != $j) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max_product) {\n                        $max_product = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max_product;\n}\n\n$list1 = [[-1, -2, -3], [4, 5, 6], [7, 8, 9]];\necho max_product_tuple($list1);",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[2, 3, -4, -5], [-2, -3, 4, 5], [2, -3, -4, 5]];\necho max_product_tuple($list1);",
    "    $max = 0;\n    $len = count($list1);\n    for ($i = 0; $i < $len; $i++) {\n        $len2 = count($list1[$i]);\n        for ($j = 0; $j < $len2; $j++) {\n            $len3 = count($list1[$i][$j]);\n            for ($k = 0; $k < $len3; $k++) {\n                $product = $list1[$i][$j][$k] * $list1[$i][$j][$k + 1];\n                if ($product > $max) {\n                    $max = $product;\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[[-1, -2], [-3, -4]], [[1, 2], [3, 4]]];\necho max_product_tuple($list1);\necho \"\\n\";\n\n$list2 = [[[-1, -2], [-3, -4]], [[1, 2], [3, 4]], [[5, 6], [7, 8]]];\necho max_product_tuple($list2);\necho \"\\n\";\n\n$list3 = [[[-1, -2], [-3, -4]], [[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]]];\necho max_product_tuple($list3);\necho \"\\n\";\n\n$list4 = [[[-1, -2], [-3, -4]], [[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]], [[13, 14], [15, 16]]];\necho max_product_tuple($list4);\necho \"\\n\";\n\n$list5 = [[[-1, -2], [-3, -4]], [[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]], [[13, 14], [15, 16]], [[17, 18], [19, 20",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[-1, -2, -3, 4], [1, 2, 3, 4], [5, 6, 7, 8]];\necho max_product_tuple($list1);",
    "  $max = 0;\n  for ($i = 0; $i < count($list1); $i++) {\n    for ($j = 0; $j < count($list1[$i]); $j++) {\n      for ($k = 0; $k < count($list1[$i]); $k++) {\n        if ($j != $k) {\n          $product = $list1[$i][$j] * $list1[$i][$k];\n          if ($product > $max) {\n            $max = $product;\n          }\n        }\n      }\n    }\n  }\n  return $max;\n}\n",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = $i + 1; $j < count($list1); $j++) {\n            $product = $list1[$i] * $list1[$j];\n            if ($product > $max) {\n                $max = $product;\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [1, 2, 3, 4, 5];\n$list2 = [1, -2, 3, -4, 5];\n$list3 = [1, -2, 3, -4, -5];\n\necho max_product_tuple($list1) . PHP_EOL;\necho max_product_tuple($list2) . PHP_EOL;\necho max_product_tuple($list3) . PHP_EOL;",
    "    $max = 0;\n    for ($i=0; $i < count($list1); $i++) { \n        for ($j=0; $j < count($list1[$i]); $j++) { \n            for ($k=0; $k < count($list1[$i]); $k++) { \n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n$list1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\necho max_product_tuple($list1);",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]];\necho max_product_tuple($list1);",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]];\necho max_product_tuple($list1);\n",
    "  $max_product = 0;\n  for ($i = 0; $i < count($list1); $i++) {\n    for ($j = 0; $j < count($list1[$i]); $j++) {\n      for ($k = 0; $k < count($list1[$i]); $k++) {\n        if ($j != $k) {\n          $product = $list1[$i][$j] * $list1[$i][$k];\n          if ($product > $max_product) {\n            $max_product = $product;\n          }\n        }\n      }\n    }\n  }\n  return $max_product;\n}\n\n$list1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\necho max_product_tuple($list1);",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n",
    "    $max = 0;\n    for ($i=0; $i < count($list1); $i++) {\n        for ($j=0; $j < count($list1[$i]); $j++) {\n            for ($k=0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]];\n$list2 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$list3 = [[-1, -2, -3], [4, 5, 6], [7, 8, 9]];\n$list4 = [[1, 2, 3], [-4, -5, -6], [-7, -8, -9]];\n$list5 = [[1, 2, 3], [4, 5, 6], [-7, -8, -9]];\n$list6 = [[1, 2, 3], [-4, -5, -6], [7, 8, 9]];\n$list7 = [[-1, -2, -3], [-4, -5, -6], [7, 8, 9]];\n$list8 = [[-1, -2, -3], [4, 5, 6], [-7, -8, -9]];\n$list9 = [[1, 2, 3], [-4, -5, -6], [-7, -8, -9]];\n$list10 = [[-1, -2, -3], [4, 5, 6], [-7, -8, -9]];\n$list11 = [[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]];\n$list12 = [[1, 2, 3], [4, 5, 6], [",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[1, -2, 3, 4], [2, -3, 4, 5], [3, -4, 5, 6]];\necho max_product_tuple($list1);",
    "    $max = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        for ($j = 0; $j < count($list1[$i]); $j++) {\n            for ($k = 0; $k < count($list1[$i]); $k++) {\n                if ($j != $k) {\n                    $product = $list1[$i][$j] * $list1[$i][$k];\n                    if ($product > $max) {\n                        $max = $product;\n                    }\n                }\n            }\n        }\n    }\n    return $max;\n}\n\n$list1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\necho max_product_tuple($list1);\necho \"\\n\";\n"
  ]
}
{
  "name": "mbpp_735_toggle_middle_bits",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_735_toggle_middle_bits.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & 1) << 1;\n    $last_bit = ($n & (1 << (strlen($n) - 1))) >> 1;\n    $mask = (1 << (strlen($n) - 1)) - 1;\n    $mask = $mask ^ (1 << 0);\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzq2ezpe8.php:20\nStack trace:\n#0 /tmp/tmpzq2ezpe8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzq2ezpe8.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) ^ ((1 << ($n >> 2)) - 1);\n    return ($x << 2) | ($first_bit << 1) | $last_bit;\n}\n\n$n = 12;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpev9ulxv5.php:17\nStack trace:\n#0 /tmp/tmpev9ulxv5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpev9ulxv5.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (floor(log($n, 2))));\n    $mask = ($last_bit << 1) - 1;\n    $mask = $mask ^ ((1 << (floor(log($n, 2)))) - 1);\n    $n = $n ^ $mask;\n    $n = $n | ($first_bit << (floor(log($n, 2))));\n    return $n;\n}\n\n$n = 15;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_27dlq9g.php:20\nStack trace:\n#0 /tmp/tmp_27dlq9g.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_27dlq9g.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $mask = $mask ^ $last_bit;\n    $mask = $mask ^ $first_bit;\n    return ($n ^ $mask);\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "4611686018427387893\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3w__p3mo.php:18\nStack trace:\n#0 /tmp/tmp3w__p3mo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3w__p3mo.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 1) ^ $n;\n    $x = $x & ((1 << ($n - 2)) - 1);\n    $x = ($x << 1) | $last_bit;\n    $x = $x | $first_bit;\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "23\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahzigx7j.php:20\nStack trace:\n#0 /tmp/tmpahzigx7j.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpahzigx7j.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    $n = $n ^ $mask;\n    return $n;\n}\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n));\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5dz57j68.php:18\nStack trace:\n#0 /tmp/tmp5dz57j68.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5dz57j68.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0x7FFFFFFF;\n    $mask = $mask ^ 0xFFFFFFFC;\n    return $n ^ $mask;\n}\n\n$n = 0xFFFFFFFF;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "2147483644\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeyg3vdk8.php:16\nStack trace:\n#0 /tmp/tmpeyg3vdk8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeyg3vdk8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6726zvc.php:17\nStack trace:\n#0 /tmp/tmpn6726zvc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpn6726zvc.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = ~$mask;\n    return $n ^ $mask;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "-1073741811\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp288bn_rp.php:17\nStack trace:\n#0 /tmp/tmp288bn_rp.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp288bn_rp.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\n$n = 0b10101010101010101010101010101010;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "11111111111111111111111111111101010101010101010101010101010101\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpooq9czsh.php:20\nStack trace:\n#0 /tmp/tmpooq9czsh.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpooq9czsh.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($first_bit ^ $last_bit);\n    $x = ($x << 1) | 1;\n    $mask = $x << 2;\n    $mask = $mask - 1;\n    $n = $n ^ $mask;\n    return $n;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuaw0wz1f.php:21\nStack trace:\n#0 /tmp/tmpuaw0wz1f.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuaw0wz1f.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $mask = $mask & ~($first_bit | $last_bit);\n    return ($n ^ $mask);\n}\n\n$n = 23;\necho toggle_middle_bits($n);\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "4611686018427387881\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0pk82mer.php:19\nStack trace:\n#0 /tmp/tmp0pk82mer.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0pk82mer.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $mask = $mask & ~($first_bit | $last_bit);\n    return ($n ^ $mask);\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "4611686018427387891\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ff6u0wl.php:18\nStack trace:\n#0 /tmp/tmp2ff6u0wl.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2ff6u0wl.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n\t$mask = 0x7FFFFFFF;\n\t$mask = $mask >> 1;\n\t$mask = $mask << 1;\n\t$mask = ~$mask;\n\t$n = $n ^ $mask;\n\treturn $n;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "-2147483637\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfd8vfb3s.php:18\nStack trace:\n#0 /tmp/tmpfd8vfb3s.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpfd8vfb3s.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = ~((1 << (PHP_INT_SIZE * 8 - 1)) | 1);\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "9223372036854775796\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljq6lj43.php:19\nStack trace:\n#0 /tmp/tmpljq6lj43.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpljq6lj43.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << ($last_bit + 1)) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcm5dt6ek.php:18\nStack trace:\n#0 /tmp/tmpcm5dt6ek.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpcm5dt6ek.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $first_bit ^ $last_bit;\n    $x = ($x << 1) | 1;\n    $x = $x << (PHP_INT_SIZE * 8 - 3);\n    return $n ^ $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "6917529027641081869\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpomjw0h6w.php:19\nStack trace:\n#0 /tmp/tmpomjw0h6w.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpomjw0h6w.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & 1);\n    $last_bit = ($n & (1 << (strlen($n) - 1)));\n    $x = $n ^ ((1 << (strlen($n) - 1)) - 1);\n    return ($x ^ $first_bit) | $last_bit;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09l6z8sg.php:16\nStack trace:\n#0 /tmp/tmp09l6z8sg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp09l6z8sg.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "523\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r7sy0j7.php:14\nStack trace:\n#0 /tmp/tmp7r7sy0j7.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp7r7sy0j7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(50);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "4294967246\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0ptbb85.php:16\nStack trace:\n#0 /tmp/tmpl0ptbb85.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpl0ptbb85.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    $n = $n ^ $mask;\n    return $n;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4294967286\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3wu2wi.php:18\nStack trace:\n#0 /tmp/tmpu_3wu2wi.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpu_3wu2wi.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4294967286\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqohaq46e.php:17\nStack trace:\n#0 /tmp/tmpqohaq46e.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqohaq46e.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & 1);\n    $last_bit = ($n & (1 << (PHP_INT_SIZE * 8 - 1)));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $mask = $mask ^ ($first_bit | $last_bit);\n    return ($n ^ $mask);\n}\n\n$n = 23;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4611686018427387881\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmqtksona.php:18\nStack trace:\n#0 /tmp/tmpmqtksona.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpmqtksona.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & (1 << 0)) != 0;\n    $last_bit = ($n & (1 << (strlen($n) - 1))) != 0;\n    $n = $n ^ ((1 << (strlen($n) - 1)) - 1);\n    if ($first_bit) {\n        $n = $n | (1 << 0);\n    }\n    if ($last_bit) {\n        $n = $n | (1 << (strlen($n) - 1));\n    }\n    return $n;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "13\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7iln3iwl.php:22\nStack trace:\n#0 /tmp/tmp7iln3iwl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7iln3iwl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0x7FFFFFFF;\n    $mask = $mask >> 1;\n    $mask = $mask << 1;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "2147483636\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsob4a0a.php:16\nStack trace:\n#0 /tmp/tmpvsob4a0a.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvsob4a0a.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    $n = $n ^ $mask;\n    return $n;\n}\n\n$n = 0b10101010101010101010101010101010;\necho decbin(toggle_middle_bits($n));\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "1010101010101010101010101010110\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkyvxrh5.php:18\nStack trace:\n#0 /tmp/tmpxkyvxrh5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxkyvxrh5.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\n$n = 0b10101010101010101010101010101010;\nprintf(\"%b\\n\", $n);\n$n = toggle_middle_bits($n);\nprintf(\"%b\\n\", $n);\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "10101010101010101010101010101010\n11111111111111111111111111111101010101010101010101010101010101\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfewfyptt.php:23\nStack trace:\n#0 /tmp/tmpfewfyptt.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfewfyptt.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xffffffff;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4294967286\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxou76qoc.php:16\nStack trace:\n#0 /tmp/tmpxou76qoc.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxou76qoc.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & 1);\n    $last_bit = ($n & (1 << (strlen($n) - 1)));\n    $x = $n ^ ((1 << (strlen($n) - 1)) - 1);\n    $x = $x ^ ((1 << 1) - 1);\n    $x = $x | ($first_bit << (strlen($n) - 1));\n    $x = $x | $last_bit;\n    return $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjjfi4i0h.php:19\nStack trace:\n#0 /tmp/tmpjjfi4i0h.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjjfi4i0h.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n ^ ($n >> 1)) >> 2;\n    return ($x << 2) | ($first_bit << 1) | $last_bit;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0sfz8wum.php:17\nStack trace:\n#0 /tmp/tmp0sfz8wum.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0sfz8wum.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $x = $n >> 2;\n    $x = ~$x;\n    $x = $x << 2;\n    $x = $x >> 2;\n    $x = $x << 1;\n    $x = $x | $last_bit;\n    $x = $x | $first_bit;\n    return $x;\n}\n\necho toggle_middle_bits(50);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohlc_jc3.php:22\nStack trace:\n#0 /tmp/tmpohlc_jc3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpohlc_jc3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ($n & ((1 << $last_bit) - 1));\n    $x = $x ^ ((1 << ($last_bit - 1)) - 1);\n    $x = $x | ($first_bit << ($last_bit - 1));\n    return $x;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "\nFatal error: Uncaught ArithmeticError: Bit shift by negative number in /tmp/tmpp99atu8d.php:7\nStack trace:\n#0 /tmp/tmpp99atu8d.php(12): toggle_middle_bits(13)\n#1 {main}\n  thrown in /tmp/tmpp99atu8d.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $n = $n ^ ($n >> 1);\n    $n = $n ^ ($n >> 2);\n    $n = $n ^ ($n >> 4);\n    $n = $n ^ ($n >> 8);\n    $n = $n ^ ($n >> 16);\n    return $n;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "12\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23k_8w7_.php:19\nStack trace:\n#0 /tmp/tmp23k_8w7_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp23k_8w7_.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) << 2;\n    $x = $x ^ ((1 << ($n - 3)) - 1);\n    $x = $x | ($first_bit << ($n - 2)) | $last_bit;\n    return $x;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "119\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynoxat8e.php:19\nStack trace:\n#0 /tmp/tmpynoxat8e.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpynoxat8e.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) << 2;\n    $x = $x ^ ((1 << ($n - 3)) - 1);\n    $x = $x | ($first_bit << ($n - 2)) | $last_bit;\n    return $x;\n}\n\n$n = 8;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "23\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdy92k3d9.php:19\nStack trace:\n#0 /tmp/tmpdy92k3d9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdy92k3d9.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 1) ^ $n;\n    $x = $x >> 1;\n    $x = $x << 1;\n    $x = $x | $first_bit;\n    $x = $x << 1;\n    $x = $x | $last_bit;\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "22\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvws0j76a.php:22\nStack trace:\n#0 /tmp/tmpvws0j76a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvws0j76a.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 1;\n    $mask = $mask << 1;\n    $mask = ~$mask;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-4294967285\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmazfr7xa.php:17\nStack trace:\n#0 /tmp/tmpmazfr7xa.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmazfr7xa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $mask = $mask & ~($first_bit);\n    $mask = $mask & ~($last_bit);\n    return ($n ^ $mask);\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4611686018427387893\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoyy3mn0i.php:18\nStack trace:\n#0 /tmp/tmpoyy3mn0i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpoyy3mn0i.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6726zvc.php:17\nStack trace:\n#0 /tmp/tmpn6726zvc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpn6726zvc.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $mask = ~$mask;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\n$n = 0b1101010101010101010101010101010101010101010101010101010101010101;\necho decbin(toggle_middle_bits($n));\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "\nDeprecated: Implicit conversion from float 1.5372286728091292E+19 to int loses precision in /tmp/tmpxbfwhj8y.php on line 4\n\nDeprecated: Implicit conversion from float 1.5372286728091292E+19 to int loses precision in /tmp/tmpxbfwhj8y.php on line 5\n\nDeprecated: Implicit conversion from float 1.5372286728091292E+19 to int loses precision in /tmp/tmpxbfwhj8y.php on line 8\n1001010101010101010101010101010101010101010101010101000000000000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbfwhj8y.php:22\nStack trace:\n#0 /tmp/tmpxbfwhj8y.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpxbfwhj8y.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0x7FFFFFFF;\n    $mask = $mask ^ 0x55555555;\n    return $n ^ $mask;\n}\n\n$n = 23;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "715827901\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mr4go8i.php:16\nStack trace:\n#0 /tmp/tmp3mr4go8i.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3mr4go8i.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) - 1;\n    $mask = $mask ^ ($mask >> 1);\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(17);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "32785\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnipbi5x3.php:15\nStack trace:\n#0 /tmp/tmpnipbi5x3.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpnipbi5x3.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $x = $n >> 2;\n    $x = ~$x;\n    $x = $x << 2;\n    $x = $x >> 2;\n    return $first_bit | $x | $last_bit;\n}\n\n$n = 50;\necho \"Number before toggle: \" . $n . \"\\n\";\necho \"Number after toggle: \" . toggle_middle_bits($n) . \"\\n\";\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "Number before toggle: 50\nNumber after toggle: -13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpau5lzzyh.php:21\nStack trace:\n#0 /tmp/tmpau5lzzyh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpau5lzzyh.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4294967286\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp031nlknm.php:16\nStack trace:\n#0 /tmp/tmp031nlknm.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp031nlknm.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($first_bit ^ $last_bit) << 1;\n    $mask = (1 << $x) - 1;\n    $n = $n ^ $mask;\n    return $n;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_za165n.php:19\nStack trace:\n#0 /tmp/tmpb_za165n.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpb_za165n.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0x7FFFFFFF;\n    $mask = $mask >> 1;\n    $mask = $mask << 1;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "2147483636\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsob4a0a.php:16\nStack trace:\n#0 /tmp/tmpvsob4a0a.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvsob4a0a.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($first_bit ^ $last_bit) << 1;\n    $n = $n ^ $x;\n    return $n;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkukik22.php:17\nStack trace:\n#0 /tmp/tmpkkukik22.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkkukik22.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4294967286\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp031nlknm.php:16\nStack trace:\n#0 /tmp/tmp031nlknm.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp031nlknm.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) << 2;\n    $x = $x ^ ((1 << ($n - 2)) - 1);\n    $x = $x | ($first_bit << ($n - 1)) | $last_bit;\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmv6vfp44.php:17\nStack trace:\n#0 /tmp/tmpmv6vfp44.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmv6vfp44.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6726zvc.php:17\nStack trace:\n#0 /tmp/tmpn6726zvc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpn6726zvc.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) << 2;\n    $x = $x ^ ((1 << ($n >> 2)) - 1);\n    $x = $x | ($first_bit << 1);\n    $x = $x | $last_bit;\n    return $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejnaj2hy.php:19\nStack trace:\n#0 /tmp/tmpejnaj2hy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpejnaj2hy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(50);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggs6cihn.php:17\nStack trace:\n#0 /tmp/tmpggs6cihn.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpggs6cihn.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0b11111111111111111111111111111111;\n    $mask = $mask ^ 0b11;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(0b11111111111111111111111111111111);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ykc_z7h.php:15\nStack trace:\n#0 /tmp/tmp2ykc_z7h.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2ykc_z7h.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\necho toggle_middle_bits(10) . \"\\n\";\necho toggle_middle_bits(15) . \"\\n\";\necho toggle_middle_bits(7) . \"\\n\";\necho toggle_middle_bits(5) . \"\\n\";\necho toggle_middle_bits(3) . \"\\n\";\necho toggle_middle_bits(2) . \"\\n\";\necho toggle_middle_bits(1) . \"\\n\";\necho toggle_middle_bits(0) . \"\\n\";\necho toggle_middle_bits(8) . \"\\n\";\necho toggle_middle_bits(16) . \"\\n\";\necho toggle_middle_bits(32) . \"\\n\";\necho toggle_middle_bits(64) . \"\\n\";\necho toggle_middle_bits(128) . \"\\n\";\necho toggle_middle_bits(256) . \"\\n\";\necho toggle_middle_bits(512) . \"\\n\";\necho toggle_middle_bits(1024) . \"\\n\";\necho toggle_middle_bits(2048) . \"\\n\";\necho toggle_middle_bits(4096) . \"\\n\";\necho toggle_middle_bits(8192) . \"\\n\";\necho toggle_middle_bits(16384) . \"\\n\";\necho toggle_middle_bits(32768) . \"\\n\";\necho toggle_middle_bits(65536) . \"\\n\";\necho toggle_middle_bits(131072) . \"\\n\";\necho toggle_middle_bits(262144) . \"\\n\";\necho toggle_middle_bits(524288) . \"\\n\";\necho toggle_middle_bits(1048576) . \"\\n\";\necho toggle_middle_bits(2097152) . \"\\n\";\necho toggle_middle_bits(4194304) . \"\\\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmpkprcvtg4.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(0b11111111111111111111111111111111);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxnjx1jfg.php:16\nStack trace:\n#0 /tmp/tmpxnjx1jfg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxnjx1jfg.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ ($mask << 1) - 1;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "1035\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65wksvwz.php:14\nStack trace:\n#0 /tmp/tmp65wksvwz.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp65wksvwz.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    $n = $n ^ $mask;\n    return $n;\n}\n\necho toggle_middle_bits(28);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4294967264\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp720kywxz.php:17\nStack trace:\n#0 /tmp/tmp720kywxz.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp720kywxz.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & 1);\n    $last_bit = ($n & (1 << (strlen(decbin($n)) - 1)));\n    $mask = (1 << (strlen(decbin($n)) - 1)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | ($first_bit << (strlen(decbin($n)) - 1));\n    $n = $n | $last_bit;\n    return $n;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "13\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmkf8fp7.php:19\nStack trace:\n#0 /tmp/tmpwmkf8fp7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwmkf8fp7.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0x7FFFFFFF;\n    $mask = $mask ^ (1 << 0);\n    $mask = $mask ^ (1 << 31);\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(0b11111111111111111111111111111111) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111111110) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111111101) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111111100) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111111011) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111111010) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111111001) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111111000) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111110111) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111110110) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111110101) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111110100) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111110011) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111110010) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111110001) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111110000) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111101111) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111101110) . \"\\n\";\necho toggle_middle_bits(0b11111111111111111111111111101101) . \"\\n\";\necho toggle_middle_bits(0b1111111111111111\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpt1z84u6w.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & 1);\n    $last_bit = ($n & (1 << (floor(log($n, 2))))) >> (floor(log($n, 2)));\n    $n = $n >> 1;\n    $n = $n << 1;\n    $n = $n ^ ((1 << (floor(log($n, 2)))) - 1);\n    $n = $n >> 1;\n    $n = $n << 1;\n    $n = $n | $first_bit;\n    $n = $n | ($last_bit << (floor(log($n, 2))));\n    return $n;\n}\n\necho toggle_middle_bits(50);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "44",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "523\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r7sy0j7.php:14\nStack trace:\n#0 /tmp/tmp7r7sy0j7.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp7r7sy0j7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 1) ^ $n;\n    $x = $x >> 2;\n    $x = $x << 2;\n    $x = $x ^ $n;\n    $x = $x >> 1;\n    $x = $x << 1;\n    $x = $x | $first_bit;\n    $x = $x << 1;\n    $x = $x | $last_bit;\n    return $x;\n}\n\n$n = 15;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hcglcon.php:25\nStack trace:\n#0 /tmp/tmp_hcglcon.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_hcglcon.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4611686018427387893\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpta0r7old.php:19\nStack trace:\n#0 /tmp/tmpta0r7old.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpta0r7old.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | ($first_bit << (PHP_INT_SIZE * 8 - 1));\n    $n = $n | $last_bit;\n    return $n;\n}\n\n$n = 5;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-4611686018427387910\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmx55htti.php:20\nStack trace:\n#0 /tmp/tmpmx55htti.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmx55htti.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqax5geqt.php:13\nStack trace:\n#0 /tmp/tmpqax5geqt.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpqax5geqt.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6726zvc.php:17\nStack trace:\n#0 /tmp/tmpn6726zvc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpn6726zvc.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    $mask = $mask | ($mask - 1);\n    return $n ^ $mask;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4108\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaiko6tx2.php:16\nStack trace:\n#0 /tmp/tmpaiko6tx2.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpaiko6tx2.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    $n = $n ^ $mask;\n    return $n;\n}\n\n$n = 0b11011010;\necho decbin(toggle_middle_bits($n));\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "11111111111111111111111100100110\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3vkbsb21.php:18\nStack trace:\n#0 /tmp/tmp3vkbsb21.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3vkbsb21.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | ($first_bit << (PHP_INT_SIZE * 8 - 1));\n    $n = $n | $last_bit;\n    return $n;\n}\n\n$n = 0b110101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11010101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b1101010101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b110101010101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11010101010101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b1101010101010101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b110101010101010101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11010101010101010101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b1101010101010101010101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b110101010101010101010101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11010101010101010101010101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b110101\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpbq7s82g4.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $n) - 1);\n    $x = $x >> 2;\n    $x = $x << 2;\n    $x = $x | ($first_bit << 1) | $last_bit;\n    return $x;\n}\n\necho toggle_middle_bits(50);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "1125899906842573\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd1bf9yy.php:19\nStack trace:\n#0 /tmp/tmpbd1bf9yy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbd1bf9yy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) ^ ((1 << ($n - 3)) - 1);\n    return ($x << 2) | ($first_bit << 1) | $last_bit;\n}\n\necho toggle_middle_bits(50);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "562949953421261\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpph4zikjk.php:16\nStack trace:\n#0 /tmp/tmpph4zikjk.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpph4zikjk.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6726zvc.php:17\nStack trace:\n#0 /tmp/tmpn6726zvc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpn6726zvc.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return ($n ^ $mask);\n}\n\necho toggle_middle_bits(0b10101010101010101010101010101010);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "1431655766\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsy_nwknh.php:16\nStack trace:\n#0 /tmp/tmpsy_nwknh.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpsy_nwknh.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpza0ouges.php:17\nStack trace:\n#0 /tmp/tmpza0ouges.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpza0ouges.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $mask = (1 << ($n - 2)) - 1;\n    $mask = ~$mask;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-2035\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5ct1l_k.php:22\nStack trace:\n#0 /tmp/tmpe5ct1l_k.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpe5ct1l_k.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84z4csur.php:18\nStack trace:\n#0 /tmp/tmp84z4csur.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp84z4csur.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    // Get the position of the first set bit from right\n    $first_set_bit_pos = log($n & -$n, 2) + 1;\n    // Get the position of the last set bit from right\n    $last_set_bit_pos = log(($n & ~($n-1)), 2) + 1;\n    // XOR the number with a number that has set bits\n    // from first set bit position + 1 to last set bit position - 1\n    return $n ^ (((1 << ($last_set_bit_pos - $first_set_bit_pos - 1)) - 1) << ($first_set_bit_pos + 1));\n}\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "\nFatal error: Uncaught ArithmeticError: Bit shift by negative number in /tmp/tmpp8546e3y.php:10\nStack trace:\n#0 /tmp/tmpp8546e3y.php(14): toggle_middle_bits(9)\n#1 /tmp/tmpp8546e3y.php(18): candidate(9)\n#2 /tmp/tmpp8546e3y.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpp8546e3y.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $x = $n >> 2;\n    $x = ~$x;\n    $x = $x << 2;\n    $x = $x >> 2;\n    return $first_bit | $x | $last_bit;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cvc6_4n.php:19\nStack trace:\n#0 /tmp/tmp0cvc6_4n.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0cvc6_4n.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    $n = $n ^ $mask;\n    return $n;\n}\n\n$n = 0b11010101;\necho decbin(toggle_middle_bits($n));\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "11111111111111111111111100101001\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_myqry2x.php:18\nStack trace:\n#0 /tmp/tmp_myqry2x.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_myqry2x.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $n) - 1);\n    $x = $x >> 2;\n    $x = $x << 2;\n    $x = $x | ($first_bit << 1) | $last_bit;\n    return $x;\n}\n\necho toggle_middle_bits(50);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "1125899906842573\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd1bf9yy.php:19\nStack trace:\n#0 /tmp/tmpbd1bf9yy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbd1bf9yy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ $n;\n    $x = $x >> 2;\n    $x = $x << 2;\n    $x = $x | $first_bit;\n    $x = $x << 1;\n    $x = $x | $last_bit;\n    return $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8_bawr7.php:21\nStack trace:\n#0 /tmp/tmpw8_bawr7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw8_bawr7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (strlen($n) - 1));\n    $x = $n ^ ((1 << (strlen($n) - 1)) - 1);\n    $x = $x ^ ((1 << 1) - 1);\n    $x = $x | $first_bit;\n    $x = $x | $last_bit;\n    return $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn0_g1wl_.php:19\nStack trace:\n#0 /tmp/tmpn0_g1wl_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpn0_g1wl_.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ $first_bit;\n    $x = $x ^ $last_bit;\n    return $x;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp89_ei0o9.php:18\nStack trace:\n#0 /tmp/tmp89_ei0o9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp89_ei0o9.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0;\n    for ($i = 1; $i < sizeof($n) - 1; $i++) {\n        $mask = $mask | (1 << $i);\n    }\n    return $n ^ $mask;\n}\n\n$n = 0b101010101;\necho $n . \"\\n\";\necho toggle_middle_bits($n) . \"\\n\";\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "341\n\nFatal error: Uncaught TypeError: sizeof(): Argument #1 ($value) must be of type Countable|array, int given in /tmp/tmp20znk0vd.php:5\nStack trace:\n#0 /tmp/tmp20znk0vd.php(13): toggle_middle_bits(341)\n#1 {main}\n  thrown in /tmp/tmp20znk0vd.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $x = $n >> 2;\n    $x = ~$x;\n    $x = $x << 2;\n    $x = $x >> 2;\n    return $first_bit | $x | $last_bit;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe67lhpwe.php:19\nStack trace:\n#0 /tmp/tmpe67lhpwe.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe67lhpwe.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n & (1 << (PHP_INT_SIZE * 8 - 1))) >> (PHP_INT_SIZE * 8 - 1);\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | ($first_bit << (PHP_INT_SIZE * 8 - 2));\n    $n = $n | ($last_bit << 1);\n    return $n;\n}\n\necho toggle_middle_bits(7);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "9223372036854775800\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoj7o1ne7.php:19\nStack trace:\n#0 /tmp/tmpoj7o1ne7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpoj7o1ne7.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo1nnynqr.php:18\nStack trace:\n#0 /tmp/tmpo1nnynqr.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpo1nnynqr.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6726zvc.php:17\nStack trace:\n#0 /tmp/tmpn6726zvc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpn6726zvc.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84z4csur.php:18\nStack trace:\n#0 /tmp/tmp84z4csur.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp84z4csur.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $middle_bits = $n >> 2;\n    $middle_bits = ~$middle_bits;\n    $middle_bits = $middle_bits << 2;\n    $middle_bits = $middle_bits >> 2;\n    return $first_bit | $middle_bits | $last_bit;\n}\n\necho toggle_middle_bits(50);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-13\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9teg1s35.php:19\nStack trace:\n#0 /tmp/tmp9teg1s35.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9teg1s35.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\n$n = 0xFFFFFFFF;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ns19ag6.php:17\nStack trace:\n#0 /tmp/tmp8ns19ag6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8ns19ag6.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "523\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoicfeady.php:15\nStack trace:\n#0 /tmp/tmpoicfeady.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpoicfeady.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(28);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4294967264\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbopbqvff.php:16\nStack trace:\n#0 /tmp/tmpbopbqvff.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpbopbqvff.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $x = $n >> 2;\n    $x = ~$x;\n    $x = $x << 2;\n    $x = $x >> 2;\n    return $first_bit | $x | $last_bit;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe67lhpwe.php:19\nStack trace:\n#0 /tmp/tmpe67lhpwe.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe67lhpwe.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) - 1;\n    $mask = $mask ^ $mask >> 1;\n    return $n ^ $mask;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "266\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph12iv6tq.php:16\nStack trace:\n#0 /tmp/tmph12iv6tq.php(23): test()\n#1 {main}\n  thrown in /tmp/tmph12iv6tq.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84z4csur.php:18\nStack trace:\n#0 /tmp/tmp84z4csur.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp84z4csur.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpza0ouges.php:17\nStack trace:\n#0 /tmp/tmpza0ouges.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpza0ouges.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4611686018427387891\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnv91flj9.php:19\nStack trace:\n#0 /tmp/tmpnv91flj9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnv91flj9.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 1) ^ $n;\n    $x = $x >> 2;\n    $x = $x << 2;\n    $x = $x | $first_bit;\n    $x = $x << 1;\n    $x = $x | $last_bit;\n    return $x;\n}\n\necho toggle_middle_bits(50);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "81\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcl2ivb3w.php:21\nStack trace:\n#0 /tmp/tmpcl2ivb3w.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcl2ivb3w.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4611686018427387893\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpta0r7old.php:19\nStack trace:\n#0 /tmp/tmpta0r7old.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpta0r7old.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $first_bit ^ $last_bit;\n    $x = ($x << 1) | 1;\n    $x = $x << (PHP_INT_SIZE * 8 - 3);\n    return $n ^ $x;\n}\n\necho toggle_middle_bits(10);\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "6917529027641081866\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55at0mcv.php:19\nStack trace:\n#0 /tmp/tmp55at0mcv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp55at0mcv.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $mask = $mask & ~($first_bit);\n    $mask = $mask & ~($last_bit >> 1);\n    return ($n ^ $mask);\n}\n\n$n = 5;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4611686018427387899\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa4ios966.php:19\nStack trace:\n#0 /tmp/tmpa4ios966.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpa4ios966.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) << 2;\n    $x = $x ^ ((1 << ($n - 3)) - 1);\n    $x = $x | ($first_bit << ($n - 2)) | $last_bit;\n    return $x;\n}\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "119\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxci5z1lw.php:17\nStack trace:\n#0 /tmp/tmpxci5z1lw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpxci5z1lw.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = ~$mask;\n    return ($n ^ $mask);\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-1073741811\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8bu42km.php:17\nStack trace:\n#0 /tmp/tmp_8bu42km.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_8bu42km.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "523\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r7sy0j7.php:14\nStack trace:\n#0 /tmp/tmp7r7sy0j7.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp7r7sy0j7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ $n;\n    $x = $x >> 2;\n    $x = $x << 2;\n    $x = $x | $first_bit;\n    $x = $x << 1;\n    $x = $x | $last_bit;\n    return $x;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2n0db69n.php:22\nStack trace:\n#0 /tmp/tmp2n0db69n.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2n0db69n.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(0b1101010101010101010101010101010101010101010101010101010101010101);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "\nDeprecated: Implicit conversion from float 1.5372286728091292E+19 to int loses precision in /tmp/tmpd38tafm1.php on line 7\n-3074457344186601476\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd38tafm1.php:16\nStack trace:\n#0 /tmp/tmpd38tafm1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpd38tafm1.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(5);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4294967289\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcy4r91qr.php:16\nStack trace:\n#0 /tmp/tmpcy4r91qr.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpcy4r91qr.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $middle_bits = $n >> 2;\n    $middle_bits = ~$middle_bits;\n    $middle_bits = $middle_bits << 2;\n    $middle_bits = $middle_bits >> 2;\n    return $first_bit | $middle_bits | $last_bit;\n}\n\necho toggle_middle_bits(50);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-13\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9teg1s35.php:19\nStack trace:\n#0 /tmp/tmp9teg1s35.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9teg1s35.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    $mask = $mask | ($mask - 1);\n    return $n ^ $mask;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "523\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6n5l9axd.php:16\nStack trace:\n#0 /tmp/tmp6n5l9axd.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp6n5l9axd.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0;\n    $mask = (1 << $n) - 1;\n    $mask = $mask ^ (1 << 1);\n    $mask = $mask ^ (1 << ($n - 1));\n    return $mask;\n}\n\necho toggle_middle_bits(5);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "13\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxmkhp7rg.php:17\nStack trace:\n#0 /tmp/tmpxmkhp7rg.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpxmkhp7rg.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ $n;\n    $x = $x | $first_bit;\n    $x = $x | ($last_bit << 1);\n    $n = $n >> 2;\n    while($n) {\n        $x = $x << 1;\n        $x = $x | 1;\n        $n = $n >> 1;\n    }\n    return $x;\n}\n\n$n = 15;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztclr9__.php:25\nStack trace:\n#0 /tmp/tmpztclr9__.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpztclr9__.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ $n;\n    $x = $x | $first_bit;\n    $x = $x | ($last_bit << 1);\n    return $x;\n}\n\n$n = 7;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxztraepv.php:19\nStack trace:\n#0 /tmp/tmpxztraepv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxztraepv.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) << 2;\n    $x = $x ^ ((1 << ($n >> 2)) - 1);\n    $x = $x | ($first_bit << 1);\n    $x = $x | $last_bit;\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdp2yavo.php:20\nStack trace:\n#0 /tmp/tmpqdp2yavo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqdp2yavo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "523\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r7sy0j7.php:14\nStack trace:\n#0 /tmp/tmp7r7sy0j7.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp7r7sy0j7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4611686018427387893\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpta0r7old.php:19\nStack trace:\n#0 /tmp/tmpta0r7old.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpta0r7old.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & 1);\n    $last_bit = ($n & (1 << (strlen($n) - 1)));\n    $xor_mask = ($first_bit ^ $last_bit);\n    $xor_mask = ($xor_mask | ($xor_mask << 1));\n    $xor_mask = ($xor_mask | ($xor_mask << 2));\n    $xor_mask = ($xor_mask | ($xor_mask << 4));\n    $xor_mask = ($xor_mask | ($xor_mask << 8));\n    $xor_mask = ($xor_mask | ($xor_mask << 16));\n    return ($n ^ $xor_mask);\n}\n\necho toggle_middle_bits(17);\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4294967278\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ki94xhu.php:22\nStack trace:\n#0 /tmp/tmp7ki94xhu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7ki94xhu.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return ($n ^ $mask);\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4294967286\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbqoerzrs.php:16\nStack trace:\n#0 /tmp/tmpbqoerzrs.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpbqoerzrs.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4108\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33fwzd01.php:15\nStack trace:\n#0 /tmp/tmp33fwzd01.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp33fwzd01.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0x7FFFFFFF;\n    $mask = $mask ^ 0xFFFFFFFC;\n    return $n ^ $mask;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "2147483657\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7u57psin.php:16\nStack trace:\n#0 /tmp/tmp7u57psin.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7u57psin.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) << 2;\n    $x = $x ^ ((1 << ($n >> 2)) - 1);\n    $x = $x | ($first_bit << 1) | $last_bit;\n    return $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq390h5au.php:18\nStack trace:\n#0 /tmp/tmpq390h5au.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpq390h5au.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($first_bit ^ $last_bit) << 1;\n    $mask = (1 << $x) - 1;\n    $n = $n ^ $mask;\n    return $n;\n}\n\n$n = 50;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "49\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpff4g3fhw.php:19\nStack trace:\n#0 /tmp/tmpff4g3fhw.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpff4g3fhw.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & 1);\n    $last_bit = ($n & (1 << (strlen($n) - 1)));\n    $x = $n ^ ((1 << (strlen($n) - 1)) - 1);\n    $x = $x ^ ((1 << 1) - 1);\n    $x = $x | $first_bit;\n    $x = $x | $last_bit;\n    return $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n\t$first_bit = $n & 1;\n\t$last_bit = ($n >> 1) & 1;\n\t$x = ($n >> 1) ^ $n;\n\t$x = $x >> 2;\n\t$x = $x << 2;\n\t$x = $x | ($first_bit << 1);\n\t$x = $x | $last_bit;\n\treturn $x;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "13\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u99u78g.php:21\nStack trace:\n#0 /tmp/tmp6u99u78g.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6u99u78g.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $x = $n >> 2;\n    $x = ~$x;\n    $x = $x << 2;\n    $x = $x >> 2;\n    return $first_bit | $x | $last_bit;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cvc6_4n.php:19\nStack trace:\n#0 /tmp/tmp0cvc6_4n.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0cvc6_4n.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n\t$first_bit = $n & 1;\n\t$last_bit = $n & (1 << (strlen(decbin($n)) - 1));\n\t$mask = (1 << (strlen(decbin($n)) - 1)) - 1;\n\t$mask = $mask ^ (1 << 0);\n\t$n = $n ^ $mask;\n\t$n = $n | $first_bit;\n\t$n = $n | $last_bit;\n\treturn $n;\n}\n\necho toggle_middle_bits(10);\necho \"\\n\";\necho toggle_middle_bits(15);\necho \"\\n\";\necho toggle_middle_bits(7);\necho \"\\n\";\necho toggle_middle_bits(31);\necho \"\\n\";\necho toggle_middle_bits(63);\necho \"\\n\";\necho toggle_middle_bits(64);\necho \"\\n\";\necho toggle_middle_bits(65);\necho \"\\n\";\necho toggle_middle_bits(127);\necho \"\\n\";\necho toggle_middle_bits(255);\necho \"\\n\";\necho toggle_middle_bits(256);\necho \"\\n\";\necho toggle_middle_bits(257);\necho \"\\n\";\necho toggle_middle_bits(511);\necho \"\\n\";\necho toggle_middle_bits(512);\necho \"\\n\";\necho toggle_middle_bits(513);\necho \"\\n\";\necho toggle_middle_bits(1023);\necho \"\\n\";\necho toggle_middle_bits(1024);\necho \"\\n\";\necho toggle_middle_bits(1025);\necho \"\\n\";\necho toggle_middle_bits(2047);\necho \"\\n\";\necho toggle_middle_bits(2048);\necho \"\\n\";\necho toggle_middle_bits(2049);\necho \"\\n\";\necho toggle_middle_bits(4095);\necho \"\\n\";\necho toggle_middle_bits(4096);\necho \"\\n\";\necho toggle_middle_bits(4097);\necho \"\\n\";\necho toggle_middle_bits(8191);\necho \"\\n\";\necho toggle_middle_bits(8192);\necho \"\\n\";\necho toggle_middle_bits(\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpq5e5u9yw.php on line 65\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $x = $n >> 2;\n    $x = ~$x;\n    $x = $x << 2;\n    $x = $x >> 2;\n    $x = $x << 1;\n    $x = $x | $first_bit;\n    $x = $x | $last_bit;\n    return $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphzkt533a.php:22\nStack trace:\n#0 /tmp/tmphzkt533a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphzkt533a.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ ($mask << 1) ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "1545\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8735mdwn.php:14\nStack trace:\n#0 /tmp/tmp8735mdwn.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8735mdwn.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(12);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4294967280\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5y7dzoh.php:16\nStack trace:\n#0 /tmp/tmpy5y7dzoh.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy5y7dzoh.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84z4csur.php:18\nStack trace:\n#0 /tmp/tmp84z4csur.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp84z4csur.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n >> 1)) - 1;\n    return ($n ^ $mask) | ($mask << 1);\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "63\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbzpc_6_7.php:14\nStack trace:\n#0 /tmp/tmpbzpc_6_7.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpbzpc_6_7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n\t$first_bit = $n & 1;\n\t$last_bit = ($n >> 1) & 1;\n\t$x = $n ^ $n;\n\t$x = $x | (1 << 1);\n\t$x = $x | (1 << ($n - 2));\n\treturn $x;\n}\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "2050\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzt7hc3ue.php:17\nStack trace:\n#0 /tmp/tmpzt7hc3ue.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpzt7hc3ue.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6726zvc.php:17\nStack trace:\n#0 /tmp/tmpn6726zvc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpn6726zvc.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $mask = $mask | $last_bit;\n    $mask = $mask | $first_bit;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4611686018427387893\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjw4n0_nt.php:18\nStack trace:\n#0 /tmp/tmpjw4n0_nt.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjw4n0_nt.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n\t$first_bit = $n & 1;\n\t$last_bit = ($n >> 1) & 1;\n\t$x = $n ^ ((1 << $last_bit) - 1);\n\t$x = $x ^ ((1 << ($first_bit + 1)) - 1);\n\treturn $x;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4r2v5yly.php:17\nStack trace:\n#0 /tmp/tmp4r2v5yly.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp4r2v5yly.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(0b11111111111111111111111111111111);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxnjx1jfg.php:16\nStack trace:\n#0 /tmp/tmpxnjx1jfg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxnjx1jfg.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84z4csur.php:18\nStack trace:\n#0 /tmp/tmp84z4csur.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp84z4csur.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $mask = $mask & ~($first_bit | $last_bit);\n    return ($n ^ $mask);\n}\n\n$n = 5;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4611686018427387899\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6dtv43sp.php:18\nStack trace:\n#0 /tmp/tmp6dtv43sp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp6dtv43sp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111110;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111100;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111011;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111010;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111001;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111000;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111110111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111110110;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111110101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111110100\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpvvrc6toa.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $mask = $mask & ~($first_bit | $last_bit);\n    return ($n ^ $mask);\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4611686018427387893\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65zgcclu.php:18\nStack trace:\n#0 /tmp/tmp65zgcclu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp65zgcclu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) << 2;\n    $x = $x ^ ((1 << ($n >> 2)) - 1);\n    $x = $x | ($first_bit << 1) | $last_bit;\n    return $x;\n}\n\necho toggle_middle_bits(50);\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4047\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5zh871e.php:19\nStack trace:\n#0 /tmp/tmpz5zh871e.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpz5zh871e.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n\t$first_bit = $n & 1;\n\t$last_bit = ($n >> 1) & 1;\n\t$x = $n ^ ($n >> 1);\n\t$x = $x ^ ($x >> 2);\n\t$x = $x ^ ($x >> 4);\n\t$x = $x ^ ($x >> 8);\n\t$x = $x ^ ($x >> 16);\n\t$x = $x ^ ($x >> 32);\n\t$x = $x & ~($x >> 1);\n\t$x = $x | ($first_bit << 1);\n\t$x = $x | ($last_bit << 63);\n\treturn $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "-9223372036854775800\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm8gwf00w.php:24\nStack trace:\n#0 /tmp/tmpm8gwf00w.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpm8gwf00w.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0x7FFFFFFF;\n    $mask = $mask ^ (1 << 0);\n    $mask = $mask ^ (1 << 31);\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4294967284\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkls9fulb.php:17\nStack trace:\n#0 /tmp/tmpkls9fulb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkls9fulb.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) - 1;\n    $mask = $mask ^ ($mask >> 1);\n    return $n ^ $mask;\n}\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpik3zmm8p.php:14\nStack trace:\n#0 /tmp/tmpik3zmm8p.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpik3zmm8p.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & 1);\n    $last_bit = ($n & (1 << (PHP_INT_SIZE * 8 - 1)));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4611686018427387893\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgyjrmw6.php:20\nStack trace:\n#0 /tmp/tmpsgyjrmw6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsgyjrmw6.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & 1);\n    $last_bit = ($n & (1 << (PHP_INT_SIZE * 8 - 1)));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 1)) - 1;\n    $mask = $mask ^ (1 << 0);\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\necho toggle_middle_bits(10);\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "-9223372036854775797\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_th1rnrb.php:21\nStack trace:\n#0 /tmp/tmp_th1rnrb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_th1rnrb.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpza0ouges.php:17\nStack trace:\n#0 /tmp/tmpza0ouges.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpza0ouges.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $x = $n >> 2;\n    $x = ~$x;\n    $x = $x << 2;\n    $x = $x >> 2;\n    return $first_bit | $x | $last_bit;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe67lhpwe.php:19\nStack trace:\n#0 /tmp/tmpe67lhpwe.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe67lhpwe.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask - (1 << 0);\n    $mask = $mask - (1 << 31);\n    return $n ^ $mask;\n}\n\n$n = 0xFFFFFFFF;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "2147483649\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3y05yv8a.php:17\nStack trace:\n#0 /tmp/tmp3y05yv8a.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3y05yv8a.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 1) ^ $n;\n    $x = $x >> 2;\n    $x = $x << 2;\n    $x = $x | ($first_bit << 1) | $last_bit;\n    return $x;\n}\necho toggle_middle_bits(50);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "41\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww6fc3f2.php:18\nStack trace:\n#0 /tmp/tmpww6fc3f2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpww6fc3f2.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = ~$mask;\n    $n = $n ^ $mask;\n    return $n;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "-1073741811\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1xjns_n.php:18\nStack trace:\n#0 /tmp/tmpw1xjns_n.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw1xjns_n.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 2)) - 1;\n    return ($n ^ $mask);\n}\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4cqflwq.php:13\nStack trace:\n#0 /tmp/tmpy4cqflwq.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpy4cqflwq.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($first_bit ^ $last_bit) << 1;\n    $n = $n ^ $x;\n    return $n;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkukik22.php:17\nStack trace:\n#0 /tmp/tmpkkukik22.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkkukik22.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & 1);\n    $last_bit = ($n & (1 << (PHP_INT_SIZE * 8 - 1)));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $middle_bits = $n & $mask;\n    $middle_bits = ~$middle_bits;\n    $middle_bits = $middle_bits & $mask;\n    return ($first_bit | $middle_bits | $last_bit);\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4611686018427387893\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9g1o1f3w.php:20\nStack trace:\n#0 /tmp/tmp9g1o1f3w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9g1o1f3w.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\n$n = 0b1001101;\necho decbin(toggle_middle_bits($n));\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "11111111111111111111111111111111111111111111111111111110110011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphu9ld8_c.php:20\nStack trace:\n#0 /tmp/tmphu9ld8_c.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphu9ld8_c.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "523\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r7sy0j7.php:14\nStack trace:\n#0 /tmp/tmp7r7sy0j7.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp7r7sy0j7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) << 2;\n    $x = $x ^ ((1 << ($n >> 2)) - 1);\n    $x = $x | ($first_bit << ($n >> 2));\n    $x = $x | ($last_bit << (($n >> 2) + 1));\n    return $x;\n}\n\necho toggle_middle_bits(5);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6y2c2n8.php:20\nStack trace:\n#0 /tmp/tmpl6y2c2n8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpl6y2c2n8.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    $n = $n ^ $mask;\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88p0kyan.php:16\nStack trace:\n#0 /tmp/tmp88p0kyan.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp88p0kyan.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4611686018427387893\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpta0r7old.php:19\nStack trace:\n#0 /tmp/tmpta0r7old.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpta0r7old.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "523\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r7sy0j7.php:14\nStack trace:\n#0 /tmp/tmp7r7sy0j7.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp7r7sy0j7.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) - 1;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "501\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpid7dc9ua.php:14\nStack trace:\n#0 /tmp/tmpid7dc9ua.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpid7dc9ua.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $x = $n >> 2;\n    $x = ~$x;\n    $x = $x << 2;\n    $x = $x >> 2;\n    return $first_bit | $x | $last_bit;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "-3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cvc6_4n.php:19\nStack trace:\n#0 /tmp/tmp0cvc6_4n.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0cvc6_4n.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4108\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33fwzd01.php:15\nStack trace:\n#0 /tmp/tmp33fwzd01.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp33fwzd01.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n\t$first_bit = $n & 1;\n\t$last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n\t$mask = 0;\n\tfor ($i = 1; $i < PHP_INT_SIZE * 8 - 1; $i++) {\n\t\t$mask = $mask | (1 << $i);\n\t}\n\t$n = $n ^ $mask;\n\t$n = $n | $first_bit;\n\t$n = $n | $last_bit;\n\treturn $n;\n}\n\necho toggle_middle_bits(7);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "9223372036854775801\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2__ymktt.php:22\nStack trace:\n#0 /tmp/tmp2__ymktt.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2__ymktt.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 1)) - 1;\n    $mask = $mask ^ (1 << 1);\n    $mask = $mask ^ (1 << (PHP_INT_SIZE * 8 - 2));\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\n$n = 5;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "-4611686018427387897\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifz60kag.php:22\nStack trace:\n#0 /tmp/tmpifz60kag.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpifz60kag.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) << 2;\n    $x = $x ^ ((1 << ($n >> 2)) - 1);\n    $x = $x | ($first_bit << 1) | $last_bit;\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2f6fswtu.php:19\nStack trace:\n#0 /tmp/tmp2f6fswtu.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2f6fswtu.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xffffffff;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(0b11111111111111111111111111111111);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7eg9hjzl.php:16\nStack trace:\n#0 /tmp/tmp7eg9hjzl.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7eg9hjzl.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n\t$mask = (1 << ($n - 1)) | 1;\n\t$mask = $mask | ($mask - 1);\n\treturn $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "523\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdbdpacwb.php:15\nStack trace:\n#0 /tmp/tmpdbdpacwb.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpdbdpacwb.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpza0ouges.php:17\nStack trace:\n#0 /tmp/tmpza0ouges.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpza0ouges.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509811,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6726zvc.php:17\nStack trace:\n#0 /tmp/tmpn6726zvc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpn6726zvc.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4108\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33fwzd01.php:15\nStack trace:\n#0 /tmp/tmp33fwzd01.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp33fwzd01.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpza0ouges.php:17\nStack trace:\n#0 /tmp/tmpza0ouges.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpza0ouges.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 1) ^ $n;\n    $x = $x >> 2;\n    $x = $x << 2;\n    $x = $x | ($first_bit << 1) | $last_bit;\n    return $x;\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0kgqjw4.php:19\nStack trace:\n#0 /tmp/tmpa0kgqjw4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpa0kgqjw4.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $mask = $mask & ~($first_bit | $last_bit);\n    return ($n ^ $mask);\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4611686018427387893\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphx2al_2_.php:17\nStack trace:\n#0 /tmp/tmphx2al_2_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmphx2al_2_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask >> 2;\n    $mask = $mask << 2;\n    return ($n ^ $mask);\n}\n\necho toggle_middle_bits(50);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4294967246\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzc_r4kw.php:16\nStack trace:\n#0 /tmp/tmpuzc_r4kw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpuzc_r4kw.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4108\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33fwzd01.php:15\nStack trace:\n#0 /tmp/tmp33fwzd01.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp33fwzd01.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0x7FFFFFFF;\n    $mask = $mask ^ (1 << 0);\n    $mask = $mask ^ (1 << 31);\n    return $n ^ $mask;\n}\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111111111111111110;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111111111111111101;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111111111111111011;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111111111111110111;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111111111111101111;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111111111111011111;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111111111110111111;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111111111101111111;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111111111011111111;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111111110111111111;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111111101111111111;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111111011111111111;\necho decbin(toggle_middle_bits($n)) . \"\\n\";\n\n$n = 0b11111111111111111110111111111111;\necho decbin(\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprxzu45jr.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n\t$mask = 0xFFFFFFFF;\n\t$mask = $mask >> 2;\n\t$mask = $mask << 2;\n\t$n = $n ^ $mask;\n\treturn $n;\n}\n\n$n = 0b11010101;\necho decbin(toggle_middle_bits($n));\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "11111111111111111111111100101001\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzks8_n73.php:18\nStack trace:\n#0 /tmp/tmpzks8_n73.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpzks8_n73.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) << 2;\n    $x = $x ^ ((1 << ($n - 2)) - 1);\n    $x = $x | ($first_bit << ($n - 1));\n    $x = $x | ($last_bit << 1);\n    return $x;\n}\n\necho toggle_middle_bits(17);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "98287\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxwn7uxhw.php:19\nStack trace:\n#0 /tmp/tmpxwn7uxhw.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxwn7uxhw.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0xFFFFFFFF;\n    $mask = $mask ^ (1 << 0);\n    $mask = $mask ^ (1 << 31);\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "2147483636\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8h0gciaf.php:16\nStack trace:\n#0 /tmp/tmp8h0gciaf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp8h0gciaf.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 1) ^ $n;\n    $x = $x >> 2;\n    $x = $x << 2;\n    $x = $x ^ $n;\n    $x = $x >> 1;\n    $x = $x << 1;\n    $x = $x | $first_bit;\n    $x = $x << 1;\n    $x = $x | $last_bit;\n    return $x;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "13\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8y0v8t8v.php:25\nStack trace:\n#0 /tmp/tmp8y0v8t8v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8y0v8t8v.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n & 1);\n    $last_bit = ($n & (1 << (strlen($n) - 1)));\n    $x = $n ^ ((1 << (strlen($n) - 1)) - 1);\n    $x = $x ^ ((1 << 1) - 1);\n    $x = $x | ($first_bit << (strlen($n) - 1));\n    $x = $x | $last_bit;\n    return $x;\n}\n\n$n = '10010101';\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "10009995\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfe2aliyd.php:20\nStack trace:\n#0 /tmp/tmpfe2aliyd.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfe2aliyd.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n\t$first_bit = $n & 1;\n\t$last_bit = ($n >> 1) & 1;\n\t$x = $n ^ $n;\n\t$x = $x | $first_bit;\n\t$x = $x | ($last_bit << 1);\n\treturn $x;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpis2vaqrf.php:18\nStack trace:\n#0 /tmp/tmpis2vaqrf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpis2vaqrf.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0x7FFFFFFF;\n    return $n ^ $mask;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "2147483634\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwi2koaem.php:15\nStack trace:\n#0 /tmp/tmpwi2koaem.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwi2koaem.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\necho toggle_middle_bits(10);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "4611686018427387893\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpta0r7old.php:19\nStack trace:\n#0 /tmp/tmpta0r7old.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpta0r7old.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = ($n >> 1) << 1;\n    $last_bit = $n & 1;\n    $x = ($n >> 1) ^ ($n >> 2);\n    $x = $x << 1;\n    $x = $x | $last_bit;\n    $x = $x | $first_bit;\n    return $x;\n}\n\n$n = 7;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxmuc3msz.php:20\nStack trace:\n#0 /tmp/tmpxmuc3msz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxmuc3msz.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = ($n >> 2) << 2;\n    $x = $x ^ ((1 << ($n >> 2)) - 1);\n    $x = $x | ($first_bit << 1);\n    $x = $x | $last_bit;\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdp2yavo.php:20\nStack trace:\n#0 /tmp/tmpqdp2yavo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqdp2yavo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ $n;\n    $x = $x >> 2;\n    $x = $x << 2;\n    $x = $x | $first_bit;\n    $x = $x << 1;\n    $x = $x | $last_bit;\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljrxqyaa.php:22\nStack trace:\n#0 /tmp/tmpljrxqyaa.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpljrxqyaa.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0x7FFFFFFF;\n    $mask = $mask ^ 0x55555555;\n    return $n ^ $mask;\n}\n\n$n = 10;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "715827872\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8i1pkh2l.php:16\nStack trace:\n#0 /tmp/tmp8i1pkh2l.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp8i1pkh2l.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 1)) - 1;\n    $mask = $mask ^ (1 << 1);\n    $mask = $mask ^ 1;\n    $n = $n ^ $mask;\n    $n = $n | $first_bit;\n    $n = $n | $last_bit;\n    return $n;\n}\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\n$n = 0b11111111111111111111111111111111;\necho decbin(toggle_middle_bits($n)) . PHP_EOL\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpwigkfi5d.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    return ($x ^ ((1 << $first_bit) - 1));\n}\n\necho toggle_middle_bits(13);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "12\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaoa9ytnw.php:16\nStack trace:\n#0 /tmp/tmpaoa9ytnw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpaoa9ytnw.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n >> 2;\n    $x = $x ^ ((1 << ($x - 1)) - 1);\n    $x = $x << 2;\n    $x = $x | ($first_bit << 1) | $last_bit;\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd1_k7oyj.php:18\nStack trace:\n#0 /tmp/tmpd1_k7oyj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpd1_k7oyj.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $n = $n ^ $mask;\n    $n = $n | ($first_bit << (PHP_INT_SIZE * 8 - 1));\n    $n = $n | ($last_bit >> (PHP_INT_SIZE * 8 - 1));\n    return $n;\n}\n\n$n = 0b1101010101010101010101010101010101010101010101010101010101010101;\necho decbin(toggle_middle_bits($n)) . PHP_EOL;\n\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "\nDeprecated: Implicit conversion from float 1.5372286728091292E+19 to int loses precision in /tmp/tmpwho1oiv4.php on line 4\n\nDeprecated: Implicit conversion from float 1.5372286728091292E+19 to int loses precision in /tmp/tmpwho1oiv4.php on line 5\n\nDeprecated: Implicit conversion from float 1.5372286728091292E+19 to int loses precision in /tmp/tmpwho1oiv4.php on line 7\n1111111111111111111111111111111111111111111111111111111111111111\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwho1oiv4.php:21\nStack trace:\n#0 /tmp/tmpwho1oiv4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwho1oiv4.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ ((1 << $last_bit) - 1);\n    $x = $x ^ ((1 << ($first_bit + 1)) - 1);\n    return $x;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122418,
      "stdout": "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84z4csur.php:18\nStack trace:\n#0 /tmp/tmp84z4csur.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp84z4csur.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n    $mask = (1 << (PHP_INT_SIZE * 8 - 2)) - 1;\n    $mask = $mask & ~($first_bit | $last_bit);\n    $n = $n ^ $mask;\n    return $n;\n}\n\necho toggle_middle_bits(7);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4611686018427387897\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmb04spxi.php:18\nStack trace:\n#0 /tmp/tmpmb04spxi.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpmb04spxi.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n\t$first_bit = $n & 1;\n\t$last_bit = $n & (1 << (PHP_INT_SIZE * 8 - 1));\n\t$mask = ~((1 << (PHP_INT_SIZE * 8 - 1)) | 1);\n\t$n = $n ^ $mask;\n\t$n = $n | ($first_bit << (PHP_INT_SIZE * 8 - 1)) | $last_bit;\n\treturn $n;\n}\n\n$n = 23;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "-23\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprrqax3ro.php:19\nStack trace:\n#0 /tmp/tmprrqax3ro.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprrqax3ro.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $first_bit = $n & 1;\n    $last_bit = ($n >> 1) & 1;\n    $x = $n ^ $n;\n    $x = $x >> 2;\n    $x = $x << 2;\n    $x = $x | $first_bit;\n    $x = $x << 1;\n    $x = $x | $last_bit;\n    return $x;\n}\n\n$n = 12;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz6jc1_p0.php:22\nStack trace:\n#0 /tmp/tmpz6jc1_p0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz6jc1_p0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = (1 << ($n - 1)) | 1;\n    return $n ^ $mask;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "4108\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33fwzd01.php:15\nStack trace:\n#0 /tmp/tmp33fwzd01.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp33fwzd01.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0x7FFFFFFF;\n    $mask = $mask >> 1;\n    $mask = $mask << 1;\n    return $n ^ $mask;\n}\n\n$n = 13;\necho toggle_middle_bits($n);\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "2147483635\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpud52uz1t.php:17\nStack trace:\n#0 /tmp/tmpud52uz1t.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpud52uz1t.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunction toggle_middle_bits($n) {\n    $mask = 0x7FFFFFFF;\n    $mask = $mask >> 1;\n    $mask = $mask << 1;\n    return $n ^ $mask;\n}\n\necho toggle_middle_bits(10) . \"\\n\";\necho toggle_middle_bits(13) . \"\\n\";\necho toggle_middle_bits(15) . \"\\n\";\necho toggle_middle_bits(16) . \"\\n\";\necho toggle_middle_bits(17) . \"\\n\";\necho toggle_middle_bits(18) . \"\\n\";\necho toggle_middle_bits(19) . \"\\n\";\necho toggle_middle_bits(20) . \"\\n\";\necho toggle_middle_bits(21) . \"\\n\";\necho toggle_middle_bits(22) . \"\\n\";\necho toggle_middle_bits(23) . \"\\n\";\necho toggle_middle_bits(24) . \"\\n\";\necho toggle_middle_bits(25) . \"\\n\";\necho toggle_middle_bits(26) . \"\\n\";\necho toggle_middle_bits(27) . \"\\n\";\necho toggle_middle_bits(28) . \"\\n\";\necho toggle_middle_bits(29) . \"\\n\";\necho toggle_middle_bits(30) . \"\\n\";\necho toggle_middle_bits(31) . \"\\n\";\necho toggle_middle_bits(32) . \"\\n\";\necho toggle_middle_bits(33) . \"\\n\";\necho toggle_middle_bits(34) . \"\\n\";\necho toggle_middle_bits(35) . \"\\n\";\necho toggle_middle_bits(36) . \"\\n\";\necho toggle_middle_bits(37) . \"\\n\";\necho toggle_middle_bits(38) . \"\\n\";\necho toggle_middle_bits(39) . \"\\n\";\necho toggle_middle_bits(40) . \"\\n\";\necho toggle_middle_bits(41) . \"\\n\";\necho toggle_middle_bits(42) . \"\\n\";\necho toggle_middle_bits(43) . \"\\n\";\necho toggle_middle_bits(44) . \"\\n\";\necho toggle_middle_bits(45) . \"\\n\";\necho toggle_middle_\nfunction candidate(...$args) {\n    return toggle_middle_bits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(9) !== 15) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(65) !== 127) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== 115) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122419,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpj4x9m2zl.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
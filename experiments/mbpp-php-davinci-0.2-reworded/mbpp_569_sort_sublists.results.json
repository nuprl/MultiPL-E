{
  "name": "mbpp_569_sort_sublists",
  "language": "php",
  "prompt": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_569_sort_sublists.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e'),\n    array('f', 'g', 'h'),\n    array('d', 'e'),\n    array('i', 'j', 'k', 'l'),\n    array('m', 'n'),\n    array('o')\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [['a', 'b', 'c'], ['d', 'e'], ['f', 'g', 'h']];\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\t$result = array();\n\tforeach ($list1 as $sublist) {\n\t\tsort($sublist);\n\t\t$result[] = $sublist;\n\t}\n\treturn $result;\n}\n$list1 = array(\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list3 = array(\n\tarray(\"g\", \"e\"),\n\tarray(\"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nprint_r(sort_sublists($list3));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => e\n            [1] => g\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e', 'f'),\n    array('g', 'h', 'i')\n);\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\"),\n    array(\"f\", \"g\", \"h\"),\n    array(\"d\", \"e\"),\n    array(\"i\", \"j\", \"k\", \"l\"),\n    array(\"m\", \"n\"),\n    array(\"o\"),\n);\n\n$result = sort_sublists($list1);\n\nforeach ($result as $sublist) {\n    foreach ($sublist as $item) {\n        echo \"$item \";\n    }\n    echo \"\\n\";\n}\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "a b c \nd e \nf g h \nd e \ni j k l \nm n \no \n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list3 = array(\n    array(\"g\", \"e\"),\n    array(\"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nprint_r(sort_sublists($list3));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => e\n            [1] => g\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"c\", \"b\", \"a\"),\n    array(\"d\", \"e\", \"f\"),\n    array(\"g\", \"h\", \"i\")\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n  foreach ($list1 as $key => $value) {\n    sort($list1[$key]);\n  }\n  return $list1;\n}\n\n$list1 = array(\n  array('a', 'b', 'c'),\n  array('d', 'e'),\n  array('f', 'g', 'h'),\n  array('d', 'e'),\n  array('i', 'j', 'k', 'l'),\n  array('m', 'n'),\n  array('o')\n);\n\n$result = sort_sublists($list1);\nprint_r($result);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n  foreach ($list1 as $key => $value) {\n    sort($value);\n    $list1[$key] = $value;\n  }\n  return $list1;\n}\n\n$list1 = array(\n  array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n  array(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n  array(\"g\", \"h\", \"i\", \"j\"),\n  array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n  array(\"g\", \"e\", \"f\")\n);\n\n$list3 = array(\n  array(\"g\", \"e\", \"f\"),\n  array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n  array(\"g\", \"h\", \"i\", \"j\")\n);\n\necho \"Test 1: \";\nvar_dump(sort_sublists($list1));\n\necho \"Test 2: \";\nvar_dump(sort_sublists($list2));\n\necho \"Test 3: \";\nvar_dump(sort_sublists($list3));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Test 1: array(2) {\n  [0]=>\n  array(5) {\n    [0]=>\n    string(1) \"a\"\n    [1]=>\n    string(1) \"b\"\n    [2]=>\n    string(1) \"c\"\n    [3]=>\n    string(1) \"d\"\n    [4]=>\n    string(1) \"e\"\n  }\n  [1]=>\n  array(3) {\n    [0]=>\n    string(1) \"e\"\n    [1]=>\n    string(1) \"f\"\n    [2]=>\n    string(1) \"g\"\n  }\n}\nTest 2: array(3) {\n  [0]=>\n  array(4) {\n    [0]=>\n    string(1) \"g\"\n    [1]=>\n    string(1) \"h\"\n    [2]=>\n    string(1) \"i\"\n    [3]=>\n    string(1) \"j\"\n  }\n  [1]=>\n  array(5) {\n    [0]=>\n    string(1) \"a\"\n    [1]=>\n    string(1) \"b\"\n    [2]=>\n    string(1) \"c\"\n    [3]=>\n    string(1) \"d\"\n    [4]=>\n    string(1) \"e\"\n  }\n  [2]=>\n  array(3) {\n    [0]=>\n    string(1) \"e\"\n    [1]=>\n    string(1) \"f\"\n    [2]=>\n    string(1) \"g\"\n  }\n}\nTest 3: array(3) {\n  [0]=>\n  array(3) {\n    [0]=>\n    string(1) \"e\"\n    [1]=>\n    string(1) \"f\"\n    [2]=>\n    string(1) \"g\"\n  }\n  [1]=>\n  array(5) {\n    [0]=>\n    string(1) \"a\"\n    [1]=>\n    string(1) \"b\"\n    [2]=>\n    string(1) \"c\"\n    [3]=>\n    string(1) \"d\"\n    [4]=>\n    string(1) \"e\"\n  }\n  [2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e'),\n    array('f', 'g', 'h'),\n    array('d', 'e'),\n    array('i', 'j', 'k', 'l'),\n    array('m', 'n'),\n    array('o')\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $sublist) {\n        sort($sublist);\n        $list1[$key] = $sublist;\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\t$result = array();\n\tforeach ($list1 as $sublist) {\n\t\tsort($sublist);\n\t\t$result[] = $sublist;\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n$list1 = sort_sublists($list1);\nprint_r($list1);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\", \"f\"),\n    array(\"g\", \"h\", \"i\")\n);\n$list2 = sort_sublists($list1);\nprint_r($list2);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\t$result = array();\n\tforeach ($list1 as $sublist) {\n\t\tsort($sublist);\n\t\t$result[] = $sublist;\n\t}\n\treturn $result;\n}\n\n$list1 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o'),\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\t$list2 = array();\n\tforeach ($list1 as $sublist) {\n\t\tsort($sublist);\n\t\tarray_push($list2, $sublist);\n\t}\n\treturn $list2;\n}\n$list1 = array(\n\tarray('a', 'c', 'b', 'e', 'd'),\n\tarray('g', 'e', 'f')\n);\n$list2 = sort_sublists($list1);\nprint_r($list2);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = [['b', 'c', 'a'], ['e', 'd', 'f'], ['g', 'h', 'i']];\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list3 = array(\n    array(\"g\", \"e\", \"f\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"h\", \"i\", \"j\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nprint_r(sort_sublists($list3));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n$list1 = sort_sublists($list1);\nprint_r($list1);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list = array(\n    array('a', 'b', 'c'),\n    array('d', 'e'),\n    array('f', 'g', 'h'),\n    array('d', 'e'),\n    array('i', 'j', 'k', 'l'),\n    array('m', 'n'),\n    array('o')\n);\n\n$list2 = sort_sublists($list);\n\nforeach ($list2 as $sublist) {\n    foreach ($sublist as $item) {\n        echo $item . ' ';\n    }\n    echo '<br>';\n}\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "a b c <br>d e <br>f g h <br>d e <br>i j k l <br>m n <br>o <br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\"),\n    array(\"f\", \"g\", \"h\"),\n    array(\"d\", \"e\"),\n    array(\"i\", \"j\", \"k\", \"l\"),\n    array(\"m\", \"n\"),\n    array(\"o\"),\n);\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f'],\n    ['g', 'h', 'i'],\n];\n\n$list2 = [\n    ['g', 'h', 'i'],\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f'],\n];\n\n$list3 = [\n    ['z', 'y', 'x'],\n    ['c', 'b', 'a'],\n    ['f', 'e', 'd'],\n];\n\necho '<pre>';\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nprint_r(sort_sublists($list3));\necho '</pre>';\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "<pre>Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [2] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => x\n            [1] => y\n            [2] => z\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [2] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list1 = sort_sublists($list1);\nprint_r($list1);\n\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = sort_sublists($list2);\nprint_r($list2);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array('a', 'c', 'b', 'e', 'd'),\n    array('g', 'e', 'f'),\n);\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\necho \"<pre>\";\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "<pre>Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $new_list[] = $sublist;\n    }\n    return $new_list;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\n$list2 = [\n    ['g', 'h', 'i', 'j'],\n    ['a', 'c', 'b', 'e', 'd'],\n    ['f', 'g', 'd']\n];\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => d\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $list2) {\n        sort($list2);\n        $result[] = $list2;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $sorted_list = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $sorted_list[] = $sublist;\n    }\n    return $sorted_list;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n  $result = array();\n  foreach ($list1 as $sublist) {\n    sort($sublist);\n    $result[] = $sublist;\n  }\n  return $result;\n}\n\n$list1 = array(\n  array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n  array(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n  array(\"g\", \"h\", \"i\", \"j\"),\n  array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n  array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\tforeach ($list1 as $key => $value) {\n\t\tsort($list1[$key]);\n\t}\n\treturn $list1;\n}\n\n$list1 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list2 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list3 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list4 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list5 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list6 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "\nParse error: syntax error, unexpected string content \"l\", expecting \")\" in /tmp/tmpfm79isxb.php on line 65\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e', 'f'),\n    array('g', 'h', 'i'),\n);\n\n$list2 = sort_sublists($list1);\n\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f'],\n    ['g', 'h', 'i'],\n];\n\n$list2 = [\n    ['g', 'h', 'i'],\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f'],\n];\n\n$list3 = [\n    ['z', 'y', 'x'],\n    ['c', 'b', 'a'],\n    ['f', 'e', 'd'],\n];\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nprint_r(sort_sublists($list3));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [2] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => x\n            [1] => y\n            [2] => z\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [2] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']];\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    for ($i = 0; $i < count($list1); $i++) {\n        sort($list1[$i]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\", \"f\"),\n    array(\"g\", \"h\", \"i\"),\n);\n\n$list2 = array(\n    array(\"a\", \"b\", \"c\", \"d\"),\n    array(\"e\", \"f\", \"g\", \"h\"),\n    array(\"i\", \"j\", \"k\", \"l\"),\n);\n\n$list3 = array(\n    array(\"a\", \"b\", \"c\", \"d\", \"e\"),\n    array(\"f\", \"g\", \"h\", \"i\", \"j\"),\n    array(\"k\", \"l\", \"m\", \"n\", \"o\"),\n);\n\n$list4 = array(\n    array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"),\n    array(\"g\", \"h\", \"i\", \"j\", \"k\", \"l\"),\n    array(\"m\", \"n\", \"o\", \"p\", \"q\", \"r\"),\n);\n\n$list5 = array(\n    array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"),\n    array(\"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"),\n    array(\"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\"),\n);\n\n$list6 = array(\n    array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"),\n    array(\"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\"),\n    array(\"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\"),\n);\n\n$list7 = array(\n    array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"),\n    array(\"j\", \"k\", \"l\", \"m\", \"n\", \"o\",\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1x0s88ub.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list1 = sort_sublists($list1);\nprint_r($list1);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n  $result = array();\n  foreach ($list1 as $sublist) {\n    sort($sublist);\n    $result[] = $sublist;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $result[$key] = $value;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\", \"f\"),\n    array(\"g\", \"h\", \"i\")\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list2[$key] = $value;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        array_push($new_list, $sublist);\n    }\n    return $new_list;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f'],\n    ['g', 'h', 'i']\n];\n\n$list2 = [\n    ['g', 'h', 'i'],\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f']\n];\n\n$list3 = [\n    ['z', 'y', 'x'],\n    ['c', 'b', 'a'],\n    ['f', 'e', 'd']\n];\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nprint_r(sort_sublists($list3));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [2] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => x\n            [1] => y\n            [2] => z\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [2] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $list) {\n        sort($list);\n        $list2[] = $list;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f'],\n    ['g', 'h', 'i']\n];\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list2[$key] = $value;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\", \"f\"),\n    array(\"g\", \"h\", \"i\"),\n);\n\n$list2 = sort_sublists($list1);\n\nprint_r($list2);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $new_list[] = $sublist;\n    }\n    return $new_list;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [['a', 'b', 'c'], ['d', 'e'], ['f', 'g', 'h']];\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n$list1 = sort_sublists($list1);\nprint_r($list1);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n  foreach ($list1 as $key => $value) {\n    sort($list1[$key]);\n  }\n  return $list1;\n}\n\n$list1 = array(\n  array(\"lorem\", \"ipsum\", \"dolor\"),\n  array(\"gigi\", \"titi\", \"mimi\"),\n  array(\"a\", \"c\", \"b\"),\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => dolor\n            [1] => ipsum\n            [2] => lorem\n        )\n\n    [1] => Array\n        (\n            [0] => gigi\n            [1] => mimi\n            [2] => titi\n        )\n\n    [2] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\n$list2 = [\n    ['g', 'h', 'i', 'j'],\n    ['a', 'c', 'b', 'e', 'd'],\n    ['f', 'g', 'e']\n];\n\n$list3 = [\n    ['g', 'e', 'e', 'k', 's'],\n    ['f', 'i', 'k', 'o']\n];\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nprint_r(sort_sublists($list3));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list1 = sort_sublists($list1);\n\nprint_r($list1);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        array_push($new_list, $sublist);\n    }\n    return $new_list;\n}\n\n$list1 = [['b', 'c', 'a'], ['d', 'e', 'f'], ['g', 'h', 'i']];\n$list2 = [['g', 'h', 'i'], ['d', 'e', 'f'], ['b', 'c', 'a']];\n$list3 = [['z', 'y', 'x'], ['w', 'v', 'u'], ['t', 's', 'r']];\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nprint_r(sort_sublists($list3));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => x\n            [1] => y\n            [2] => z\n        )\n\n    [1] => Array\n        (\n            [0] => u\n            [1] => v\n            [2] => w\n        )\n\n    [2] => Array\n        (\n            [0] => r\n            [1] => s\n            [2] => t\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\t$result = array();\n\tforeach ($list1 as $sublist) {\n\t\tsort($sublist);\n\t\t$result[] = $sublist;\n\t}\n\treturn $result;\n}\n\n$list1 = array(\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e'),\n    array('f', 'g', 'h'),\n    array('d', 'e'),\n    array('i', 'j', 'k', 'l'),\n    array('m', 'n'),\n    array('o'),\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\"),\n    array(\"f\", \"g\", \"h\"),\n    array(\"d\", \"e\"),\n    array(\"i\", \"j\", \"k\", \"l\"),\n    array(\"m\", \"n\"),\n    array(\"o\")\n);\n\n$result = sort_sublists($list1);\n\nforeach ($result as $sublist) {\n    foreach ($sublist as $item) {\n        echo $item . \" \";\n    }\n    echo \"<br>\";\n}\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "a b c <br>d e <br>f g h <br>d e <br>i j k l <br>m n <br>o <br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\"),\n    array(\"f\", \"g\", \"h\"),\n    array(\"d\", \"e\"),\n    array(\"i\", \"j\", \"k\", \"l\"),\n    array(\"m\", \"n\"),\n    array(\"o\"),\n);\n\n$result = sort_sublists($list1);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\tforeach ($list1 as $key => $value) {\n\t\tsort($list1[$key]);\n\t}\n\treturn $list1;\n}\n\n$list1 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list2 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list3 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list4 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list5 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list6 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "\nParse error: syntax error, unexpected string content \"l\", expecting \")\" in /tmp/tmpfm79isxb.php on line 65\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $list2) {\n        sort($list2);\n        $result[] = $list2;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$result = sort_sublists($list1);\nprint_r($result);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\tforeach ($list1 as $list) {\n\t\tsort($list);\n\t}\n\treturn $list1;\n}\n\n$list1 = array(\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => c\n            [2] => b\n            [3] => e\n            [4] => d\n        )\n\n    [1] => Array\n        (\n            [0] => g\n            [1] => e\n            [2] => f\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => c\n            [2] => b\n            [3] => e\n            [4] => d\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => e\n            [2] => f\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukk1mfnq.php:29\nStack trace:\n#0 /tmp/tmpukk1mfnq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpukk1mfnq.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"lorem\", \"ipsum\", \"dolor\"),\n    array(\"amet\", \"consectetur\", \"adipiscing\"),\n    array(\"elit\", \"curabitur\", \"blandit\"),\n    array(\"at\", \"vestibulum\", \"velit\"),\n    array(\"id\", \"tincidunt\", \"turpis\"),\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => dolor\n            [1] => ipsum\n            [2] => lorem\n        )\n\n    [1] => Array\n        (\n            [0] => adipiscing\n            [1] => amet\n            [2] => consectetur\n        )\n\n    [2] => Array\n        (\n            [0] => blandit\n            [1] => curabitur\n            [2] => elit\n        )\n\n    [3] => Array\n        (\n            [0] => at\n            [1] => velit\n            [2] => vestibulum\n        )\n\n    [4] => Array\n        (\n            [0] => id\n            [1] => tincidunt\n            [2] => turpis\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"Laravel\", \"Symfony\", \"Zend\"),\n    array(\"jQuery\", \"ReactJS\", \"VueJS\"),\n    array(\"Python\", \"PHP\", \"Ruby\"),\n);\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => Laravel\n            [1] => Symfony\n            [2] => Zend\n        )\n\n    [1] => Array\n        (\n            [0] => ReactJS\n            [1] => VueJS\n            [2] => jQuery\n        )\n\n    [2] => Array\n        (\n            [0] => PHP\n            [1] => Python\n            [2] => Ruby\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $new_list[] = $sublist;\n    }\n    return $new_list;\n}\n\n$list1 = [\n    ['a', 'c', 'b', 'e', 'd'],\n    ['g', 'e', 'f']\n];\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list1 = sort_sublists($list1);\n\nprint_r($list1);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = [\n    ['a', 'b', 'c', 'd'],\n    ['e', 'f', 'g', 'h'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n', 'o', 'p'],\n];\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n            [3] => h\n        )\n\n    [2] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [3] => Array\n        (\n            [0] => m\n            [1] => n\n            [2] => o\n            [3] => p\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $new_list[] = $sublist;\n    }\n    return $new_list;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f'],\n    ['g', 'h', 'i'],\n];\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\"),\n    array(\"f\", \"g\", \"h\"),\n    array(\"d\", \"e\"),\n    array(\"i\", \"j\", \"k\", \"l\"),\n    array(\"m\", \"n\"),\n    array(\"o\"),\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list2[$key] = $value;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e', 'f'),\n    array('g', 'h', 'i'),\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = [\n    ['a', 'c', 'b', 'e', 'd'],\n    ['g', 'e', 'f']\n];\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\t$new_list = [];\n\tforeach ($list1 as $sublist) {\n\t\tsort($sublist);\n\t\t$new_list[] = $sublist;\n\t}\n\treturn $new_list;\n}\n\n$list1 = [\n\t['a', 'b', 'c'],\n\t['d', 'e', 'f'],\n\t['g', 'h', 'i']\n];\n\n$list2 = [\n\t['g', 'h', 'i'],\n\t['a', 'b', 'c'],\n\t['d', 'e', 'f']\n];\n\n$list3 = [\n\t['z', 'y', 'x'],\n\t['c', 'b', 'a'],\n\t['m', 'n', 'o']\n];\n\n$list4 = [\n\t['g', 'h', 'i'],\n\t['d', 'e', 'f'],\n\t['a', 'b', 'c']\n];\n\n$list5 = [\n\t['a', 'b', 'c'],\n\t['d', 'e', 'f'],\n\t['g', 'h', 'i']\n];\n\n$list6 = [\n\t['g', 'h', 'i'],\n\t['a', 'b', 'c'],\n\t['d', 'e', 'f']\n];\n\n$list7 = [\n\t['z', 'y', 'x'],\n\t['c', 'b', 'a'],\n\t['m', 'n', 'o']\n];\n\n$list8 = [\n\t['g', 'h', 'i'],\n\t['d', 'e', 'f'],\n\t['a', 'b', 'c']\n];\n\n$list9 = [\n\t['a', 'b', 'c'],\n\t['d', 'e', 'f'],\n\t['g', 'h', 'i']\n];\n\n$list10 = [\n\t['g', 'h', 'i'],\n\t['a', 'b', 'c'],\n\t['d', 'e', 'f']\n];\n\n$list11 = [\n\t['z', 'y', 'x\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "\nParse error: syntax error, unexpected string content \"x\", expecting \"]\" in /tmp/tmp8wpr_5pp.php on line 73\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = [['b', 'c', 'a'], ['d', 'e', 'f'], ['g', 'h', 'i']];\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\"),\n    array(\"f\", \"g\", \"h\"),\n    array(\"d\", \"e\"),\n    array(\"i\", \"j\", \"k\", \"l\"),\n    array(\"m\", \"n\"),\n    array(\"o\"),\n);\n\n$result = sort_sublists($list1);\nprint_r($result);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\necho \"Original Array :\\n\";\necho \"<pre>\";\nprint_r($list1);\necho \"<br>\";\necho \"Sorted Array :\\n\";\necho \"<pre>\";\nprint_r(sort_sublists($list1));\necho \"<br>\";\necho \"Original Array :\\n\";\necho \"<pre>\";\nprint_r($list2);\necho \"<br>\";\necho \"Sorted Array :\\n\";\necho \"<pre>\";\nprint_r(sort_sublists($list2));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Original Array :\n<pre>Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => c\n            [2] => b\n            [3] => e\n            [4] => d\n        )\n\n    [1] => Array\n        (\n            [0] => g\n            [1] => e\n            [2] => f\n        )\n\n)\n<br>Sorted Array :\n<pre>Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n<br>Original Array :\n<pre>Array\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => c\n            [2] => b\n            [3] => e\n            [4] => d\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => e\n            [2] => f\n        )\n\n)\n<br>Sorted Array :\n<pre>Array\n(\n    [0] => Array\n        (\n         ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        array_push($result, $sublist);\n    }\n    return $result;\n}\n$list1 = [\n    ['a', 'c', 'b', 'e', 'd'],\n    ['g', 'e', 'f']\n];\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $new_list[] = $sublist;\n    }\n    return $new_list;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list2[] = $value;\n    }\n    return $list2;\n}\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e'),\n    array('f', 'g', 'h'),\n    array('d', 'e'),\n    array('i', 'j', 'k', 'l'),\n    array('m', 'n'),\n    array('o')\n);\n$list2 = sort_sublists($list1);\nprint_r($list2);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n  $list2 = array();\n  foreach ($list1 as $sublist) {\n    sort($sublist);\n    $list2[] = $sublist;\n  }\n  return $list2;\n}\n\n$list1 = array(\n  array('a', 'c', 'b', 'e', 'd'),\n  array('g', 'e', 'f'),\n);\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        array_push($list2, $sublist);\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\"),\n    array(\"f\", \"g\", \"h\"),\n    array(\"d\", \"e\"),\n    array(\"i\", \"j\", \"k\", \"l\"),\n    array(\"m\", \"n\"),\n    array(\"o\"),\n);\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $new_list[] = $sublist;\n    }\n    return $new_list;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e'),\n    array('f', 'g', 'h'),\n    array('d', 'e'),\n    array('i', 'j', 'k', 'l'),\n    array('m', 'n'),\n    array('o')\n);\n\n$result = sort_sublists($list1);\n\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "<pre>Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e', 'f'),\n    array('g', 'h', 'i'),\n);\n\n$list2 = sort_sublists($list1);\n\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e', 'f'),\n    array('g', 'h', 'i'),\n);\n\n$list2 = sort_sublists($list1);\n\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        array_push($result, $sublist);\n    }\n    return $result;\n}\n\n$list1 = [['b', 'c', 'a'], ['d', 'e', 'f'], ['g', 'h', 'i']];\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\t$list2 = array();\n\tforeach ($list1 as $key => $value) {\n\t\tsort($value);\n\t\t$list2[] = $value;\n\t}\n\treturn $list2;\n}\n\n$list1 = array(\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'c', 'b', 'e', 'd'],\n    ['g', 'e', 'f']\n];\n\n$result = sort_sublists($list1);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n$list1 = [\n    ['a', 'c', 'b', 'e', 'd'],\n    ['g', 'e', 'f']\n];\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f'],\n    ['g', 'h', 'i']\n];\n\n$list2 = [\n    ['g', 'h', 'i'],\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f']\n];\n\n$list3 = [\n    ['z', 'y', 'x'],\n    ['c', 'b', 'a'],\n    ['f', 'e', 'd']\n];\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nprint_r(sort_sublists($list3));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [2] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => x\n            [1] => y\n            [2] => z\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [2] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\t$list2 = array();\n\tforeach ($list1 as $sublist) {\n\t\tsort($sublist);\n\t\tarray_push($list2, $sublist);\n\t}\n\treturn $list2;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\tforeach ($list1 as $key => $value) {\n\t\tsort($list1[$key]);\n\t}\n\treturn $list1;\n}\n\n$list1 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list2 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list3 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list4 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list5 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l'),\n\tarray('m', 'n'),\n\tarray('o')\n);\n\n$list6 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e'),\n\tarray('f', 'g', 'h'),\n\tarray('d', 'e'),\n\tarray('i', 'j', 'k', 'l\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "\nParse error: syntax error, unexpected string content \"l\", expecting \")\" in /tmp/tmpfm79isxb.php on line 65\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $new_list[] = $sublist;\n    }\n    return $new_list;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e', 'f'),\n    array('g', 'h', 'i'),\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'c', 'b', 'e', 'd'],\n    ['g', 'e', 'f']\n];\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $new_list[] = $sublist;\n    }\n    return $new_list;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e'),\n    array('f', 'g', 'h'),\n    array('d', 'e'),\n    array('i', 'j', 'k', 'l'),\n    array('m', 'n'),\n    array('o')\n);\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e'),\n    array('f', 'g', 'h'),\n    array('d', 'e'),\n    array('i', 'j', 'k', 'l'),\n    array('m', 'n'),\n    array('o'),\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\tforeach ($list1 as $key => $value) {\n\t\tsort($list1[$key]);\n\t}\n\treturn $list1;\n}\n\n$list1 = array(\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list3 = array(\n\tarray(\"g\", \"e\"),\n\tarray(\"e\", \"f\")\n);\n\necho \"list1: \" . PHP_EOL;\nprint_r(sort_sublists($list1));\necho \"list2: \" . PHP_EOL;\nprint_r(sort_sublists($list2));\necho \"list3: \" . PHP_EOL;\nprint_r(sort_sublists($list3));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "list1: \nArray\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nlist2: \nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nlist3: \nArray\n(\n    [0] => Array\n        (\n            [0] => e\n            [1] => g\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f'],\n    ['g', 'h', 'i']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    for ($i = 0; $i < count($list1); $i++) {\n        sort($list1[$i]);\n        array_push($result, $list1[$i]);\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f'],\n    ['g', 'h', 'i']\n];\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list2[$key] = $value;\n    }\n    return $list2;\n}\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n$list2 = sort_sublists($list1);\nprint_r($list2);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\tforeach ($list1 as $key => $value) {\n\t\tsort($list1[$key]);\n\t}\n\treturn $list1;\n}\n\n$list1 = array(\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list3 = array(\n\tarray(\"g\", \"e\"),\n\tarray(\"e\", \"f\")\n);\n\necho \"list1: \" . PHP_EOL;\nprint_r(sort_sublists($list1));\necho \"list2: \" . PHP_EOL;\nprint_r(sort_sublists($list2));\necho \"list3: \" . PHP_EOL;\nprint_r(sort_sublists($list3));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "list1: \nArray\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nlist2: \nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nlist3: \nArray\n(\n    [0] => Array\n        (\n            [0] => e\n            [1] => g\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e', 'f'),\n    array('g', 'h', 'i'),\n);\n\n$list2 = sort_sublists($list1);\n\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\t$list2 = array();\n\tforeach ($list1 as $sublist) {\n\t\tsort($sublist);\n\t\t$list2[] = $sublist;\n\t}\n\treturn $list2;\n}\n\n$list1 = array(\n\tarray('a', 'b', 'c'),\n\tarray('d', 'e', 'f'),\n\tarray('g', 'h', 'i'),\n);\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    for ($i = 0; $i < count($list1); $i++) {\n        sort($list1[$i]);\n        $list2[] = $list1[$i];\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\", \"f\"),\n    array(\"g\", \"h\", \"i\"),\n);\n\n$list2 = sort_sublists($list1);\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e', 'f'),\n    array('g', 'h', 'i'),\n);\n\n$list2 = sort_sublists($list1);\n\nprint_r($list2);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\tforeach ($list1 as $key => $value) {\n\t\tsort($list1[$key]);\n\t}\n\treturn $list1;\n}\n\n$list1 = array(\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list3 = array(\n\tarray(\"g\", \"e\"),\n\tarray(\"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nprint_r(sort_sublists($list3));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => e\n            [1] => g\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        array_push($result, $sublist);\n    }\n    return $result;\n}\n$list1 = [['b', 'c', 'a'], ['d', 'e', 'f'], ['g', 'h', 'i']];\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$result = sort_sublists($list1);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = array();\n    foreach ($list1 as $list) {\n        sort($list);\n        array_push($new_list, $list);\n    }\n    return $new_list;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        array_push($list2, $sublist);\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array('a', 'c', 'b', 'e', 'd'),\n    array('g', 'e', 'f'),\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n    array(\"g\", \"h\", \"i\", \"j\"),\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\necho \"Original array:\\n\";\necho \"<pre>\";\nprint_r($list1);\necho \"</pre>\";\n\necho \"Sorted sublists:\\n\";\necho \"<pre>\";\nprint_r(sort_sublists($list1));\necho \"</pre>\";\n\necho \"Original array:\\n\";\necho \"<pre>\";\nprint_r($list2);\necho \"</pre>\";\n\necho \"Sorted sublists:\\n\";\necho \"<pre>\";\nprint_r(sort_sublists($list2));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Original array:\n<pre>Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => c\n            [2] => b\n            [3] => e\n            [4] => d\n        )\n\n    [1] => Array\n        (\n            [0] => g\n            [1] => e\n            [2] => f\n        )\n\n)\n</pre>Sorted sublists:\n<pre>Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n</pre>Original array:\n<pre>Array\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => c\n            [2] => b\n            [3] => e\n            [4] => d\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => e\n            [2] => f\n        )\n\n)\n</pre>Sorted sublists:\n<pre>Array\n(\n    [0] => Array\n        (\n ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list2[$key] = $value;\n    }\n    return $list2;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e', 'f'),\n    array('g', 'h', 'i')\n);\n\n$list2 = sort_sublists($list1);\n\nprint_r($list2);\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $result[$key] = $value;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array(\"a\", \"c\", \"b\", \"e\", \"d\"),\n    array(\"g\", \"e\", \"f\")\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\tfor ($i = 0; $i < count($list1); $i++) {\n\t\tsort($list1[$i]);\n\t}\n\treturn $list1;\n}\n\n$list1 = array(\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list3 = array(\n\tarray(\"g\", \"e\", \"f\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"h\", \"i\", \"j\")\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\nprint_r(sort_sublists($list3));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($value);\n        $list1[$key] = $value;\n    }\n    return $list1;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $new_list[] = $sublist;\n    }\n    return $new_list;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n  $result = [];\n  foreach ($list1 as $sublist) {\n    sort($sublist);\n    array_push($result, $sublist);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n  $result = array();\n  foreach ($list1 as $sublist) {\n    sort($sublist);\n    $result[] = $sublist;\n  }\n  return $result;\n}\n\n$list1 = array(\n  array('a', 'b', 'c'),\n  array('d', 'e'),\n  array('f', 'g', 'h'),\n  array('d', 'e'),\n  array('i', 'j', 'k', 'l'),\n  array('m', 'n'),\n  array('o'),\n);\n\n$result = sort_sublists($list1);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e'],\n    ['f', 'g', 'h'],\n    ['d', 'e'],\n    ['i', 'j', 'k', 'l'],\n    ['m', 'n'],\n    ['o']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n\t$result = array();\n\tforeach ($list1 as $sublist) {\n\t\tsort($sublist);\n\t\t$result[] = $sublist;\n\t}\n\treturn $result;\n}\n\n$list1 = array(\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list2 = array(\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\")\n);\n\n$list3 = array(\n\tarray(\"g\", \"e\", \"f\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"h\", \"i\", \"j\")\n);\n\n$list4 = array(\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\"),\n\tarray(\"g\", \"h\", \"i\", \"j\")\n);\n\n$list5 = array(\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\"),\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"g\", \"h\", \"i\", \"j\")\n);\n\n$list6 = array(\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\"),\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"g\", \"h\", \"i\", \"j\")\n);\n\n$list7 = array(\n\tarray(\"g\", \"h\", \"i\", \"j\"),\n\tarray(\"a\", \"c\", \"b\", \"e\", \"d\"),\n\tarray(\"g\", \"e\", \"f\"),\n\tarray(\"\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "\nParse error: syntax error, unexpected identifier \"green\", expecting \")\" in /tmp/tmpm8vqxnmb.php on line 63\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f'],\n    ['g', 'h', 'i']\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\n$list1 = [\n    ['a', 'b', 'c'],\n    ['d', 'e', 'f'],\n    ['g', 'h', 'i'],\n];\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n  $result = array();\n  foreach ($list1 as $sublist) {\n    sort($sublist);\n    $result[] = $sublist;\n  }\n  return $result;\n}\n\n$list1 = array(\n  array(\"lorem\", \"ipsum\", \"dolor\"),\n  array(\"sit\", \"amet\", \"consectetur\"),\n  array(\"adipiscing\", \"elit\", \"curabitur\"),\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => dolor\n            [1] => ipsum\n            [2] => lorem\n        )\n\n    [1] => Array\n        (\n            [0] => amet\n            [1] => consectetur\n            [2] => sit\n        )\n\n    [2] => Array\n        (\n            [0] => adipiscing\n            [1] => curabitur\n            [2] => elit\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array('a', 'c', 'b', 'e', 'd'),\n    array('g', 'e', 'f')\n);\n\n$list2 = array(\n    array('g', 'h', 'i', 'j'),\n    array('a', 'c', 'b', 'e', 'd'),\n    array('g', 'e', 'f')\n);\n\nprint_r(sort_sublists($list1));\nprint_r(sort_sublists($list2));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [1] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n            [3] => j\n        )\n\n    [1] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n            [3] => d\n            [4] => e\n        )\n\n    [2] => Array\n        (\n            [0] => e\n            [1] => f\n            [2] => g\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $list2 = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $list2[] = $sublist;\n    }\n    return $list2;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    foreach ($list1 as $key => $value) {\n        sort($list1[$key]);\n    }\n    return $list1;\n}\n\n$list1 = array(\n    array(\"a\", \"b\", \"c\"),\n    array(\"d\", \"e\", \"f\"),\n    array(\"g\", \"h\", \"i\"),\n);\n\nprint_r(sort_sublists($list1));\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n            [2] => f\n        )\n\n    [2] => Array\n        (\n            [0] => g\n            [1] => h\n            [2] => i\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $new_list = [];\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $new_list[] = $sublist;\n    }\n    return $new_list;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n  $result = [];\n  foreach ($list1 as $sublist) {\n    sort($sublist);\n    $result[] = $sublist;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to sort each subarray of strings in a given array of arrays.\nfunction sort_sublists($list1) {\n    $result = array();\n    foreach ($list1 as $sublist) {\n        sort($sublist);\n        $result[] = $sublist;\n    }\n    return $result;\n}\n\n$list1 = array(\n    array('a', 'b', 'c'),\n    array('d', 'e'),\n    array('f', 'g', 'h'),\n    array('d', 'e'),\n    array('i', 'j', 'k', 'l'),\n    array('m', 'n'),\n    array('o'),\n);\n\nprint_r(sort_sublists($list1));\n\nfunction candidate(...$args) {\n    return sort_sublists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"white\", \"black\", \"orange\"))) !== array(array(\"green\", \"orange\"), array(\"black\", \"white\"), array(\"black\", \"orange\", \"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) !== array(array(\"green\", \"orange\"), array(\"black\"), array(\"green\", \"orange\"), array(\"white\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"a\", \"b\"), array(\"d\", \"c\"), array(\"g\", \"h\"), array(\"f\", \"e\"))) !== array(array(\"a\", \"b\"), array(\"c\", \"d\"), array(\"g\", \"h\"), array(\"e\", \"f\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122934,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n            [2] => c\n        )\n\n    [1] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [2] => Array\n        (\n            [0] => f\n            [1] => g\n            [2] => h\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n    [4] => Array\n        (\n            [0] => i\n            [1] => j\n            [2] => k\n            [3] => l\n        )\n\n    [5] => Array\n        (\n            [0] => m\n            [1] => n\n        )\n\n    [6] => Array\n        (\n            [0] => o\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_265_list_split",
  "language": "php",
  "prompt": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_265_list_split.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n\t$result = array();\n\t$count = count($S);\n\tif ($count <= $step) {\n\t\t$result[] = $S;\n\t} else {\n\t\t$i = 0;\n\t\twhile ($i < $count) {\n\t\t\t$result[] = array_slice($S, $i, $step);\n\t\t\t$i += $step;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeu1f6nxo.php:27\nStack trace:\n#0 /tmp/tmpeu1f6nxo.php(32): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n  $result = array();\n  $i = 0;\n  while ($i < count($S)) {\n    $result[] = array_slice($S, $i, $step);\n    $i += $step;\n  }\n  return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35zdwpxt.php:21\nStack trace:\n#0 /tmp/tmp35zdwpxt.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp35zdwpxt.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk3thllo.php:22\nStack trace:\n#0 /tmp/tmpdk3thllo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdk3thllo.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    foreach ($S as $e) {\n        if ($i % $step == 0) {\n            $result[] = array();\n        }\n        $result[count($result) - 1][] = $e;\n        $i++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgcrqyex.php:25\nStack trace:\n#0 /tmp/tmpzgcrqyex.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzgcrqyex.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86hskf2y.php:25\nStack trace:\n#0 /tmp/tmp86hskf2y.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp86hskf2y.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                array_push($result[$j], $S[$i]);\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47pv5rei.php:29\nStack trace:\n#0 /tmp/tmp47pv5rei.php(34): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = count($S);\n    for ($i = 0; $i < $count; $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmput35lge_.php:17\nStack trace:\n#0 /tmp/tmput35lge_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmput35lge_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86hskf2y.php:25\nStack trace:\n#0 /tmp/tmp86hskf2y.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp86hskf2y.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = 0;\n    $temp = array();\n    foreach ($S as $item) {\n        if ($count == $step) {\n            array_push($result, $temp);\n            $temp = array();\n            $count = 0;\n        }\n        array_push($temp, $item);\n        $count++;\n    }\n    array_push($result, $temp);\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbv0z1uq5.php:29\nStack trace:\n#0 /tmp/tmpbv0z1uq5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbv0z1uq5.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        array_push($result, array_slice($S, $i, $step));\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1447r6c.php:23\nStack trace:\n#0 /tmp/tmpt1447r6c.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpt1447r6c.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwd_mu9iy.php:18\nStack trace:\n#0 /tmp/tmpwd_mu9iy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwd_mu9iy.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    $len = count($S);\n    while ($i < $len) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i >= $len) {\n                break;\n            }\n            $result[$j][$k] = $S[$i];\n            $i++;\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9a4185o.php:32\nStack trace:\n#0 /tmp/tmpe9a4185o.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe9a4185o.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdouwu0t.php:30\nStack trace:\n#0 /tmp/tmpxdouwu0t.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxdouwu0t.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk3thllo.php:22\nStack trace:\n#0 /tmp/tmpdk3thllo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdk3thllo.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nhrvekl.php:29\nStack trace:\n#0 /tmp/tmp1nhrvekl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1nhrvekl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdouwu0t.php:30\nStack trace:\n#0 /tmp/tmpxdouwu0t.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxdouwu0t.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 5;\n\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 7\n            [4] => 8\n        )\n\n    [1] => Array\n        (\n            [0] => 9\n            [1] => 10\n            [2] => 11\n            [3] => 12\n            [4] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 14\n            [1] => 15\n            [2] => 16\n            [3] => 17\n            [4] => 18\n        )\n\n    [3] => Array\n        (\n            [0] => 19\n            [1] => 20\n            [2] => 21\n            [3] => 22\n            [4] => 23\n        )\n\n    [4] => Array\n        (\n            [0] => 24\n            [1] => 25\n            [2] => 26\n            [3] => 27\n            [4] => 28\n        )\n\n    [5] => Array\n        (\n            [0] => 29\n            [1] => 30\n            [2] => 31\n            [3] => 32\n            [4] => 33\n        )\n\n    [6] => Array\n        (\n            [0] => 34\n            [1] => 35\n            [2] => 36\n            [3] => 37\n            [4] => ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 5, 1, 4, 9, 6);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 5\n            [2] => 1\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 9\n            [2] => 6\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73r6_97h.php:29\nStack trace:\n#0 /tmp/tmp73r6_97h.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp73r6_97h.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6s2aw64.php:16\nStack trace:\n#0 /tmp/tmpd6s2aw64.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpd6s2aw64.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jv3izr2.php:29\nStack trace:\n#0 /tmp/tmp2jv3izr2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2jv3izr2.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 10;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n            [5] => 8\n            [6] => 9\n            [7] => 10\n            [8] => 11\n            [9] => 12\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n            [5] => 18\n            [6] => 19\n            [7] => 20\n            [8] => 21\n            [9] => 22\n        )\n\n    [2] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n            [5] => 28\n            [6] => 29\n            [7] => 30\n            [8] => 31\n            [9] => 32\n        )\n\n    [3] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 37\n            [5] => 38\n            [6] => 39\n            [7] => 40\n            [8] => 41\n            [9] => 42\n  ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nhrvekl.php:29\nStack trace:\n#0 /tmp/tmp1nhrvekl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1nhrvekl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp453kelo7.php:21\nStack trace:\n#0 /tmp/tmp453kelo7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp453kelo7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptudxn3bc.php:29\nStack trace:\n#0 /tmp/tmptudxn3bc.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptudxn3bc.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = [];\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n            [1] => 11\n            [2] => 12\n        )\n\n    [4] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n        )\n\n    [5] => Array\n        (\n            [0] => 16\n            [1] => 17\n            [2] => 18\n        )\n\n    [6] => Array\n        (\n            [0] => 19\n            [1] => 20\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqvoj0h_s.php:28\nStack trace:\n#0 /tmp/tmpqvoj0h_s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqvoj0h_s.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i >= count($S)) {\n                break;\n            }\n            $result[$j][] = $S[$i];\n            $i++;\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprans5v_u.php:30\nStack trace:\n#0 /tmp/tmprans5v_u.php(35): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptudxn3bc.php:29\nStack trace:\n#0 /tmp/tmptudxn3bc.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptudxn3bc.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk3thllo.php:22\nStack trace:\n#0 /tmp/tmpdk3thllo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdk3thllo.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jv3izr2.php:29\nStack trace:\n#0 /tmp/tmp2jv3izr2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2jv3izr2.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 10;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n            [5] => 8\n            [6] => 9\n            [7] => 10\n            [8] => 11\n            [9] => 12\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n            [5] => 18\n            [6] => 19\n            [7] => 20\n            [8] => 21\n            [9] => 22\n        )\n\n    [2] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n            [5] => 28\n            [6] => 29\n            [7] => 30\n            [8] => 31\n            [9] => 32\n        )\n\n    [3] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 37\n            [5] => 38\n            [6] => 39\n            [7] => 40\n            [8] => 41\n            [9] => 42\n  ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                array_push($result[$j], $S[$i]);\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 10;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n            [5] => 8\n            [6] => 9\n            [7] => 10\n            [8] => 11\n            [9] => 12\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n            [5] => 18\n            [6] => 19\n            [7] => 20\n            [8] => 21\n            [9] => 22\n        )\n\n    [2] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n            [5] => 28\n            [6] => 29\n            [7] => 30\n            [8] => 31\n            [9] => 32\n        )\n\n    [3] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 37\n            [5] => 38\n            [6] => 39\n            [7] => 40\n            [8] => 41\n            [9] => 42\n  ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10);\n$step = 3;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeipc9vsm.php:29\nStack trace:\n#0 /tmp/tmpeipc9vsm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpeipc9vsm.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02lylj2f.php:28\nStack trace:\n#0 /tmp/tmp02lylj2f.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp02lylj2f.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                array_push($result[$j], $S[$i]);\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwvp005po.php:29\nStack trace:\n#0 /tmp/tmpwvp005po.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwvp005po.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = count($S);\n    $i = 0;\n    while ($i < $count) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps5aw2c_s.php:23\nStack trace:\n#0 /tmp/tmps5aw2c_s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmps5aw2c_s.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3avhriaf.php:29\nStack trace:\n#0 /tmp/tmp3avhriaf.php(34): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpicn9a16u.php:22\nStack trace:\n#0 /tmp/tmpicn9a16u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpicn9a16u.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                array_push($result[$j], $S[$i]);\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 10;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n            [5] => 8\n            [6] => 9\n            [7] => 10\n            [8] => 11\n            [9] => 12\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n            [5] => 18\n            [6] => 19\n            [7] => 20\n            [8] => 21\n            [9] => 22\n        )\n\n    [2] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n            [5] => 28\n            [6] => 29\n            [7] => 30\n            [8] => 31\n            [9] => 32\n        )\n\n    [3] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 37\n            [5] => 38\n            [6] => 39\n            [7] => 40\n            [8] => 41\n            [9] => 42\n  ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wr_k4rb.php:21\nStack trace:\n#0 /tmp/tmp9wr_k4rb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9wr_k4rb.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 7\n            [4] => 8\n        )\n\n    [1] => Array\n        (\n            [0] => 9\n            [1] => 10\n            [2] => 11\n            [3] => 12\n            [4] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 14\n            [1] => 15\n            [2] => 16\n            [3] => 17\n            [4] => 18\n        )\n\n    [3] => Array\n        (\n            [0] => 19\n            [1] => 20\n            [2] => 21\n            [3] => 22\n            [4] => 23\n        )\n\n    [4] => Array\n        (\n            [0] => 24\n            [1] => 25\n            [2] => 26\n            [3] => 27\n            [4] => 28\n        )\n\n    [5] => Array\n        (\n            [0] => 29\n            [1] => 30\n            [2] => 31\n            [3] => 32\n            [4] => 33\n        )\n\n    [6] => Array\n        (\n            [0] => 34\n            [1] => 35\n            [2] => 36\n            [3] => 37\n            [4] => ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $len = count($S);\n    while ($i < $len) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5y3opjay.php:23\nStack trace:\n#0 /tmp/tmp5y3opjay.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5y3opjay.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                array_push($result[$j], $S[$i]);\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppypqcd94.php:30\nStack trace:\n#0 /tmp/tmppypqcd94.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppypqcd94.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 10;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n            [5] => 8\n            [6] => 9\n            [7] => 10\n            [8] => 11\n            [9] => 12\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n            [5] => 18\n            [6] => 19\n            [7] => 20\n            [8] => 21\n            [9] => 22\n        )\n\n    [2] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n            [5] => 28\n            [6] => 29\n            [7] => 30\n            [8] => 31\n            [9] => 32\n        )\n\n    [3] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 37\n            [5] => 38\n            [6] => 39\n            [7] => 40\n            [8] => 41\n            [9] => 42\n  ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = [];\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhsfg1kd.php:25\nStack trace:\n#0 /tmp/tmphhsfg1kd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphhsfg1kd.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc50v0gvw.php:29\nStack trace:\n#0 /tmp/tmpc50v0gvw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpc50v0gvw.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpga_n9r5k.php:24\nStack trace:\n#0 /tmp/tmpga_n9r5k.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpga_n9r5k.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9sv7mfm8.php:25\nStack trace:\n#0 /tmp/tmp9sv7mfm8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9sv7mfm8.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        array_push($result, array_slice($S, $i, $step));\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_z93nq4.php:22\nStack trace:\n#0 /tmp/tmpj_z93nq4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpj_z93nq4.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$step = 3;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnvnhfs7.php:22\nStack trace:\n#0 /tmp/tmplnvnhfs7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplnvnhfs7.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                array_push($result[$j], $S[$i]);\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 10;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n            [5] => 8\n            [6] => 9\n            [7] => 10\n            [8] => 11\n            [9] => 12\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n            [5] => 18\n            [6] => 19\n            [7] => 20\n            [8] => 21\n            [9] => 22\n        )\n\n    [2] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n            [5] => 28\n            [6] => 29\n            [7] => 30\n            [8] => 31\n            [9] => 32\n        )\n\n    [3] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 37\n            [5] => 38\n            [6] => 39\n            [7] => 40\n            [8] => 41\n            [9] => 42\n  ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbn8sytst.php:19\nStack trace:\n#0 /tmp/tmpbn8sytst.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbn8sytst.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 5;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n        )\n\n    [1] => Array\n        (\n            [0] => 8\n            [1] => 9\n            [2] => 10\n            [3] => 11\n            [4] => 12\n        )\n\n    [2] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n        )\n\n    [3] => Array\n        (\n            [0] => 18\n            [1] => 19\n            [2] => 20\n            [3] => 21\n            [4] => 22\n        )\n\n    [4] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n        )\n\n    [5] => Array\n        (\n            [0] => 28\n            [1] => 29\n            [2] => 30\n            [3] => 31\n            [4] => 32\n        )\n\n    [6] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 3",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n\t$result = array();\n\t$count = count($S);\n\t$i = 0;\n\twhile($i < $count) {\n\t\t$result[] = array_slice($S, $i, $step);\n\t\t$i += $step;\n\t}\n\treturn $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq8ab7uhx.php:24\nStack trace:\n#0 /tmp/tmpq8ab7uhx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpq8ab7uhx.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jv3izr2.php:29\nStack trace:\n#0 /tmp/tmp2jv3izr2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2jv3izr2.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 10\n            [1] => 11\n            [2] => 12\n        )\n\n    [3] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n        )\n\n    [4] => Array\n        (\n            [0] => 16\n            [1] => 17\n            [2] => 18\n        )\n\n    [5] => Array\n        (\n            [0] => 19\n            [1] => 20\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbalmp_wl.php:29\nStack trace:\n#0 /tmp/tmpbalmp_wl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbalmp_wl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = 0;\n    $temp = array();\n    foreach ($S as $item) {\n        if ($count < $step) {\n            $temp[] = $item;\n        } else {\n            $result[] = $temp;\n            $temp = array();\n            $temp[] = $item;\n            $count = 0;\n        }\n        $count++;\n    }\n    if (!empty($temp)) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n$result = list_split($S, $step);\nvar_dump($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "array(9) {\n  [0]=>\n  array(3) {\n    [0]=>\n    int(2)\n    [1]=>\n    int(3)\n    [2]=>\n    int(5)\n  }\n  [1]=>\n  array(3) {\n    [0]=>\n    int(7)\n    [1]=>\n    int(11)\n    [2]=>\n    int(13)\n  }\n  [2]=>\n  array(3) {\n    [0]=>\n    int(17)\n    [1]=>\n    int(19)\n    [2]=>\n    int(23)\n  }\n  [3]=>\n  array(3) {\n    [0]=>\n    int(29)\n    [1]=>\n    int(31)\n    [2]=>\n    int(37)\n  }\n  [4]=>\n  array(3) {\n    [0]=>\n    int(41)\n    [1]=>\n    int(43)\n    [2]=>\n    int(47)\n  }\n  [5]=>\n  array(3) {\n    [0]=>\n    int(53)\n    [1]=>\n    int(59)\n    [2]=>\n    int(61)\n  }\n  [6]=>\n  array(3) {\n    [0]=>\n    int(67)\n    [1]=>\n    int(71)\n    [2]=>\n    int(73)\n  }\n  [7]=>\n  array(3) {\n    [0]=>\n    int(79)\n    [1]=>\n    int(83)\n    [2]=>\n    int(89)\n  }\n  [8]=>\n  array(1) {\n    [0]=>\n    int(97)\n  }\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppcwqwc44.php:33\nStack trace:\n#0 /tmp/tmppcwqwc44.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppcwqwc44.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp83jmwmer.php:20\nStack trace:\n#0 /tmp/tmp83jmwmer.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp83jmwmer.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                array_push($result[$j], $S[$i]);\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppypqcd94.php:30\nStack trace:\n#0 /tmp/tmppypqcd94.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppypqcd94.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = count($S);\n    for ($i = 0; $i < $count; $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmput35lge_.php:17\nStack trace:\n#0 /tmp/tmput35lge_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmput35lge_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7qywlx7u.php:23\nStack trace:\n#0 /tmp/tmp7qywlx7u.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7qywlx7u.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4xfkku70.php:23\nStack trace:\n#0 /tmp/tmp4xfkku70.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4xfkku70.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nhrvekl.php:29\nStack trace:\n#0 /tmp/tmp1nhrvekl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1nhrvekl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_zpcuo5.php:22\nStack trace:\n#0 /tmp/tmpb_zpcuo5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpb_zpcuo5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 10;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 7\n            [4] => 8\n            [5] => 9\n            [6] => 10\n            [7] => 11\n            [8] => 12\n            [9] => 13\n        )\n\n    [1] => Array\n        (\n            [0] => 14\n            [1] => 15\n            [2] => 16\n            [3] => 17\n            [4] => 18\n            [5] => 19\n            [6] => 20\n            [7] => 21\n            [8] => 22\n            [9] => 23\n        )\n\n    [2] => Array\n        (\n            [0] => 24\n            [1] => 25\n            [2] => 26\n            [3] => 27\n            [4] => 28\n            [5] => 29\n            [6] => 30\n            [7] => 31\n            [8] => 32\n            [9] => 33\n        )\n\n    [3] => Array\n        (\n            [0] => 34\n            [1] => 35\n            [2] => 36\n            [3] => 37\n            [4] => 38\n            [5] => 39\n            [6] => 40\n            [7] => 41\n            [8] => 42\n            [9] => 43\n ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6n5kni2v.php:23\nStack trace:\n#0 /tmp/tmp6n5kni2v.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6n5kni2v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4xfkku70.php:23\nStack trace:\n#0 /tmp/tmp4xfkku70.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4xfkku70.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = [];\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhsfg1kd.php:25\nStack trace:\n#0 /tmp/tmphhsfg1kd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphhsfg1kd.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 10;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n            [5] => 8\n            [6] => 9\n            [7] => 10\n            [8] => 11\n            [9] => 12\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n            [5] => 18\n            [6] => 19\n            [7] => 20\n            [8] => 21\n            [9] => 22\n        )\n\n    [2] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n            [5] => 28\n            [6] => 29\n            [7] => 30\n            [8] => 31\n            [9] => 32\n        )\n\n    [3] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 37\n            [5] => 38\n            [6] => 39\n            [7] => 40\n            [8] => 41\n            [9] => 42\n  ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0vxymxm.php:22\nStack trace:\n#0 /tmp/tmpj0vxymxm.php(27): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpttshm8o2.php:22\nStack trace:\n#0 /tmp/tmpttshm8o2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpttshm8o2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12);\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 10\n            [1] => 11\n            [2] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv7a_r05j.php:28\nStack trace:\n#0 /tmp/tmpv7a_r05j.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv7a_r05j.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 5;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n        )\n\n    [1] => Array\n        (\n            [0] => 8\n            [1] => 9\n            [2] => 10\n            [3] => 11\n            [4] => 12\n        )\n\n    [2] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n        )\n\n    [3] => Array\n        (\n            [0] => 18\n            [1] => 19\n            [2] => 20\n            [3] => 21\n            [4] => 22\n        )\n\n    [4] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n        )\n\n    [5] => Array\n        (\n            [0] => 28\n            [1] => 29\n            [2] => 30\n            [3] => 31\n            [4] => 32\n        )\n\n    [6] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 3",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = 0;\n    $temp = array();\n    foreach ($S as $value) {\n        if ($count < $step) {\n            $temp[] = $value;\n            $count++;\n        } else {\n            $result[] = $temp;\n            $temp = array();\n            $temp[] = $value;\n            $count = 1;\n        }\n    }\n    if (count($temp) > 0) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpesdqr_67.php:29\nStack trace:\n#0 /tmp/tmpesdqr_67.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpesdqr_67.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6s2aw64.php:16\nStack trace:\n#0 /tmp/tmpd6s2aw64.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpd6s2aw64.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$step = 3;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnvnhfs7.php:22\nStack trace:\n#0 /tmp/tmplnvnhfs7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplnvnhfs7.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hrv_123.php:29\nStack trace:\n#0 /tmp/tmp_hrv_123.php(34): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = [];\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zcrtuzh.php:28\nStack trace:\n#0 /tmp/tmp0zcrtuzh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0zcrtuzh.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 10\n            [1] => 11\n            [2] => 12\n        )\n\n    [3] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n        )\n\n    [4] => Array\n        (\n            [0] => 16\n            [1] => 17\n            [2] => 18\n        )\n\n    [5] => Array\n        (\n            [0] => 19\n            [1] => 20\n            [2] => 21\n        )\n\n    [6] => Array\n        (\n            [0] => 22\n            [1] => 23\n            [2] => 24\n        )\n\n    [7] => Array\n        (\n            [0] => 25\n            [1] => 26\n            [2] => 27\n        )\n\n    [8] => Array\n        (\n            [0] => 28\n            [1] => 29\n            [2] => 30\n        )\n\n    [9] => Array\n        (\n            [0] => 31\n            [1] => 32\n            [2]",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n  $result = array();\n  $i = 0;\n  while ($i < count($S)) {\n    $result[] = array_slice($S, $i, $step);\n    $i += $step;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpem09_dl7.php:18\nStack trace:\n#0 /tmp/tmpem09_dl7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpem09_dl7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    foreach ($S as $value) {\n        if ($i % $step == 0) {\n            $result[$j] = array();\n            $j++;\n        }\n        $result[$j - 1][] = $value;\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_i9m05y.php:23\nStack trace:\n#0 /tmp/tmpy_i9m05y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpy_i9m05y.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nhrvekl.php:29\nStack trace:\n#0 /tmp/tmp1nhrvekl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1nhrvekl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n        )\n\n    [1] => Array\n        (\n            [0] => 8\n            [1] => 9\n            [2] => 10\n            [3] => 11\n            [4] => 12\n        )\n\n    [2] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n        )\n\n    [3] => Array\n        (\n            [0] => 18\n            [1] => 19\n            [2] => 20\n            [3] => 21\n            [4] => 22\n        )\n\n    [4] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n        )\n\n    [5] => Array\n        (\n            [0] => 28\n            [1] => 29\n            [2] => 30\n            [3] => 31\n            [4] => 32\n        )\n\n    [6] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 3",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = count($S);\n    for ($i = 0; $i < $count; $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmput35lge_.php:17\nStack trace:\n#0 /tmp/tmput35lge_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmput35lge_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = 0;\n    $temp = array();\n    foreach ($S as $value) {\n        if ($count != $step) {\n            array_push($temp, $value);\n            $count++;\n        } else {\n            array_push($result, $temp);\n            $temp = array();\n            array_push($temp, $value);\n            $count = 1;\n        }\n    }\n    array_push($result, $temp);\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc84v4mjw.php:30\nStack trace:\n#0 /tmp/tmpc84v4mjw.php(35): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n\t$result = array();\n\t$i = 0;\n\t$j = 0;\n\twhile ($i < count($S)) {\n\t\t$result[$j] = array();\n\t\tfor ($k = 0; $k < $step; $k++) {\n\t\t\tif ($i < count($S)) {\n\t\t\t\tarray_push($result[$j], $S[$i]);\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t\t$j++;\n\t}\n\treturn $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpdynki3xq.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsy92wsug.php:22\nStack trace:\n#0 /tmp/tmpsy92wsug.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsy92wsug.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    foreach ($S as $value) {\n        if ($i % $step == 0) {\n            $j++;\n            $result[$j] = array();\n        }\n        $result[$j][] = $value;\n        $i++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [2] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [3] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [4] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [5] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphm49i2bc.php:26\nStack trace:\n#0 /tmp/tmphm49i2bc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphm49i2bc.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 10\n            [1] => 11\n            [2] => 12\n        )\n\n    [3] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n        )\n\n    [4] => Array\n        (\n            [0] => 16\n            [1] => 17\n            [2] => 18\n        )\n\n    [5] => Array\n        (\n            [0] => 19\n            [1] => 20\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbalmp_wl.php:29\nStack trace:\n#0 /tmp/tmpbalmp_wl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbalmp_wl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $count = 0;\n    $temp = [];\n    foreach ($S as $item) {\n        if ($count < $step) {\n            $temp[] = $item;\n            $count++;\n        } else {\n            $result[] = $temp;\n            $temp = [];\n            $temp[] = $item;\n            $count = 1;\n        }\n    }\n    if (count($temp) > 0) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n\n$S = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4r7j40cj.php:33\nStack trace:\n#0 /tmp/tmp4r7j40cj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4r7j40cj.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n\t$result = array();\n\t$count = count($S);\n\t$i = 0;\n\twhile ($i < $count) {\n\t\t$result[] = array_slice($S, $i, $step);\n\t\t$i += $step;\n\t}\n\treturn $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6iff_q77.php:23\nStack trace:\n#0 /tmp/tmp6iff_q77.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6iff_q77.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$step = 2;\n\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [2] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [3] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [4] => Array\n        (\n            [0] => 9\n            [1] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_e0afit.php:23\nStack trace:\n#0 /tmp/tmpj_e0afit.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpj_e0afit.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv12dqju0.php:29\nStack trace:\n#0 /tmp/tmpv12dqju0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpv12dqju0.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsy92wsug.php:22\nStack trace:\n#0 /tmp/tmpsy92wsug.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsy92wsug.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpicn9a16u.php:22\nStack trace:\n#0 /tmp/tmpicn9a16u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpicn9a16u.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 7\n            [4] => 8\n        )\n\n    [1] => Array\n        (\n            [0] => 9\n            [1] => 10\n            [2] => 11\n            [3] => 12\n            [4] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 14\n            [1] => 15\n            [2] => 16\n            [3] => 17\n            [4] => 18\n        )\n\n    [3] => Array\n        (\n            [0] => 19\n            [1] => 20\n            [2] => 21\n            [3] => 22\n            [4] => 23\n        )\n\n    [4] => Array\n        (\n            [0] => 24\n            [1] => 25\n            [2] => 26\n            [3] => 27\n            [4] => 28\n        )\n\n    [5] => Array\n        (\n            [0] => 29\n            [1] => 30\n            [2] => 31\n            [3] => 32\n            [4] => 33\n        )\n\n    [6] => Array\n        (\n            [0] => 34\n            [1] => 35\n            [2] => 36\n            [3] => 37\n            [4] => ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n$step = 10;\n\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n            [3] => 4\n            [4] => 5\n            [5] => 6\n            [6] => 7\n            [7] => 8\n            [8] => 9\n            [9] => 10\n        )\n\n    [1] => Array\n        (\n            [0] => 11\n            [1] => 12\n            [2] => 13\n            [3] => 14\n            [4] => 15\n            [5] => 16\n            [6] => 17\n            [7] => 18\n            [8] => 19\n            [9] => 20\n        )\n\n    [2] => Array\n        (\n            [0] => 21\n            [1] => 22\n            [2] => 23\n            [3] => 24\n            [4] => 25\n            [5] => 26\n            [6] => 27\n            [7] => 28\n            [8] => 29\n            [9] => 30\n        )\n\n    [3] => Array\n        (\n            [0] => 31\n            [1] => 32\n            [2] => 33\n            [3] => 34\n            [4] => 35\n            [5] => 36\n            [6] => 37\n            [7] => 38\n            [8] => 39\n            [9] => 40\n    ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    foreach ($S as $value) {\n        if ($i % $step == 0) {\n            $result[$j] = array();\n            $j++;\n        }\n        $result[$j - 1][] = $value;\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_i9m05y.php:23\nStack trace:\n#0 /tmp/tmpy_i9m05y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpy_i9m05y.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n\t$result = array();\n\t$i = 0;\n\twhile ($i < count($S)) {\n\t\t$result[] = array_slice($S, $i, $step);\n\t\t$i += $step;\n\t}\n\treturn $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4dl0f8z.php:22\nStack trace:\n#0 /tmp/tmpl4dl0f8z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpl4dl0f8z.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197,\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpwx729nwl.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 10;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n            [5] => 8\n            [6] => 9\n            [7] => 10\n            [8] => 11\n            [9] => 12\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n            [5] => 18\n            [6] => 19\n            [7] => 20\n            [8] => 21\n            [9] => 22\n        )\n\n    [2] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n            [5] => 28\n            [6] => 29\n            [7] => 30\n            [8] => 31\n            [9] => 32\n        )\n\n    [3] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 37\n            [5] => 38\n            [6] => 39\n            [7] => 40\n            [8] => 41\n            [9] => 42\n  ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nhrvekl.php:29\nStack trace:\n#0 /tmp/tmp1nhrvekl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1nhrvekl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf22kewje.php:22\nStack trace:\n#0 /tmp/tmpf22kewje.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpf22kewje.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $i = 0;\n    $result[$i] = [];\n    foreach ($S as $key => $val) {\n        if ($key % $step == 0 && $key != 0) {\n            $i++;\n            $result[$i] = [];\n        }\n        $result[$i][] = $val;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvmzr1mp.php:22\nStack trace:\n#0 /tmp/tmplvmzr1mp.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplvmzr1mp.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = count($S);\n    $i = 0;\n    while ($i < $count) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps5aw2c_s.php:23\nStack trace:\n#0 /tmp/tmps5aw2c_s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmps5aw2c_s.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 1, 2, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 5\n            [1] => 6\n            [2] => 7\n        )\n\n    [4] => Array\n        (\n            [0] => 8\n            [1] => 9\n            [2] => 0\n        )\n\n    [5] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [6] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg8cittk9.php:29\nStack trace:\n#0 /tmp/tmpg8cittk9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpg8cittk9.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 7;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n            [5] => 8\n            [6] => 9\n        )\n\n    [1] => Array\n        (\n            [0] => 10\n            [1] => 11\n            [2] => 12\n            [3] => 13\n            [4] => 14\n            [5] => 15\n            [6] => 16\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 18\n            [2] => 19\n            [3] => 20\n            [4] => 21\n            [5] => 22\n            [6] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 24\n            [1] => 25\n            [2] => 26\n            [3] => 27\n            [4] => 28\n            [5] => 29\n            [6] => 30\n        )\n\n    [4] => Array\n        (\n            [0] => 31\n            [1] => 32\n            [2] => 33\n            [3] => 34\n            [4] => 35\n            [5] => 36\n            [6] => 37\n        )\n\n    [5] => Array\n        (\n            [0] => 38\n            [1",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 10\n            [1] => 11\n            [2] => 12\n        )\n\n    [3] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n        )\n\n    [4] => Array\n        (\n            [0] => 16\n            [1] => 17\n            [2] => 18\n        )\n\n    [5] => Array\n        (\n            [0] => 19\n            [1] => 20\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbalmp_wl.php:29\nStack trace:\n#0 /tmp/tmpbalmp_wl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbalmp_wl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    foreach ($S as $value) {\n        if ($i % $step === 0) {\n            $result[] = array();\n        }\n        $result[count($result) - 1][] = $value;\n        $i++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4sx1p89l.php:26\nStack trace:\n#0 /tmp/tmp4sx1p89l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4sx1p89l.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n        )\n\n    [1] => Array\n        (\n            [0] => 8\n            [1] => 9\n            [2] => 10\n            [3] => 11\n            [4] => 12\n        )\n\n    [2] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n        )\n\n    [3] => Array\n        (\n            [0] => 18\n            [1] => 19\n            [2] => 20\n            [3] => 21\n            [4] => 22\n        )\n\n    [4] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n        )\n\n    [5] => Array\n        (\n            [0] => 28\n            [1] => 29\n            [2] => 30\n            [3] => 31\n            [4] => 32\n        )\n\n    [6] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 3",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 7\n            [4] => 8\n        )\n\n    [1] => Array\n        (\n            [0] => 9\n            [1] => 10\n            [2] => 11\n            [3] => 12\n            [4] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 14\n            [1] => 15\n            [2] => 16\n            [3] => 17\n            [4] => 18\n        )\n\n    [3] => Array\n        (\n            [0] => 19\n            [1] => 20\n            [2] => 21\n            [3] => 22\n            [4] => 23\n        )\n\n    [4] => Array\n        (\n            [0] => 24\n            [1] => 25\n            [2] => 26\n            [3] => 27\n            [4] => 28\n        )\n\n    [5] => Array\n        (\n            [0] => 29\n            [1] => 30\n            [2] => 31\n            [3] => 32\n            [4] => 33\n        )\n\n    [6] => Array\n        (\n            [0] => 34\n            [1] => 35\n            [2] => 36\n            [3] => 37\n            [4] => ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkcl30s4q.php:28\nStack trace:\n#0 /tmp/tmpkcl30s4q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkcl30s4q.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk3thllo.php:22\nStack trace:\n#0 /tmp/tmpdk3thllo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdk3thllo.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz2s5dze_.php:22\nStack trace:\n#0 /tmp/tmpz2s5dze_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpz2s5dze_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 10;\n\n$result = list_split($S, $step);\n\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 7\n            [4] => 8\n            [5] => 9\n            [6] => 10\n            [7] => 11\n            [8] => 12\n            [9] => 13\n        )\n\n    [1] => Array\n        (\n            [0] => 14\n            [1] => 15\n            [2] => 16\n            [3] => 17\n            [4] => 18\n            [5] => 19\n            [6] => 20\n            [7] => 21\n            [8] => 22\n            [9] => 23\n        )\n\n    [2] => Array\n        (\n            [0] => 24\n            [1] => 25\n            [2] => 26\n            [3] => 27\n            [4] => 28\n            [5] => 29\n            [6] => 30\n            [7] => 31\n            [8] => 32\n            [9] => 33\n        )\n\n    [3] => Array\n        (\n            [0] => 34\n            [1] => 35\n            [2] => 36\n            [3] => 37\n            [4] => 38\n            [5] => 39\n            [6] => 40\n            [7] => 41\n            [8] => 42\n            [9] => 43\n ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmgjlsqlz.php:30\nStack trace:\n#0 /tmp/tmpmgjlsqlz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmgjlsqlz.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpicn9a16u.php:22\nStack trace:\n#0 /tmp/tmpicn9a16u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpicn9a16u.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n\t$result = array();\n\t$i = 0;\n\twhile ($i < count($S)) {\n\t\t$result[] = array_slice($S, $i, $step);\n\t\t$i += $step;\n\t}\n\treturn $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy0fd0fre.php:22\nStack trace:\n#0 /tmp/tmpy0fd0fre.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpy0fd0fre.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    foreach($S as $value) {\n        if ($i % $step == 0) {\n            $result[$j] = array();\n            $j++;\n        }\n        $result[$j-1][] = $value;\n        $i++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0go30ayx.php:27\nStack trace:\n#0 /tmp/tmp0go30ayx.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0go30ayx.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkcl30s4q.php:28\nStack trace:\n#0 /tmp/tmpkcl30s4q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkcl30s4q.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6s2aw64.php:16\nStack trace:\n#0 /tmp/tmpd6s2aw64.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpd6s2aw64.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = count($S);\n    $i = 0;\n    while ($i < $count) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n\necho \"<pre>\";\nprint_r(list_split($S, $step));\necho \"</pre>\";\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "<pre>Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_sv5wfvv.php:26\nStack trace:\n#0 /tmp/tmp_sv5wfvv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_sv5wfvv.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = 0;\n    $temp = array();\n    foreach ($S as $value) {\n        $temp[] = $value;\n        $count++;\n        if ($count == $step) {\n            $result[] = $temp;\n            $temp = array();\n            $count = 0;\n        }\n    }\n    if ($count > 0) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "<pre>Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0rqrgngp.php:33\nStack trace:\n#0 /tmp/tmp0rqrgngp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0rqrgngp.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 10;\n\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n            [5] => 8\n            [6] => 9\n            [7] => 10\n            [8] => 11\n            [9] => 12\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n            [5] => 18\n            [6] => 19\n            [7] => 20\n            [8] => 21\n            [9] => 22\n        )\n\n    [2] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n            [5] => 28\n            [6] => 29\n            [7] => 30\n            [8] => 31\n            [9] => 32\n        )\n\n    [3] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 37\n            [5] => 38\n            [6] => 39\n            [7] => 40\n            [8] => 41\n            [9] => 42\n  ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwd_mu9iy.php:18\nStack trace:\n#0 /tmp/tmpwd_mu9iy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwd_mu9iy.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = count($S);\n    $i = 0;\n    while ($i < $count) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zwmc80x.php:22\nStack trace:\n#0 /tmp/tmp7zwmc80x.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7zwmc80x.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 7\n            [4] => 8\n        )\n\n    [1] => Array\n        (\n            [0] => 9\n            [1] => 10\n            [2] => 11\n            [3] => 12\n            [4] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 14\n            [1] => 15\n            [2] => 16\n            [3] => 17\n            [4] => 18\n        )\n\n    [3] => Array\n        (\n            [0] => 19\n            [1] => 20\n            [2] => 21\n            [3] => 22\n            [4] => 23\n        )\n\n    [4] => Array\n        (\n            [0] => 24\n            [1] => 25\n            [2] => 26\n            [3] => 27\n            [4] => 28\n        )\n\n    [5] => Array\n        (\n            [0] => 29\n            [1] => 30\n            [2] => 31\n            [3] => 32\n            [4] => 33\n        )\n\n    [6] => Array\n        (\n            [0] => 34\n            [1] => 35\n            [2] => 36\n            [3] => 37\n            [4] => ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 7\n            [4] => 8\n        )\n\n    [1] => Array\n        (\n            [0] => 9\n            [1] => 10\n            [2] => 11\n            [3] => 12\n            [4] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 14\n            [1] => 15\n            [2] => 16\n            [3] => 17\n            [4] => 18\n        )\n\n    [3] => Array\n        (\n            [0] => 19\n            [1] => 20\n            [2] => 21\n            [3] => 22\n            [4] => 23\n        )\n\n    [4] => Array\n        (\n            [0] => 24\n            [1] => 25\n            [2] => 26\n            [3] => 27\n            [4] => 28\n        )\n\n    [5] => Array\n        (\n            [0] => 29\n            [1] => 30\n            [2] => 31\n            [3] => 32\n            [4] => 33\n        )\n\n    [6] => Array\n        (\n            [0] => 34\n            [1] => 35\n            [2] => 36\n            [3] => 37\n            [4] => ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7t0hgy1.php:29\nStack trace:\n#0 /tmp/tmp_7t0hgy1.php(34): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n\t$result = array();\n\t$i = 0;\n\twhile ($i < count($S)) {\n\t\t$result[] = array_slice($S, $i, $step);\n\t\t$i += $step;\n\t}\n\treturn $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n\n$result = list_split($S, $step);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmu62xmw.php:24\nStack trace:\n#0 /tmp/tmpdmu62xmw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpdmu62xmw.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $count = 0;\n    $temp = [];\n    foreach ($S as $item) {\n        $count++;\n        $temp[] = $item;\n        if ($count == $step) {\n            $result[] = $temp;\n            $temp = [];\n            $count = 0;\n        }\n    }\n    if ($count > 0) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n\n$S = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxrtwl4ty.php:31\nStack trace:\n#0 /tmp/tmpxrtwl4ty.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxrtwl4ty.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6s2aw64.php:16\nStack trace:\n#0 /tmp/tmpd6s2aw64.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpd6s2aw64.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wr_k4rb.php:21\nStack trace:\n#0 /tmp/tmp9wr_k4rb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9wr_k4rb.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                array_push($result[$j], $S[$i]);\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 1, 2, 4, 5, 6, 7, 8, 9);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 5\n            [1] => 6\n            [2] => 7\n        )\n\n    [4] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1e1jand.php:29\nStack trace:\n#0 /tmp/tmpl1e1jand.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl1e1jand.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6s2aw64.php:16\nStack trace:\n#0 /tmp/tmpd6s2aw64.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpd6s2aw64.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n\t$result = array();\n\t$i = 0;\n\t$j = 0;\n\twhile ($i < count($S)) {\n\t\t$result[$j] = array();\n\t\tfor ($k = 0; $k < $step; $k++) {\n\t\t\tif ($i < count($S)) {\n\t\t\t\t$result[$j][] = $S[$i];\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t\t$j++;\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ffbahrm.php:25\nStack trace:\n#0 /tmp/tmp5ffbahrm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5ffbahrm.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = 0;\n    $temp = array();\n    foreach($S as $value) {\n        if ($count < $step) {\n            $temp[] = $value;\n            $count++;\n        } else {\n            $result[] = $temp;\n            $temp = array();\n            $temp[] = $value;\n            $count = 1;\n        }\n    }\n    if (!empty($temp)) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy8dji2qq.php:29\nStack trace:\n#0 /tmp/tmpy8dji2qq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpy8dji2qq.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12, 14, 17, 19, 22, 25, 27, 28, 33, 37);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n            [1] => 14\n            [2] => 17\n        )\n\n    [3] => Array\n        (\n            [0] => 19\n            [1] => 22\n            [2] => 25\n        )\n\n    [4] => Array\n        (\n            [0] => 27\n            [1] => 28\n            [2] => 33\n        )\n\n    [5] => Array\n        (\n            [0] => 37\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfa60flpi.php:23\nStack trace:\n#0 /tmp/tmpfa60flpi.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpfa60flpi.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9sv7mfm8.php:25\nStack trace:\n#0 /tmp/tmp9sv7mfm8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9sv7mfm8.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzxhh261k.php:23\nStack trace:\n#0 /tmp/tmpzxhh261k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzxhh261k.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmg8begir.php:21\nStack trace:\n#0 /tmp/tmpmg8begir.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmg8begir.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk3thllo.php:22\nStack trace:\n#0 /tmp/tmpdk3thllo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdk3thllo.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $temp = array();\n    for ($i = 0; $i < count($S); $i++) {\n        if ($i % $step == 0 && $i != 0) {\n            array_push($result, $temp);\n            $temp = array();\n        }\n        array_push($temp, $S[$i]);\n    }\n    array_push($result, $temp);\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjf89fqu.php:26\nStack trace:\n#0 /tmp/tmpqjf89fqu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqjf89fqu.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps5a9f3rk.php:29\nStack trace:\n#0 /tmp/tmps5a9f3rk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmps5a9f3rk.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = count($S);\n    for ($i = 0; $i < $count; $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgavdrp7x.php:22\nStack trace:\n#0 /tmp/tmpgavdrp7x.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgavdrp7x.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp83jmwmer.php:20\nStack trace:\n#0 /tmp/tmp83jmwmer.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp83jmwmer.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 5;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n        )\n\n    [1] => Array\n        (\n            [0] => 8\n            [1] => 9\n            [2] => 10\n            [3] => 11\n            [4] => 12\n        )\n\n    [2] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n        )\n\n    [3] => Array\n        (\n            [0] => 18\n            [1] => 19\n            [2] => 20\n            [3] => 21\n            [4] => 22\n        )\n\n    [4] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n        )\n\n    [5] => Array\n        (\n            [0] => 28\n            [1] => 29\n            [2] => 30\n            [3] => 31\n            [4] => 32\n        )\n\n    [6] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 3",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n  $result = array();\n  $i = 0;\n  while ($i < count($S)) {\n    array_push($result, array_slice($S, $i, $step));\n    $i += $step;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8m84vurp.php:18\nStack trace:\n#0 /tmp/tmp8m84vurp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp8m84vurp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86hskf2y.php:25\nStack trace:\n#0 /tmp/tmp86hskf2y.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp86hskf2y.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwd_mu9iy.php:18\nStack trace:\n#0 /tmp/tmpwd_mu9iy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwd_mu9iy.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    foreach ($S as $k => $v) {\n        if ($i == $step) {\n            $i = 0;\n            $j++;\n        }\n        $result[$j][$k] = $v;\n        $i++;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [3] => 4\n            [4] => 5\n            [5] => 6\n        )\n\n    [2] => Array\n        (\n            [6] => 7\n            [7] => 8\n            [8] => 9\n        )\n\n    [3] => Array\n        (\n            [9] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg5k7awmo.php:28\nStack trace:\n#0 /tmp/tmpg5k7awmo.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg5k7awmo.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n\t$result = array();\n\t$i = 0;\n\t$j = 0;\n\twhile ($i < count($S)) {\n\t\t$result[$j] = array();\n\t\tfor ($k = 0; $k < $step; $k++) {\n\t\t\tif ($i < count($S)) {\n\t\t\t\t$result[$j][] = $S[$i];\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t\t$j++;\n\t}\n\treturn $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv7saffzc.php:29\nStack trace:\n#0 /tmp/tmpv7saffzc.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpv7saffzc.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 10;\n\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n            [3] => 6\n            [4] => 7\n            [5] => 8\n            [6] => 9\n            [7] => 10\n            [8] => 11\n            [9] => 12\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n            [3] => 16\n            [4] => 17\n            [5] => 18\n            [6] => 19\n            [7] => 20\n            [8] => 21\n            [9] => 22\n        )\n\n    [2] => Array\n        (\n            [0] => 23\n            [1] => 24\n            [2] => 25\n            [3] => 26\n            [4] => 27\n            [5] => 28\n            [6] => 29\n            [7] => 30\n            [8] => 31\n            [9] => 32\n        )\n\n    [3] => Array\n        (\n            [0] => 33\n            [1] => 34\n            [2] => 35\n            [3] => 36\n            [4] => 37\n            [5] => 38\n            [6] => 39\n            [7] => 40\n            [8] => 41\n            [9] => 42\n  ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $arr = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $arr[] = array_slice($S, $i, $step);\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ep37xd3.php:16\nStack trace:\n#0 /tmp/tmp5ep37xd3.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp5ep37xd3.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$step = 3;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n            [1] => 11\n            [2] => 12\n        )\n\n    [4] => Array\n        (\n            [0] => 13\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3zi45bk.php:22\nStack trace:\n#0 /tmp/tmpu3zi45bk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpu3zi45bk.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $count = count($S);\n    while ($i < $count) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvcjiypzk.php:24\nStack trace:\n#0 /tmp/tmpvcjiypzk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvcjiypzk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwd_mu9iy.php:18\nStack trace:\n#0 /tmp/tmpwd_mu9iy.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwd_mu9iy.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0a8iqfkw.php:22\nStack trace:\n#0 /tmp/tmp0a8iqfkw.php(27): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wr_k4rb.php:21\nStack trace:\n#0 /tmp/tmp9wr_k4rb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9wr_k4rb.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    foreach ($S as $value) {\n        if ($i % $step == 0) {\n            $result[$j] = array();\n            $j++;\n        }\n        $result[$j - 1][] = $value;\n        $i++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqk7i_gfe.php:27\nStack trace:\n#0 /tmp/tmpqk7i_gfe.php(32): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4xfkku70.php:23\nStack trace:\n#0 /tmp/tmp4xfkku70.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4xfkku70.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpttshm8o2.php:22\nStack trace:\n#0 /tmp/tmpttshm8o2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpttshm8o2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk3thllo.php:22\nStack trace:\n#0 /tmp/tmpdk3thllo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdk3thllo.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 10\n            [1] => 11\n            [2] => 12\n        )\n\n    [3] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n        )\n\n    [4] => Array\n        (\n            [0] => 16\n            [1] => 17\n            [2] => 18\n        )\n\n    [5] => Array\n        (\n            [0] => 19\n            [1] => 20\n            [2] => 21\n        )\n\n    [6] => Array\n        (\n            [0] => 22\n            [1] => 23\n            [2] => 24\n        )\n\n    [7] => Array\n        (\n            [0] => 25\n            [1] => 26\n            [2] => 27\n        )\n\n    [8] => Array\n        (\n            [0] => 28\n            [1] => 29\n            [2] => 30\n        )\n\n    [9] => Array\n        (\n            [0] => 31\n            [1] => 32\n            [2]",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yxwipiq.php:22\nStack trace:\n#0 /tmp/tmp0yxwipiq.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp0yxwipiq.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    foreach($S as $key => $value) {\n        if($key % $step == 0) {\n            $result[$i] = array();\n        }\n        $result[$i][] = $value;\n        if($key % $step == $step - 1) {\n            $i++;\n        }\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxu4ycmk.php:26\nStack trace:\n#0 /tmp/tmphxu4ycmk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphxu4ycmk.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzxhh261k.php:23\nStack trace:\n#0 /tmp/tmpzxhh261k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzxhh261k.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        array_push($result, array_slice($S, $i, $step));\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6ze4moo.php:22\nStack trace:\n#0 /tmp/tmpi6ze4moo.php(27): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = [];\n    $count = 0;\n    $temp = [];\n    for ($i = 0; $i < count($S); $i++) {\n        if ($count < $step) {\n            array_push($temp, $S[$i]);\n            $count++;\n        } else {\n            array_push($result, $temp);\n            $temp = [];\n            array_push($temp, $S[$i]);\n            $count = 1;\n        }\n    }\n    array_push($result, $temp);\n    return $result;\n}\n\n$S = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n            [1] => 11\n            [2] => 12\n        )\n\n    [4] => Array\n        (\n            [0] => 13\n            [1] => 14\n            [2] => 15\n        )\n\n    [5] => Array\n        (\n            [0] => 16\n            [1] => 17\n            [2] => 18\n        )\n\n    [6] => Array\n        (\n            [0] => 19\n            [1] => 20\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchym85nv.php:30\nStack trace:\n#0 /tmp/tmpchym85nv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpchym85nv.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    for ($i = 0; $i < count($S); $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_om50sij.php:21\nStack trace:\n#0 /tmp/tmp_om50sij.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_om50sij.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $result[] = array_slice($S, 0, $step);\n    $result[] = array_slice($S, $step);\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n\n$result = list_split($S, $step);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n            [3] => 7\n            [4] => 8\n            [5] => 9\n            [6] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp8h166qn.php:21\nStack trace:\n#0 /tmp/tmpp8h166qn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp8h166qn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    foreach ($S as $item) {\n        if ($i % $step == 0) {\n            $result[] = array();\n        }\n        $result[count($result) - 1][] = $item;\n        $i++;\n    }\n    return $result;\n}\n\n$S = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpelt977pd.php:25\nStack trace:\n#0 /tmp/tmpelt977pd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpelt977pd.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    foreach ($S as $item) {\n        if ($i % $step == 0) {\n            $result[] = array();\n        }\n        $result[count($result) - 1][] = $item;\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u0mlz7u.php:21\nStack trace:\n#0 /tmp/tmp6u0mlz7u.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6u0mlz7u.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [3] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyapy_hez.php:21\nStack trace:\n#0 /tmp/tmpyapy_hez.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyapy_hez.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynx53wwx.php:21\nStack trace:\n#0 /tmp/tmpynx53wwx.php(26): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    $len = count($S);\n    while ($i < $len) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < $len) {\n                array_push($result[$j], $S[$i]);\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 10\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppk2ksktu.php:31\nStack trace:\n#0 /tmp/tmppk2ksktu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppk2ksktu.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpttshm8o2.php:22\nStack trace:\n#0 /tmp/tmpttshm8o2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpttshm8o2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zv04amp.php:18\nStack trace:\n#0 /tmp/tmp7zv04amp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7zv04amp.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $count = 0;\n    $temp = array();\n    foreach ($S as $item) {\n        if ($count < $step) {\n            $temp[] = $item;\n            $count++;\n        } else {\n            $result[] = $temp;\n            $temp = array();\n            $temp[] = $item;\n            $count = 1;\n        }\n    }\n    if (count($temp) > 0) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8lxhz8a.php:32\nStack trace:\n#0 /tmp/tmpc8lxhz8a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpc8lxhz8a.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n\n$result = list_split($S, $step);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 7\n            [1] => 11\n            [2] => 13\n        )\n\n    [2] => Array\n        (\n            [0] => 17\n            [1] => 19\n            [2] => 23\n        )\n\n    [3] => Array\n        (\n            [0] => 29\n            [1] => 31\n            [2] => 37\n        )\n\n    [4] => Array\n        (\n            [0] => 41\n            [1] => 43\n            [2] => 47\n        )\n\n    [5] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n        )\n\n    [6] => Array\n        (\n            [0] => 67\n            [1] => 71\n            [2] => 73\n        )\n\n    [7] => Array\n        (\n            [0] => 79\n            [1] => 83\n            [2] => 89\n        )\n\n    [8] => Array\n        (\n            [0] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr_1id212.php:24\nStack trace:\n#0 /tmp/tmpr_1id212.php(29): test()\n#1 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517190,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86hskf2y.php:25\nStack trace:\n#0 /tmp/tmp86hskf2y.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp86hskf2y.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 3\n            [2] => 5\n            [3] => 7\n            [4] => 11\n        )\n\n    [1] => Array\n        (\n            [0] => 13\n            [1] => 17\n            [2] => 19\n            [3] => 23\n            [4] => 29\n        )\n\n    [2] => Array\n        (\n            [0] => 31\n            [1] => 37\n            [2] => 41\n            [3] => 43\n            [4] => 47\n        )\n\n    [3] => Array\n        (\n            [0] => 53\n            [1] => 59\n            [2] => 61\n            [3] => 67\n            [4] => 71\n        )\n\n    [4] => Array\n        (\n            [0] => 73\n            [1] => 79\n            [2] => 83\n            [3] => 89\n            [4] => 97\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wr_k4rb.php:21\nStack trace:\n#0 /tmp/tmp9wr_k4rb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9wr_k4rb.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                array_push($result[$j], $S[$i]);\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$step = 3;\nprint_r(list_split($S, $step));\nfunction candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122421,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 6\n            [1] => 7\n            [2] => 8\n        )\n\n    [2] => Array\n        (\n            [0] => 9\n            [1] => 10\n            [2] => 11\n        )\n\n    [3] => Array\n        (\n            [0] => 12\n            [1] => 13\n            [2] => 14\n        )\n\n    [4] => Array\n        (\n            [0] => 15\n            [1] => 16\n            [2] => 17\n        )\n\n    [5] => Array\n        (\n            [0] => 18\n            [1] => 19\n            [2] => 20\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpde6rhusm.php:28\nStack trace:\n#0 /tmp/tmpde6rhusm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpde6rhusm.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
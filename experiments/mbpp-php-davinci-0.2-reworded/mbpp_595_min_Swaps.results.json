{
  "name": "mbpp_595_min_Swaps",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i=0; $i<$len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprrtmwmss.php:22\nStack trace:\n#0 /tmp/tmprrtmwmss.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprrtmwmss.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i = 0; $i < strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"100101\";\n$str2 = \"110010\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2d44rh0.php:21\nStack trace:\n#0 /tmp/tmpv2d44rh0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpv2d44rh0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"11101\", \"01111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpf1zoc1.php:19\nStack trace:\n#0 /tmp/tmpfpf1zoc1.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpfpf1zoc1.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfeyno9u5.php:20\nStack trace:\n#0 /tmp/tmpfeyno9u5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpfeyno9u5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\necho min_Swaps(\"10011\", \"10101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt_i0ptu5.php:19\nStack trace:\n#0 /tmp/tmpt_i0ptu5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpt_i0ptu5.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"110001\";\n$str2 = \"010001\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1m2c6l5.php:22\nStack trace:\n#0 /tmp/tmpc1m2c6l5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpc1m2c6l5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmldwmf81.php:21\nStack trace:\n#0 /tmp/tmpmldwmf81.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpmldwmf81.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i = 0; $i < strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"01100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5fgpecqo.php:22\nStack trace:\n#0 /tmp/tmp5fgpecqo.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5fgpecqo.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4sztac_q.php:19\nStack trace:\n#0 /tmp/tmp4sztac_q.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp4sztac_q.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkagipgs0.php:19\nStack trace:\n#0 /tmp/tmpkagipgs0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkagipgs0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25jz5n0d.php:21\nStack trace:\n#0 /tmp/tmp25jz5n0d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp25jz5n0d.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpf2vumj.php:20\nStack trace:\n#0 /tmp/tmpkpf2vumj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkpf2vumj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"10101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8qxnjljn.php:20\nStack trace:\n#0 /tmp/tmp8qxnjljn.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8qxnjljn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkshq1o.php:20\nStack trace:\n#0 /tmp/tmpqhkshq1o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqhkshq1o.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i=0; $i < strlen($str1); $i++) { \n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxajtvr0.php:20\nStack trace:\n#0 /tmp/tmpfxajtvr0.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpfxajtvr0.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpf2vumj.php:20\nStack trace:\n#0 /tmp/tmpkpf2vumj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkpf2vumj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hpalj8b.php:22\nStack trace:\n#0 /tmp/tmp7hpalj8b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7hpalj8b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt6mowe7.php:20\nStack trace:\n#0 /tmp/tmppt6mowe7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppt6mowe7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7kjy5z1k.php:22\nStack trace:\n#0 /tmp/tmp7kjy5z1k.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7kjy5z1k.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7s4slg5.php:20\nStack trace:\n#0 /tmp/tmpo7s4slg5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo7s4slg5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25jz5n0d.php:21\nStack trace:\n#0 /tmp/tmp25jz5n0d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp25jz5n0d.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7s4slg5.php:20\nStack trace:\n#0 /tmp/tmpo7s4slg5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo7s4slg5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps('10011', '01100');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nb6zvcj.php:19\nStack trace:\n#0 /tmp/tmp9nb6zvcj.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9nb6zvcj.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkshq1o.php:20\nStack trace:\n#0 /tmp/tmpqhkshq1o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqhkshq1o.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"110001\";\n$str2 = \"010111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsutpwqq0.php:23\nStack trace:\n#0 /tmp/tmpsutpwqq0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsutpwqq0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"11101\", \"01111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggq7gvs1.php:20\nStack trace:\n#0 /tmp/tmpggq7gvs1.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpggq7gvs1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjwsxjih.php:19\nStack trace:\n#0 /tmp/tmpgjwsxjih.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpgjwsxjih.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnowzturc.php:22\nStack trace:\n#0 /tmp/tmpnowzturc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnowzturc.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpra47wvv4.php:21\nStack trace:\n#0 /tmp/tmpra47wvv4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpra47wvv4.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgeo8q5b.php:21\nStack trace:\n#0 /tmp/tmpjgeo8q5b.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjgeo8q5b.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt6mowe7.php:20\nStack trace:\n#0 /tmp/tmppt6mowe7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppt6mowe7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpf2vumj.php:20\nStack trace:\n#0 /tmp/tmpkpf2vumj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkpf2vumj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7s4slg5.php:20\nStack trace:\n#0 /tmp/tmpo7s4slg5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo7s4slg5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpf2vumj.php:20\nStack trace:\n#0 /tmp/tmpkpf2vumj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkpf2vumj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt6mowe7.php:20\nStack trace:\n#0 /tmp/tmppt6mowe7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppt6mowe7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp244pof1b.php:23\nStack trace:\n#0 /tmp/tmp244pof1b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp244pof1b.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc_sf29n.php:20\nStack trace:\n#0 /tmp/tmpvc_sf29n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvc_sf29n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptuycjwqf.php:22\nStack trace:\n#0 /tmp/tmptuycjwqf.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptuycjwqf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11101\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwlpd51td.php:23\nStack trace:\n#0 /tmp/tmpwlpd51td.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwlpd51td.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $n = strlen($str1);\n    for ($i = 0; $i < $n; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw6dld37a.php:20\nStack trace:\n#0 /tmp/tmpw6dld37a.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpw6dld37a.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\necho min_Swaps(\"10011\", \"10101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93vm2jw6.php:19\nStack trace:\n#0 /tmp/tmp93vm2jw6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp93vm2jw6.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpf2vumj.php:20\nStack trace:\n#0 /tmp/tmpkpf2vumj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkpf2vumj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\necho min_Swaps('10001', '11111');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzf8hj1aw.php:18\nStack trace:\n#0 /tmp/tmpzf8hj1aw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpzf8hj1aw.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i = 0; $i < strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxlcc1ck.php:22\nStack trace:\n#0 /tmp/tmpuxlcc1ck.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpuxlcc1ck.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiom2pvhb.php:22\nStack trace:\n#0 /tmp/tmpiom2pvhb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpiom2pvhb.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkagipgs0.php:19\nStack trace:\n#0 /tmp/tmpkagipgs0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkagipgs0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpf2vumj.php:20\nStack trace:\n#0 /tmp/tmpkpf2vumj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkpf2vumj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11001\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8usib5nt.php:20\nStack trace:\n#0 /tmp/tmp8usib5nt.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8usib5nt.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25jz5n0d.php:21\nStack trace:\n#0 /tmp/tmp25jz5n0d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp25jz5n0d.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10001\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhyiekfz.php:21\nStack trace:\n#0 /tmp/tmpyhyiekfz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyhyiekfz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $n = strlen($str1);\n    for ($i = 0; $i < $n; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw6dld37a.php:20\nStack trace:\n#0 /tmp/tmpw6dld37a.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpw6dld37a.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10001\";\n$str2 = \"11111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxv71td28.php:22\nStack trace:\n#0 /tmp/tmpxv71td28.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxv71td28.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hpalj8b.php:22\nStack trace:\n#0 /tmp/tmp7hpalj8b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7hpalj8b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkagipgs0.php:19\nStack trace:\n#0 /tmp/tmpkagipgs0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkagipgs0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiom2pvhb.php:22\nStack trace:\n#0 /tmp/tmpiom2pvhb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpiom2pvhb.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $n = strlen($str1);\n    for ($i = 0; $i < $n; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"100101\";\n$str2 = \"110101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnb7tesj.php:23\nStack trace:\n#0 /tmp/tmpqnb7tesj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqnb7tesj.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnowzturc.php:22\nStack trace:\n#0 /tmp/tmpnowzturc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnowzturc.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"110001\";\n$str2 = \"010111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphozh9y9o.php:22\nStack trace:\n#0 /tmp/tmphozh9y9o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmphozh9y9o.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc_sf29n.php:20\nStack trace:\n#0 /tmp/tmpvc_sf29n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvc_sf29n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"11001\";\n$str2 = \"11111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx_vou6u.php:22\nStack trace:\n#0 /tmp/tmpnx_vou6u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnx_vou6u.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkshq1o.php:20\nStack trace:\n#0 /tmp/tmpqhkshq1o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqhkshq1o.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps('10011', '11100');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprnwo_xpy.php:20\nStack trace:\n#0 /tmp/tmprnwo_xpy.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprnwo_xpy.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11001\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjx4cgjgz.php:21\nStack trace:\n#0 /tmp/tmpjx4cgjgz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjx4cgjgz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkshq1o.php:20\nStack trace:\n#0 /tmp/tmpqhkshq1o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqhkshq1o.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfeyno9u5.php:20\nStack trace:\n#0 /tmp/tmpfeyno9u5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpfeyno9u5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10001\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw6d57jpu.php:23\nStack trace:\n#0 /tmp/tmpw6d57jpu.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpw6d57jpu.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmldwmf81.php:21\nStack trace:\n#0 /tmp/tmpmldwmf81.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpmldwmf81.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"1101\", \"1011\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_50tp6r.php:19\nStack trace:\n#0 /tmp/tmpa_50tp6r.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpa_50tp6r.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $n = strlen($str1);\n    for ($i = 0; $i < $n; $i++) {\n        if ($str1[$i] != $str2[$i])\n            $count++;\n    }\n    return $count / 2;\n}\n$str1 = \"100101\";\n$str2 = \"110101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg87jlx8.php:21\nStack trace:\n#0 /tmp/tmpdg87jlx8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdg87jlx8.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp528ex8op.php:23\nStack trace:\n#0 /tmp/tmp528ex8op.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp528ex8op.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"10011\", \"10101\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"11001\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"11011\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"00000\");\necho \"\\n\";\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2\n2\n1\n2\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprw9huefr.php:28\nStack trace:\n#0 /tmp/tmprw9huefr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprw9huefr.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2anof2v.php:23\nStack trace:\n#0 /tmp/tmpc2anof2v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpc2anof2v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i=0; $i<strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4i5cbqd.php:22\nStack trace:\n#0 /tmp/tmpd4i5cbqd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpd4i5cbqd.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"111000111\";\n$str2 = \"111111111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf9doqmc3.php:23\nStack trace:\n#0 /tmp/tmpf9doqmc3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpf9doqmc3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc_sf29n.php:20\nStack trace:\n#0 /tmp/tmpvc_sf29n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvc_sf29n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43c2n1ay.php:23\nStack trace:\n#0 /tmp/tmp43c2n1ay.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp43c2n1ay.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1100\", \"1001\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyrb313mh.php:21\nStack trace:\n#0 /tmp/tmpyrb313mh.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyrb313mh.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0fyo_lg.php:19\nStack trace:\n#0 /tmp/tmph0fyo_lg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmph0fyo_lg.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7s4slg5.php:20\nStack trace:\n#0 /tmp/tmpo7s4slg5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo7s4slg5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt6mowe7.php:20\nStack trace:\n#0 /tmp/tmppt6mowe7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppt6mowe7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt6mowe7.php:20\nStack trace:\n#0 /tmp/tmppt6mowe7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppt6mowe7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt6mowe7.php:20\nStack trace:\n#0 /tmp/tmppt6mowe7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppt6mowe7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkshq1o.php:20\nStack trace:\n#0 /tmp/tmpqhkshq1o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqhkshq1o.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt6mowe7.php:20\nStack trace:\n#0 /tmp/tmppt6mowe7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppt6mowe7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgrywgsb.php:19\nStack trace:\n#0 /tmp/tmpsgrywgsb.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpsgrywgsb.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7s4slg5.php:20\nStack trace:\n#0 /tmp/tmpo7s4slg5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo7s4slg5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkagipgs0.php:19\nStack trace:\n#0 /tmp/tmpkagipgs0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkagipgs0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkagipgs0.php:19\nStack trace:\n#0 /tmp/tmpkagipgs0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkagipgs0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc_sf29n.php:20\nStack trace:\n#0 /tmp/tmpvc_sf29n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvc_sf29n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkshq1o.php:20\nStack trace:\n#0 /tmp/tmpqhkshq1o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqhkshq1o.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"11001\";\n$str2 = \"11010\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zhkbmo4.php:22\nStack trace:\n#0 /tmp/tmp9zhkbmo4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9zhkbmo4.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpf2vumj.php:20\nStack trace:\n#0 /tmp/tmpkpf2vumj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkpf2vumj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkshq1o.php:20\nStack trace:\n#0 /tmp/tmpqhkshq1o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqhkshq1o.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkshq1o.php:20\nStack trace:\n#0 /tmp/tmpqhkshq1o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqhkshq1o.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hpalj8b.php:22\nStack trace:\n#0 /tmp/tmp7hpalj8b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7hpalj8b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"110001\", \"010001\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisi681t2.php:20\nStack trace:\n#0 /tmp/tmpisi681t2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpisi681t2.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvikihcu_.php:23\nStack trace:\n#0 /tmp/tmpvikihcu_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvikihcu_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2anof2v.php:23\nStack trace:\n#0 /tmp/tmpc2anof2v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpc2anof2v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpf2vumj.php:20\nStack trace:\n#0 /tmp/tmpkpf2vumj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkpf2vumj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ked4c4x.php:19\nStack trace:\n#0 /tmp/tmp3ked4c4x.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3ked4c4x.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xhp5z4j.php:22\nStack trace:\n#0 /tmp/tmp_xhp5z4j.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_xhp5z4j.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprxfe4vog.php:19\nStack trace:\n#0 /tmp/tmprxfe4vog.php(23): test()\n#1 {main}\n  thrown in /tmp/tmprxfe4vog.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"100101\";\n$str2 = \"101101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51j2zndl.php:22\nStack trace:\n#0 /tmp/tmp51j2zndl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp51j2zndl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"11101\", \"01111\");\necho \"\\n\";\necho min_Swaps(\"10011\", \"11100\");\necho \"\\n\";\necho min_Swaps(\"11111\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"10001\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"11100\", \"11111\");\necho \"\\n\";\necho min_Swaps(\"\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "\nParse error: syntax error, unexpected integer \"1101\", expecting \")\" in /tmp/tmpaesd91cd.php on line 64\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ked4c4x.php:19\nStack trace:\n#0 /tmp/tmp3ked4c4x.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3ked4c4x.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe29vx8ey.php:23\nStack trace:\n#0 /tmp/tmpe29vx8ey.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe29vx8ey.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11101\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1eafmng.php:22\nStack trace:\n#0 /tmp/tmpw1eafmng.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpw1eafmng.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1s3maufg.php:21\nStack trace:\n#0 /tmp/tmp1s3maufg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1s3maufg.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7s4slg5.php:20\nStack trace:\n#0 /tmp/tmpo7s4slg5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo7s4slg5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqc4m8opo.php:22\nStack trace:\n#0 /tmp/tmpqc4m8opo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqc4m8opo.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvikihcu_.php:23\nStack trace:\n#0 /tmp/tmpvikihcu_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvikihcu_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"100101\";\n$str2 = \"101001\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdvdbts6.php:23\nStack trace:\n#0 /tmp/tmppdvdbts6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppdvdbts6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc_sf29n.php:20\nStack trace:\n#0 /tmp/tmpvc_sf29n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvc_sf29n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"10011\", \"10101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfzuv05ji.php:19\nStack trace:\n#0 /tmp/tmpfzuv05ji.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfzuv05ji.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10111\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphseb99lc.php:20\nStack trace:\n#0 /tmp/tmphseb99lc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmphseb99lc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hpalj8b.php:22\nStack trace:\n#0 /tmp/tmp7hpalj8b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7hpalj8b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i=0; $i<strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpop3m4ohc.php:20\nStack trace:\n#0 /tmp/tmpop3m4ohc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpop3m4ohc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i=0; $i<$len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\n$str1 = '11101';\n$str2 = '10101';\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgh056pn8.php:23\nStack trace:\n#0 /tmp/tmpgh056pn8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgh056pn8.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpf2vumj.php:20\nStack trace:\n#0 /tmp/tmpkpf2vumj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkpf2vumj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2anof2v.php:23\nStack trace:\n#0 /tmp/tmpc2anof2v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpc2anof2v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"10101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8qxnjljn.php:20\nStack trace:\n#0 /tmp/tmp8qxnjljn.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8qxnjljn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"10101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zohkcb7.php:22\nStack trace:\n#0 /tmp/tmp1zohkcb7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1zohkcb7.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hpalj8b.php:22\nStack trace:\n#0 /tmp/tmp7hpalj8b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7hpalj8b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"11001\", \"01111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp69fn1cz9.php:20\nStack trace:\n#0 /tmp/tmp69fn1cz9.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp69fn1cz9.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6423m1op.php:19\nStack trace:\n#0 /tmp/tmp6423m1op.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6423m1op.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc_sf29n.php:20\nStack trace:\n#0 /tmp/tmpvc_sf29n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvc_sf29n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"10101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zohkcb7.php:22\nStack trace:\n#0 /tmp/tmp1zohkcb7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1zohkcb7.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i])\n            $count++;\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0s8wvrfe.php:19\nStack trace:\n#0 /tmp/tmp0s8wvrfe.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0s8wvrfe.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2anof2v.php:23\nStack trace:\n#0 /tmp/tmpc2anof2v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpc2anof2v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkagipgs0.php:19\nStack trace:\n#0 /tmp/tmpkagipgs0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkagipgs0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2anof2v.php:23\nStack trace:\n#0 /tmp/tmpc2anof2v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpc2anof2v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc_sf29n.php:20\nStack trace:\n#0 /tmp/tmpvc_sf29n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvc_sf29n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"11101\", \"01111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7i9rlqz5.php:20\nStack trace:\n#0 /tmp/tmp7i9rlqz5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7i9rlqz5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $str1 = str_split($str1);\n    $str2 = str_split($str2);\n    for($i = 0; $i < strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\necho min_Swaps('10011', '11100');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be of type string, array given in /tmp/tmp571rnd34.php:7\nStack trace:\n#0 /tmp/tmp571rnd34.php(15): min_Swaps(Array, Array)\n#1 {main}\n  thrown in /tmp/tmp571rnd34.php on line 7\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkc1sggwo.php:23\nStack trace:\n#0 /tmp/tmpkc1sggwo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkc1sggwo.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7kjy5z1k.php:22\nStack trace:\n#0 /tmp/tmp7kjy5z1k.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7kjy5z1k.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpf2vumj.php:20\nStack trace:\n#0 /tmp/tmpkpf2vumj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkpf2vumj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt6mowe7.php:20\nStack trace:\n#0 /tmp/tmppt6mowe7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppt6mowe7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpf2vumj.php:20\nStack trace:\n#0 /tmp/tmpkpf2vumj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkpf2vumj.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt6mowe7.php:20\nStack trace:\n#0 /tmp/tmppt6mowe7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppt6mowe7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0fyo_lg.php:19\nStack trace:\n#0 /tmp/tmph0fyo_lg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmph0fyo_lg.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnowzturc.php:22\nStack trace:\n#0 /tmp/tmpnowzturc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnowzturc.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xp5j8in.php:23\nStack trace:\n#0 /tmp/tmp0xp5j8in.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp0xp5j8in.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1s3maufg.php:21\nStack trace:\n#0 /tmp/tmp1s3maufg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1s3maufg.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    $str1 = str_split($str1);\n    $str2 = str_split($str2);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp22c_gq6f.php:24\nStack trace:\n#0 /tmp/tmp22c_gq6f.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp22c_gq6f.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10101\";\n$str2 = \"11011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7kjy5z1k.php:22\nStack trace:\n#0 /tmp/tmp7kjy5z1k.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7kjy5z1k.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"10011\", \"10101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfzuv05ji.php:19\nStack trace:\n#0 /tmp/tmpfzuv05ji.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfzuv05ji.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe29vx8ey.php:23\nStack trace:\n#0 /tmp/tmpe29vx8ey.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe29vx8ey.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"110001\", \"010001\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpax96b8jv.php:21\nStack trace:\n#0 /tmp/tmpax96b8jv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpax96b8jv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count1 = 0;\n    $count2 = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count1++;\n        }\n    }\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$len - $i - 1]) {\n            $count2++;\n        }\n    }\n    return min($count1, $count2);\n}\n\n$str1 = \"1101\";\n$str2 = \"1011\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4q0wovid.php:28\nStack trace:\n#0 /tmp/tmp4q0wovid.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4q0wovid.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i = 0; $i < strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapfezy1e.php:21\nStack trace:\n#0 /tmp/tmpapfezy1e.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpapfezy1e.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkagipgs0.php:19\nStack trace:\n#0 /tmp/tmpkagipgs0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkagipgs0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count1 = 0;\n    $count2 = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] == '1') {\n            $count1++;\n        }\n        if ($str2[$i] == '1') {\n            $count2++;\n        }\n    }\n    $diff = abs($count1 - $count2);\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $diff + $count - $diff;\n}\n\necho min_Swaps(\"10001\", \"11111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf04jmzy1.php:30\nStack trace:\n#0 /tmp/tmpf04jmzy1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpf04jmzy1.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho \"Minimum swaps required is \" . min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "Minimum swaps required is 2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwiosqmd4.php:23\nStack trace:\n#0 /tmp/tmpwiosqmd4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwiosqmd4.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe29vx8ey.php:23\nStack trace:\n#0 /tmp/tmpe29vx8ey.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe29vx8ey.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkshq1o.php:20\nStack trace:\n#0 /tmp/tmpqhkshq1o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqhkshq1o.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe29vx8ey.php:23\nStack trace:\n#0 /tmp/tmpe29vx8ey.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe29vx8ey.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt6mowe7.php:20\nStack trace:\n#0 /tmp/tmppt6mowe7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppt6mowe7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"110001\", \"010001\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpax96b8jv.php:21\nStack trace:\n#0 /tmp/tmpax96b8jv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpax96b8jv.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i=0; $i<$len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\necho min_Swaps(\"10001\", \"11111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mp10eue.php:21\nStack trace:\n#0 /tmp/tmp4mp10eue.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4mp10eue.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1100\", \"1001\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppfkqovo8.php:20\nStack trace:\n#0 /tmp/tmppfkqovo8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppfkqovo8.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $n = strlen($str1);\n    for ($i = 0; $i < $n; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouxq0s4w.php:23\nStack trace:\n#0 /tmp/tmpouxq0s4w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpouxq0s4w.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for($i = 0; $i < strlen($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\necho min_Swaps(\"1100\", \"1001\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmg8qa2ma.php:20\nStack trace:\n#0 /tmp/tmpmg8qa2ma.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmg8qa2ma.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8w1aeqt.php:22\nStack trace:\n#0 /tmp/tmpt8w1aeqt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpt8w1aeqt.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2anof2v.php:23\nStack trace:\n#0 /tmp/tmpc2anof2v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpc2anof2v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt6mowe7.php:20\nStack trace:\n#0 /tmp/tmppt6mowe7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppt6mowe7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiom2pvhb.php:22\nStack trace:\n#0 /tmp/tmpiom2pvhb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpiom2pvhb.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i = 0; $i < $len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\n$str1 = \"11100\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphw7alhqx.php:23\nStack trace:\n#0 /tmp/tmphw7alhqx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphw7alhqx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe29vx8ey.php:23\nStack trace:\n#0 /tmp/tmpe29vx8ey.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe29vx8ey.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvikihcu_.php:23\nStack trace:\n#0 /tmp/tmpvikihcu_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvikihcu_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"10101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwuulg2t.php:21\nStack trace:\n#0 /tmp/tmpmwuulg2t.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpmwuulg2t.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"10101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8qxnjljn.php:20\nStack trace:\n#0 /tmp/tmp8qxnjljn.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8qxnjljn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7s4slg5.php:20\nStack trace:\n#0 /tmp/tmpo7s4slg5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpo7s4slg5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11100\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d7rmum2.php:22\nStack trace:\n#0 /tmp/tmp1d7rmum2.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1d7rmum2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc_sf29n.php:20\nStack trace:\n#0 /tmp/tmpvc_sf29n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvc_sf29n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\necho min_Swaps(\"11101\", \"01111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcaedujp8.php:19\nStack trace:\n#0 /tmp/tmpcaedujp8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpcaedujp8.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10001\";\n$str2 = \"11111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxv71td28.php:22\nStack trace:\n#0 /tmp/tmpxv71td28.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxv71td28.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnowzturc.php:22\nStack trace:\n#0 /tmp/tmpnowzturc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnowzturc.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"110001\";\n$str2 = \"010111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsutpwqq0.php:23\nStack trace:\n#0 /tmp/tmpsutpwqq0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsutpwqq0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe29vx8ey.php:23\nStack trace:\n#0 /tmp/tmpe29vx8ey.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe29vx8ey.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for($i=0; $i<$len; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}\n\n$str1 = \"100101\";\n$str2 = \"110010\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96ffvt_h.php:23\nStack trace:\n#0 /tmp/tmp96ffvt_h.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp96ffvt_h.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1010001\";\n$str2 = \"1110010\";\necho min_Swaps($str1, $str2);\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpazetansy.php:23\nStack trace:\n#0 /tmp/tmpazetansy.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpazetansy.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"110001\", \"010001\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisi681t2.php:20\nStack trace:\n#0 /tmp/tmpisi681t2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpisi681t2.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiom2pvhb.php:22\nStack trace:\n#0 /tmp/tmpiom2pvhb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpiom2pvhb.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hpalj8b.php:22\nStack trace:\n#0 /tmp/tmp7hpalj8b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7hpalj8b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"1101\";\n$str2 = \"0101\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2anof2v.php:23\nStack trace:\n#0 /tmp/tmpc2anof2v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpc2anof2v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hpalj8b.php:22\nStack trace:\n#0 /tmp/tmp7hpalj8b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7hpalj8b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"11001\";\n$str2 = \"01111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnowzturc.php:22\nStack trace:\n#0 /tmp/tmpnowzturc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnowzturc.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25jz5n0d.php:21\nStack trace:\n#0 /tmp/tmp25jz5n0d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp25jz5n0d.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc_sf29n.php:20\nStack trace:\n#0 /tmp/tmpvc_sf29n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvc_sf29n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps('10011', '11100');\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprnwo_xpy.php:20\nStack trace:\n#0 /tmp/tmprnwo_xpy.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprnwo_xpy.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt6mowe7.php:20\nStack trace:\n#0 /tmp/tmppt6mowe7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppt6mowe7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"11100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgeo8q5b.php:21\nStack trace:\n#0 /tmp/tmpjgeo8q5b.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjgeo8q5b.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho min_Swaps(\"1101\", \"0101\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6423m1op.php:19\nStack trace:\n#0 /tmp/tmp6423m1op.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6423m1op.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"10011\", \"01100\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "2.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc_sf29n.php:20\nStack trace:\n#0 /tmp/tmpvc_sf29n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvc_sf29n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkagipgs0.php:19\nStack trace:\n#0 /tmp/tmpkagipgs0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkagipgs0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$str1 = \"10011\";\n$str2 = \"11100\";\necho \"Minimum swaps required to convert \" . $str1 . \" to \" . $str2 . \" is \" . min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122608,
      "stdout": "Minimum swaps required to convert 10011 to 11100 is 4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuojeliju.php:21\nStack trace:\n#0 /tmp/tmpuojeliju.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpuojeliju.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"10001\";\n$str2 = \"11111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxv71td28.php:22\nStack trace:\n#0 /tmp/tmpxv71td28.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxv71td28.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\necho min_Swaps(\"1101\", \"0111\");\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkshq1o.php:20\nStack trace:\n#0 /tmp/tmpqhkshq1o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqhkshq1o.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps($str1, $str2) {\n    $count = 0;\n    $len = strlen($str1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\n\n$str1 = \"110001\";\n$str2 = \"010111\";\necho min_Swaps($str1, $str2);\nfunction candidate(...$args) {\n    return min_Swaps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"1101\", \"1110\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"000\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"111\", \"110\") !== \"Not Possible\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122607,
      "stdout": "1.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsutpwqq0.php:23\nStack trace:\n#0 /tmp/tmpsutpwqq0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsutpwqq0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
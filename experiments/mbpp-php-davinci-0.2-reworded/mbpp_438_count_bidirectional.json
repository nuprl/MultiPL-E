{
  "name": "mbpp_438_count_bidirectional",
  "language": "php",
  "prompt": "<?php\n// Write a function to count bidirectional array pairs.\nfunction count_bidirectional($test_list) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_438_count_bidirectional.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return count_bidirectional(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(5, 6), array(1, 2), array(6, 5), array(9, 1), array(6, 5), array(2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 6), array(1, 3), array(6, 5), array(9, 1), array(6, 5), array(2, 1))) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 6), array(1, 2), array(6, 5), array(9, 2), array(6, 5), array(2, 1))) !== 4) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $count = 0;\n    foreach ($test_list as $key => $value) {\n        if (array_key_exists($value, $test_list)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\necho count_bidirectional($test_list);",
    "  $count = 0;\n  $length = count($test_list);\n  for ($i = 0; $i < $length; $i++) {\n    for ($j = $i + 1; $j < $length; $j++) {\n      if ($test_list[$i] + $test_list[$j] == 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n",
    "    $count = 0;\n    foreach ($test_list as $key => $value) {\n        if (array_key_exists($value, $test_list)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($test_list as $key => $value) {\n        if (array_key_exists($value, $test_list) && $key == $test_list[$value]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($test_list as $key => $value) {\n        if (array_key_exists($value, $test_list) && $key == $test_list[$value]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,",
    "    $count = 0;\n    foreach ($test_list as $key => $value) {\n        if (array_key_exists($value, $test_list)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$test_list = [\n    'a' => 'b',\n    'b' => 'c',\n    'c' => 'd',\n    'd' => 'e',\n    'e' => 'f',\n    'f' => 'g',\n    'g' => 'h',\n    'h' => 'i',\n    'i' => 'j',\n    'j' => 'k',\n    'k' => 'l',\n    'l' => 'm',\n    'm' => 'n',\n    'n' => 'o',\n    'o' => 'p',\n    'p' => 'q',\n    'q' => 'r',\n    'r' => 's',\n    's' => 't',\n    't' => 'u',\n    'u' => 'v',\n    'v' => 'w',\n    'w' => 'x',\n    'x' => 'y',\n    'y' => 'z',\n    'z' => 'a'\n];\n\necho count_bidirectional($test_list);",
    "  $count = 0;\n  foreach ($test_list as $key => $value) {\n    if (isset($test_list[$value]) && $test_list[$value] == $key) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n$test_list = [\n  [1, 2],\n  [3, 4],\n  [5, 6],\n  [7, 8],\n  [9, 10],\n  [11, 12],\n  [13, 14],\n  [15, 16],\n  [17, 18],\n  [19, 20],\n  [21, 22],\n  [23, 24],\n  [25, 26],\n  [27, 28],\n  [29, 30],\n  [31, 32],\n  [33, 34],\n  [35, 36],\n  [37, 38],\n  [39, 40],\n  [41, 42],\n  [43, 44],\n  [45, 46],\n  [47, 48],\n  [49, 50],\n  [51, 52],\n  [53, 54],\n  [55, 56],\n  [57, 58],\n  [59, 60],\n  [61, 62],\n  [63, 64],\n  [65, 66],\n  [67, 68],\n  [69, 70],\n  [71, 72],\n  [73, 74],\n  [75, 76],\n  [77, 78],\n  [79, 80],\n  [81, 82],\n  [83, 84],\n  [85, 86],\n  [87, 88],\n  [89, 90],\n  [91, 92],\n  [93, 94],\n  [95, 96],\n  [97, 98],\n  [99, 100],\n  [101, 102],\n  [103, 104],\n  [105, 106],\n  [107, 108],\n  [109, 110],\n  [111, 112],\n  [113, 114],\n  [115, 116],\n  [117, 118],\n  [119, 120],\n  [121, 122],\n  [123, 124],",
    "    $count = 0;\n    foreach ($test_list as $key => $value) {\n        if (isset($test_list[$value]) && $test_list[$value] == $key) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\necho count_bidirectional($test_list);",
    "    $count = 0;\n    foreach ($test_list as $key => $value) {\n        if (array_key_exists($value, $test_list) && $key == $test_list[$value]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\necho count_bidirectional($test_list);\n",
    "    $count = 0;\n    foreach ($test_list as $key => $value) {\n        if (isset($test_list[$value]) && $test_list[$value] == $key) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "  $count = 0;\n  foreach ($test_list as $key => $value) {\n    if (isset($test_list[$value]) && $test_list[$value] == $key) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1];\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2];\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3];\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4];\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5];\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6];\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7];\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8];\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4",
    "    $count = 0;\n    foreach ($test_list as $key => $value) {\n        if (isset($test_list[$value]) && $test_list[$value] == $key) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$test_list = [\n    [1, 2],\n    [3, 4],\n    [5, 6],\n    [7, 8],\n    [9, 10],\n    [11, 12],\n    [13, 14],\n    [15, 16],\n    [17, 18],\n    [19, 20],\n    [21, 22],\n    [23, 24],\n    [25, 26],\n    [27, 28],\n    [29, 30],\n    [31, 32],\n    [33, 34],\n    [35, 36],\n    [37, 38],\n    [39, 40],\n    [41, 42],\n    [43, 44],\n    [45, 46],\n    [47, 48],\n    [49, 50],\n    [51, 52],\n    [53, 54],\n    [55, 56],\n    [57, 58],\n    [59, 60],\n    [61, 62],\n    [63, 64],\n    [65, 66],\n    [67, 68],\n    [69, 70],\n    [71, 72],\n    [73, 74],\n    [75, 76],\n    [77, 78],\n    [79, 80],\n    [81, 82],\n    [83, 84],\n    [85, 86],\n    [87, 88],\n    [89, 90],\n    [91, 92],\n    [93, 94],\n    [95, 96],\n    [97, 98],\n    [99, 100],\n    [101, 102],\n    [103, 104],\n    [105, 106],\n    [107, 108],\n    [109, 110],\n    [111, 112],\n    [113, 114],\n    [115, 116],\n    [117, 118],\n    [119, 120],\n    [121, 122],\n    [123, 124],",
    "    $count = 0;\n    $test_list_length = count($test_list);\n    for ($i = 0; $i < $test_list_length; $i++) {\n        for ($j = $i + 1; $j < $test_list_length; $j++) {\n            if ($test_list[$i] + $test_list[$j] == 0) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n",
    "\t$count = 0;\n\tforeach ($test_list as $key => $value) {\n\t\tif (isset($test_list[$value]) && $test_list[$value] == $key) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n",
    "  $count = 0;\n  $test_list_length = count($test_list);\n  for ($i = 0; $i < $test_list_length; $i++) {\n    for ($j = 0; $j < $test_list_length; $j++) {\n      if ($test_list[$i] + $test_list[$j] == 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n",
    "    $count = 0;\n    foreach ($test_list as $key => $value) {\n        if (isset($test_list[$value]) && $test_list[$value] == $key) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($test_list as $key => $value) {\n        if (array_key_exists($value, $test_list) && $key == $test_list[$value]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\necho count_bidirectional($test_list);\n",
    "\t$count = 0;\n\t$length = count($test_list);\n\tfor ($i = 0; $i < $length; $i++) {\n\t\tfor ($j = $i + 1; $j < $length; $j++) {\n\t\t\tif ($test_list[$i] + $test_list[$j] == 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n",
    "    $count = 0;\n    $test_list_length = count($test_list);\n    for ($i = 0; $i < $test_list_length; $i++) {\n        for ($j = $i + 1; $j < $test_list_length; $j++) {\n            if ($test_list[$i] + $test_list[$j] == 0) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n",
    "    $count = 0;\n    foreach ($test_list as $key => $value) {\n        if (array_key_exists($value, $test_list) && $key == $test_list[$value]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n"
  ]
}
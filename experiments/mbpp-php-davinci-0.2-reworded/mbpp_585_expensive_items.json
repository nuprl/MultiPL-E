{
  "name": "mbpp_585_expensive_items",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the n most expensive items in a given dataset.\nfunction expensive_items($items, $n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_585_expensive_items.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return expensive_items(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09)), 2) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-1\", \"price\" => 101.1))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"name\" => \"Item-1\", \"price\" => 101.1), array(\"name\" => \"Item-2\", \"price\" => 555.22), array(\"name\" => \"Item-3\", \"price\" => 45.09), array(\"name\" => \"Item-4\", \"price\" => 22.75)), 1) !== array(array(\"name\" => \"Item-2\", \"price\" => 555.22))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 3],\n  ['name' => 'bananas', 'price' => 5],\n  ['name' => 'cherries', 'price' => 10],\n  ['name' => 'dates', 'price' => 2],\n  ['name' => 'eggplant', 'price' => 7],\n  ['name' => 'figs', 'price' => 4],\n  ['name' => 'grapes', 'price' => 6],\n  ['name' => 'honeydew', 'price' => 8],\n  ['name' => 'iceberg lettuce', 'price' => 1],\n  ['name' => 'jalapeno', 'price' => 9],\n  ['name' => 'kale', 'price' => 2],\n  ['name' => 'lemons', 'price' => 4],\n  ['name' => 'mangos', 'price' => 3],\n  ['name' => 'nectarines', 'price' => 5],\n  ['name' => 'oranges', 'price' => 7],\n  ['name' => 'pineapple', 'price' => 9],\n  ['name' => 'quince', 'price' => 8],\n  ['name' => 'raspberries', 'price' => 6],\n  ['name' => 'strawberries', 'price' => 4],\n  ['name' => 'tomatoes', 'price' => 3],\n  ['name' => 'ugli fruit', 'price' => 7],\n  ['name' => 'watermelon', 'price' => 2],\n  ['name' => 'xigua', 'price' => 9],\n  ['name' => 'yams', 'price' => 8],\n  ['name' => 'zucchini', 'price' => 6],\n];\n\n$n = 5;\n$result = expensive_items($items, $n);\nprint_r($result",
    "  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n",
    "  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 2.99],\n  ['name' => 'bananas', 'price' => 1.99],\n  ['name' => 'oranges', 'price' => 3.99],\n  ['name' => 'pears', 'price' => 4.99],\n  ['name' => 'grapes', 'price' => 5.99],\n  ['name' => 'pineapples', 'price' => 6.99],\n  ['name' => 'mangos', 'price' => 7.99],\n  ['name' => 'kiwis', 'price' => 8.99],\n  ['name' => 'strawberries', 'price' => 9.99],\n  ['name' => 'blueberries', 'price' => 10.99],\n];\n\nprint_r(expensive_items($items, 3));\n",
    "    $sorted_items = array_sort($items, function($item) {\n        return $item['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n",
    "    $items_by_price = [];\n    foreach ($items as $item) {\n        $items_by_price[$item['name']] = $item['price'];\n    }\n    arsort($items_by_price);\n    $most_expensive = array_slice($items_by_price, 0, $n, true);\n    return array_keys($most_expensive);\n}\n\n$items = [\n    ['name' => 'coffee', 'price' => 2.50],\n    ['name' => 'tea', 'price' => 1.50],\n    ['name' => 'biscuits', 'price' => 0.10],\n    ['name' => 'cake', 'price' => 1.00],\n];\n\n$most_expensive = expensive_items($items, 2);\n\nprint_r($most_expensive);\n",
    "  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 1.00],\n  ['name' => 'oranges', 'price' => 0.50],\n  ['name' => 'bananas', 'price' => 0.75],\n  ['name' => 'grapes', 'price' => 2.00],\n  ['name' => 'pineapples', 'price' => 3.50],\n];\n\nprint_r(expensive_items($items, 2));\n",
    "    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $a['price'] < $b['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'apples', 'price' => 100],\n    ['name' => 'bananas', 'price' => 200],\n    ['name' => 'oranges', 'price' => 300],\n    ['name' => 'grapes', 'price' => 400],\n    ['name' => 'pineapples', 'price' => 500],\n];\n\nprint_r(expensive_items($items, 2));\n",
    "    $sorted_items = array();\n    foreach ($items as $item) {\n        $sorted_items[$item['price']] = $item;\n    }\n    krsort($sorted_items);\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n    array('name' => 'item1', 'price' => 10),\n    array('name' => 'item2', 'price' => 9),\n    array('name' => 'item3', 'price' => 12),\n    array('name' => 'item4', 'price' => 8),\n    array('name' => 'item5', 'price' => 15),\n    array('name' => 'item6', 'price' => 14),\n    array('name' => 'item7', 'price' => 11),\n    array('name' => 'item8', 'price' => 13),\n    array('name' => 'item9', 'price' => 10),\n    array('name' => 'item10', 'price' => 9),\n);\n\n$n = 3;\n$result = expensive_items($items, $n);\n\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";",
    "  $items_by_price = array();\n  foreach ($items as $item) {\n    $items_by_price[$item['price']] = $item;\n  }\n  krsort($items_by_price);\n  return array_slice($items_by_price, 0, $n);\n}\n",
    "  $sorted = array();\n  foreach ($items as $item) {\n    $sorted[$item['price']] = $item;\n  }\n  krsort($sorted);\n  return array_slice($sorted, 0, $n);\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 10),\n  array('name' => 'item2', 'price' => 5),\n  array('name' => 'item3', 'price' => 15),\n  array('name' => 'item4', 'price' => 20),\n  array('name' => 'item5', 'price' => 25),\n  array('name' => 'item6', 'price' => 30),\n  array('name' => 'item7', 'price' => 35),\n  array('name' => 'item8', 'price' => 40),\n  array('name' => 'item9', 'price' => 45),\n  array('name' => 'item10', 'price' => 50),\n);\n\nprint_r(expensive_items($items, 3));\n",
    "  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n\n  return array_slice($sorted_items, 0, $n);\n}\n",
    "    $sorted_items = $items;\n    usort($sorted_items, function($a, $b) {\n        return $b['price'] - $a['price'];\n    });\n    return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n    ['name' => 'Item 1', 'price' => 10],\n    ['name' => 'Item 2', 'price' => 20],\n    ['name' => 'Item 3', 'price' => 30],\n    ['name' => 'Item 4', 'price' => 40],\n    ['name' => 'Item 5', 'price' => 50],\n    ['name' => 'Item 6', 'price' => 60],\n    ['name' => 'Item 7', 'price' => 70],\n    ['name' => 'Item 8', 'price' => 80],\n    ['name' => 'Item 9', 'price' => 90],\n    ['name' => 'Item 10', 'price' => 100],\n];\n\n$n = 3;\n\n$result = expensive_items($items, $n);\n\nprint_r($result);",
    "  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 2.49],\n  ['name' => 'oranges', 'price' => 3.99],\n  ['name' => 'bananas', 'price' => 1.99],\n  ['name' => 'grapes', 'price' => 4.99],\n  ['name' => 'pineapples', 'price' => 5.99],\n  ['name' => 'watermelons', 'price' => 6.99],\n  ['name' => 'peaches', 'price' => 7.99],\n];\n\nprint_r(expensive_items($items, 3));\n",
    "  $sorted_items = array();\n  foreach ($items as $item) {\n    $sorted_items[$item['price']] = $item;\n  }\n  krsort($sorted_items);\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = array(\n  array('name' => 'item1', 'price' => 100),\n  array('name' => 'item2', 'price' => 200),\n  array('name' => 'item3', 'price' => 300),\n  array('name' => 'item4', 'price' => 400),\n  array('name' => 'item5', 'price' => 500),\n  array('name' => 'item6', 'price' => 600),\n  array('name' => 'item7', 'price' => 700),\n  array('name' => 'item8', 'price' => 800),\n  array('name' => 'item9', 'price' => 900),\n  array('name' => 'item10', 'price' => 1000),\n);\n\n$expensive_items = expensive_items($items, 3);\nprint_r($expensive_items);\n",
    "  $sorted_items = array_sort($items, 'price', SORT_DESC);\n  return array_slice($sorted_items, 0, $n);\n}\n",
    "  $sorted = $items;\n  usort($sorted, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n\n$items = [\n  ['name' => 'Item 1', 'price' => 10],\n  ['name' => 'Item 2', 'price' => 20],\n  ['name' => 'Item 3', 'price' => 30],\n  ['name' => 'Item 4', 'price' => 40],\n  ['name' => 'Item 5', 'price' => 50],\n  ['name' => 'Item 6', 'price' => 60],\n  ['name' => 'Item 7', 'price' => 70],\n  ['name' => 'Item 8', 'price' => 80],\n  ['name' => 'Item 9', 'price' => 90],\n  ['name' => 'Item 10', 'price' => 100],\n];\n\nprint_r(expensive_items($items, 3));\n",
    "  $sorted_items = array_sort($items, function($item) {\n    return $item['price'];\n  });\n\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'coffee', 'price' => 2.50],\n  ['name' => 'tea', 'price' => 1.50],\n  ['name' => 'biscuits', 'price' => 0.10],\n  ['name' => 'cake', 'price' => 1.00]\n];\n\nprint_r(expensive_items($items, 2));\n",
    "  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $b['price'] - $a['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n",
    "  $sorted_items = $items;\n  usort($sorted_items, function($a, $b) {\n    return $a['price'] < $b['price'];\n  });\n  return array_slice($sorted_items, 0, $n);\n}\n\n$items = [\n  ['name' => 'apples', 'price' => 1.99],\n  ['name' => 'bananas', 'price' => 0.99],\n  ['name' => 'oranges', 'price' => 2.99],\n  ['name' => 'grapes', 'price' => 3.99],\n  ['name' => 'pineapples', 'price' => 4.99],\n];\n\nprint_r(expensive_items($items, 2));\n",
    "  $sorted = array_sort($items, function($item) {\n    return $item['price'];\n  });\n  return array_slice($sorted, 0, $n);\n}\n"
  ]
}
{
  "name": "mbpp_77_is_Diff",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum_even = 0;\n    $sum_odd = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $sum_even += $n % 10;\n        }\n        else {\n            $sum_odd += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    if (abs($sum_even - $sum_odd) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"True\";\n}\nelse {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpux1fkw9s.php:23\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpux1fkw9s.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)$n / 10;\n        $even_digits += $n % 10;\n        $n = (int)$n / 10;\n    }\n    return $odd_digits - $even_digits;\n}\n\n$n = 1234567;\n$diff = is_Diff($n);\nif ($diff % 11 == 0) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "\nDeprecated: Implicit conversion from float 123456.7 to int loses precision in /tmp/tmpnwob7zg3.php on line 9\n\nDeprecated: Implicit conversion from float 12345.6 to int loses precision in /tmp/tmpnwob7zg3.php on line 7\n\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpnwob7zg3.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpnwob7zg3.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmpnwob7zg3.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpnwob7zg3.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpnwob7zg3.php on line 9\nNot Divisible by 11\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpnwob7zg3.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpnwob7zg3.php on line 7\n\nDeprecated: Implicit conversion from fl",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if (($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"The number is divisible by 11\";\n} else {\n    echo \"The number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "The number is not divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmpcq6dud7i.php on line 8\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpcq6dud7i.php on line 10\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpcq6dud7i.php on line 8\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpcq6dud7i.php on line 10\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpcq6dud7i.php on line 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcq6dud7i.php:31\nStack trace:\n#0 /tmp/tmpcq6dud7i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcq6dud7i.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    if (($odd_digits - $even_digits) % 11 == 0)\n        return true;\n    else\n        return false;\n}\n\n$n = 123456789;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $n = abs($n);\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0)\n            $odd += $n[$i];\n        else\n            $even += $n[$i];\n    }\n    $diff = $odd - $even;\n    if ($diff % 11 == 0)\n        return true;\n    else\n        return false;\n}\n$n = \"123456789\";\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmpc11sp38x.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpc11sp38x.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpc11sp38x.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpc11sp38x.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpc11sp38x.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc11sp38x.php:29\nStack trace:\n#0 /tmp/tmpc11sp38x.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpc11sp38x.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509877,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tmp/t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)$n / 10;\n        $even_digits += $n % 10;\n        $n = (int)$n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "\nDeprecated: Implicit conversion from float 12345678.9 to int loses precision in /tmp/tmpjhkd5p6b.php on line 9\n\nDeprecated: Implicit conversion from float 1234567.8 to int loses precision in /tmp/tmpjhkd5p6b.php on line 7\n\nDeprecated: Implicit conversion from float 123456.7 to int loses precision in /tmp/tmpjhkd5p6b.php on line 9\n\nDeprecated: Implicit conversion from float 12345.6 to int loses precision in /tmp/tmpjhkd5p6b.php on line 7\n\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpjhkd5p6b.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpjhkd5p6b.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmpjhkd5p6b.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpjhkd5p6b.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpjhkd5p6b.php on line 9\nNo\nDeprecated: Implicit conversion from float 1234.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $temp = $n;\n    while ($temp > 0) {\n        $odd_digits += $temp % 10;\n        $temp /= 10;\n        $even_digits += $temp % 10;\n        $temp /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 1234567;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509881,
      "stdout": "\nDeprecated: Implicit conversion from float 123456.7 to int loses precision in /tmp/tmp49glwe94.php on line 10\n\nDeprecated: Implicit conversion from float 12345.67 to int loses precision in /tmp/tmp49glwe94.php on line 8\n\nDeprecated: Implicit conversion from float 1234.567 to int loses precision in /tmp/tmp49glwe94.php on line 10\n\nDeprecated: Implicit conversion from float 123.4567 to int loses precision in /tmp/tmp49glwe94.php on line 8\n\nDeprecated: Implicit conversion from float 12.34567 to int loses precision in /tmp/tmp49glwe94.php on line 10\n\nDeprecated: Implicit conversion from float 1.234567 to int loses precision in /tmp/tmp49glwe94.php on line 8\n\nDeprecated: Implicit conversion from float 0.1234567 to int loses precision in /tmp/tmp49glwe94.php on line 10\n\nDeprecated: Implicit conversion from float 0.01234567 to int loses precision in /tmp/tmp49glwe94.php on line 8\n\nDeprecated: Implicit conversion from float 0.001234567 to int loses precision in /tmp/tmp49glwe94.php on line 10\n\nDeprecated: Implicit conversion from float 0.0001234567 to int loses precision in /tmp/tmp49glwe94.php on line 8\n\nDeprecated: Implicit conversion from float 1.234567E-5 to int loses precision in /tmp/tmp49glwe94.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345670000000002E-6 to int loses precision in /tmp/tmp49glwe94.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345670000000002E-7 to int loses precision in /tmp/tmp49glwe94.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345670000000001E-8 to int loses precision in /tmp/tmp49glwe94.php on line 8\n\nDeprecated: Implicit conversion from float 1.234567E-9 to int loses precision in /tmp/tmp49glwe94.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345670000000001E-10 to int loses precision in /tmp/tmp49glwe94.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345670000000001E-11 to int loses precision in /tmp/tmp49glwe94.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345670000000001E-12 to int loses precis",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $count++;\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpis7cj2bb.php:24\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpis7cj2bb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum_even = 0;\n    $sum_odd = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($rem % 2 == 0) {\n            $sum_even = $sum_even + $rem;\n        } else {\n            $sum_odd = $sum_odd + $rem;\n        }\n        $n = $n / 10;\n    }\n    $diff = $sum_even - $sum_odd;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"The number is divisible by 11\";\n} else {\n    echo \"The number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509877,
      "stdout": "\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 12.34 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 1.234 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 0.1234 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 0.01234 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 0.001234 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 0.00012340000000000002 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-5 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-6 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 1.234E-7 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 1.234E-8 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 1.234E-9 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 1.234E-10 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-11 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-12 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 1.234E-13 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-14 to int loses precision in /tmp/tmpjd7rrjgd.php on line 7\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-15 to int loses precision in /tmp/tmpjd7rr",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509881,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmpmem5egun.php on line 9\n\nDeprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmpmem5egun.php on line 7\n\nDeprecated: Implicit conversion from float 0.121 to int loses precision in /tmp/tmpmem5egun.php on line 9\n\nDeprecated: Implicit conversion from float 0.0121 to int loses precision in /tmp/tmpmem5egun.php on line 7\n\nDeprecated: Implicit conversion from float 0.00121 to int loses precision in /tmp/tmpmem5egun.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012099999999999999 to int loses precision in /tmp/tmpmem5egun.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-5 to int loses precision in /tmp/tmpmem5egun.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-6 to int loses precision in /tmp/tmpmem5egun.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-7 to int loses precision in /tmp/tmpmem5egun.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-8 to int loses precision in /tmp/tmpmem5egun.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-9 to int loses precision in /tmp/tmpmem5egun.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-10 to int loses precision in /tmp/tmpmem5egun.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-11 to int loses precision in /tmp/tmpmem5egun.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-12 to int loses precision in /tmp/tmpmem5egun.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-13 to int loses precision in /tmp/tmpmem5egun.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-14 to int loses precision in /tmp/tmpmem5egun.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-15 to int loses precision in /tmp/tmpmem5egun.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-16 to int loses precision in /tmp/tmpmem5egun.php",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509877,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tmp/t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $num = $n;\n    while ($num > 0) {\n        $odd_digits += $num % 10;\n        $num = (int) ($num / 10);\n        $even_digits += $num % 10;\n        $num = (int) ($num / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 12;\nif (is_Diff($n))\n    echo \"Divisible\";\nelse\n    echo \"Not Divisible\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "Not Divisible",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 54545;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "\nDeprecated: Implicit conversion from float 5454.5 to int loses precision in /tmp/tmpsjydk2bw.php on line 9\n\nDeprecated: Implicit conversion from float 545.4 to int loses precision in /tmp/tmpsjydk2bw.php on line 7\n\nDeprecated: Implicit conversion from float 54.5 to int loses precision in /tmp/tmpsjydk2bw.php on line 9\n\nDeprecated: Implicit conversion from float 5.4 to int loses precision in /tmp/tmpsjydk2bw.php on line 7\n\nDeprecated: Implicit conversion from float 0.5 to int loses precision in /tmp/tmpsjydk2bw.php on line 9\nNot Divisible by 11\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpsjydk2bw.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpsjydk2bw.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmpsjydk2bw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpsjydk2bw.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $num = $n;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0) {\n        echo \"$num is divisible by 11\";\n    } else {\n        echo \"$num is not divisible by 11\";\n    }\n}\nis_Diff(121);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509873,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmphar4pd2s.php on line 10\n\nDeprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmphar4pd2s.php on line 8\n\nDeprecated: Implicit conversion from float 0.121 to int loses precision in /tmp/tmphar4pd2s.php on line 10\n\nDeprecated: Implicit conversion from float 0.0121 to int loses precision in /tmp/tmphar4pd2s.php on line 8\n\nDeprecated: Implicit conversion from float 0.00121 to int loses precision in /tmp/tmphar4pd2s.php on line 10\n\nDeprecated: Implicit conversion from float 0.00012099999999999999 to int loses precision in /tmp/tmphar4pd2s.php on line 8\n\nDeprecated: Implicit conversion from float 1.21E-5 to int loses precision in /tmp/tmphar4pd2s.php on line 10\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-6 to int loses precision in /tmp/tmphar4pd2s.php on line 8\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-7 to int loses precision in /tmp/tmphar4pd2s.php on line 10\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-8 to int loses precision in /tmp/tmphar4pd2s.php on line 8\n\nDeprecated: Implicit conversion from float 1.21E-9 to int loses precision in /tmp/tmphar4pd2s.php on line 10\n\nDeprecated: Implicit conversion from float 1.21E-10 to int loses precision in /tmp/tmphar4pd2s.php on line 8\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-11 to int loses precision in /tmp/tmphar4pd2s.php on line 10\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-12 to int loses precision in /tmp/tmphar4pd2s.php on line 8\n\nDeprecated: Implicit conversion from float 1.21E-13 to int loses precision in /tmp/tmphar4pd2s.php on line 10\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-14 to int loses precision in /tmp/tmphar4pd2s.php on line 8\n\nDeprecated: Implicit conversion from float 1.21E-15 to int loses precision in /tmp/tmphar4pd2s.php on line 10\n\nDeprecated: Implicit conversion from float 1.21E-16 to int loses precision in /tmp/tmphar",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)$n / 10;\n        $even_digits += $n % 10;\n        $n = (int)$n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp4xyynlx0.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmp4xyynlx0.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmp4xyynlx0.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmp4xyynlx0.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmp4xyynlx0.php on line 9\n\nDeprecated: Implicit conversion from float 121211.2 to int loses precision in /tmp/tmp4xyynlx0.php on line 9\n\nDeprecated: Implicit conversion from float 12121.1 to int loses precision in /tmp/tmp4xyynlx0.php on line 7\n\nDeprecated: Implicit conversion from float 1212.1 to int loses precision in /tmp/tmp4xyynlx0.php on line 9\n\nDeprecated: Implicit conversion from float 121.2 to int loses precision in /tmp/tmp4xyynlx0.php on line 7\n\nDeprecated: Implicit conversion from float 12.1 to int los",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    while ($n != 0) {\n        $odd_sum += $n % 10;\n        $n /= 10;\n        $even_sum += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_sum - $even_sum) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpdc824hwr.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpdc824hwr.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpdc824hwr.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpdc824hwr.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpdc824hwr.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpdc824hwr.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpdc824hwr.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpdc824hwr.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpdc824hwr.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpdc824hwr.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpdc824hwr.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpdc824hwr.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpdc824hwr.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpdc824hwr.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpdc824hwr.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpdc824hwr.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpdc824hwr.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tmp/t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n))\n    echo \"Divisible\";\nelse\n    echo \"Not Divisible\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "\nDeprecated: Implicit conversion from float 12345678.9 to int loses precision in /tmp/tmphd4tqo_8.php on line 9\n\nDeprecated: Implicit conversion from float 1234567.8900000001 to int loses precision in /tmp/tmphd4tqo_8.php on line 7\n\nDeprecated: Implicit conversion from float 123456.78900000002 to int loses precision in /tmp/tmphd4tqo_8.php on line 9\n\nDeprecated: Implicit conversion from float 12345.678900000003 to int loses precision in /tmp/tmphd4tqo_8.php on line 7\n\nDeprecated: Implicit conversion from float 1234.5678900000003 to int loses precision in /tmp/tmphd4tqo_8.php on line 9\n\nDeprecated: Implicit conversion from float 123.45678900000003 to int loses precision in /tmp/tmphd4tqo_8.php on line 7\n\nDeprecated: Implicit conversion from float 12.345678900000003 to int loses precision in /tmp/tmphd4tqo_8.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000003 to int loses precision in /tmp/tmphd4tqo_8.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345678900000004 to int loses precision in /tmp/tmphd4tqo_8.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345678900000004 to int loses precision in /tmp/tmphd4tqo_8.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345678900000003 to int loses precision in /tmp/tmphd4tqo_8.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345678900000002 to int loses precision in /tmp/tmphd4tqo_8.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-5 to int loses precision in /tmp/tmphd4tqo_8.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-6 to int loses precision in /tmp/tmphd4tqo_8.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-7 to int loses precision in /tmp/tmphd4tqo_8.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-8 to int loses precision in /tmp/tmphd4tqo_8.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345678900000001E-9 to int loses precision in /tmp/tmphd4tqo_8.php o",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n > 0) {\n        $even += $n % 10;\n        $n = (int) ($n / 10);\n        $odd += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd - $even) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits_sum = 0;\n    $even_digits_sum = 0;\n    while ($n > 0) {\n        $odd_digits_sum += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits_sum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits_sum - $even_digits_sum) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\necho is_Diff(121);\necho \"<br>\";\necho is_Diff(12);\necho \"<br>\";\necho is_Diff(123456789);\necho \"<br>\";\necho is_Diff(12345678);\necho \"<br>\";\necho is_Diff(1234567);\necho \"<br>\";\necho is_Diff(123456);\necho \"<br>\";\necho is_Diff(12345);\necho \"<br>\";\necho is_Diff(1234);\necho \"<br>\";\necho is_Diff(123);\necho \"<br>\";\necho is_Diff(12);\necho \"<br>\";\necho is_Diff(1);\necho \"<br>\";\necho is_Diff(0);\necho \"<br>\";\necho is_Diff(11);\necho \"<br>\";\necho is_Diff(111);\necho \"<br>\";\necho is_Diff(1111);\necho \"<br>\";\necho is_Diff(11111);\necho \"<br>\";\necho is_Diff(111111);\necho \"<br>\";\necho is_Diff(1111111);\necho \"<br>\";\necho is_Diff(11111111);\necho \"<br>\";\necho is_Diff(111111111);\necho \"<br>\";\necho is_Diff(1111111111);\necho \"<br>\";\necho is_Diff(11111111111);\necho \"<br>\";\necho is_Diff(111111111111);\necho \"<br>\";\necho is_Diff(1111111111111);\necho \"<br>\";\necho is_Diff(11111111111111);\necho \"<br>\";\necho is_Diff(111111111111111);\necho \"<br>\";\necho is_Diff(1111111111111111);\necho \"<br>\";\necho is_\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpl8_eokbg.php on line 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $odd_digits - $even_digits;\n}\n\n$n = 123456789;\n$diff = is_Diff($n);\nif ($diff % 11 == 0) {\n    echo \"The number is divisible by 11\";\n} else {\n    echo \"The number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "The number is not divisible by 11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4by58m7.php:27\nStack trace:\n#0 /tmp/tmpp4by58m7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpp4by58m7.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $count++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n$n = intval(trim(fgets(STDIN)));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpz9ugvwh5.php on line 11\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpz9ugvwh5.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpz9ugvwh5.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpz9ugvwh5.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpz9ugvwh5.php on line 11\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpz9ugvwh5.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpz9ugvwh5.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpz9ugvwh5.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpz9ugvwh5.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpz9ugvwh5.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpz9ugvwh5.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpz9ugvwh5.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpz9ugvwh5.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpz9ugvwh5.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpz9ugvwh5.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpz9ugvwh5.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpz9ugvwh5.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precisi",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits_sum = 0;\n    $even_digits_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits_sum += $n % 10;\n        } else {\n            $odd_digits_sum += $n % 10;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if (abs($odd_digits_sum - $even_digits_sum) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpnfsns9_5.php:23\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpnfsns9_5.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum_even = 0;\n    $sum_odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum_even += $n[$i];\n        } else {\n            $sum_odd += $n[$i];\n        }\n    }\n    $diff = $sum_even - $sum_odd;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits_sum = 0;\n    $even_digits_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits_sum += $n % 10;\n        } else {\n            $odd_digits_sum += $n % 10;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if (abs($odd_digits_sum - $even_digits_sum) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpewlmbvl7.php on line 11\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpewlmbvl7.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpewlmbvl7.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpewlmbvl7.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpewlmbvl7.php on line 11\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpewlmbvl7.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpewlmbvl7.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpewlmbvl7.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpewlmbvl7.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpewlmbvl7.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpewlmbvl7.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpewlmbvl7.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpewlmbvl7.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpewlmbvl7.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpewlmbvl7.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpewlmbvl7.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpewlmbvl7.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precisi",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if (($odd - $even) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(123456789) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456780) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456781) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456782) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456783) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456784) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456785) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456786) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456787) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456788) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456790) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456791) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456792) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456793) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456794) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456795) ? \"\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\" in /tmp/tmpwk8bm8g5.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        $count++;\n        if ($count % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = $n / 10;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "True\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpdput1139.php on line 10\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpdput1139.php on line 12\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpdput1139.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpdput1139.php on line 12\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpdput1139.php on line 10\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpdput1139.php on line 12\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpdput1139.php on line 10\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpdput1139.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpdput1139.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpdput1139.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpdput1139.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpdput1139.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpdput1139.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpdput1139.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpdput1139.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpdput1139.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpdput1139.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int lose",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmpwsurp1_5.php on line 9\n\nDeprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmpwsurp1_5.php on line 7\n\nDeprecated: Implicit conversion from float 0.121 to int loses precision in /tmp/tmpwsurp1_5.php on line 9\n\nDeprecated: Implicit conversion from float 0.0121 to int loses precision in /tmp/tmpwsurp1_5.php on line 7\n\nDeprecated: Implicit conversion from float 0.00121 to int loses precision in /tmp/tmpwsurp1_5.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012099999999999999 to int loses precision in /tmp/tmpwsurp1_5.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-5 to int loses precision in /tmp/tmpwsurp1_5.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-6 to int loses precision in /tmp/tmpwsurp1_5.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-7 to int loses precision in /tmp/tmpwsurp1_5.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-8 to int loses precision in /tmp/tmpwsurp1_5.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-9 to int loses precision in /tmp/tmpwsurp1_5.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-10 to int loses precision in /tmp/tmpwsurp1_5.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-11 to int loses precision in /tmp/tmpwsurp1_5.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-12 to int loses precision in /tmp/tmpwsurp1_5.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-13 to int loses precision in /tmp/tmpwsurp1_5.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-14 to int loses precision in /tmp/tmpwsurp1_5.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-15 to int loses precision in /tmp/tmpwsurp1_5.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-16 to int loses precision in /tmp/tmpwsurp1_5.php",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = $n / 10;\n        $even_digits += $n % 10;\n        $n = $n / 10;\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0)\n        return true;\n    else\n        return false;\n}\n$n = 12;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpc7xskup2.php on line 9\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpc7xskup2.php on line 7\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpc7xskup2.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmpc7xskup2.php on line 7\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmpc7xskup2.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmpc7xskup2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmpc7xskup2.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmpc7xskup2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmpc7xskup2.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmpc7xskup2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmpc7xskup2.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmpc7xskup2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmpc7xskup2.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmpc7xskup2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmpc7xskup2.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmpc7xskup2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmpc7xskup2.php on line 9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 12;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $n = abs($n);\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\necho is_Diff(121);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\necho is_Diff(121);\necho is_Diff(123);\necho is_Diff(12);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(12345);\necho is_Diff(123456);\necho is_Diff(1234567);\necho is_Diff(12345678);\necho is_Diff(123456789);\necho is_Diff(1234567890);\necho is_Diff(12345678901);\necho is_Diff(123456789012);\necho is_Diff(1234567890123);\necho is_Diff(12345678901234);\necho is_Diff(123456789012345);\necho is_Diff(1234567890123456);\necho is_Diff(12345678901234567);\necho is_Diff(123456789012345678);\necho is_Diff(1234567890123456789);\necho is_Diff(12345678901234567890);\necho is_Diff(123456789012345678901);\necho is_Diff(1234567890123456789012);\necho is_Diff(12345678901234567890123);\necho is_Diff(123456789012345678901234);\necho is_Diff(1234567890123456789012345);\necho is_Diff(12345678901234567890123456);\necho is_Diff(123456789012345678901234567);\necho is_Diff(1234567890123456789012345678);\necho is_Diff(12345678901234567890123456789);\necho is_\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmp1a8hz8gv.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 545;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "\nDeprecated: Implicit conversion from float 54.5 to int loses precision in /tmp/tmpgp_1eg1v.php on line 9\n\nDeprecated: Implicit conversion from float 5.45 to int loses precision in /tmp/tmpgp_1eg1v.php on line 7\n\nDeprecated: Implicit conversion from float 0.545 to int loses precision in /tmp/tmpgp_1eg1v.php on line 9\n\nDeprecated: Implicit conversion from float 0.05450000000000001 to int loses precision in /tmp/tmpgp_1eg1v.php on line 7\n\nDeprecated: Implicit conversion from float 0.005450000000000001 to int loses precision in /tmp/tmpgp_1eg1v.php on line 9\n\nDeprecated: Implicit conversion from float 0.0005450000000000001 to int loses precision in /tmp/tmpgp_1eg1v.php on line 7\n\nDeprecated: Implicit conversion from float 5.450000000000001E-5 to int loses precision in /tmp/tmpgp_1eg1v.php on line 9\n\nDeprecated: Implicit conversion from float 5.450000000000001E-6 to int loses precision in /tmp/tmpgp_1eg1v.php on line 7\n\nDeprecated: Implicit conversion from float 5.450000000000001E-7 to int loses precision in /tmp/tmpgp_1eg1v.php on line 9\n\nDeprecated: Implicit conversion from float 5.4500000000000005E-8 to int loses precision in /tmp/tmpgp_1eg1v.php on line 7\n\nDeprecated: Implicit conversion from float 5.450000000000001E-9 to int loses precision in /tmp/tmpgp_1eg1v.php on line 9\n\nDeprecated: Implicit conversion from float 5.450000000000001E-10 to int loses precision in /tmp/tmpgp_1eg1v.php on line 7\n\nDeprecated: Implicit conversion from float 5.4500000000000006E-11 to int loses precision in /tmp/tmpgp_1eg1v.php on line 9\n\nDeprecated: Implicit conversion from float 5.4500000000000004E-12 to int loses precision in /tmp/tmpgp_1eg1v.php on line 7\n\nDeprecated: Implicit conversion from float 5.45E-13 to int loses precision in /tmp/tmpgp_1eg1v.php on line 9\n\nDeprecated: Implicit conversion from float 5.45E-14 to int loses precision in /tmp/tmpgp_1eg1v.php on line 7\n\nDeprecated: Implicit conversion from float 5.45E-15 to int loses precision in /tmp/tmpgp_1eg1v.php on line 9\n\nDeprecated: Implicit conversion from float 5.45E-1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return abs($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = $n / 10;\n        $count++;\n    }\n    if (abs($odd_sum - $even_sum) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpdmsxf0hp.php on line 11\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpdmsxf0hp.php on line 9\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpdmsxf0hp.php on line 11\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmpdmsxf0hp.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmpdmsxf0hp.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmpdmsxf0hp.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmpdmsxf0hp.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmpdmsxf0hp.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmpdmsxf0hp.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmpdmsxf0hp.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmpdmsxf0hp.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmpdmsxf0hp.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmpdmsxf0hp.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmpdmsxf0hp.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmpdmsxf0hp.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmpdmsxf0hp.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmpdmsxf0hp.php on",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n > 0) {\n        $even += $n % 10;\n        $n /= 10;\n        $odd += $n % 10;\n        $n /= 10;\n    }\n    return ($even - $odd) % 11 == 0;\n}\necho is_Diff(121);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmpvt0gi7p9.php on line 9\n\nDeprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmpvt0gi7p9.php on line 7\n\nDeprecated: Implicit conversion from float 0.121 to int loses precision in /tmp/tmpvt0gi7p9.php on line 9\n\nDeprecated: Implicit conversion from float 0.0121 to int loses precision in /tmp/tmpvt0gi7p9.php on line 7\n\nDeprecated: Implicit conversion from float 0.00121 to int loses precision in /tmp/tmpvt0gi7p9.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012099999999999999 to int loses precision in /tmp/tmpvt0gi7p9.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-5 to int loses precision in /tmp/tmpvt0gi7p9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-6 to int loses precision in /tmp/tmpvt0gi7p9.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-7 to int loses precision in /tmp/tmpvt0gi7p9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-8 to int loses precision in /tmp/tmpvt0gi7p9.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-9 to int loses precision in /tmp/tmpvt0gi7p9.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-10 to int loses precision in /tmp/tmpvt0gi7p9.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-11 to int loses precision in /tmp/tmpvt0gi7p9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-12 to int loses precision in /tmp/tmpvt0gi7p9.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-13 to int loses precision in /tmp/tmpvt0gi7p9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-14 to int loses precision in /tmp/tmpvt0gi7p9.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-15 to int loses precision in /tmp/tmpvt0gi7p9.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-16 to int loses precision in /tmp/tmpvt0gi7p9.php",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if (($even - $odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmpg402n_0w.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpg402n_0w.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpg402n_0w.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpg402n_0w.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpg402n_0w.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg402n_0w.php:32\nStack trace:\n#0 /tmp/tmpg402n_0w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg402n_0w.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(readline());\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpy_qbssiv.php:15\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpy_qbssiv.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n != 0) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpfz86bgsu.php:23\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpfz86bgsu.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $flag = 0;\n    $num = $n;\n    while ($num > 0) {\n        if ($flag == 0) {\n            $odd_digits += $num % 10;\n            $flag = 1;\n        } else {\n            $even_digits += $num % 10;\n            $flag = 0;\n        }\n        $num = (int) ($num / 10);\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return abs($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even_sum = 0;\n    $odd_sum = 0;\n    while ($n > 0) {\n        $even_sum += $n % 10;\n        $n = (int)($n / 10);\n        $odd_sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($even_sum - $odd_sum) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n[$i];\n        } else {\n            $even_digits += $n[$i];\n        }\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmp002uouax.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp002uouax.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp002uouax.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp002uouax.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp002uouax.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp002uouax.php:33\nStack trace:\n#0 /tmp/tmp002uouax.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp002uouax.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n != 0) {\n        $even += $n % 10;\n        $n = (int) ($n / 10);\n        $odd += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 12;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n > 0) {\n        $even += $n % 10;\n        $n = (int) $n / 10;\n        $odd += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\necho is_Diff(121);\necho \"<br>\";\necho is_Diff(14);\necho \"<br>\";\necho is_Diff(15);\necho \"<br>\";\necho is_Diff(16);\necho \"<br>\";\necho is_Diff(17);\necho \"<br>\";\necho is_Diff(18);\necho \"<br>\";\necho is_Diff(19);\necho \"<br>\";\necho is_Diff(20);\necho \"<br>\";\necho is_Diff(21);\necho \"<br>\";\necho is_Diff(22);\necho \"<br>\";\necho is_Diff(23);\necho \"<br>\";\necho is_Diff(24);\necho \"<br>\";\necho is_Diff(25);\necho \"<br>\";\necho is_Diff(26);\necho \"<br>\";\necho is_Diff(27);\necho \"<br>\";\necho is_Diff(28);\necho \"<br>\";\necho is_Diff(29);\necho \"<br>\";\necho is_Diff(30);\necho \"<br>\";\necho is_Diff(31);\necho \"<br>\";\necho is_Diff(32);\necho \"<br>\";\necho is_Diff(33);\necho \"<br>\";\necho is_Diff(34);\necho \"<br>\";\necho is_Diff(35);\necho \"<br>\";\necho is_Diff(36);\necho \"<br>\";\necho is_Diff(37);\necho \"<br>\";\necho is_Diff(38);\necho \"<br>\";\necho is_Diff(39);\necho \"<br>\";\necho is_Diff(40);\necho \"<br>\";\necho is_Diff(41);\necho \"<br>\";\necho is_Diff(42);\necho \"<br>\";\necho is\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpprin1ax9.php on line 76\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmp4y7n1jir.php:15\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp4y7n1jir.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"true\";\n} else {\n    echo \"false\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpe2wl34hw.php:15\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpe2wl34hw.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n[$i];\n        } else {\n            $even_digits += $n[$i];\n        }\n    }\n    $diff = $odd_digits - $even_digits;\n    return $diff;\n}\n\n$n = \"1234\";\n$diff = is_Diff($n);\nif ($diff % 11 == 0) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmptua1im5i.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmptua1im5i.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmptua1im5i.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmptua1im5i.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmptua1im5i.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptua1im5i.php:30\nStack trace:\n#0 /tmp/tmptua1im5i.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptua1im5i.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $str = (string)$n;\n    $len = strlen($str);\n    $odd = 0;\n    $even = 0;\n    for($i = 0; $i < $len; $i++) {\n        if($i % 2 == 0) {\n            $odd += $str[$i];\n        } else {\n            $even += $str[$i];\n        }\n    }\n    $diff = $odd - $even;\n    if($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 1234;\nif(is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $count++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmphlqwcpjq.php on line 11\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmphlqwcpjq.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmphlqwcpjq.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmphlqwcpjq.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmphlqwcpjq.php on line 11\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmphlqwcpjq.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmphlqwcpjq.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmphlqwcpjq.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmphlqwcpjq.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmphlqwcpjq.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmphlqwcpjq.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmphlqwcpjq.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmphlqwcpjq.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmphlqwcpjq.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmphlqwcpjq.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmphlqwcpjq.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmphlqwcpjq.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precisi",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return abs($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpbidwz9o9.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpbidwz9o9.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmpbidwz9o9.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpbidwz9o9.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpbidwz9o9.php on line 9\n\nDeprecated: Implicit conversion from float 121211.2 to int loses precision in /tmp/tmpbidwz9o9.php on line 9\n\nDeprecated: Implicit conversion from float 12121.1 to int loses precision in /tmp/tmpbidwz9o9.php on line 7\n\nDeprecated: Implicit conversion from float 1212.1 to int loses precision in /tmp/tmpbidwz9o9.php on line 9\n\nDeprecated: Implicit conversion from float 121.2 to int loses precision in /tmp/tmpbidwz9o9.php on line 7\n\nDeprecated: Implicit conversion from float 12.1 to int los",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return $odd_digits - $even_digits;\n}\n\n$n = 123456789;\nif (is_Diff($n) % 11 == 0) {\n    echo \"The number $n is divisible by 11\";\n} else {\n    echo \"The number $n is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122678,
      "stdout": "\nDeprecated: Implicit conversion from float 12345678.9 to int loses precision in /tmp/tmprs6adcqi.php on line 9\n\nDeprecated: Implicit conversion from float 1234567.8900000001 to int loses precision in /tmp/tmprs6adcqi.php on line 7\n\nDeprecated: Implicit conversion from float 123456.78900000002 to int loses precision in /tmp/tmprs6adcqi.php on line 9\n\nDeprecated: Implicit conversion from float 12345.678900000003 to int loses precision in /tmp/tmprs6adcqi.php on line 7\n\nDeprecated: Implicit conversion from float 1234.5678900000003 to int loses precision in /tmp/tmprs6adcqi.php on line 9\n\nDeprecated: Implicit conversion from float 123.45678900000003 to int loses precision in /tmp/tmprs6adcqi.php on line 7\n\nDeprecated: Implicit conversion from float 12.345678900000003 to int loses precision in /tmp/tmprs6adcqi.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000003 to int loses precision in /tmp/tmprs6adcqi.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345678900000004 to int loses precision in /tmp/tmprs6adcqi.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345678900000004 to int loses precision in /tmp/tmprs6adcqi.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345678900000003 to int loses precision in /tmp/tmprs6adcqi.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345678900000002 to int loses precision in /tmp/tmprs6adcqi.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-5 to int loses precision in /tmp/tmprs6adcqi.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-6 to int loses precision in /tmp/tmprs6adcqi.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-7 to int loses precision in /tmp/tmprs6adcqi.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-8 to int loses precision in /tmp/tmprs6adcqi.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345678900000001E-9 to int loses precision in /tmp/tmprs6adcqi.php o",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $count++;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\necho is_Diff(121);\necho \"\\n\";\necho is_Diff(12);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122689,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmpwx3kc1ii.php on line 11\n\nDeprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmpwx3kc1ii.php on line 9\n\nDeprecated: Implicit conversion from float 0.121 to int loses precision in /tmp/tmpwx3kc1ii.php on line 11\n\nDeprecated: Implicit conversion from float 0.0121 to int loses precision in /tmp/tmpwx3kc1ii.php on line 9\n\nDeprecated: Implicit conversion from float 0.00121 to int loses precision in /tmp/tmpwx3kc1ii.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012099999999999999 to int loses precision in /tmp/tmpwx3kc1ii.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-5 to int loses precision in /tmp/tmpwx3kc1ii.php on line 11\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-6 to int loses precision in /tmp/tmpwx3kc1ii.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-7 to int loses precision in /tmp/tmpwx3kc1ii.php on line 11\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-8 to int loses precision in /tmp/tmpwx3kc1ii.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-9 to int loses precision in /tmp/tmpwx3kc1ii.php on line 11\n\nDeprecated: Implicit conversion from float 1.21E-10 to int loses precision in /tmp/tmpwx3kc1ii.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-11 to int loses precision in /tmp/tmpwx3kc1ii.php on line 11\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-12 to int loses precision in /tmp/tmpwx3kc1ii.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-13 to int loses precision in /tmp/tmpwx3kc1ii.php on line 11\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-14 to int loses precision in /tmp/tmpwx3kc1ii.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-15 to int loses precision in /tmp/tmpwx3kc1ii.php on line 11\n\nDeprecated: Implicit conversion from float 1.21E-16 to int loses precision in /tmp/tmpwx3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    if ($odd - $even == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmp86nu201d.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp86nu201d.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp86nu201d.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp86nu201d.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp86nu201d.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86nu201d.php:32\nStack trace:\n#0 /tmp/tmp86nu201d.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp86nu201d.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpmejz2rht.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpmejz2rht.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpmejz2rht.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpmejz2rht.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpmejz2rht.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpmejz2rht.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpmejz2rht.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpmejz2rht.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpmejz2rht.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpmejz2rht.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpmejz2rht.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpmejz2rht.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpmejz2rht.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpmejz2rht.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpmejz2rht.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpmejz2rht.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpmejz2rht.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tm",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $oddSum = 0;\n    $evenSum = 0;\n    while ($n > 0) {\n        $oddSum += $n % 10;\n        $n = (int) ($n / 10);\n        $evenSum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($oddSum - $evenSum) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return abs($odd_digits - $even_digits) % 11 == 0;\n}\n\necho is_Diff(121) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(112) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(121) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678901) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789012) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890123) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678901234) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789012345) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890123456) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678901234567) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789012345678) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890123456789) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678901234567890) ? \"Yes\" : \"No\";\necho \"\\n\";\necho\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpukdprprk.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_pos += $n[$i];\n        } else {\n            $even_pos += $n[$i];\n        }\n    }\n    $diff = $odd_pos - $even_pos;\n    if ($diff % 11 == 0) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n\necho is_Diff(\"123456789\");\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "False\nWarning: Trying to access array offset on value of type int in /tmp/tmp218_ase3.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp218_ase3.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp218_ase3.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp218_ase3.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp218_ase3.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp218_ase3.php:28\nStack trace:\n#0 /tmp/tmp218_ase3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp218_ase3.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        $count++;\n        if ($count % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = $n / 10;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpdualiq1f.php on line 10\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpdualiq1f.php on line 12\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpdualiq1f.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpdualiq1f.php on line 12\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpdualiq1f.php on line 10\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpdualiq1f.php on line 12\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpdualiq1f.php on line 10\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpdualiq1f.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpdualiq1f.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpdualiq1f.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpdualiq1f.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpdualiq1f.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpdualiq1f.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpdualiq1f.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpdualiq1f.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpdualiq1f.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpdualiq1f.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 12;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmp4t_1htgz.php on line 9\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmp4t_1htgz.php on line 7\nNot Divisible by 11\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp4t_1htgz.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmp4t_1htgz.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmp4t_1htgz.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmp4t_1htgz.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmp4t_1htgz.php on line 9\n\nDeprecated: Implicit conversion from float 121211.2 to int loses precision in /tmp/tmp4t_1htgz.php on line 9\n\nDeprecated: Implicit conversion from float 12121.1 to int loses precision in /tmp/tmp4t_1htgz.php on line 7\n\nDeprecated: Implicit conversion from float 1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even_sum = 0;\n    $odd_sum = 0;\n    $i = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    while ($i < $len) {\n        if ($i % 2 == 0) {\n            $even_sum += $n[$i];\n        } else {\n            $odd_sum += $n[$i];\n        }\n        $i++;\n    }\n    $diff = $even_sum - $odd_sum;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"The number is divisible by 11\";\n} else {\n    echo \"The number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "The number is not divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n[$i];\n        } else {\n            $even_digits += $n[$i];\n        }\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmp_pk_0z0w.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp_pk_0z0w.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp_pk_0z0w.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp_pk_0z0w.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp_pk_0z0w.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pk_0z0w.php:33\nStack trace:\n#0 /tmp/tmp_pk_0z0w.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_pk_0z0w.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum_even = 0;\n    $sum_odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $sum_even += $n[$i];\n        } else {\n            $sum_odd += $n[$i];\n        }\n    }\n    if (abs($sum_even - $sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_pos = 0;\n    $even_pos = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even_pos += $n[$i];\n        } else {\n            $odd_pos += $n[$i];\n        }\n    }\n    $diff = $odd_pos - $even_pos;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmpogwv30v5.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpogwv30v5.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpogwv30v5.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpogwv30v5.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpogwv30v5.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogwv30v5.php:27\nStack trace:\n#0 /tmp/tmpogwv30v5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpogwv30v5.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\necho is_Diff(121);\necho is_Diff(123);\necho is_Diff(1234);\necho is_Diff(12345);\necho is_Diff(123456);\necho is_Diff(1234567);\necho is_Diff(12345678);\necho is_Diff(123456789);\necho is_Diff(1234567890);\necho is_Diff(12345678901);\necho is_Diff(123456789012);\necho is_Diff(1234567890123);\necho is_Diff(12345678901234);\necho is_Diff(123456789012345);\necho is_Diff(1234567890123456);\necho is_Diff(12345678901234567);\necho is_Diff(123456789012345678);\necho is_Diff(1234567890123456789);\necho is_Diff(12345678901234567890);\necho is_Diff(123456789012345678901);\necho is_Diff(1234567890123456789012);\necho is_Diff(12345678901234567890123);\necho is_Diff(123456789012345678901234);\necho is_Diff(1234567890123456789012345);\necho is_Diff(12345678901234567890123456);\necho is_Diff(123456789012345678901234567);\necho is_Diff(1234567890123456789012345678);\necho is_Diff(12345678901234567890123456789);\necho is_Diff(12345678901\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpft6pe0l3.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum_even = 0;\n    $sum_odd = 0;\n    $n = (string)$n;\n    for($i = 0; $i < strlen($n); $i++) {\n        if($i % 2 == 0) {\n            $sum_even += $n[$i];\n        } else {\n            $sum_odd += $n[$i];\n        }\n    }\n    return ($sum_even - $sum_odd) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $flag = 0;\n    while ($n > 0) {\n        if ($flag == 0) {\n            $odd_digits += $n % 10;\n            $flag = 1;\n        } else {\n            $even_digits += $n % 10;\n            $flag = 0;\n        }\n        $n /= 10;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpyvgrkm72.php:24\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpyvgrkm72.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $n = abs($n);\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 1234567;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $flag = 0;\n    $n = abs($n);\n    while ($n > 0) {\n        if ($flag == 0) {\n            $odd_digits += $n % 10;\n            $flag = 1;\n        } else {\n            $even_digits += $n % 10;\n            $flag = 0;\n        }\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 12;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even_sum = 0;\n    $odd_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $i++;\n        $n = (int) ($n / 10);\n    }\n    return ($even_sum - $odd_sum) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n$n = 12;\nif (is_Diff($n))\n    echo $n . \" is divisible by 11\";\nelse\n    echo $n . \" is not divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpezfh82w5.php on line 9\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpezfh82w5.php on line 7\n12 is not divisible by 11\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpezfh82w5.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpezfh82w5.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmpezfh82w5.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpezfh82w5.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpezfh82w5.php on line 9\n\nDeprecated: Implicit conversion from float 121211.2 to int loses precision in /tmp/tmpezfh82w5.php on line 9\n\nDeprecated: Implicit conversion from float 12121.1 to int loses precision in /tmp/tmpezfh82w5.php on line 7\n\nDeprecated: Implicit conversion from f",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits_sum = 0;\n    $even_digits_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits_sum += $n % 10;\n        } else {\n            $odd_digits_sum += $n % 10;\n        }\n        $n = (int) ($n / 10);\n        $i++;\n    }\n    return ($odd_digits_sum - $even_digits_sum) % 11 == 0;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"The number is divisible by 11\";\n} else {\n    echo \"The number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpio3ris_t.php:19\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpio3ris_t.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while($n > 0) {\n        if($count % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $count++;\n    }\n    if(abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = 564;\nif(is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(readline());\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmp63qd9dmu.php:15\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp63qd9dmu.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n$n = 1234567;\nif (is_Diff($n))\n    echo \"$n is divisible by 11\";\nelse\n    echo \"$n is not divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nDeprecated: Implicit conversion from float 123456.7 to int loses precision in /tmp/tmpnu32w5dl.php on line 9\n\nDeprecated: Implicit conversion from float 12345.6 to int loses precision in /tmp/tmpnu32w5dl.php on line 7\n\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpnu32w5dl.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpnu32w5dl.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmpnu32w5dl.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpnu32w5dl.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpnu32w5dl.php on line 9\n1234567 is not divisible by 11\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpnu32w5dl.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpnu32w5dl.php on line 7\n\nDeprecated: Implicit convers",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $count = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($count % 2 == 0) {\n            $even_sum += $rem;\n        } else {\n            $odd_sum += $rem;\n        }\n        $count++;\n        $n = $n / 10;\n    }\n    if ($odd_sum - $even_sum == 0 || $odd_sum - $even_sum == 11 || $odd_sum - $even_sum == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpahwvosl1.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tm",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $count = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($count % 2 == 0) {\n            $even_sum = $even_sum + $rem;\n        } else {\n            $odd_sum = $odd_sum + $rem;\n        }\n        $count++;\n        $n = $n / 10;\n    }\n    $diff = $even_sum - $odd_sum;\n    if ($diff % 11 == 0) {\n        return \"true\";\n    } else {\n        return \"false\";\n    }\n}\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122678,
      "stdout": "\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 12.34 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 1.234 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 0.1234 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 0.01234 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 0.001234 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012340000000000002 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-5 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-6 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-7 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-8 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-9 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-10 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-11 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-12 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 1.234E-13 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-14 to int loses precision in /tmp/tmpii09a5nt.php on line 8\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-15 to int loses precision in /tmp/tmpii09a",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n > 0) {\n        $even += $n % 10;\n        $n = (int) ($n / 10);\n        $odd += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $diff = 0;\n    while ($n != 0) {\n        $diff += $n % 10;\n        $n = (int) ($n / 10);\n        $diff -= $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return $diff;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp171btf9l.php:19\nStack trace:\n#0 /tmp/tmp171btf9l.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp171btf9l.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $n = strval($n);\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_sum += $n[$i];\n        } else {\n            $even_sum += $n[$i];\n        }\n    }\n    $diff = $odd_sum - $even_sum;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "True\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp5442to4x.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp5442to4x.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp5442to4x.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp5442to4x.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp5442to4x.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp5442to4x.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp5442to4x.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp5442to4x.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp5442to4x.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp5442to4x.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp5442to4x.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp5442to4x.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp5442to4x.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp5442to4x.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp5442to4x.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp5442to4x.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp5442to4x.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits_sum = 0;\n    $even_digits_sum = 0;\n    while ($n > 0) {\n        $odd_digits_sum += $n % 10;\n        $n /= 10;\n        $even_digits_sum += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits_sum - $even_digits_sum) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpznsw5hfw.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpznsw5hfw.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpznsw5hfw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpznsw5hfw.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpznsw5hfw.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpznsw5hfw.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpznsw5hfw.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpznsw5hfw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpznsw5hfw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpznsw5hfw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpznsw5hfw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpznsw5hfw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpznsw5hfw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpznsw5hfw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpznsw5hfw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpznsw5hfw.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpznsw5hfw.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tm",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmp0d5j598g.php on line 9\n\nDeprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmp0d5j598g.php on line 7\n\nDeprecated: Implicit conversion from float 0.121 to int loses precision in /tmp/tmp0d5j598g.php on line 9\n\nDeprecated: Implicit conversion from float 0.0121 to int loses precision in /tmp/tmp0d5j598g.php on line 7\n\nDeprecated: Implicit conversion from float 0.00121 to int loses precision in /tmp/tmp0d5j598g.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012099999999999999 to int loses precision in /tmp/tmp0d5j598g.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-5 to int loses precision in /tmp/tmp0d5j598g.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-6 to int loses precision in /tmp/tmp0d5j598g.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-7 to int loses precision in /tmp/tmp0d5j598g.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-8 to int loses precision in /tmp/tmp0d5j598g.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-9 to int loses precision in /tmp/tmp0d5j598g.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-10 to int loses precision in /tmp/tmp0d5j598g.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-11 to int loses precision in /tmp/tmp0d5j598g.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-12 to int loses precision in /tmp/tmp0d5j598g.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-13 to int loses precision in /tmp/tmp0d5j598g.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-14 to int loses precision in /tmp/tmp0d5j598g.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-15 to int loses precision in /tmp/tmp0d5j598g.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-16 to int loses precision in /tmp/tmp0d5j598g.php",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits_sum = 0;\n    $even_digits_sum = 0;\n    $digits = array();\n    $digits = str_split($n);\n    $len = count($digits);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits_sum += $digits[$i];\n        } else {\n            $even_digits_sum += $digits[$i];\n        }\n    }\n    $diff = $odd_digits_sum - $even_digits_sum;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpntc5gjsm.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpntc5gjsm.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmpntc5gjsm.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpntc5gjsm.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpntc5gjsm.php on line 9\n\nDeprecated: Implicit conversion from float 121211.2 to int loses precision in /tmp/tmpntc5gjsm.php on line 9\n\nDeprecated: Implicit conversion from float 12121.1 to int loses precision in /tmp/tmpntc5gjsm.php on line 7\n\nDeprecated: Implicit conversion from float 1212.1 to int loses precision in /tmp/tmpntc5gjsm.php on line 9\n\nDeprecated: Implicit conversion from float 121.2 to int loses precision in /tmp/tmpntc5gjsm.php on line 7\n\nDeprecated: Implicit conversion from float 12.1 to int los",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even_digits = 0;\n    $odd_digits = 0;\n    while ($n > 0) {\n        $even_digits += $n % 10;\n        $n /= 10;\n        $odd_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($even_digits - $odd_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpsk5ewdmb.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpsk5ewdmb.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpsk5ewdmb.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpsk5ewdmb.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpsk5ewdmb.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpsk5ewdmb.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpsk5ewdmb.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpsk5ewdmb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpsk5ewdmb.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpsk5ewdmb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpsk5ewdmb.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpsk5ewdmb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpsk5ewdmb.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpsk5ewdmb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpsk5ewdmb.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpsk5ewdmb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpsk5ewdmb.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tmp/t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 5;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nDeprecated: Implicit conversion from float 0.5 to int loses precision in /tmp/tmptxo8tulv.php on line 8\nNo\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmptxo8tulv.php on line 8\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmptxo8tulv.php on line 6\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmptxo8tulv.php on line 8\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmptxo8tulv.php on line 6\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmptxo8tulv.php on line 8\n\nDeprecated: Implicit conversion from float 121211.2 to int loses precision in /tmp/tmptxo8tulv.php on line 8\n\nDeprecated: Implicit conversion from float 12121.1 to int loses precision in /tmp/tmptxo8tulv.php on line 6\n\nDeprecated: Implicit conversion from float 1212.1 to int loses precision in /tmp/tmptxo8tulv.php on line 8\n\nDeprecated: Implicit conversion from float 121.2 to int lo",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $num = $n;\n    while ($num > 0) {\n        $rem = $num % 10;\n        if ($rem % 2 == 0) {\n            $even += $rem;\n        } else {\n            $odd += $rem;\n        }\n        $num = $num / 10;\n    }\n    if (abs($even - $odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"$n is divisible by 11\";\n} else {\n    echo \"$n is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmpo9q14p98.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n > 0) {\n        $even += $n % 10;\n        $n = intval($n / 10);\n        $odd += $n % 10;\n        $n = intval($n / 10);\n    }\n    return ($odd - $even) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122677,
      "stdout": "True",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum_even = 0;\n    $sum_odd = 0;\n    $i = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $sum_even += $rem;\n        } else {\n            $sum_odd += $rem;\n        }\n        $i++;\n        $n = $n / 10;\n    }\n    $diff = $sum_even - $sum_odd;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Number is divisible by 11\";\n} else {\n    echo \"Number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "\nDeprecated: Implicit conversion from float 12345678.9 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 1234567.8900000001 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 123456.78900000002 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 12345.678900000003 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 1234.5678900000003 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 123.45678900000003 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 12.345678900000003 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345678900000003 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 0.12345678900000004 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 0.012345678900000004 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 0.0012345678900000003 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012345678900000002 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-5 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-6 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-7 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-8 to int loses precision in /tmp/tmpwbr46iuv.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345678900000001E-9 to int loses precision in /tmp/tmpwbr46iuv.php o",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n$n = 12;\nif (is_Diff($n))\n    echo \"Divisible\";\nelse\n    echo \"Not Divisible\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $n = abs($n);\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = -121;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122678,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509877,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tmp/t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits_sum = 0;\n    $even_digits_sum = 0;\n    $i = 1;\n    while ($n != 0) {\n        $rem = $n % 10;\n        if ($i % 2 == 0) {\n            $even_digits_sum += $rem;\n        } else {\n            $odd_digits_sum += $rem;\n        }\n        $i++;\n        $n = $n / 10;\n    }\n    $diff = $odd_digits_sum - $even_digits_sum;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122684,
      "stdout": "True\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpofmjx5qr.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Divisible\";\nelse\n    echo \"Not Divisible\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmpwm2lbwdv.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpwm2lbwdv.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpwm2lbwdv.php on line 9\nDivisible\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpwm2lbwdv.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpwm2lbwdv.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmpwm2lbwdv.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpwm2lbwdv.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpwm2lbwdv.php on line 9\n\nDeprecated: Implicit conversion from float 121211.2 to int loses precision in /tmp/tmpwm2lbwdv.php on line 9\n\nDeprecated: Implicit conversion from float 12121.1 to int",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits_sum = 0;\n    $even_digits_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits_sum += $n % 10;\n        } else {\n            $odd_digits_sum += $n % 10;\n        }\n        $n = (int) ($n / 10);\n        $i++;\n    }\n    return ($odd_digits_sum - $even_digits_sum) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 12;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $n = abs($n);\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(121) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678901) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789012) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890123) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678901234) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789012345) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890123456) ? \"Yes\" : \"No\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmp70khdry4.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    $n = str_split($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd = $odd + $n[$i];\n        } else {\n            $even = $even + $n[$i];\n        }\n    }\n    $diff = $odd - $even;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"The number is divisible by 11\";\n} else {\n    echo \"The number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "The number is not divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n > 0) {\n        $even += $n % 10;\n        $n = (int) ($n / 10);\n        $odd += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\n$n = 12;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n\t$sum_even = 0;\n\t$sum_odd = 0;\n\t$n = (string)$n;\n\t$len = strlen($n);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$sum_even += $n[$i];\n\t\t} else {\n\t\t\t$sum_odd += $n[$i];\n\t\t}\n\t}\n\t$diff = $sum_even - $sum_odd;\n\tif ($diff % 11 == 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho is_Diff(1234);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n$n = 12;\nif (is_Diff($n))\n    echo \"Divisible\";\nelse\n    echo \"Not Divisible\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmpwz59mizu.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmpwz59mizu.php on line 9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $n = abs($n);\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = floor($n / 10);\n        $even_digits += $n % 10;\n        $n = floor($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\necho is_Diff($n) ? \"YES\" : \"NO\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "YES",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = intval($n / 10);\n        $count++;\n    }\n    return ($odd_sum - $even_sum) % 11 == 0;\n}\n\n$n = intval(readline());\necho is_Diff($n) ? \"Yes\" : \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpiy01bl85.php:19\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpiy01bl85.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\necho is_Diff(121);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmpqsiu2_cc.php on line 9\n\nDeprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmpqsiu2_cc.php on line 7\n\nDeprecated: Implicit conversion from float 0.121 to int loses precision in /tmp/tmpqsiu2_cc.php on line 9\n\nDeprecated: Implicit conversion from float 0.0121 to int loses precision in /tmp/tmpqsiu2_cc.php on line 7\n\nDeprecated: Implicit conversion from float 0.00121 to int loses precision in /tmp/tmpqsiu2_cc.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012099999999999999 to int loses precision in /tmp/tmpqsiu2_cc.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-5 to int loses precision in /tmp/tmpqsiu2_cc.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-6 to int loses precision in /tmp/tmpqsiu2_cc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-7 to int loses precision in /tmp/tmpqsiu2_cc.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-8 to int loses precision in /tmp/tmpqsiu2_cc.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-9 to int loses precision in /tmp/tmpqsiu2_cc.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-10 to int loses precision in /tmp/tmpqsiu2_cc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-11 to int loses precision in /tmp/tmpqsiu2_cc.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-12 to int loses precision in /tmp/tmpqsiu2_cc.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-13 to int loses precision in /tmp/tmpqsiu2_cc.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-14 to int loses precision in /tmp/tmpqsiu2_cc.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-15 to int loses precision in /tmp/tmpqsiu2_cc.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-16 to int loses precision in /tmp/tmpqsiu2_cc.php",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif(is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmpxe32nekz.php on line 9\n\nDeprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmpxe32nekz.php on line 7\n\nDeprecated: Implicit conversion from float 0.121 to int loses precision in /tmp/tmpxe32nekz.php on line 9\n\nDeprecated: Implicit conversion from float 0.0121 to int loses precision in /tmp/tmpxe32nekz.php on line 7\n\nDeprecated: Implicit conversion from float 0.00121 to int loses precision in /tmp/tmpxe32nekz.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012099999999999999 to int loses precision in /tmp/tmpxe32nekz.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-5 to int loses precision in /tmp/tmpxe32nekz.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-6 to int loses precision in /tmp/tmpxe32nekz.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-7 to int loses precision in /tmp/tmpxe32nekz.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-8 to int loses precision in /tmp/tmpxe32nekz.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-9 to int loses precision in /tmp/tmpxe32nekz.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-10 to int loses precision in /tmp/tmpxe32nekz.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-11 to int loses precision in /tmp/tmpxe32nekz.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-12 to int loses precision in /tmp/tmpxe32nekz.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-13 to int loses precision in /tmp/tmpxe32nekz.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-14 to int loses precision in /tmp/tmpxe32nekz.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-15 to int loses precision in /tmp/tmpxe32nekz.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-16 to int loses precision in /tmp/tmpxe32nekz.php",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $flag = 0;\n    $i = 0;\n    $j = 0;\n    $arr = array();\n    $arr = str_split($n);\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $sum = $sum + $arr[$i];\n        } else {\n            $diff = $diff + $arr[$i];\n        }\n    }\n    $diff = $diff - $sum;\n    if ($diff % 11 == 0) {\n        $flag = 1;\n    }\n    return $flag;\n}\n\n$n = \"1234\";\n$flag = is_Diff($n);\nif ($flag == 1) {\n    echo \"Number is divisible by 11\";\n} else {\n    echo \"Number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "Number is not divisible by 11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfc8vezh1.php:38\nStack trace:\n#0 /tmp/tmpfc8vezh1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfc8vezh1.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 616;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "\nDeprecated: Implicit conversion from float 61.6 to int loses precision in /tmp/tmpuu1334n5.php on line 9\n\nDeprecated: Implicit conversion from float 6.16 to int loses precision in /tmp/tmpuu1334n5.php on line 7\n\nDeprecated: Implicit conversion from float 0.616 to int loses precision in /tmp/tmpuu1334n5.php on line 9\n\nDeprecated: Implicit conversion from float 0.0616 to int loses precision in /tmp/tmpuu1334n5.php on line 7\n\nDeprecated: Implicit conversion from float 0.0061600000000000005 to int loses precision in /tmp/tmpuu1334n5.php on line 9\n\nDeprecated: Implicit conversion from float 0.000616 to int loses precision in /tmp/tmpuu1334n5.php on line 7\n\nDeprecated: Implicit conversion from float 6.16E-5 to int loses precision in /tmp/tmpuu1334n5.php on line 9\n\nDeprecated: Implicit conversion from float 6.16E-6 to int loses precision in /tmp/tmpuu1334n5.php on line 7\n\nDeprecated: Implicit conversion from float 6.16E-7 to int loses precision in /tmp/tmpuu1334n5.php on line 9\n\nDeprecated: Implicit conversion from float 6.16E-8 to int loses precision in /tmp/tmpuu1334n5.php on line 7\n\nDeprecated: Implicit conversion from float 6.159999999999999E-9 to int loses precision in /tmp/tmpuu1334n5.php on line 9\n\nDeprecated: Implicit conversion from float 6.159999999999999E-10 to int loses precision in /tmp/tmpuu1334n5.php on line 7\n\nDeprecated: Implicit conversion from float 6.16E-11 to int loses precision in /tmp/tmpuu1334n5.php on line 9\n\nDeprecated: Implicit conversion from float 6.16E-12 to int loses precision in /tmp/tmpuu1334n5.php on line 7\n\nDeprecated: Implicit conversion from float 6.16E-13 to int loses precision in /tmp/tmpuu1334n5.php on line 9\n\nDeprecated: Implicit conversion from float 6.16E-14 to int loses precision in /tmp/tmpuu1334n5.php on line 7\n\nDeprecated: Implicit conversion from float 6.16E-15 to int loses precision in /tmp/tmpuu1334n5.php on line 9\n\nDeprecated: Implicit conversion from float 6.16E-16 to int loses precision in /tmp/tmpuu1334n5.php on line 7\n\nDeprecated: Implicit conversion from float 6.1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(readline());\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpy_qbssiv.php:15\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpy_qbssiv.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $digits = str_split($n);\n    $len = count($digits);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even_digits += $digits[$i];\n        } else {\n            $odd_digits += $digits[$i];\n        }\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $str = (string)$n;\n    $len = strlen($str);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even += $str[$i];\n        } else {\n            $odd += $str[$i];\n        }\n    }\n    if (abs($even - $odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    $temp = $n;\n    while ($temp > 0) {\n        if ($count % 2 == 0) {\n            $odd_digits += $temp % 10;\n        } else {\n            $even_digits += $temp % 10;\n        }\n        $temp = (int)($temp / 10);\n        $count++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"$n is divisible by 11\";\n} else {\n    echo \"$n is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "1234 is not divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return abs($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $evenSum = 0;\n    $oddSum = 0;\n    while ($n > 0) {\n        $evenSum += $n % 10;\n        $n = (int) ($n / 10);\n        $oddSum += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($evenSum - $oddSum) % 11 == 0;\n}\n\n$n = 1234;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if ($even - $odd == 0 || $even - $odd == 11 || $even - $odd == -11) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(121);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $number = $n;\n    while ($number > 0) {\n        $odd_digits += $number % 10;\n        $number /= 10;\n        $even_digits += $number % 10;\n        $number /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "Divisible by 11\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpzj9aqwk0.php on line 10\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpzj9aqwk0.php on line 8\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpzj9aqwk0.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpzj9aqwk0.php on line 8\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpzj9aqwk0.php on line 10\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpzj9aqwk0.php on line 8\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpzj9aqwk0.php on line 10\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpzj9aqwk0.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpzj9aqwk0.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpzj9aqwk0.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpzj9aqwk0.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpzj9aqwk0.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpzj9aqwk0.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpzj9aqwk0.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpzj9aqwk0.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpzj9aqwk0.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpzj9aqwk0.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int l",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n != 0) {\n        $odd_digits += $n % 10;\n        $n = (int)$n / 10;\n        $even_digits += $n % 10;\n        $n = (int)$n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "\nDeprecated: Implicit conversion from float 12345678.9 to int loses precision in /tmp/tmp7gsoc2vl.php on line 9\n\nDeprecated: Implicit conversion from float 1234567.8 to int loses precision in /tmp/tmp7gsoc2vl.php on line 7\n\nDeprecated: Implicit conversion from float 123456.7 to int loses precision in /tmp/tmp7gsoc2vl.php on line 9\n\nDeprecated: Implicit conversion from float 12345.6 to int loses precision in /tmp/tmp7gsoc2vl.php on line 7\n\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp7gsoc2vl.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmp7gsoc2vl.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmp7gsoc2vl.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmp7gsoc2vl.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmp7gsoc2vl.php on line 9\nNo\nDeprecated: Implicit conversion from float 1234.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmpja41__yl.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpja41__yl.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpja41__yl.php on line 9\nYes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpja41__yl.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpja41__yl.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmpja41__yl.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpja41__yl.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpja41__yl.php on line 9\n\nDeprecated: Implicit conversion from float 121211.2 to int loses precision in /tmp/tmpja41__yl.php on line 9\n\nDeprecated: Implicit conversion from float 12121.1 to int loses",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = $n / 10;\n        $even_digits += $n % 10;\n        $n = $n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmp72rk7p1f.php on line 9\n\nDeprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmp72rk7p1f.php on line 7\n\nDeprecated: Implicit conversion from float 0.121 to int loses precision in /tmp/tmp72rk7p1f.php on line 9\n\nDeprecated: Implicit conversion from float 0.0121 to int loses precision in /tmp/tmp72rk7p1f.php on line 7\n\nDeprecated: Implicit conversion from float 0.00121 to int loses precision in /tmp/tmp72rk7p1f.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012099999999999999 to int loses precision in /tmp/tmp72rk7p1f.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-5 to int loses precision in /tmp/tmp72rk7p1f.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-6 to int loses precision in /tmp/tmp72rk7p1f.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-7 to int loses precision in /tmp/tmp72rk7p1f.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-8 to int loses precision in /tmp/tmp72rk7p1f.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-9 to int loses precision in /tmp/tmp72rk7p1f.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-10 to int loses precision in /tmp/tmp72rk7p1f.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-11 to int loses precision in /tmp/tmp72rk7p1f.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-12 to int loses precision in /tmp/tmp72rk7p1f.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-13 to int loses precision in /tmp/tmp72rk7p1f.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-14 to int loses precision in /tmp/tmp72rk7p1f.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-15 to int loses precision in /tmp/tmp72rk7p1f.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-16 to int loses precision in /tmp/tmp72rk7p1f.php",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $odd_sum += $n % 10;\n        } else {\n            $even_sum += $n % 10;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    if (abs($odd_sum - $even_sum) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpd43whq97.php on line 11\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpd43whq97.php on line 9\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpd43whq97.php on line 11\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmpd43whq97.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmpd43whq97.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmpd43whq97.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmpd43whq97.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmpd43whq97.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmpd43whq97.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmpd43whq97.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmpd43whq97.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmpd43whq97.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmpd43whq97.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmpd43whq97.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmpd43whq97.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmpd43whq97.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmpd43whq97.php on",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n[$i];\n        } else {\n            $even_digits += $n[$i];\n        }\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmppbklz3_n.php on line 8\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppbklz3_n.php on line 10\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppbklz3_n.php on line 8\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppbklz3_n.php on line 10\n\nWarning: Trying to access array offset on value of type int in /tmp/tmppbklz3_n.php on line 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppbklz3_n.php:27\nStack trace:\n#0 /tmp/tmppbklz3_n.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppbklz3_n.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    while ($n > 0) {\n        $odd += $n % 10;\n        $n /= 10;\n        $even += $n % 10;\n        $n /= 10;\n    }\n    return ($odd - $even) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmpos8zrse2.php on line 9\n\nDeprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmpos8zrse2.php on line 7\n\nDeprecated: Implicit conversion from float 0.121 to int loses precision in /tmp/tmpos8zrse2.php on line 9\n\nDeprecated: Implicit conversion from float 0.0121 to int loses precision in /tmp/tmpos8zrse2.php on line 7\n\nDeprecated: Implicit conversion from float 0.00121 to int loses precision in /tmp/tmpos8zrse2.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012099999999999999 to int loses precision in /tmp/tmpos8zrse2.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-5 to int loses precision in /tmp/tmpos8zrse2.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-6 to int loses precision in /tmp/tmpos8zrse2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999998E-7 to int loses precision in /tmp/tmpos8zrse2.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-8 to int loses precision in /tmp/tmpos8zrse2.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-9 to int loses precision in /tmp/tmpos8zrse2.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-10 to int loses precision in /tmp/tmpos8zrse2.php on line 7\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-11 to int loses precision in /tmp/tmpos8zrse2.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-12 to int loses precision in /tmp/tmpos8zrse2.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-13 to int loses precision in /tmp/tmpos8zrse2.php on line 9\n\nDeprecated: Implicit conversion from float 1.2099999999999999E-14 to int loses precision in /tmp/tmpos8zrse2.php on line 7\n\nDeprecated: Implicit conversion from float 1.21E-15 to int loses precision in /tmp/tmpos8zrse2.php on line 9\n\nDeprecated: Implicit conversion from float 1.21E-16 to int loses precision in /tmp/tmpos8zrse2.php",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $digits = array();\n    $digits = str_split($n);\n    $len = count($digits);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even_digits += $digits[$i];\n        } else {\n            $odd_digits += $digits[$i];\n        }\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    $len = strlen($n);\n    for($i = 0; $i < $len; $i++) {\n        if($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    $diff = $even - $odd;\n    if($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 1234;\nif(is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmp4y7n1jir.php:15\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp4y7n1jir.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits_sum = 0;\n    $even_digits_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits_sum += $n % 10;\n        } else {\n            $odd_digits_sum += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    return abs($odd_digits_sum - $even_digits_sum) % 11 == 0;\n}\n\necho is_Diff(121) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678901) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789012) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890123) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678901234) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789012345) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890123456) ? \"Yes\" : \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "Yes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return abs($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return abs($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return abs($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n[$i];\n        } else {\n            $even_digits += $n[$i];\n        }\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"1234\";\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmp002uouax.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp002uouax.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp002uouax.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp002uouax.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp002uouax.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp002uouax.php:33\nStack trace:\n#0 /tmp/tmp002uouax.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp002uouax.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 1;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"true\";\n} else {\n    echo \"false\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmptr9yewrj.php:22\nStack trace:\n#0 {main}\n  thrown in /tmp/tmptr9yewrj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509877,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tmp/t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_sum = 0;\n    $even_sum = 0;\n    $count = 0;\n    while ($n != 0) {\n        $count++;\n        if ($count % 2 == 0) {\n            $even_sum += $n % 10;\n        } else {\n            $odd_sum += $n % 10;\n        }\n        $n = $n / 10;\n    }\n    if (($odd_sum - $even_sum) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpaindh69l.php on line 10\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpaindh69l.php on line 12\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpaindh69l.php on line 10\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmpaindh69l.php on line 12\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmpaindh69l.php on line 10\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmpaindh69l.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmpaindh69l.php on line 10\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmpaindh69l.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmpaindh69l.php on line 10\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmpaindh69l.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmpaindh69l.php on line 10\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmpaindh69l.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmpaindh69l.php on line 10\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmpaindh69l.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmpaindh69l.php on line 10\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmpaindh69l.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmpaindh69",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $n = abs($n);\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122688,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp00_rnffb.php on line 10\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp00_rnffb.php on line 8\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp00_rnffb.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp00_rnffb.php on line 8\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp00_rnffb.php on line 10\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp00_rnffb.php on line 8\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp00_rnffb.php on line 10\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp00_rnffb.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp00_rnffb.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp00_rnffb.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp00_rnffb.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp00_rnffb.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp00_rnffb.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp00_rnffb.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp00_rnffb.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp00_rnffb.php on line 8\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp00_rnffb.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0)\n            $odd += $n[$i];\n        else\n            $even += $n[$i];\n    }\n    return ($odd - $even) % 11 == 0;\n}\necho is_Diff(1234) ? \"Yes\" : \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmpi8vvqhvb.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpi8vvqhvb.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpi8vvqhvb.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpi8vvqhvb.php on line 11\nYes\nWarning: Trying to access array offset on value of type int in /tmp/tmpi8vvqhvb.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpi8vvqhvb.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpi8vvqhvb.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpi8vvqhvb.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpi8vvqhvb.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi8vvqhvb.php:21\nStack trace:\n#0 /tmp/tmpi8vvqhvb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpi8vvqhvb.",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $flag = 0;\n    while ($n > 0) {\n        if ($flag == 0) {\n            $odd_digits += $n % 10;\n            $flag = 1;\n        } else {\n            $even_digits += $n % 10;\n            $flag = 0;\n        }\n        $n = $n / 10;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "\nDeprecated: Implicit conversion from float 12345678.9 to int loses precision in /tmp/tmp7npohk0y.php on line 12\n\nDeprecated: Implicit conversion from float 1234567.8900000001 to int loses precision in /tmp/tmp7npohk0y.php on line 9\n\nDeprecated: Implicit conversion from float 123456.78900000002 to int loses precision in /tmp/tmp7npohk0y.php on line 12\n\nDeprecated: Implicit conversion from float 12345.678900000003 to int loses precision in /tmp/tmp7npohk0y.php on line 9\n\nDeprecated: Implicit conversion from float 1234.5678900000003 to int loses precision in /tmp/tmp7npohk0y.php on line 12\n\nDeprecated: Implicit conversion from float 123.45678900000003 to int loses precision in /tmp/tmp7npohk0y.php on line 9\n\nDeprecated: Implicit conversion from float 12.345678900000003 to int loses precision in /tmp/tmp7npohk0y.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345678900000003 to int loses precision in /tmp/tmp7npohk0y.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345678900000004 to int loses precision in /tmp/tmp7npohk0y.php on line 12\n\nDeprecated: Implicit conversion from float 0.012345678900000004 to int loses precision in /tmp/tmp7npohk0y.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345678900000003 to int loses precision in /tmp/tmp7npohk0y.php on line 12\n\nDeprecated: Implicit conversion from float 0.00012345678900000002 to int loses precision in /tmp/tmp7npohk0y.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-5 to int loses precision in /tmp/tmp7npohk0y.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-6 to int loses precision in /tmp/tmp7npohk0y.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-7 to int loses precision in /tmp/tmp7npohk0y.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-8 to int loses precision in /tmp/tmp7npohk0y.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345678900000001E-9 to int loses precision in /tmp/tmp7npohk",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $num = $n;\n    while ($num > 0) {\n        $odd_digits += $num % 10;\n        $num = (int) ($num / 10);\n        $even_digits += $num % 10;\n        $num = (int) ($num / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n[$i];\n        } else {\n            $even_digits += $n[$i];\n        }\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"123456789\";\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "No\nWarning: Trying to access array offset on value of type int in /tmp/tmpb8_hu6fi.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpb8_hu6fi.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpb8_hu6fi.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpb8_hu6fi.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpb8_hu6fi.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8_hu6fi.php:33\nStack trace:\n#0 /tmp/tmpb8_hu6fi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb8_hu6fi.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    $flag = 0;\n    $temp = $n;\n    while ($temp != 0) {\n        if ($flag == 0) {\n            $sum = $sum + $temp % 10;\n            $temp = $temp / 10;\n            $flag = 1;\n        } else {\n            $diff = $diff + $temp % 10;\n            $temp = $temp / 10;\n            $flag = 0;\n        }\n    }\n    if (($sum - $diff) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "\nDeprecated: Implicit conversion from float 12345678.9 to int loses precision in /tmp/tmp32otabij.php on line 14\n\nDeprecated: Implicit conversion from float 1234567.8900000001 to int loses precision in /tmp/tmp32otabij.php on line 10\n\nDeprecated: Implicit conversion from float 123456.78900000002 to int loses precision in /tmp/tmp32otabij.php on line 14\n\nDeprecated: Implicit conversion from float 12345.678900000003 to int loses precision in /tmp/tmp32otabij.php on line 10\n\nDeprecated: Implicit conversion from float 1234.5678900000003 to int loses precision in /tmp/tmp32otabij.php on line 14\n\nDeprecated: Implicit conversion from float 123.45678900000003 to int loses precision in /tmp/tmp32otabij.php on line 10\n\nDeprecated: Implicit conversion from float 12.345678900000003 to int loses precision in /tmp/tmp32otabij.php on line 14\n\nDeprecated: Implicit conversion from float 1.2345678900000003 to int loses precision in /tmp/tmp32otabij.php on line 10\n\nDeprecated: Implicit conversion from float 0.12345678900000004 to int loses precision in /tmp/tmp32otabij.php on line 14\n\nDeprecated: Implicit conversion from float 0.012345678900000004 to int loses precision in /tmp/tmp32otabij.php on line 10\n\nDeprecated: Implicit conversion from float 0.0012345678900000003 to int loses precision in /tmp/tmp32otabij.php on line 14\n\nDeprecated: Implicit conversion from float 0.00012345678900000002 to int loses precision in /tmp/tmp32otabij.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-5 to int loses precision in /tmp/tmp32otabij.php on line 14\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-6 to int loses precision in /tmp/tmp32otabij.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-7 to int loses precision in /tmp/tmp32otabij.php on line 14\n\nDeprecated: Implicit conversion from float 1.2345678900000002E-8 to int loses precision in /tmp/tmp32otabij.php on line 10\n\nDeprecated: Implicit conversion from float 1.2345678900000001E-9 to int loses precision in /tmp/t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $num = $n;\n    while ($num != 0) {\n        $odd_digits += $num % 10;\n        $num = (int) ($num / 10);\n        $even_digits += $num % 10;\n        $num = (int) ($num / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $flag = 0;\n    while ($n > 0) {\n        if ($flag == 0) {\n            $odd_digits += $n % 10;\n            $flag = 1;\n        } else {\n            $even_digits += $n % 10;\n            $flag = 0;\n        }\n        $n = $n / 10;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpk10r6e6j.php on line 12\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpk10r6e6j.php on line 9\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpk10r6e6j.php on line 12\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmpk10r6e6j.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmpk10r6e6j.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmpk10r6e6j.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmpk10r6e6j.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmpk10r6e6j.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmpk10r6e6j.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmpk10r6e6j.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmpk10r6e6j.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmpk10r6e6j.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmpk10r6e6j.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmpk10r6e6j.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmpk10r6e6j.php on line 12\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmpk10r6e6j.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmpk10r6e6j.php on",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n[$i];\n        } else {\n            $even_digits += $n[$i];\n        }\n    }\n    $diff = $odd_digits - $even_digits;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = '123456789';\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122684,
      "stdout": "Not Divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmp9k1ttlp5.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp9k1ttlp5.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp9k1ttlp5.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp9k1ttlp5.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp9k1ttlp5.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9k1ttlp5.php:33\nStack trace:\n#0 /tmp/tmp9k1ttlp5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9k1ttlp5.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 12;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122693,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmp8o93ah74.php on line 9\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmp8o93ah74.php on line 7\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmp8o93ah74.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmp8o93ah74.php on line 7\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmp8o93ah74.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmp8o93ah74.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmp8o93ah74.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmp8o93ah74.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmp8o93ah74.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmp8o93ah74.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmp8o93ah74.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmp8o93ah74.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmp8o93ah74.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmp8o93ah74.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmp8o93ah74.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmp8o93ah74.php on line 7\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmp8o93ah74.php on line 9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n != 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 12;\nif (is_Diff($n))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n > 0) {\n        $even += $n % 10;\n        $n = (int)($n / 10);\n        $odd += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd - $even) % 11 == 0;\n}\n\n$n = intval(trim(fgets(STDIN)));\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "True",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits_sum = 0;\n    $even_digits_sum = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits_sum += $n % 10;\n        } else {\n            $odd_digits_sum += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    return ($even_digits_sum - $odd_digits_sum) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $count++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpqknhcz1s.php on line 11\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpqknhcz1s.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpqknhcz1s.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpqknhcz1s.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpqknhcz1s.php on line 11\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpqknhcz1s.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpqknhcz1s.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpqknhcz1s.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpqknhcz1s.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpqknhcz1s.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpqknhcz1s.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpqknhcz1s.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpqknhcz1s.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpqknhcz1s.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpqknhcz1s.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpqknhcz1s.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpqknhcz1s.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precisi",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n != 0) {\n        if ($count % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $count++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Diff($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmprwwubso0.php:23\nStack trace:\n#0 {main}\n  thrown in /tmp/tmprwwubso0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    if (abs($even - $odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(1234);\necho is_Diff(12\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpla8km2p6.php on line 64\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return abs($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"True\";\nelse\n    echo \"False\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "True",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $count++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "1\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpf_nlfoj7.php on line 11\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpf_nlfoj7.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpf_nlfoj7.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpf_nlfoj7.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpf_nlfoj7.php on line 11\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpf_nlfoj7.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpf_nlfoj7.php on line 11\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpf_nlfoj7.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpf_nlfoj7.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpf_nlfoj7.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpf_nlfoj7.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpf_nlfoj7.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpf_nlfoj7.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpf_nlfoj7.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpf_nlfoj7.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpf_nlfoj7.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpf_nlfoj7.php on line 11\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509877,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tmp/t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = (int)($n / 10);\n        $i++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "No",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n > 0) {\n        $even += $n % 10;\n        $n = (int) ($n / 10);\n        $odd += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($even - $odd) % 11 == 0;\n}\necho is_Diff(121);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n != 0) {\n        $even += $n % 10;\n        $n = (int) ($n / 10);\n        $odd += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122685,
      "stdout": "Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $flag = 0;\n    while ($n != 0) {\n        if ($flag == 0) {\n            $odd_digits += $n % 10;\n            $flag = 1;\n        } else {\n            $even_digits += $n % 10;\n            $flag = 0;\n        }\n        $n = $n / 10;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline('Enter a number: '));\nif (is_Diff($n)) {\n    echo 'The number is divisible by 11';\n} else {\n    echo 'The number is not divisible by 11';\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function readline() in /tmp/tmpxmohe4c8.php:24\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpxmohe4c8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $sum = 0;\n    $diff = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int) $n / 10;\n        $diff -= $n % 10;\n        $n = (int) $n / 10;\n    }\n    return ($sum + $diff) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n))\n    echo \"Divisible\";\nelse\n    echo \"Not Divisible\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "\nDeprecated: Implicit conversion from float 12345678.9 to int loses precision in /tmp/tmplt9via_d.php on line 9\n\nDeprecated: Implicit conversion from float 1234567.8 to int loses precision in /tmp/tmplt9via_d.php on line 7\n\nDeprecated: Implicit conversion from float 123456.7 to int loses precision in /tmp/tmplt9via_d.php on line 9\n\nDeprecated: Implicit conversion from float 12345.6 to int loses precision in /tmp/tmplt9via_d.php on line 7\n\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmplt9via_d.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmplt9via_d.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmplt9via_d.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmplt9via_d.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmplt9via_d.php on line 9\nNot Divisible\nDeprecated: Implicit conversion from ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)$n / 10;\n        $even_digits += $n % 10;\n        $n = (int)$n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp4xyynlx0.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmp4xyynlx0.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmp4xyynlx0.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmp4xyynlx0.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmp4xyynlx0.php on line 9\n\nDeprecated: Implicit conversion from float 121211.2 to int loses precision in /tmp/tmp4xyynlx0.php on line 9\n\nDeprecated: Implicit conversion from float 12121.1 to int loses precision in /tmp/tmp4xyynlx0.php on line 7\n\nDeprecated: Implicit conversion from float 1212.1 to int loses precision in /tmp/tmp4xyynlx0.php on line 9\n\nDeprecated: Implicit conversion from float 121.2 to int loses precision in /tmp/tmp4xyynlx0.php on line 7\n\nDeprecated: Implicit conversion from float 12.1 to int los",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd = 0;\n    $even = 0;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $odd += $n[$i];\n        } else {\n            $even += $n[$i];\n        }\n    }\n    $diff = $odd - $even;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = \"12345\";\nif (is_Diff($n)) {\n    echo \"Number is divisible by 11\";\n} else {\n    echo \"Number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "Number is not divisible by 11\nWarning: Trying to access array offset on value of type int in /tmp/tmphbh48x78.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmphbh48x78.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmphbh48x78.php on line 9\n\nWarning: Trying to access array offset on value of type int in /tmp/tmphbh48x78.php on line 11\n\nWarning: Trying to access array offset on value of type int in /tmp/tmphbh48x78.php on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphbh48x78.php:33\nStack trace:\n#0 /tmp/tmphbh48x78.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphbh48x78.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\necho is_Diff(121) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678901) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789012) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890123) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678901234) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789012345) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(1234567890123456) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(12345678901234567) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Diff(123456789012345678) ? \"Yes\"\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpfkh4mmnh.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\necho is_Diff(121);\necho is_Diff(12);\necho is_Diff(123456789);\necho is_Diff(1234567890);\necho is_Diff(12345678901);\necho is_Diff(123456789012);\necho is_Diff(1234567890123);\necho is_Diff(12345678901234);\necho is_Diff(123456789012345);\necho is_Diff(1234567890123456);\necho is_Diff(12345678901234567);\necho is_Diff(123456789012345678);\necho is_Diff(1234567890123456789);\necho is_Diff(12345678901234567890);\necho is_Diff(123456789012345678901);\necho is_Diff(1234567890123456789012);\necho is_Diff(12345678901234567890123);\necho is_Diff(123456789012345678901234);\necho is_Diff(1234567890123456789012345);\necho is_Diff(12345678901234567890123456);\necho is_Diff(123456789012345678901234567);\necho is_Diff(1234567890123456789012345678);\necho is_Diff(12345678901234567890123456789);\necho is_Diff(123456789012345678901234567890);\necho is_Diff(1234567890123456789012345678901);\necho is_Diff(1234567890123456789\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpqclsgrmo.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $i = 0;\n    while ($n > 0) {\n        if ($i % 2 == 0) {\n            $even_digits += $n % 10;\n        } else {\n            $odd_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $i++;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpnsvyoo77.php on line 11\n\nDeprecated: Implicit conversion from float 12.34 to int loses precision in /tmp/tmpnsvyoo77.php on line 9\n\nDeprecated: Implicit conversion from float 1.234 to int loses precision in /tmp/tmpnsvyoo77.php on line 11\n\nDeprecated: Implicit conversion from float 0.1234 to int loses precision in /tmp/tmpnsvyoo77.php on line 9\n\nDeprecated: Implicit conversion from float 0.01234 to int loses precision in /tmp/tmpnsvyoo77.php on line 11\n\nDeprecated: Implicit conversion from float 0.001234 to int loses precision in /tmp/tmpnsvyoo77.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012340000000000002 to int loses precision in /tmp/tmpnsvyoo77.php on line 11\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-5 to int loses precision in /tmp/tmpnsvyoo77.php on line 9\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-6 to int loses precision in /tmp/tmpnsvyoo77.php on line 11\n\nDeprecated: Implicit conversion from float 1.234E-7 to int loses precision in /tmp/tmpnsvyoo77.php on line 9\n\nDeprecated: Implicit conversion from float 1.234E-8 to int loses precision in /tmp/tmpnsvyoo77.php on line 11\n\nDeprecated: Implicit conversion from float 1.234E-9 to int loses precision in /tmp/tmpnsvyoo77.php on line 9\n\nDeprecated: Implicit conversion from float 1.234E-10 to int loses precision in /tmp/tmpnsvyoo77.php on line 11\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-11 to int loses precision in /tmp/tmpnsvyoo77.php on line 9\n\nDeprecated: Implicit conversion from float 1.2340000000000002E-12 to int loses precision in /tmp/tmpnsvyoo77.php on line 11\n\nDeprecated: Implicit conversion from float 1.234E-13 to int loses precision in /tmp/tmpnsvyoo77.php on line 9\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-14 to int loses precision in /tmp/tmpnsvyoo77.php on line 11\n\nDeprecated: Implicit conversion from float 1.2340000000000001E-15 to int loses precision in /tmp",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122676,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $flag = 0;\n    while($n > 0) {\n        if($flag == 0) {\n            $odd_digits += $n % 10;\n            $flag = 1;\n        }\n        else {\n            $even_digits += $n % 10;\n            $flag = 0;\n        }\n        $n = $n / 10;\n    }\n    $diff = $odd_digits - $even_digits;\n    if($diff % 11 == 0)\n        return \"True\";\n    else\n        return \"False\";\n}\n\n$n = intval(fgets(STDIN));\necho is_Diff($n);\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "True\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpn83v9dhf.php on line 13\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpn83v9dhf.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpn83v9dhf.php on line 13\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpn83v9dhf.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpn83v9dhf.php on line 13\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpn83v9dhf.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpn83v9dhf.php on line 13\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpn83v9dhf.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses pre",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int) ($n / 10);\n        $even_digits += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n)) {\n    echo \"The number is divisible by 11\";\n} else {\n    echo \"The number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "The number is not divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string) $n;\n    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    $diff = $even - $odd;\n    if ($diff % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 1234;\nif (is_Diff($n)) {\n    echo \"The number is divisible by 11\";\n} else {\n    echo \"The number is not divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "The number is not divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $count = 0;\n    while ($n > 0) {\n        if ($count % 2 == 0) {\n            $odd_digits += $n % 10;\n        } else {\n            $even_digits += $n % 10;\n        }\n        $n = $n / 10;\n        $count++;\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = 12;\nif (is_Diff($n)) {\n    echo \"Divisible by 11\";\n} else {\n    echo \"Not Divisible by 11\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122695,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpn40p56ma.php on line 11\n\nDeprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmpn40p56ma.php on line 9\n\nDeprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmpn40p56ma.php on line 11\n\nDeprecated: Implicit conversion from float 0.0012000000000000001 to int loses precision in /tmp/tmpn40p56ma.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmpn40p56ma.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses precision in /tmp/tmpn40p56ma.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses precision in /tmp/tmpn40p56ma.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses precision in /tmp/tmpn40p56ma.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses precision in /tmp/tmpn40p56ma.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses precision in /tmp/tmpn40p56ma.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses precision in /tmp/tmpn40p56ma.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses precision in /tmp/tmpn40p56ma.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses precision in /tmp/tmpn40p56ma.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses precision in /tmp/tmpn40p56ma.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses precision in /tmp/tmpn40p56ma.php on line 11\n\nDeprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses precision in /tmp/tmpn40p56ma.php on line 9\n\nDeprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses precision in /tmp/tmpn40p56ma.php on",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n = (int)($n / 10);\n        $even_digits += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n > 0) {\n        $odd_digits += $n % 10;\n        $n /= 10;\n        $even_digits += $n % 10;\n        $n /= 10;\n    }\n    return ($odd_digits - $even_digits) % 11 == 0;\n}\n\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509877,
      "stdout": "\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmp2k2k6ojy.php on line 7\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmp2k2k6ojy.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precision in /tmp/t",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $flag = 0;\n    while ($n > 0) {\n        if ($flag == 0) {\n            $odd_digits += $n % 10;\n            $flag = 1;\n        } else {\n            $even_digits += $n % 10;\n            $flag = 0;\n        }\n        $n = $n / 10;\n    }\n    if (($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(fgets(STDIN));\nif (is_Diff($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "Yes\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpzwjk93w_.php on line 12\n\nDeprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmpzwjk93w_.php on line 9\n\nDeprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmpzwjk93w_.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345000000000002 to int loses precision in /tmp/tmpzwjk93w_.php on line 9\n\nDeprecated: Implicit conversion from float 0.12345000000000002 to int loses precision in /tmp/tmpzwjk93w_.php on line 12\n\nDeprecated: Implicit conversion from float 0.012345000000000002 to int loses precision in /tmp/tmpzwjk93w_.php on line 9\n\nDeprecated: Implicit conversion from float 0.0012345000000000001 to int loses precision in /tmp/tmpzwjk93w_.php on line 12\n\nDeprecated: Implicit conversion from float 0.00012345000000000002 to int loses precision in /tmp/tmpzwjk93w_.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses precision in /tmp/tmpzwjk93w_.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses precision in /tmp/tmpzwjk93w_.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-7 to int loses precision in /tmp/tmpzwjk93w_.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-8 to int loses precision in /tmp/tmpzwjk93w_.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-9 to int loses precision in /tmp/tmpzwjk93w_.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-10 to int loses precision in /tmp/tmpzwjk93w_.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-11 to int loses precision in /tmp/tmpzwjk93w_.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-12 to int loses precision in /tmp/tmpzwjk93w_.php on line 9\n\nDeprecated: Implicit conversion from float 1.2345E-13 to int loses precision in /tmp/tmpzwjk93w_.php on line 12\n\nDeprecated: Implicit conversion from float 1.2345E-14 to int loses precisi",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($i % 2 == 0) {\n            $even += $n[$i];\n        } else {\n            $odd += $n[$i];\n        }\n    }\n    return ($even - $odd) % 11 == 0;\n}\n\necho is_Diff(121);\necho \"\\n\";\necho is_Diff(12);\necho \"\\n\";\necho is_Diff(123);\necho \"\\n\";\necho is_Diff(1234);\necho \"\\n\";\necho is_Diff(12345);\necho \"\\n\";\necho is_Diff(123456);\necho \"\\n\";\necho is_Diff(1234567);\necho \"\\n\";\necho is_Diff(12345678);\necho \"\\n\";\necho is_Diff(123456789);\necho \"\\n\";\necho is_Diff(1234567890);\necho \"\\n\";\necho is_Diff(12345678901);\necho \"\\n\";\necho is_Diff(123456789012);\necho \"\\n\";\necho is_Diff(1234567890123);\necho \"\\n\";\necho is_Diff(12345678901234);\necho \"\\n\";\necho is_Diff(123456789012345);\necho \"\\n\";\necho is_Diff(1234567890123456);\necho \"\\n\";\necho is_Diff(12345678901234567);\necho \"\\n\";\necho is_Diff(123456789012345678);\necho \"\\n\";\necho is_Diff(1234567890123456789);\necho \"\\n\";\necho is_Diff(12345678901234567890);\necho \"\\n\";\necho is_Diff(123456789012345678901);\necho \"\\n\";\necho is_Diff(1234567890123456789012);\necho \"\\n\";\necho is_Diff(12345678901234567890123);\necho \"\\n\";\necho is_Diff(\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpe4wnrgmu.php on line 64\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    while ($n != 0) {\n        $odd_digits += $n % 10;\n        $n = (int) $n / 10;\n        $even_digits += $n % 10;\n        $n = (int) $n / 10;\n    }\n    return abs($odd_digits - $even_digits) % 11 == 0;\n}\n\n$n = 121;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "\nDeprecated: Implicit conversion from float 12.1 to int loses precision in /tmp/tmpvtra79ej.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpvtra79ej.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpvtra79ej.php on line 9\nDivisible by 11\nDeprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmpvtra79ej.php on line 9\n\nDeprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmpvtra79ej.php on line 7\n\nDeprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmpvtra79ej.php on line 9\n\nDeprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmpvtra79ej.php on line 7\n\nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpvtra79ej.php on line 9\n\nDeprecated: Implicit conversion from float 121211.2 to int loses precision in /tmp/tmpvtra79ej.php on line 9\n\nDeprecated: Implicit conversion from float 12121.1 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $odd_digits = 0;\n    $even_digits = 0;\n    $n = (string)$n;\n    $n = str_split($n);\n    for ($i = 0; $i < count($n); $i++) {\n        if ($i % 2 == 0) {\n            $odd_digits += $n[$i];\n        } else {\n            $even_digits += $n[$i];\n        }\n    }\n    if (abs($odd_digits - $even_digits) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Diff(1234);\necho \"<br>\";\necho is_Diff(1243);\necho \"<br>\";\necho is_Diff(1233);\necho \"<br>\";\necho is_Diff(1232);\necho \"<br>\";\necho is_Diff(1231);\necho \"<br>\";\necho is_Diff(1230);\necho \"<br>\";\necho is_Diff(1229);\necho \"<br>\";\necho is_Diff(1228);\necho \"<br>\";\necho is_Diff(1227);\necho \"<br>\";\necho is_Diff(1226);\necho \"<br>\";\necho is_Diff(1225);\necho \"<br>\";\necho is_Diff(1224);\necho \"<br>\";\necho is_Diff(1223);\necho \"<br>\";\necho is_Diff(1222);\necho \"<br>\";\necho is_Diff(1221);\necho \"<br>\";\necho is_Diff(1220);\necho \"<br>\";\necho is_Diff(1219);\necho \"<br>\";\necho is_Diff(1218);\necho \"<br>\";\necho is_Diff(1217);\necho \"<br>\";\necho is_Diff(1216);\necho \"<br>\";\necho is_Diff(1215);\necho \"<br>\";\necho is_Diff(1214);\necho \"<br>\";\necho is_Diff(1213);\necho \"<br>\";\necho is_Diff(1212);\necho \"<\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmpfgc01bbf.php on line 75\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find whether a number is divisible by 11.\nfunction is_Diff($n) {\n    $even = 0;\n    $odd = 0;\n    while ($n > 0) {\n        $odd += $n % 10;\n        $n = (int) ($n / 10);\n        $even += $n % 10;\n        $n = (int) ($n / 10);\n    }\n    return ($odd - $even) % 11 == 0;\n}\n\n$n = 123456789;\nif (is_Diff($n))\n    echo \"Divisible by 11\";\nelse\n    echo \"Not Divisible by 11\";\nfunction candidate(...$args) {\n    return is_Diff(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12345) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212112) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1212) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "Not Divisible by 11",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_751_check_min_heap",
  "language": "php",
  "prompt": "<?php\n// Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\nfunction check_min_heap($arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return check_min_heap(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 3, 4, 5, 10, 15)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 10, 4, 5, 3, 15)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i < ($n - 1) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 100, 80];\n\nvar_dump(check_min_heap($arr));\nvar_dump(check_min_heap($arr1));\nvar_dump(check_min_heap($arr2));",
    "    $n = count($arr);\n    for ($i = 0; $i < ($n - 1) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\n$arr2 = [9, 15, 10, 7, 12, 11];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\necho check_min_heap($arr2) ? 'true' : 'false';",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7];\n$arr3 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10];\n$arr4 = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n\necho check_min_heap($arr) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr2) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr3) ? \"true\" : \"false\";\necho \"\\n\";\necho check_min_heap($arr4) ? \"true\" : \"false\";\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\n$n = count($arr);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr1 = [9, 15, 10, 7, 12, 11];\n$arr2 = [90, 85, 100, 80];\n$arr3 = [10, 14, 19, 26, 31, 42, 27, 44, 35, 33, 35, 31];\n\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr1) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr2) ? 'true' : 'false';\necho PHP_EOL;\necho check_min_heap($arr3) ? 'true' : 'false';\necho PHP_EOL;",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';",
    "\t$n = count($arr);\n\tfor ($i = ($n - 2) / 2; $i >= 0; $i--) {\n\t\tif ($arr[$i] > $arr[2 * $i + 1]) {\n\t\t\treturn false;\n\t\t}\n\t\tif (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($i < ($n - 2) / 2 && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\n$arr2 = [90, 15, 10, 7, 12, 2, 7, 3, 4];\n\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\necho check_min_heap($arr2) ? \"Yes\" : \"No\";",
    "    $n = count($arr);\n    for ($i = ($n - 2) / 2; $i >= 0; $i--) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 1];\nvar_dump(check_min_heap($arr));\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\nvar_dump(check_min_heap($arr));",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if (2 * $i + 1 < $n && $arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if (2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = array(90, 15, 10, 7, 12, 2, 7, 3);\nif (check_min_heap($arr)) {\n    echo \"Given array is a min heap\";\n} else {\n    echo \"Given array is not a min heap\";\n}\n",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($2 * $i + 2 < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $n = count($arr);\n    for ($i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ((2 * $i + 2) < $n && $arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\n",
    "\t$n = count($arr);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\t$left = 2 * $i + 1;\n\t\t$right = 2 * $i + 2;\n\t\tif ($left < $n && $arr[$i] > $arr[$left]) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($right < $n && $arr[$i] > $arr[$right]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [4, 3, 2, 1];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [1, 2, 3, 4];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [1, 2, 3, 4, 5];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [5, 4, 3, 2, 1];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [5, 4, 3, 2, 1, 0];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n$arr = [5, 4, 3, 2, 1, 0, -1];\necho check_min_heap($arr) ? \"Yes\" : \"No\";\necho \"\\n\";\n\n",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $arr[($i - 1) / 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho PHP_EOL;",
    "    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > $arr[2 * $i + 1]) {\n            return false;\n        }\n        if ($arr[$i] > $arr[2 * $i + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [9, 15, 10, 7, 12, 11];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [90, 15, 10, 7, 12, 2, 7, 3];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [4, 3, 2, 1];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";\n\n$arr = [1, 2, 3, 4];\necho check_min_heap($arr) ? 'true' : 'false';\necho \"\\n\";"
  ]
}
{
  "name": "mbpp_766_pair_wise",
  "language": "php",
  "prompt": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_766_pair_wise.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $l2 = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($i < count($l1) - 1) {\n            array_push($l2, $l1[$i] . $l1[$i + 1]);\n        }\n    }\n    return $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = pair_wise($l1);\nprint_r($l2);",
    "    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n",
    "    $l2 = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($i + 1 < count($l1)) {\n            array_push($l2, [$l1[$i], $l1[$i + 1]]);\n        }\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(pair_wise($l1));",
    "    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n",
    "  $result = [];\n  for ($i = 0; $i < count($l1); $i++) {\n    if ($i + 1 < count($l1)) {\n      $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n  }\n  return $result;\n}\n",
    "\t$l2 = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$l2[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\nprint_r(pair_wise($l1));\n",
    "    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\nprint_r(pair_wise([1, 2, 3, 4, 5, 6]));",
    "    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($result, array($l1[$i], $l1[$i + 1]));\n    }\n    return $result;\n}\n\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7",
    "\t$l2 = array();\n\t$i = 0;\n\twhile ($i < count($l1) - 1) {\n\t\t$l2[] = array($l1[$i], $l1[$i + 1]);\n\t\t$i++;\n\t}\n\treturn $l2;\n}\n",
    "  $l2 = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    array_push($l2, [$l1[$i], $l1[$i + 1]]);\n  }\n  return $l2;\n}\n",
    "    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6);\nprint_r(pair_wise($l1));",
    "  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $result[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $result;\n}\n",
    "\t$l2 = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$l2[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $l2;\n}\n",
    "    $result = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(pair_wise($l1));",
    "    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nprint_r(pair_wise([1, 2, 3, 4, 5]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10",
    "    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n"
  ]
}
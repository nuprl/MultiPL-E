{
  "name": "mbpp_407_rearrange_bigger",
  "language": "php",
  "prompt": "<?php\n// Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger($n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_407_rearrange_bigger.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return rearrange_bigger(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(102) !== 120) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $digits = str_split($n);\n    $len = count($digits);\n    $i = $len - 1;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i <= 0) {\n        return -1;\n    }\n    $j = $len - 1;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    $tmp = $digits[$i - 1];\n    $digits[$i - 1] = $digits[$j];\n    $digits[$j] = $tmp;\n    $j = $len - 1;\n    while ($i < $j) {\n        $tmp = $digits[$i];\n        $digits[$i] = $digits[$j];\n        $digits[$j] = $tmp;\n        $i++;\n        $j--;\n    }\n    return implode('', $digits);\n}\n\necho rearrange_bigger(1234) . \"\\n\";\necho rearrange_bigger(4321) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534975) . \"\\n\";\necho rearrange_bigger(534974) . \"\\n\";\necho rearrange_bigger(534973) . \"\\n\";\necho rearrange_bigger(534972) . \"\\n\";\necho rearrange_bigger(534971) . \"\\n\";\necho rearrange_bigger(534970) . \"\\n\";\necho rearrange_bigger(534969) . \"\\n\";\necho rearrange_bigger(534968) . \"\\n\";\necho rearrange_bigger(534967) . \"\\n\";\necho rearrange_bigger(534966) . \"\\n\";\necho rearrange_bigger(534965) . \"\\n\";\necho rearrange_bigger(534964) . \"\\n\";\necho rearrange_bigger(534963)",
    "  $n = str_split($n);\n  $i = count($n) - 1;\n  while ($i > 0 && $n[$i - 1] >= $n[$i]) {\n    $i--;\n  }\n  if ($i <= 0) {\n    return -1;\n  }\n  $j = count($n) - 1;\n  while ($n[$j] <= $n[$i - 1]) {\n    $j--;\n  }\n  $tmp = $n[$i - 1];\n  $n[$i - 1] = $n[$j];\n  $n[$j] = $tmp;\n  $j = count($n) - 1;\n  while ($i < $j) {\n    $tmp = $n[$i];\n    $n[$i] = $n[$j];\n    $n[$j] = $tmp;\n    $i++;\n    $j--;\n  }\n  return implode($n);\n}\n\necho rearrange_bigger(1234) . \"\\n\";\necho rearrange_bigger(4321) . \"\\n\";\necho rearrange_bigger(1243) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";",
    "    $digits = str_split($n);\n    $len = count($digits);\n    $i = $len - 1;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i <= 0) {\n        return -1;\n    }\n    $j = $len - 1;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    $tmp = $digits[$i - 1];\n    $digits[$i - 1] = $digits[$j];\n    $digits[$j] = $tmp;\n    $j = $len - 1;\n    while ($i < $j) {\n        $tmp = $digits[$i];\n        $digits[$i] = $digits[$j];\n        $digits[$j] = $tmp;\n        $i++;\n        $j--;\n    }\n    return implode('', $digits);\n}\n\necho rearrange_bigger(1234) . PHP_EOL;\necho rearrange_bigger(4321) . PHP_EOL;\necho rearrange_bigger(534976) . PHP_EOL;\necho rearrange_bigger(534975) . PHP_EOL;\necho rearrange_bigger(534973) . PHP_EOL;\necho rearrange_bigger(534972) . PHP_EOL;\necho rearrange_bigger(534971) . PHP_EOL;\necho rearrange_bigger(534970) . PHP_EOL;\necho rearrange_bigger(534977) . PHP_EOL;\necho rearrange_bigger(534978) . PHP_EOL;\necho rearrange_bigger(534979) . PHP_EOL;\necho rearrange_bigger(534980) . PHP_EOL;\necho rearrange_bigger(534981) . PHP_EOL;\necho rearrange_bigger(534982) . PHP_EOL",
    "  $n = str_split($n);\n  $i = count($n) - 1;\n  while ($i > 0 && $n[$i - 1] >= $n[$i]) {\n    $i--;\n  }\n  if ($i <= 0) {\n    return -1;\n  }\n  $j = count($n) - 1;\n  while ($n[$j] <= $n[$i - 1]) {\n    $j--;\n  }\n  $tmp = $n[$i - 1];\n  $n[$i - 1] = $n[$j];\n  $n[$j] = $tmp;\n  $j = count($n) - 1;\n  while ($i < $j) {\n    $tmp = $n[$i];\n    $n[$i] = $n[$j];\n    $n[$j] = $tmp;\n    $i++;\n    $j--;\n  }\n  return implode($n);\n}\n\necho rearrange_bigger(1234) . \"\\n\";\necho rearrange_bigger(4321) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(12) . \"\\n\";\necho rearrange_bigger(21) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_",
    "    $n = (string)$n;\n    $len = strlen($n);\n    $i = $len - 1;\n    while ($i > 0 && $n[$i - 1] >= $n[$i]) {\n        $i--;\n    }\n    if ($i <= 0) {\n        return -1;\n    }\n    $j = $len - 1;\n    while ($n[$j] <= $n[$i - 1]) {\n        $j--;\n    }\n    $temp = $n[$i - 1];\n    $n[$i - 1] = $n[$j];\n    $n[$j] = $temp;\n    $j = $len - 1;\n    while ($i < $j) {\n        $temp = $n[$i];\n        $n[$i] = $n[$j];\n        $n[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return (int)$n;\n}\n",
    "  $digits = str_split($n);\n  $len = count($digits);\n  $i = $len - 1;\n  while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n    $i--;\n  }\n  if ($i <= 0) {\n    return -1;\n  }\n  $j = $len - 1;\n  while ($digits[$j] <= $digits[$i - 1]) {\n    $j--;\n  }\n  $tmp = $digits[$i - 1];\n  $digits[$i - 1] = $digits[$j];\n  $digits[$j] = $tmp;\n  $j = $len - 1;\n  while ($i < $j) {\n    $tmp = $digits[$i];\n    $digits[$i] = $digits[$j];\n    $digits[$j] = $tmp;\n    $i++;\n    $j--;\n  }\n  return implode('', $digits);\n}\n\n$n = 12345;\necho rearrange_bigger($n);\necho \"\\n\";\n\n$n = 54321;\necho rearrange_bigger($n);\necho \"\\n\";\n\n$n = 11111;\necho rearrange_bigger($n);\necho \"\\n\";\n\n$n = 54312;\necho rearrange_bigger($n);\necho \"\\n\";\n\n$n = 54321;\necho rearrange_bigger($n);\necho \"\\n\";\n\n$n = 54321;\necho rearrange_bigger($n);\necho \"\\n\";\n\n$n = 54321;\necho rearrange_bigger($n);\necho \"\\n\";\n\n$n = 54321;\necho rearrange_bigger($n);\necho \"\\n\";\n\n$n = 54321;\necho rearrange_bigger($n);\necho \"\\n\";\n\n$n = 54321;\necho rearrange_bigger($n);\necho \"\\n\";\n\n$n = 54321;\necho rearrange_",
    "  $digits = str_split($n);\n  $i = count($digits) - 1;\n  while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n    $i--;\n  }\n  if ($i <= 0) {\n    return -1;\n  }\n  $j = count($digits) - 1;\n  while ($digits[$j] <= $digits[$i - 1]) {\n    $j--;\n  }\n  $tmp = $digits[$i - 1];\n  $digits[$i - 1] = $digits[$j];\n  $digits[$j] = $tmp;\n  $j = count($digits) - 1;\n  while ($i < $j) {\n    $tmp = $digits[$i];\n    $digits[$i] = $digits[$j];\n    $digits[$j] = $tmp;\n    $i++;\n    $j--;\n  }\n  return implode('', $digits);\n}\n\necho rearrange_bigger(1234567890) . \"\\n\";\necho rearrange_bigger(123456789) . \"\\n\";\necho rearrange_bigger(12345678) . \"\\n\";\necho rearrange_bigger(1234567) . \"\\n\";\necho rearrange_bigger(123456) . \"\\n\";\necho rearrange_bigger(12345) . \"\\n\";\necho rearrange_bigger(1234) . \"\\n\";\necho rearrange_bigger(123) . \"\\n\";\necho rearrange_bigger(12) . \"\\n\";\necho rearrange_bigger(1) . \"\\n\";\necho rearrange_bigger(0) . \"\\n\";\necho rearrange_bigger(9876543210) . \"\\n\";\necho rearrange_bigger(987654321) . \"\\n\";\necho rearrange_bigger(98765432) . \"\\n\";\necho rearrange_bigger(9876543) . \"\\n\";\necho rearrange_bigger(987654) . \"\\n\";\necho rearr",
    "    $arr = str_split($n);\n    $i = count($arr) - 1;\n    while ($i > 0 && $arr[$i] <= $arr[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($arr) - 1;\n    while ($arr[$j] <= $arr[$i - 1]) {\n        $j--;\n    }\n    $tmp = $arr[$i - 1];\n    $arr[$i - 1] = $arr[$j];\n    $arr[$j] = $tmp;\n    $j = count($arr) - 1;\n    while ($i < $j) {\n        $tmp = $arr[$i];\n        $arr[$i] = $arr[$j];\n        $arr[$j] = $tmp;\n        $i++;\n        $j--;\n    }\n    return implode('', $arr);\n}\n\necho rearrange_bigger(1234) . PHP_EOL;\necho rearrange_bigger(4321) . PHP_EOL;\necho rearrange_bigger(534976) . PHP_EOL;",
    "    $digits = str_split($n);\n    $len = count($digits);\n    $i = $len - 1;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i <= 0) {\n        return -1;\n    }\n    $j = $len - 1;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    $temp = $digits[$i - 1];\n    $digits[$i - 1] = $digits[$j];\n    $digits[$j] = $temp;\n    $j = $len - 1;\n    while ($i < $j) {\n        $temp = $digits[$i];\n        $digits[$i] = $digits[$j];\n        $digits[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($digits);\n}\n",
    "    $digits = str_split($n);\n    $len = count($digits);\n    $i = $len - 1;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i <= 0) {\n        return -1;\n    }\n    $j = $len - 1;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    $tmp = $digits[$i - 1];\n    $digits[$i - 1] = $digits[$j];\n    $digits[$j] = $tmp;\n    $j = $len - 1;\n    while ($i < $j) {\n        $tmp = $digits[$i];\n        $digits[$i] = $digits[$j];\n        $digits[$j] = $tmp;\n        $i++;\n        $j--;\n    }\n    return implode('', $digits);\n}\n\necho rearrange_bigger(1234) . PHP_EOL;\necho rearrange_bigger(4321) . PHP_EOL;\necho rearrange_bigger(534976) . PHP_EOL;\necho rearrange_bigger(534976) . PHP_EOL;\necho rearrange_bigger(534976) . PHP_EOL;",
    "  $n = str_split($n);\n  $i = count($n) - 1;\n  while ($i > 0 && $n[$i - 1] >= $n[$i]) {\n    $i--;\n  }\n  if ($i <= 0) {\n    return -1;\n  }\n  $j = count($n) - 1;\n  while ($n[$j] <= $n[$i - 1]) {\n    $j--;\n  }\n  $temp = $n[$i - 1];\n  $n[$i - 1] = $n[$j];\n  $n[$j] = $temp;\n  $j = count($n) - 1;\n  while ($i < $j) {\n    $temp = $n[$i];\n    $n[$i] = $n[$j];\n    $n[$j] = $temp;\n    $i++;\n    $j--;\n  }\n  return implode($n);\n}\n\necho rearrange_bigger(1234) . \"\\n\";\necho rearrange_bigger(4321) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534975) . \"\\n\";\necho rearrange_bigger(534974) . \"\\n\";\necho rearrange_bigger(534973) . \"\\n\";\necho rearrange_bigger(534972) . \"\\n\";\necho rearrange_bigger(534971) . \"\\n\";\necho rearrange_bigger(534970) . \"\\n\";\necho rearrange_bigger(534969) . \"\\n\";\necho rearrange_bigger(534968) . \"\\n\";\necho rearrange_bigger(534967) . \"\\n\";\necho rearrange_bigger(534966) . \"\\n\";\necho rearrange_bigger(534965) . \"\\n\";\necho rearrange_bigger(534964) . \"\\n\";\necho rearrange_bigger(534963) . \"\\n\";\necho rearrange_bigger(534962) . \"\\n",
    "  $n = str_split($n);\n  $i = count($n) - 1;\n  while ($i > 0 && $n[$i - 1] >= $n[$i]) {\n    $i--;\n  }\n  if ($i <= 0) {\n    return -1;\n  }\n  $j = count($n) - 1;\n  while ($n[$j] <= $n[$i - 1]) {\n    $j--;\n  }\n  $tmp = $n[$i - 1];\n  $n[$i - 1] = $n[$j];\n  $n[$j] = $tmp;\n  $j = count($n) - 1;\n  while ($i < $j) {\n    $tmp = $n[$i];\n    $n[$i] = $n[$j];\n    $n[$j] = $tmp;\n    $i++;\n    $j--;\n  }\n  return implode($n);\n}\n\necho rearrange_bigger(1234) . \"\\n\";\necho rearrange_bigger(4321) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534975) . \"\\n\";\necho rearrange_bigger(531479) . \"\\n\";\necho rearrange_bigger(531419) . \"\\n\";\necho rearrange_bigger(531419) . \"\\n\";\necho rearrange_bigger(531419) . \"\\n\";\necho rearrange_bigger(531419) . \"\\n\";\necho rearrange_bigger(531419) . \"\\n\";\necho rearrange_bigger(531419) . \"\\n\";\necho rearrange_bigger(531419) . \"\\n\";\necho rearrange_bigger(531419) . \"\\n\";\necho rearrange_bigger(531419) . \"\\n\";\necho rearrange_bigger(531419) . \"\\n\";\necho rearrange_bigger(531419) . \"\\n\";\necho rearrange_bigger(531419) . \"\\n\";\n",
    "  $digits = str_split($n);\n  $len = count($digits);\n  $i = $len - 1;\n  while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n    $i--;\n  }\n  if ($i <= 0) {\n    return -1;\n  }\n  $j = $len - 1;\n  while ($digits[$j] <= $digits[$i - 1]) {\n    $j--;\n  }\n  $tmp = $digits[$i - 1];\n  $digits[$i - 1] = $digits[$j];\n  $digits[$j] = $tmp;\n  $j = $len - 1;\n  while ($i < $j) {\n    $tmp = $digits[$i];\n    $digits[$i] = $digits[$j];\n    $digits[$j] = $tmp;\n    $i++;\n    $j--;\n  }\n  return intval(implode('', $digits));\n}\n\necho rearrange_bigger(1234) . \"\\n\";\necho rearrange_bigger(4321) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534975) . \"\\n\";\necho rearrange_bigger(534974) . \"\\n\";\necho rearrange_bigger(534973) . \"\\n\";\necho rearrange_bigger(534972) . \"\\n\";\necho rearrange_bigger(534971) . \"\\n\";\necho rearrange_bigger(534970) . \"\\n\";\necho rearrange_bigger(534969) . \"\\n\";\necho rearrange_bigger(534968) . \"\\n\";\necho rearrange_bigger(534967) . \"\\n\";\necho rearrange_bigger(534966) . \"\\n\";\necho rearrange_bigger(534965) . \"\\n\";\necho rearrange_bigger(534964) . \"\\n\";\necho rearrange_bigger(534",
    "    $n = str_split($n);\n    $i = count($n) - 1;\n    while ($i > 0 && $n[$i - 1] >= $n[$i]) {\n        $i--;\n    }\n    if ($i <= 0) {\n        return -1;\n    }\n    $j = count($n) - 1;\n    while ($n[$j] <= $n[$i - 1]) {\n        $j--;\n    }\n    $tmp = $n[$i - 1];\n    $n[$i - 1] = $n[$j];\n    $n[$j] = $tmp;\n    $j = count($n) - 1;\n    while ($i < $j) {\n        $tmp = $n[$i];\n        $n[$i] = $n[$j];\n        $n[$j] = $tmp;\n        $i++;\n        $j--;\n    }\n    return implode($n);\n}\n\necho rearrange_bigger(123456789) . \"\\n\";\necho rearrange_bigger(123456798) . \"\\n\";\necho rearrange_bigger(123456789) . \"\\n\";\necho rearrange_bigger(123456798) . \"\\n\";\necho rearrange_bigger(123456789) . \"\\n\";\necho rearrange_bigger(123456798) . \"\\n\";\necho rearrange_bigger(123456789) . \"\\n\";\necho rearrange_bigger(123456798) . \"\\n\";\necho rearrange_bigger(123456789) . \"\\n\";\necho rearrange_bigger(123456798) . \"\\n\";\necho rearrange_bigger(123456789) . \"\\n\";\necho rearrange_bigger(123456798) . \"\\n\";\necho rearrange_bigger(123456789) . \"\\n\";\necho rearrange_bigger(123456798) . \"\\n\";\necho rearrange_bigger(123456789) . \"\\n\";\necho rearrange_bigger(123456798) . \"\\n",
    "    $digits = str_split($n);\n    $len = count($digits);\n    $i = $len - 1;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i <= 0) {\n        return -1;\n    }\n    $j = $len - 1;\n    while ($j > 0 && $digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    $tmp = $digits[$i - 1];\n    $digits[$i - 1] = $digits[$j];\n    $digits[$j] = $tmp;\n    $j = $len - 1;\n    while ($i < $j) {\n        $tmp = $digits[$i];\n        $digits[$i] = $digits[$j];\n        $digits[$j] = $tmp;\n        $i++;\n        $j--;\n    }\n    return implode('', $digits);\n}\n",
    "  $n = str_split($n);\n  $l = count($n);\n  $i = $l - 1;\n  while ($i > 0 && $n[$i] <= $n[$i - 1]) {\n    $i--;\n  }\n  if ($i == 0) {\n    return -1;\n  }\n  $j = $l - 1;\n  while ($n[$j] <= $n[$i - 1]) {\n    $j--;\n  }\n  $tmp = $n[$i - 1];\n  $n[$i - 1] = $n[$j];\n  $n[$j] = $tmp;\n  $j = $l - 1;\n  while ($i < $j) {\n    $tmp = $n[$i];\n    $n[$i] = $n[$j];\n    $n[$j] = $tmp;\n    $i++;\n    $j--;\n  }\n  return implode('', $n);\n}\n",
    "    $digits = str_split($n);\n    $len = count($digits);\n    $i = $len - 1;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i <= 0) {\n        return -1;\n    }\n    $j = $len - 1;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    $tmp = $digits[$i - 1];\n    $digits[$i - 1] = $digits[$j];\n    $digits[$j] = $tmp;\n    $j = $len - 1;\n    while ($i < $j) {\n        $tmp = $digits[$i];\n        $digits[$i] = $digits[$j];\n        $digits[$j] = $tmp;\n        $i++;\n        $j--;\n    }\n    return implode('', $digits);\n}\n\necho rearrange_bigger(1234) . \"\\n\";\necho rearrange_bigger(4321) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) .",
    "  $n = str_split($n);\n  $i = count($n) - 1;\n  while ($i > 0 && $n[$i - 1] >= $n[$i]) {\n    $i--;\n  }\n  if ($i <= 0) {\n    return -1;\n  }\n  $j = count($n) - 1;\n  while ($n[$j] <= $n[$i - 1]) {\n    $j--;\n  }\n  $tmp = $n[$i - 1];\n  $n[$i - 1] = $n[$j];\n  $n[$j] = $tmp;\n  $j = count($n) - 1;\n  while ($i < $j) {\n    $tmp = $n[$i];\n    $n[$i] = $n[$j];\n    $n[$j] = $tmp;\n    $i++;\n    $j--;\n  }\n  return implode('', $n);\n}\n",
    "    $digits = str_split($n);\n    $len = count($digits);\n    $i = $len - 1;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i <= 0) {\n        return -1;\n    }\n    $j = $len - 1;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    $tmp = $digits[$i - 1];\n    $digits[$i - 1] = $digits[$j];\n    $digits[$j] = $tmp;\n    $j = $len - 1;\n    while ($i < $j) {\n        $tmp = $digits[$i];\n        $digits[$i] = $digits[$j];\n        $digits[$j] = $tmp;\n        $i++;\n        $j--;\n    }\n    return implode($digits);\n}\n\necho rearrange_bigger(1234) . \"\\n\";\necho rearrange_bigger(4321) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n\";\necho rearrange_bigger(534976) . \"\\n",
    "    $digits = str_split($n);\n    $len = count($digits);\n    $i = $len - 1;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i <= 0) {\n        return -1;\n    }\n    $j = $len - 1;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    $tmp = $digits[$i - 1];\n    $digits[$i - 1] = $digits[$j];\n    $digits[$j] = $tmp;\n    $j = $len - 1;\n    while ($i < $j) {\n        $tmp = $digits[$i];\n        $digits[$i] = $digits[$j];\n        $digits[$j] = $tmp;\n        $i++;\n        $j--;\n    }\n    return implode($digits);\n}\n"
  ]
}
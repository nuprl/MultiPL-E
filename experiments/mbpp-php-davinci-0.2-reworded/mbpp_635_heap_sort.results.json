{
  "name": "mbpp_635_heap_sort",
  "language": "php",
  "prompt": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_635_heap_sort.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = array(1, 3, 2, 5, 4, 7, 6, 9, 8);\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqm9ia4b5.php:22\nStack trace:\n#0 /tmp/tmpqm9ia4b5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqm9ia4b5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgm16leg2.php:19\nStack trace:\n#0 /tmp/tmpgm16leg2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgm16leg2.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv560vh45.php:22\nStack trace:\n#0 /tmp/tmpv560vh45.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv560vh45.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 7, 6, 9, 8];\n\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp818fqajy.php:23\nStack trace:\n#0 /tmp/tmp818fqajy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp818fqajy.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 5, 2, 6, 3, 7, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9fnjh3ym.php:19\nStack trace:\n#0 /tmp/tmp9fnjh3ym.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9fnjh3ym.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuy84771r.php:23\nStack trace:\n#0 /tmp/tmpuy84771r.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuy84771r.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgm16leg2.php:19\nStack trace:\n#0 /tmp/tmpgm16leg2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgm16leg2.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1,5,3,2,4];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwd8r66ej.php:23\nStack trace:\n#0 /tmp/tmpwd8r66ej.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwd8r66ej.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$array = [1, 3, 2, 5, 4];\n$sorted = heap_sort($array);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3h75acsk.php:24\nStack trace:\n#0 /tmp/tmp3h75acsk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3h75acsk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $size = count($iterable);\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    for ($i = 0; $i < $size; $i++) {\n        $iterable[$i] = $heap->extract();\n    }\n    return $iterable;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($arr);\n\nprint_r($arr);\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 8\n    [1] => 5\n    [2] => 9\n    [3] => 10\n    [4] => 7\n    [5] => 1\n    [6] => 6\n    [7] => 4\n    [8] => 2\n    [9] => 3\n)\nArray\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv0focev.php:25\nStack trace:\n#0 /tmp/tmpdv0focev.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdv0focev.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgzbse80.php:22\nStack trace:\n#0 /tmp/tmptgzbse80.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptgzbse80.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3f0iefz2.php:23\nStack trace:\n#0 /tmp/tmp3f0iefz2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3f0iefz2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps1s7rxc8.php:22\nStack trace:\n#0 /tmp/tmps1s7rxc8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmps1s7rxc8.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2voigqso.php:23\nStack trace:\n#0 /tmp/tmp2voigqso.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2voigqso.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfuhiky3w.php:22\nStack trace:\n#0 /tmp/tmpfuhiky3w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfuhiky3w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\n\n$sorted_array = heap_sort($array);\nprint_r($sorted_array);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 4\n    [2] => 10\n    [3] => 2\n    [4] => 6\n    [5] => 3\n    [6] => 9\n    [7] => 5\n    [8] => 1\n    [9] => 8\n)\nArray\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47i8prum.php:22\nStack trace:\n#0 /tmp/tmp47i8prum.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp47i8prum.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv560vh45.php:22\nStack trace:\n#0 /tmp/tmpv560vh45.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv560vh45.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcucaq76r.php:22\nStack trace:\n#0 /tmp/tmpcucaq76r.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcucaq76r.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\n\n$sorted_array = heap_sort($array);\nprint_r($sorted_array);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 2\n    [2] => 5\n    [3] => 8\n    [4] => 4\n    [5] => 1\n    [6] => 9\n    [7] => 3\n    [8] => 7\n    [9] => 6\n)\nArray\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdqihtel8.php:26\nStack trace:\n#0 /tmp/tmpdqihtel8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdqihtel8.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho 'Unsorted: ' . implode(', ', $array) . PHP_EOL;\necho 'Sorted: ' . implode(', ', heap_sort($array)) . PHP_EOL;\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Unsorted: 10, 8, 5, 6, 2, 4, 3, 1, 9, 7\nSorted: 10, 9, 8, 7, 6, 5, 4, 3, 2, 1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmueqpl2.php:25\nStack trace:\n#0 /tmp/tmphmueqpl2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphmueqpl2.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplj9v46bl.php:23\nStack trace:\n#0 /tmp/tmplj9v46bl.php(28): test()\n#1 {main}\n  thrown in /tmp/tmplj9v46bl.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\n$sorted = heap_sort($array);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6m6fyjd.php:24\nStack trace:\n#0 /tmp/tmpr6m6fyjd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr6m6fyjd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxl_3v81.php:20\nStack trace:\n#0 /tmp/tmpsxl_3v81.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsxl_3v81.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 5, 4];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxigzycp.php:23\nStack trace:\n#0 /tmp/tmplxigzycp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmplxigzycp.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    for ($i = count($iterable) / 2 - 1; $i >= 0; $i--) {\n        heapify($iterable, count($iterable), $i);\n    }\n    for ($i = count($iterable) - 1; $i >= 0; $i--) {\n        $temp = $iterable[0];\n        $iterable[0] = $iterable[$i];\n        $iterable[$i] = $temp;\n        heapify($iterable, $i, 0);\n    }\n    return $iterable;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function heapify() in /tmp/tmp8htyk383.php:5\nStack trace:\n#0 /tmp/tmp8htyk383.php(17): heap_sort(Array)\n#1 /tmp/tmp8htyk383.php(21): candidate(Array)\n#2 /tmp/tmp8htyk383.php(26): test()\n#3 {main}\n  thrown in /tmp/tmp8htyk383.php on line 5\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe53yjiuo.php:19\nStack trace:\n#0 /tmp/tmpe53yjiuo.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpe53yjiuo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\n\n$sorted = heap_sort($array);\n\nprint_r($sorted);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphg5ocz8r.php:25\nStack trace:\n#0 /tmp/tmphg5ocz8r.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphg5ocz8r.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsuclaxqa.php:23\nStack trace:\n#0 /tmp/tmpsuclaxqa.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsuclaxqa.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [3, 2, 1, 4, 5, 6, 7, 8, 9, 10];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p7pbe1y.php:24\nStack trace:\n#0 /tmp/tmp7p7pbe1y.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7p7pbe1y.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = array(1, 3, 2, 5, 4);\n$sorted = heap_sort($arr);\nprint_r($sorted);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2pgbmrc.php:23\nStack trace:\n#0 /tmp/tmpk2pgbmrc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpk2pgbmrc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 5, 2, 4, 3];\n$sorted = heap_sort($arr);\nprint_r($sorted);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb47roby8.php:23\nStack trace:\n#0 /tmp/tmpb47roby8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpb47roby8.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$iterable = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(heap_sort($iterable));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "array(10) {\n  [9]=>\n  int(10)\n  [8]=>\n  int(9)\n  [7]=>\n  int(8)\n  [6]=>\n  int(7)\n  [5]=>\n  int(6)\n  [4]=>\n  int(5)\n  [3]=>\n  int(4)\n  [2]=>\n  int(3)\n  [1]=>\n  int(2)\n  [0]=>\n  int(1)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyu4sv8gh.php:19\nStack trace:\n#0 /tmp/tmpyu4sv8gh.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpyu4sv8gh.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfuhiky3w.php:22\nStack trace:\n#0 /tmp/tmpfuhiky3w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfuhiky3w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4];\n$sortedArr = heap_sort($arr);\nvar_dump($sortedArr);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "array(4) {\n  [0]=>\n  int(4)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(1)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvx0zmfb2.php:23\nStack trace:\n#0 /tmp/tmpvx0zmfb2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvx0zmfb2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4];\n$sorted_array = heap_sort($array);\nprint_r($sorted_array);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1dlsikcq.php:20\nStack trace:\n#0 /tmp/tmp1dlsikcq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1dlsikcq.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjl7iwvb.php:20\nStack trace:\n#0 /tmp/tmpyjl7iwvb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyjl7iwvb.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06361_9v.php:22\nStack trace:\n#0 /tmp/tmp06361_9v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp06361_9v.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n\n    return $sorted;\n}\n\n$iterable = [1, 5, 3, 2, 4];\n$sorted = heap_sort($iterable);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj6gs1bdk.php:26\nStack trace:\n#0 /tmp/tmpj6gs1bdk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpj6gs1bdk.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 5, 2, 7, 3, 9, 4, 6, 8];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpolgckb5e.php:23\nStack trace:\n#0 /tmp/tmpolgckb5e.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpolgckb5e.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxl_3v81.php:20\nStack trace:\n#0 /tmp/tmpsxl_3v81.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsxl_3v81.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b_5p_m6.php:23\nStack trace:\n#0 /tmp/tmp5b_5p_m6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5b_5p_m6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpx3921v.php:22\nStack trace:\n#0 /tmp/tmptpx3921v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptpx3921v.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\n\n$sorted_array = heap_sort($array);\nprint_r($sorted_array);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 10\n    [2] => 2\n    [3] => 9\n    [4] => 8\n    [5] => 3\n    [6] => 7\n    [7] => 4\n    [8] => 1\n    [9] => 6\n)\nArray\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqlexso1v.php:22\nStack trace:\n#0 /tmp/tmpqlexso1v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqlexso1v.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nvar_dump(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "array(4) {\n  [0]=>\n  int(4)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(1)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu62tw7tw.php:22\nStack trace:\n#0 /tmp/tmpu62tw7tw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpu62tw7tw.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjl7iwvb.php:20\nStack trace:\n#0 /tmp/tmpyjl7iwvb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyjl7iwvb.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv560vh45.php:22\nStack trace:\n#0 /tmp/tmpv560vh45.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv560vh45.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\n$sorted = heap_sort($array);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6m6fyjd.php:24\nStack trace:\n#0 /tmp/tmpr6m6fyjd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr6m6fyjd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfuhiky3w.php:22\nStack trace:\n#0 /tmp/tmpfuhiky3w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfuhiky3w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$array = [3, 5, 1, 2, 4];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzcsaj009.php:22\nStack trace:\n#0 /tmp/tmpzcsaj009.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzcsaj009.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgzbse80.php:22\nStack trace:\n#0 /tmp/tmptgzbse80.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptgzbse80.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxl_3v81.php:20\nStack trace:\n#0 /tmp/tmpsxl_3v81.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsxl_3v81.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 5, 2, 4, 3];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfza1jrbe.php:22\nStack trace:\n#0 /tmp/tmpfza1jrbe.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfza1jrbe.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rpvxc7u.php:22\nStack trace:\n#0 /tmp/tmp8rpvxc7u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8rpvxc7u.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [5, 2, 4, 6, 1, 3];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 4\n    [3] => 3\n    [4] => 2\n    [5] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekh87la4.php:22\nStack trace:\n#0 /tmp/tmpekh87la4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpekh87la4.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgh8t99y.php:23\nStack trace:\n#0 /tmp/tmpwgh8t99y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwgh8t99y.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaa8kfchq.php:25\nStack trace:\n#0 /tmp/tmpaa8kfchq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaa8kfchq.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7dl5chp.php:24\nStack trace:\n#0 /tmp/tmpz7dl5chp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz7dl5chp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($arr);\nprint_r($arr);\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 7\n    [2] => 9\n    [3] => 4\n    [4] => 8\n    [5] => 5\n    [6] => 2\n    [7] => 1\n    [8] => 10\n    [9] => 6\n)\nArray\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd325qhk8.php:20\nStack trace:\n#0 /tmp/tmpd325qhk8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpd325qhk8.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 2\n    [2] => 1\n    [3] => 6\n    [4] => 9\n    [5] => 7\n    [6] => 5\n    [7] => 4\n    [8] => 3\n    [9] => 8\n)\nArray\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchf_4pyy.php:20\nStack trace:\n#0 /tmp/tmpchf_4pyy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpchf_4pyy.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_owughx.php:18\nStack trace:\n#0 /tmp/tmp8_owughx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp8_owughx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxl_3v81.php:20\nStack trace:\n#0 /tmp/tmpsxl_3v81.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsxl_3v81.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv560vh45.php:22\nStack trace:\n#0 /tmp/tmpv560vh45.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv560vh45.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\n\n$sorted = heap_sort($array);\nprint_r($sorted);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 3\n    [2] => 10\n    [3] => 7\n    [4] => 8\n    [5] => 9\n    [6] => 2\n    [7] => 5\n    [8] => 4\n    [9] => 1\n)\nArray\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcni5roti.php:22\nStack trace:\n#0 /tmp/tmpcni5roti.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcni5roti.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3f0iefz2.php:23\nStack trace:\n#0 /tmp/tmp3f0iefz2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3f0iefz2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1,3,5,7,9,8,6,4,2];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkudzeiyb.php:24\nStack trace:\n#0 /tmp/tmpkudzeiyb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkudzeiyb.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 5, 4];\n$arr = heap_sort($arr);\nprint_r($arr);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxc3dxi39.php:23\nStack trace:\n#0 /tmp/tmpxc3dxi39.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxc3dxi39.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 7, 6, 9, 8];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbnuflz6.php:22\nStack trace:\n#0 /tmp/tmpfbnuflz6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfbnuflz6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrreyn56.php:22\nStack trace:\n#0 /tmp/tmpzrreyn56.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzrreyn56.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvepez_w8.php:23\nStack trace:\n#0 /tmp/tmpvepez_w8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvepez_w8.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxgbxtlz_.php:22\nStack trace:\n#0 /tmp/tmpxgbxtlz_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxgbxtlz_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 5, 3, 4, 6, 7, 9, 8];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphg332jen.php:23\nStack trace:\n#0 /tmp/tmphg332jen.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphg332jen.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$iterable = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nprint_r(heap_sort($iterable));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6urouob.php:23\nStack trace:\n#0 /tmp/tmpb6urouob.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpb6urouob.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [5, 2, 1, 3, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwxkvoyd.php:22\nStack trace:\n#0 /tmp/tmpmwxkvoyd.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmwxkvoyd.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 4, 2, 5, 3, 6];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjxuzqup.php:19\nStack trace:\n#0 /tmp/tmpgjxuzqup.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgjxuzqup.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [5, 3, 1, 2, 4];\necho implode(', ', heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "5, 4, 3, 2, 1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjvv74wzh.php:22\nStack trace:\n#0 /tmp/tmpjvv74wzh.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjvv74wzh.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_ubzg2p.php:20\nStack trace:\n#0 /tmp/tmp2_ubzg2p.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2_ubzg2p.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2za9_1qc.php:19\nStack trace:\n#0 /tmp/tmp2za9_1qc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2za9_1qc.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4];\nvar_dump(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "array(4) {\n  [0]=>\n  int(4)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(1)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdyx1heva.php:22\nStack trace:\n#0 /tmp/tmpdyx1heva.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdyx1heva.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv560vh45.php:22\nStack trace:\n#0 /tmp/tmpv560vh45.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv560vh45.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxe5jo75.php:19\nStack trace:\n#0 /tmp/tmptxe5jo75.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptxe5jo75.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 5, 2, 4, 3, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1zm7l9a.php:22\nStack trace:\n#0 /tmp/tmpu1zm7l9a.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpu1zm7l9a.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\n$sorted_array = heap_sort($array);\nprint_r($sorted_array);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ij9c397.php:19\nStack trace:\n#0 /tmp/tmp9ij9c397.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9ij9c397.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($arr);\nprint_r($arr);\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 4\n    [2] => 6\n    [3] => 9\n    [4] => 8\n    [5] => 5\n    [6] => 3\n    [7] => 2\n    [8] => 7\n    [9] => 1\n)\nArray\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzkdrb5he.php:25\nStack trace:\n#0 /tmp/tmpzkdrb5he.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzkdrb5he.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsirivnk.php:23\nStack trace:\n#0 /tmp/tmpgsirivnk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgsirivnk.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgzbse80.php:22\nStack trace:\n#0 /tmp/tmptgzbse80.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptgzbse80.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = array(1, 3, 2, 4);\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkq3bekou.php:22\nStack trace:\n#0 /tmp/tmpkq3bekou.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkq3bekou.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho \"Unsorted array :\\n\";\necho implode(', ', $array );\necho \"\\nSorted array :\\n\";\necho implode(', ', heap_sort($array)). \"\\n\";\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Unsorted array :\n1, 4, 9, 10, 7, 3, 6, 2, 5, 8\nSorted array :\n10, 9, 8, 7, 6, 5, 4, 3, 2, 1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjametuos.php:28\nStack trace:\n#0 /tmp/tmpjametuos.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjametuos.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b_5p_m6.php:23\nStack trace:\n#0 /tmp/tmp5b_5p_m6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5b_5p_m6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\n\n$sorted = heap_sort($array);\nprint_r($sorted);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 8\n    [1] => 9\n    [2] => 3\n    [3] => 6\n    [4] => 1\n    [5] => 2\n    [6] => 10\n    [7] => 7\n    [8] => 5\n    [9] => 4\n)\nArray\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_f89d0h.php:26\nStack trace:\n#0 /tmp/tmpv_f89d0h.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpv_f89d0h.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $size = count($iterable);\n    for ($i = $size / 2 - 1; $i >= 0; $i--) {\n        heapify($iterable, $size, $i);\n    }\n    for ($i = $size - 1; $i >= 0; $i--) {\n        swap($iterable, 0, $i);\n        heapify($iterable, $i, 0);\n    }\n    return $iterable;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function heapify() in /tmp/tmpj8pdfpsi.php:6\nStack trace:\n#0 /tmp/tmpj8pdfpsi.php(16): heap_sort(Array)\n#1 /tmp/tmpj8pdfpsi.php(20): candidate(Array)\n#2 /tmp/tmpj8pdfpsi.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpj8pdfpsi.php on line 6\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3f0iefz2.php:23\nStack trace:\n#0 /tmp/tmp3f0iefz2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3f0iefz2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b_5p_m6.php:23\nStack trace:\n#0 /tmp/tmp5b_5p_m6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5b_5p_m6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzq9p4e9u.php:22\nStack trace:\n#0 /tmp/tmpzq9p4e9u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzq9p4e9u.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\n$sorted = heap_sort($array);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6m6fyjd.php:24\nStack trace:\n#0 /tmp/tmpr6m6fyjd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr6m6fyjd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsirivnk.php:23\nStack trace:\n#0 /tmp/tmpgsirivnk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgsirivnk.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 5, 2, 4, 10, 6, 0, 3, 10];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 10\n    [2] => 6\n    [3] => 5\n    [4] => 4\n    [5] => 3\n    [6] => 2\n    [7] => 1\n    [8] => 0\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppqo7xys6.php:23\nStack trace:\n#0 /tmp/tmppqo7xys6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppqo7xys6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7dl5chp.php:24\nStack trace:\n#0 /tmp/tmpz7dl5chp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz7dl5chp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($arr);\nprint_r($arr);\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 8\n    [2] => 3\n    [3] => 1\n    [4] => 7\n    [5] => 9\n    [6] => 5\n    [7] => 10\n    [8] => 6\n    [9] => 2\n)\nArray\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouc5au6p.php:24\nStack trace:\n#0 /tmp/tmpouc5au6p.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpouc5au6p.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while($heap->valid()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjwofbh0x.php:23\nStack trace:\n#0 /tmp/tmpjwofbh0x.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjwofbh0x.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgm16leg2.php:19\nStack trace:\n#0 /tmp/tmpgm16leg2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgm16leg2.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wnekdm3.php:18\nStack trace:\n#0 /tmp/tmp1wnekdm3.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp1wnekdm3.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $size = count($iterable);\n    for ($i = $size / 2 - 1; $i >= 0; $i--) {\n        heapify($iterable, $size, $i);\n    }\n    for ($i = $size - 1; $i >= 0; $i--) {\n        $temp = $iterable[0];\n        $iterable[0] = $iterable[$i];\n        $iterable[$i] = $temp;\n        heapify($iterable, $i, 0);\n    }\n    return $iterable;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function heapify() in /tmp/tmpnw_0wzv7.php:6\nStack trace:\n#0 /tmp/tmpnw_0wzv7.php(18): heap_sort(Array)\n#1 /tmp/tmpnw_0wzv7.php(22): candidate(Array)\n#2 /tmp/tmpnw_0wzv7.php(27): test()\n#3 {main}\n  thrown in /tmp/tmpnw_0wzv7.php on line 6\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [5, 3, 6, 1, 4, 2];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ww0yb1g.php:19\nStack trace:\n#0 /tmp/tmp4ww0yb1g.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp4ww0yb1g.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfuhiky3w.php:22\nStack trace:\n#0 /tmp/tmpfuhiky3w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfuhiky3w.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 5, 4];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6kk_fr6n.php:22\nStack trace:\n#0 /tmp/tmp6kk_fr6n.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6kk_fr6n.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphilqzf7w.php:23\nStack trace:\n#0 /tmp/tmphilqzf7w.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphilqzf7w.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b_5p_m6.php:23\nStack trace:\n#0 /tmp/tmp5b_5p_m6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5b_5p_m6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlbcohfh.php:22\nStack trace:\n#0 /tmp/tmprlbcohfh.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprlbcohfh.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$array = [1, 3, 2, 5, 4];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjkgf35b7.php:23\nStack trace:\n#0 /tmp/tmpjkgf35b7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjkgf35b7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuy84771r.php:23\nStack trace:\n#0 /tmp/tmpuy84771r.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuy84771r.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wnekdm3.php:18\nStack trace:\n#0 /tmp/tmp1wnekdm3.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp1wnekdm3.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$iterable = [1, 3, 2, 5, 4];\n$result = heap_sort($iterable);\nvar_dump($result);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "array(5) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(4)\n  [2]=>\n  int(3)\n  [3]=>\n  int(2)\n  [4]=>\n  int(1)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvn3oq_v.php:24\nStack trace:\n#0 /tmp/tmpyvn3oq_v.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyvn3oq_v.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuy84771r.php:23\nStack trace:\n#0 /tmp/tmpuy84771r.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuy84771r.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rpvxc7u.php:22\nStack trace:\n#0 /tmp/tmp8rpvxc7u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8rpvxc7u.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nvar_dump(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "array(4) {\n  [0]=>\n  int(4)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(1)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprvrujiru.php:22\nStack trace:\n#0 /tmp/tmprvrujiru.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprvrujiru.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wnekdm3.php:18\nStack trace:\n#0 /tmp/tmp1wnekdm3.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp1wnekdm3.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\n\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_iunff_.php:23\nStack trace:\n#0 /tmp/tmp4_iunff_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4_iunff_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 7\n    [2] => 3\n    [3] => 2\n    [4] => 1\n    [5] => 8\n    [6] => 4\n    [7] => 5\n    [8] => 9\n    [9] => 6\n)\nArray\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkczx4vfb.php:25\nStack trace:\n#0 /tmp/tmpkczx4vfb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpkczx4vfb.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\n$sorted = heap_sort($array);\nprint_r($sorted);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy76g23vr.php:23\nStack trace:\n#0 /tmp/tmpy76g23vr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpy76g23vr.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxl_3v81.php:20\nStack trace:\n#0 /tmp/tmpsxl_3v81.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsxl_3v81.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 5, 2, 7, 3, 9, 4, 6, 8];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdp1v7e60.php:22\nStack trace:\n#0 /tmp/tmpdp1v7e60.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdp1v7e60.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b_5p_m6.php:23\nStack trace:\n#0 /tmp/tmp5b_5p_m6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5b_5p_m6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsirivnk.php:23\nStack trace:\n#0 /tmp/tmpgsirivnk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgsirivnk.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 5, 4];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6kk_fr6n.php:22\nStack trace:\n#0 /tmp/tmp6kk_fr6n.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6kk_fr6n.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9xthg64.php:24\nStack trace:\n#0 /tmp/tmpt9xthg64.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpt9xthg64.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7dl5chp.php:24\nStack trace:\n#0 /tmp/tmpz7dl5chp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz7dl5chp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24_wcwcr.php:18\nStack trace:\n#0 /tmp/tmp24_wcwcr.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp24_wcwcr.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mbvph86.php:23\nStack trace:\n#0 /tmp/tmp0mbvph86.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0mbvph86.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7dl5chp.php:24\nStack trace:\n#0 /tmp/tmpz7dl5chp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz7dl5chp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\n$sorted = heap_sort($array);\nprint_r($sorted);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmhobjo64.php:23\nStack trace:\n#0 /tmp/tmpmhobjo64.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmhobjo64.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2oq4awz7.php:20\nStack trace:\n#0 /tmp/tmp2oq4awz7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2oq4awz7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\n$sorted = heap_sort($array);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_jn5drj.php:24\nStack trace:\n#0 /tmp/tmpx_jn5drj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpx_jn5drj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv560vh45.php:22\nStack trace:\n#0 /tmp/tmpv560vh45.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv560vh45.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlbcohfh.php:22\nStack trace:\n#0 /tmp/tmprlbcohfh.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprlbcohfh.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b_5p_m6.php:23\nStack trace:\n#0 /tmp/tmp5b_5p_m6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5b_5p_m6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7dl5chp.php:24\nStack trace:\n#0 /tmp/tmpz7dl5chp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz7dl5chp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\necho '<pre>';\nprint_r(heap_sort($arr));\necho '</pre>';\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "<pre>Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2hj1gau.php:24\nStack trace:\n#0 /tmp/tmpl2hj1gau.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpl2hj1gau.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2xl5c5h.php:22\nStack trace:\n#0 /tmp/tmpy2xl5c5h.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpy2xl5c5h.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rpvxc7u.php:22\nStack trace:\n#0 /tmp/tmp8rpvxc7u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8rpvxc7u.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxl_3v81.php:20\nStack trace:\n#0 /tmp/tmpsxl_3v81.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsxl_3v81.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv560vh45.php:22\nStack trace:\n#0 /tmp/tmpv560vh45.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv560vh45.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxl_3v81.php:20\nStack trace:\n#0 /tmp/tmpsxl_3v81.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsxl_3v81.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0mpspgf.php:18\nStack trace:\n#0 /tmp/tmpu0mpspgf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpu0mpspgf.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b_5p_m6.php:23\nStack trace:\n#0 /tmp/tmp5b_5p_m6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5b_5p_m6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [5, 2, 1, 3, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwxkvoyd.php:22\nStack trace:\n#0 /tmp/tmpmwxkvoyd.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmwxkvoyd.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($arr);\nprint_r($arr);\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 6\n    [2] => 3\n    [3] => 8\n    [4] => 1\n    [5] => 5\n    [6] => 7\n    [7] => 10\n    [8] => 9\n    [9] => 4\n)\nArray\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuah8972n.php:20\nStack trace:\n#0 /tmp/tmpuah8972n.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuah8972n.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgh8t99y.php:23\nStack trace:\n#0 /tmp/tmpwgh8t99y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwgh8t99y.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\n$sorted = heap_sort($array);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ly8mfl1.php:24\nStack trace:\n#0 /tmp/tmp8ly8mfl1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8ly8mfl1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho 'Unsorted: ' . implode(', ', $array) . PHP_EOL;\necho 'Sorted: ' . implode(', ', heap_sort($array)) . PHP_EOL;\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Unsorted: 10, 8, 5, 6, 2, 4, 3, 1, 9, 7\nSorted: 10, 9, 8, 7, 6, 5, 4, 3, 2, 1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmueqpl2.php:25\nStack trace:\n#0 /tmp/tmphmueqpl2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphmueqpl2.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho 'Unsorted: ' . implode(', ', $array) . PHP_EOL;\necho 'Sorted: ' . implode(', ', heap_sort($array)) . PHP_EOL;\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Unsorted: 10, 8, 5, 6, 2, 4, 3, 1, 9, 7\nSorted: 10, 9, 8, 7, 6, 5, 4, 3, 2, 1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmueqpl2.php:25\nStack trace:\n#0 /tmp/tmphmueqpl2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphmueqpl2.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nshuffle($arr);\nprint_r($arr);\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 9\n    [1] => 1\n    [2] => 6\n    [3] => 3\n    [4] => 8\n    [5] => 2\n    [6] => 7\n    [7] => 4\n    [8] => 5\n)\nArray\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6hy97m37.php:24\nStack trace:\n#0 /tmp/tmp6hy97m37.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6hy97m37.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b_5p_m6.php:23\nStack trace:\n#0 /tmp/tmp5b_5p_m6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5b_5p_m6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [5, 3, 2, 1, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15s_hh5v.php:23\nStack trace:\n#0 /tmp/tmp15s_hh5v.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp15s_hh5v.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [5, 3, 2, 1, 4];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoh39awbi.php:23\nStack trace:\n#0 /tmp/tmpoh39awbi.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpoh39awbi.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgzbse80.php:22\nStack trace:\n#0 /tmp/tmptgzbse80.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptgzbse80.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho 'Unsorted: ' . implode(', ', $array) . PHP_EOL;\necho 'Sorted: ' . implode(', ', heap_sort($array)) . PHP_EOL;\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Unsorted: 10, 8, 5, 6, 2, 4, 3, 1, 9, 7\nSorted: 10, 9, 8, 7, 6, 5, 4, 3, 2, 1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmueqpl2.php:25\nStack trace:\n#0 /tmp/tmphmueqpl2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphmueqpl2.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv560vh45.php:22\nStack trace:\n#0 /tmp/tmpv560vh45.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv560vh45.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho 'Unsorted: ' . implode(', ', $array) . PHP_EOL;\necho 'Sorted: ' . implode(', ', heap_sort($array)) . PHP_EOL;\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Unsorted: 10, 8, 5, 6, 2, 4, 3, 1, 9, 7\nSorted: 10, 9, 8, 7, 6, 5, 4, 3, 2, 1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmueqpl2.php:25\nStack trace:\n#0 /tmp/tmphmueqpl2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphmueqpl2.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nvar_dump(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "array(4) {\n  [0]=>\n  int(4)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(1)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf_xhrta.php:23\nStack trace:\n#0 /tmp/tmpmf_xhrta.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmf_xhrta.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3u99lrl.php:22\nStack trace:\n#0 /tmp/tmpk3u99lrl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk3u99lrl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4];\n$arr = heap_sort($arr);\nprint_r($arr);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60i2w_6k.php:23\nStack trace:\n#0 /tmp/tmp60i2w_6k.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp60i2w_6k.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = array(1, 3, 2, 4);\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_llq95xg.php:22\nStack trace:\n#0 /tmp/tmp_llq95xg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_llq95xg.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlbcohfh.php:22\nStack trace:\n#0 /tmp/tmprlbcohfh.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprlbcohfh.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 9\n    [3] => 7\n    [4] => 10\n    [5] => 8\n    [6] => 2\n    [7] => 5\n    [8] => 6\n    [9] => 1\n)\nArray\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpug38ifxm.php:24\nStack trace:\n#0 /tmp/tmpug38ifxm.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpug38ifxm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [9, 8, 7, 6, 5, 4, 3, 2, 1];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjn_r8zin.php:22\nStack trace:\n#0 /tmp/tmpjn_r8zin.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjn_r8zin.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3u99lrl.php:22\nStack trace:\n#0 /tmp/tmpk3u99lrl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk3u99lrl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\necho implode(', ', heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "4, 3, 2, 1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ihge2i1.php:22\nStack trace:\n#0 /tmp/tmp7ihge2i1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7ihge2i1.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$array = [4, 2, 1, 3, 5];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3nuech8.php:22\nStack trace:\n#0 /tmp/tmpv3nuech8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv3nuech8.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho 'Unsorted Array : ';\necho implode(', ', $array);\necho \"\\n\";\n\n$sorted_array = heap_sort($array);\necho 'Sorted Array : ';\necho implode(', ', $sorted_array);\necho \"\\n\";\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Unsorted Array : 2, 7, 3, 4, 10, 5, 8, 6, 1, 9\nSorted Array : 10, 9, 8, 7, 6, 5, 4, 3, 2, 1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxs8qc77.php:31\nStack trace:\n#0 /tmp/tmplxs8qc77.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplxs8qc77.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptexkc_1v.php:19\nStack trace:\n#0 /tmp/tmptexkc_1v.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptexkc_1v.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 5, 4];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6kk_fr6n.php:22\nStack trace:\n#0 /tmp/tmp6kk_fr6n.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp6kk_fr6n.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7dl5chp.php:24\nStack trace:\n#0 /tmp/tmpz7dl5chp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz7dl5chp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509923,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3f0iefz2.php:23\nStack trace:\n#0 /tmp/tmp3f0iefz2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3f0iefz2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($arr);\nprint_r($arr);\necho \"\\n\";\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 8\n    [2] => 10\n    [3] => 5\n    [4] => 9\n    [5] => 6\n    [6] => 2\n    [7] => 7\n    [8] => 4\n    [9] => 3\n)\n\nArray\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsy3l7m8x.php:25\nStack trace:\n#0 /tmp/tmpsy3l7m8x.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsy3l7m8x.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\n\necho implode(', ', heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "4, 3, 2, 1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgfamn4qf.php:23\nStack trace:\n#0 /tmp/tmpgfamn4qf.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgfamn4qf.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 9\n    [3] => 7\n    [4] => 10\n    [5] => 8\n    [6] => 2\n    [7] => 5\n    [8] => 6\n    [9] => 1\n)\nArray\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpug38ifxm.php:24\nStack trace:\n#0 /tmp/tmpug38ifxm.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpug38ifxm.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$input = [1, 3, 2, 4];\n$output = heap_sort($input);\nprint_r($output);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5s8m_yp.php:20\nStack trace:\n#0 /tmp/tmpc5s8m_yp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc5s8m_yp.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlbcohfh.php:22\nStack trace:\n#0 /tmp/tmprlbcohfh.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprlbcohfh.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$iterable = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($iterable);\nprint_r(heap_sort($iterable));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39qg2tf1.php:23\nStack trace:\n#0 /tmp/tmp39qg2tf1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp39qg2tf1.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [4, 3, 2, 1, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp41r5cx89.php:22\nStack trace:\n#0 /tmp/tmp41r5cx89.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp41r5cx89.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sorted = heap_sort($array);\nprint_r($sorted);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [9] => 10\n    [8] => 9\n    [7] => 8\n    [6] => 7\n    [5] => 6\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz8lpp7k2.php:19\nStack trace:\n#0 /tmp/tmpz8lpp7k2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpz8lpp7k2.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = array(1, 3, 2, 5, 4);\n$sorted_array = heap_sort($array);\nprint_r($sorted_array);\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpip5kzgz4.php:19\nStack trace:\n#0 /tmp/tmpip5kzgz4.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpip5kzgz4.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 3, 2, 4, 5];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6q2vrs5.php:19\nStack trace:\n#0 /tmp/tmpt6q2vrs5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpt6q2vrs5.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptct9aszj.php:23\nStack trace:\n#0 /tmp/tmptct9aszj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptct9aszj.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [2, 5, 3, 1, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpndfqxedx.php:24\nStack trace:\n#0 /tmp/tmpndfqxedx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpndfqxedx.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87zxx3ua.php:23\nStack trace:\n#0 /tmp/tmp87zxx3ua.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp87zxx3ua.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaa5hnpv_.php:23\nStack trace:\n#0 /tmp/tmpaa5hnpv_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpaa5hnpv_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [5, 2, 1, 3, 4];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1uw1e10o.php:19\nStack trace:\n#0 /tmp/tmp1uw1e10o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp1uw1e10o.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [5, 3, 2, 4, 1];\n$sorted = heap_sort($array);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3l0je9of.php:24\nStack trace:\n#0 /tmp/tmp3l0je9of.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3l0je9of.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 5, 4];\nprint_r(heap_sort($array));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [4] => 5\n    [3] => 4\n    [2] => 3\n    [1] => 2\n    [0] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbci4sn4m.php:18\nStack trace:\n#0 /tmp/tmpbci4sn4m.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpbci4sn4m.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rpvxc7u.php:22\nStack trace:\n#0 /tmp/tmp8rpvxc7u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8rpvxc7u.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [5, 3, 2, 1, 4];\nprint_r(heap_sort($array));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoh39awbi.php:23\nStack trace:\n#0 /tmp/tmpoh39awbi.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpoh39awbi.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 7, 6, 9, 8];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 9\n    [1] => 8\n    [2] => 7\n    [3] => 6\n    [4] => 5\n    [5] => 4\n    [6] => 3\n    [7] => 2\n    [8] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5akud52d.php:23\nStack trace:\n#0 /tmp/tmp5akud52d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5akud52d.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $length = count($iterable);\n    for ($i = $length / 2 - 1; $i >= 0; $i--) {\n        heapify($iterable, $length, $i);\n    }\n    for ($i = $length - 1; $i >= 0; $i--) {\n        swap($iterable, 0, $i);\n        heapify($iterable, $i, 0);\n    }\n    return $iterable;\n}\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function heapify() in /tmp/tmpf0cvu6s0.php:6\nStack trace:\n#0 /tmp/tmpf0cvu6s0.php(16): heap_sort(Array)\n#1 /tmp/tmpf0cvu6s0.php(20): candidate(Array)\n#2 /tmp/tmpf0cvu6s0.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpf0cvu6s0.php on line 6\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\n$sorted = heap_sort($array);\nprint_r($sorted);\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6m6fyjd.php:24\nStack trace:\n#0 /tmp/tmpr6m6fyjd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr6m6fyjd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rpvxc7u.php:22\nStack trace:\n#0 /tmp/tmp8rpvxc7u.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8rpvxc7u.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b_5p_m6.php:23\nStack trace:\n#0 /tmp/tmp5b_5p_m6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5b_5p_m6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 3\n    [2] => 2\n    [3] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgh8t99y.php:23\nStack trace:\n#0 /tmp/tmpwgh8t99y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwgh8t99y.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "Array\n(\n    [0] => 10\n    [1] => 9\n    [2] => 8\n    [3] => 7\n    [4] => 6\n    [5] => 5\n    [6] => 4\n    [7] => 3\n    [8] => 2\n    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxgtk_4p8.php:22\nStack trace:\n#0 /tmp/tmpxgtk_4p8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxgtk_4p8.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nvar_dump(heap_sort($arr));\nfunction candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "array(4) {\n  [0]=>\n  int(4)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(1)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprvrujiru.php:22\nStack trace:\n#0 /tmp/tmprvrujiru.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprvrujiru.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
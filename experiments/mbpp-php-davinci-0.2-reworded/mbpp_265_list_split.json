{
  "name": "mbpp_265_list_split",
  "language": "php",
  "prompt": "<?php\n// Write a function that takes in an array and an integer n and splits an array for every nth element, returning an array of the resulting arrays.\nfunction list_split($S, $step) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_265_list_split.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return list_split(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"), 3) !== array(array(\"a\", \"d\", \"g\", \"j\", \"m\"), array(\"b\", \"e\", \"h\", \"k\", \"n\"), array(\"c\", \"f\", \"i\", \"l\"))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3) !== array(array(1, 4, 7, 10, 13), array(2, 5, 8, 11, 14), array(3, 6, 9, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"python\", \"java\", \"C\", \"C++\", \"DBMS\", \"SQL\"), 2) !== array(array(\"python\", \"C\", \"DBMS\"), array(\"java\", \"C++\", \"SQL\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n",
    "    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n",
    "\t$result = array();\n\t$count = count($S);\n\tif ($count <= $step) {\n\t\t$result[] = $S;\n\t} else {\n\t\t$i = 0;\n\t\twhile ($i < $count) {\n\t\t\t$result[] = array_slice($S, $i, $step);\n\t\t\t$i += $step;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);",
    "  $result = array();\n  $i = 0;\n  while ($i < count($S)) {\n    $result[] = array_slice($S, $i, $step);\n    $i += $step;\n  }\n  return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\nprint_r(list_split($S, $step));",
    "    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n\nprint_r(list_split($S, $step));",
    "    $result = array();\n    $i = 0;\n    foreach ($S as $e) {\n        if ($i % $step == 0) {\n            $result[] = array();\n        }\n        $result[count($result) - 1][] = $e;\n        $i++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                array_push($result[$j], $S[$i]);\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);",
    "    $result = array();\n    $count = count($S);\n    for ($i = 0; $i < $count; $i += $step) {\n        $result[] = array_slice($S, $i, $step);\n    }\n    return $result;\n}\n",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n",
    "    $result = array();\n    $count = 0;\n    $temp = array();\n    foreach ($S as $item) {\n        if ($count == $step) {\n            array_push($result, $temp);\n            $temp = array();\n            $count = 0;\n        }\n        array_push($temp, $item);\n        $count++;\n    }\n    array_push($result, $temp);\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n$result = list_split($S, $step);\nprint_r($result);",
    "    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        array_push($result, array_slice($S, $i, $step));\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n",
    "    $result = [];\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    $len = count($S);\n    while ($i < $len) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i >= $len) {\n                break;\n            }\n            $result[$j][$k] = $S[$i];\n            $i++;\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n",
    "    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n\n$S = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n$step = 5;\n\nprint_r(list_split($S, $step));",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 12);\n$step = 3;\n$result = list_split($S, $step);\nprint_r($result);\n",
    "    $result = array();\n    $i = 0;\n    while ($i < count($S)) {\n        $result[] = array_slice($S, $i, $step);\n        $i += $step;\n    }\n    return $result;\n}\n",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($S)) {\n        $result[$j] = array();\n        for ($k = 0; $k < $step; $k++) {\n            if ($i < count($S)) {\n                $result[$j][$k] = $S[$i];\n                $i++;\n            }\n        }\n        $j++;\n    }\n    return $result;\n}\n\n$S = array(2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$step = 5;\n\n$result = list_split($S, $step);\nprint_r($result);"
  ]
}
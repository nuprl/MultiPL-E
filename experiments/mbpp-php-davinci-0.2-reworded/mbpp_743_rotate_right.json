{
  "name": "mbpp_743_rotate_right",
  "language": "php",
  "prompt": "<?php\n// Write a function to rotate a given array by specified number of items to the right direction. https://www.geeksforgeeks.org/phpthon-program-right-rotate-array-n/\nfunction rotate_right($list, $m) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_743_rotate_right.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return rotate_right(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 3) !== array(8, 9, 10, 1, 2, 3, 4, 5, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 2) !== array(9, 10, 1, 2, 3, 4, 5, 6, 7, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 5) !== array(6, 7, 8, 9, 10, 1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $list_length = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $length = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    $temp2 = array_slice($list, 0, $length - $m);\n    $list = array_merge($temp, $temp2);\n    return $list;\n}\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $rotated_list = array();\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $rotated_list[($i + $m) % $n] = $list[$i];\n    }\n    return $rotated_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$rotated_list = rotate_right($list, $m);\nprint_r($rotated_list);\n",
    "    $length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $list = array_slice($list, 0, $n - $m);\n    return array_merge($temp, $list);\n}\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    $temp2 = array_slice($list, 0, $length - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "\t$size = count($list);\n\t$result = array();\n\tfor($i = 0; $i < $size; $i++) {\n\t\t$result[($i + $m) % $size] = $list[$i];\n\t}\n\treturn $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 2;\nprint_r(rotate_right($list, $m));\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_slice($list, $length - $m);\n    $new_list = array_merge($new_list, array_slice($list, 0, $length - $m));\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $list_len = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $list_len; $i++) {\n        $new_list[($i + $m) % $list_len] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $length = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $result = [];\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $length = count($list);\n    $result = array();\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "\t$length = count($list);\n\t$m = $m % $length;\n\t$result = array_merge(array_slice($list, $m), array_slice($list, 0, $m));\n\treturn $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $list_length = count($list);\n    $rotated_list = array();\n    for ($i = 0; $i < $list_length; $i++) {\n        $rotated_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $rotated_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$rotated_list = rotate_right($list, $m);\nprint_r($rotated_list);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $len = count($list);\n    $m = $m % $len;\n    $temp = array_slice($list, $len - $m);\n    $list = array_slice($list, 0, $len - $m);\n    return array_merge($temp, $list);\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n)\n                $k = $k - $n;\n            if ($k == $i)\n                break;\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    $temp2 = array_slice($list, 0, $length - $m);\n    $result = array_merge($temp, $temp2);\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    array_splice($list, $n - $m);\n    array_splice($list, 0, 0, $temp);\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);\n",
    "    $temp = array_slice($list, -$m);\n    $list = array_slice($list, 0, -$m);\n    return array_merge($temp, $list);\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);\n",
    "    $result = array();\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp = array_merge($temp, array_slice($list, 0, $n - $m));\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n\n$result = rotate_right($list, $m);\n\nprint_r($result);\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    for ($i = $n - 1; $i >= $m; $i--) {\n        $list[$i] = $list[$i - $m];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = array_merge(array_slice($list, $m), array_slice($list, 0, $m));\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    $temp2 = array_slice($list, 0, $length - $m);\n    return array_merge($temp, $temp2);\n}\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    for ($i = $n - 1; $i >= $m; $i--) {\n        $list[$i] = $list[$i - $m];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    $temp2 = array_slice($list, 0, $length - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    $temp2 = array_slice($list, 0, $length - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $result = [];\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $result = [];\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $result[($i + $m) % $n] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp = array_merge($temp, array_slice($list, 0, $n - $m));\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\necho implode(', ', $list);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    $temp2 = array_slice($list, 0, $length - $m);\n    return array_merge($temp, $temp2);\n}\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    for ($i = $length - 1; $i >= $m; $i--) {\n        $list[$i] = $list[$i - $m];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    for ($i = $n - 1; $i >= $m; $i--) {\n        $list[$i] = $list[$i - $m];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);\n",
    "    $result = array();\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $result[($i + $m) % $n] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    $temp = 0;\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $list_length = count($list);\n    $m = $m % $list_length;\n    $last_m_items = array_slice($list, $list_length - $m);\n    $first_items = array_slice($list, 0, $list_length - $m);\n    return array_merge($last_m_items, $first_items);\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    for ($i = $length - 1; $i >= $m; $i--) {\n        $list[$i] = $list[$i - $m];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$list = rotate_right($list, $m);\necho implode(',', $list);",
    "    $l = count($list);\n    $m = $m % $l;\n    $i = 0;\n    while ($i < $m) {\n        $last = $list[$l - 1];\n        for ($j = $l - 1; $j > 0; $j--) {\n            $list[$j] = $list[$j - 1];\n        }\n        $list[0] = $last;\n        $i++;\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $j = $n - $m;\n    for ($i = 0; $i < $j; $i++) {\n        $temp = $list[$i];\n        $list[$i] = $list[$i + $m];\n        $list[$i + $m] = $temp;\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 2;\necho \"Original list: \";\necho implode(\" \", $list);\necho \"\\n\";\necho \"Rotated list: \";\necho implode(\" \", rotate_right($list, $m));\necho \"\\n\";",
    "    $len = count($list);\n    $m = $m % $len;\n    $temp = array_slice($list, $len - $m);\n    $temp2 = array_slice($list, 0, $len - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_slice($list, $length - $m);\n    $new_list = array_merge($new_list, array_slice($list, 0, $length - $m));\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $result = array();\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n)\n                $k = $k - $n;\n            if ($k == $i)\n                break;\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    for ($i = $length - 1; $i >= $m; $i--) {\n        $list[$i] = $list[$i - $m];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $result = array();\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $length = count($list);\n    $m = $m % $length;\n    $new_list = array_merge(array_slice($list, $length - $m), array_slice($list, 0, $length - $m));\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    $temp2 = array_slice($list, 0, $length - $m);\n    $list = array_merge($temp, $temp2);\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $i = 0;\n    $n = count($list);\n    $temp = array();\n    while ($i < $m) {\n        $temp[$i] = $list[$n - $m + $i];\n        $i++;\n    }\n    $j = $n - $m - 1;\n    while ($j >= 0) {\n        $list[$j + $m] = $list[$j];\n        $j--;\n    }\n    $j = 0;\n    while ($j < $m) {\n        $list[$j] = $temp[$j];\n        $j++;\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    $temp = null;\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $result = [];\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $result[($i + $m) % $n] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    for ($i = 0; $i < $m; $i++) {\n        $last = array_pop($list);\n        array_unshift($list, $last);\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $result = array();\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 2;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $length = count($list);\n    $result = array();\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$result = rotate_right($list, $m);\necho implode(', ', $result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = array_merge(array_slice($list, $m), array_slice($list, 0, $m));\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $m = $n - $m;\n    $temp = array_slice($list, $m);\n    $temp2 = array_slice($list, 0, $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    for ($i = $n - $m - 1; $i >= 0; $i--) {\n        $list[$i + $m] = $list[$i];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    for ($i = $n - 1; $i >= $m; $i--) {\n        $list[$i] = $list[$i - $m];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $result = array();\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n)\n                $k = $k - $n;\n            if ($k == $i)\n                break;\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $result = array_fill(0, $length, 0);\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $size = count($list);\n    $mod = $m % $size;\n    $result = array();\n    for ($i = 0; $i < $size; $i++) {\n        $result[$i] = $list[($i + $mod) % $size];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp = array_merge($temp, array_slice($list, 0, $n - $m));\n    return $temp;\n}\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $m = $n - $m;\n    $temp = array_slice($list, 0, $m);\n    $list = array_slice($list, $m);\n    $list = array_merge($list, $temp);\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    for ($i = $n - 1; $i >= $m; $i--) {\n        $list[$i] = $list[$i - $m];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $list = array_reverse($list);\n    $list = array_reverse(array_slice($list, 0, $m));\n    $list = array_reverse(array_slice($list, $m, $n));\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $length = count($list);\n    $result = [];\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    for ($i = $n - 1; $i >= $m; $i--) {\n        $list[$i] = $list[$i - $m];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $result = array();\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $length = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $result = array();\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n\n$result = rotate_right($list, $m);\n\nprint_r($result);\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = array_merge(array_slice($list, $m), array_slice($list, 0, $m));\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    for ($i = $length - 1; $i >= $m; $i--) {\n        $list[$i] = $list[$i - $m];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $list_length = count($list);\n    $new_list = array();\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $list_len = count($list);\n    $m = $m % $list_len;\n    $new_list = array();\n    for ($i = 0; $i < $list_len; $i++) {\n        $new_list[($i + $m) % $list_len] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    $temp2 = array_slice($list, 0, $length - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n)\n                $k = $k - $n;\n            if ($k == $i)\n                break;\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $len = count($list);\n    $m = $m % $len;\n    $temp = array_slice($list, $len - $m);\n    $temp = array_merge($temp, array_slice($list, 0, $len - $m));\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $list_length = count($list);\n    $rotated_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $rotated_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $rotated_list;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 3;\n$rotated_list = rotate_right($list, $m);\nprint_r($rotated_list);\n",
    "    $list_length = count($list);\n    $m = $m % $list_length;\n    $result = array_merge(array_slice($list, $list_length - $m), array_slice($list, 0, $list_length - $m));\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $result = [];\n    $n = count($list);\n    for ($i = 0; $i < $n; $i++) {\n        $result[($i + $m) % $n] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5];\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $m = $m % count($list);\n    $list = array_reverse($list);\n    $list = array_reverse(array_slice($list, 0, count($list) - $m));\n    $list = array_merge($list, array_reverse(array_slice($list, count($list) - $m)));\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$list = rotate_right($list, $m);\nprint_r($list);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    for ($i = $n - 1; $i >= $m; $i--) {\n        $list[$i] = $list[$i - $m];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    for ($i = $n - 1; $i >= $m; $i--) {\n        $list[$i] = $list[$i - $m];\n    }\n    for ($i = 0; $i < $m; $i++) {\n        $list[$i] = $temp[$i];\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\nprint_r(rotate_right($list, $m));",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $result = array();\n    for ($i = 0; $i < $length; $i++) {\n        $result[($i + $m) % $length] = $list[$i];\n    }\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 2;\nprint_r(rotate_right($list, $m));",
    "    $list_length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n)\n                $k = $k - $n;\n            if ($k == $i)\n                break;\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $result = array_merge(array_slice($list, $length - $m), array_slice($list, 0, $length - $m));\n    return $result;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $mod = $m % $n;\n    $result = array_merge(array_slice($list, $mod), array_slice($list, 0, $mod));\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n\n$result = rotate_right($list, $m);\n\nprint_r($result);",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n)\n                $k = $k - $n;\n            if ($k == $i)\n                break;\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    $temp = array_merge($temp, array_slice($list, 0, $length - $m));\n    return $temp;\n}\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $len = count($list);\n    $m = $m % $len;\n    $temp = array_slice($list, $len - $m);\n    $temp2 = array_slice($list, 0, $len - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    for ($i = 0; $i < $m; $i++) {\n        $last = array_pop($list);\n        array_unshift($list, $last);\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $result = [];\n    for ($i = 0; $i < count($list); $i++) {\n        $result[($i + $m) % count($list)] = $list[$i];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $length = count($list);\n    $m = $m % $length;\n    $last = $length - 1;\n    for ($i = 0; $i < $m; $i++) {\n        $temp = $list[$last];\n        for ($j = $last; $j > 0; $j--) {\n            $list[$j] = $list[$j - 1];\n        }\n        $list[0] = $temp;\n    }\n    return $list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    $list = array_merge($temp, $temp2);\n    return $list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7];\n$m = 2;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $list_length = count($list);\n    $new_list = [];\n    for ($i = 0; $i < $list_length; $i++) {\n        $new_list[($i + $m) % $list_length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\nprint_r(rotate_right($list, $m));\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);\n",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $length = count($list);\n    $new_list = array_fill(0, $length, 0);\n    for ($i = 0; $i < $length; $i++) {\n        $new_list[($i + $m) % $length] = $list[$i];\n    }\n    return $new_list;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 3;\n$new_list = rotate_right($list, $m);\nprint_r($new_list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $temp = array_slice($list, $n - $m);\n    $temp2 = array_slice($list, 0, $n - $m);\n    $temp = array_merge($temp, $temp2);\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$list = rotate_right($list, $m);\nprint_r($list);",
    "    $n = count($list);\n    $m = $m % $n;\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$n - $i - 1];\n        $j = $n - $i - 1;\n        while (1) {\n            $k = $j - $m;\n            if ($k < 0) {\n                $k = $k + $n;\n            }\n            if ($k == $n - $i - 1) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (true) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $len = count($list);\n    $m = $m % $len;\n    $tmp = array_slice($list, $len - $m);\n    $tmp = array_merge($tmp, array_slice($list, 0, $len - $m));\n    return $tmp;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$m = 2;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $n = count($list);\n    $mod = $m % $n;\n    $result = [];\n    for ($i = 0; $i < $n; $i++) {\n        $result[$i] = $list[($i + $mod) % $n];\n    }\n    return $result;\n}\n\n$list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n) {\n                $k = $k - $n;\n            }\n            if ($k == $i) {\n                break;\n            }\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}\n",
    "    $list_length = count($list);\n    $m = $m % $list_length;\n    $temp = array_slice($list, $list_length - $m);\n    $temp = array_merge($temp, array_slice($list, 0, $list_length - $m));\n    return $temp;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);",
    "    $length = count($list);\n    $m = $m % $length;\n    $temp = array_slice($list, $length - $m);\n    $temp2 = array_slice($list, 0, $length - $m);\n    return array_merge($temp, $temp2);\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 3;\n$result = rotate_right($list, $m);\nprint_r($result);\n",
    "    $n = count($list);\n    $gcd = gcd($n, $m);\n    for ($i = 0; $i < $gcd; $i++) {\n        $temp = $list[$i];\n        $j = $i;\n        while (1) {\n            $k = $j + $m;\n            if ($k >= $n)\n                $k = $k - $n;\n            if ($k == $i)\n                break;\n            $list[$j] = $list[$k];\n            $j = $k;\n        }\n        $list[$j] = $temp;\n    }\n    return $list;\n}"
  ]
}
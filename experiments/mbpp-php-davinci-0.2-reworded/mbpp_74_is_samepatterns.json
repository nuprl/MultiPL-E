{
  "name": "mbpp_74_is_samepatterns",
  "language": "php",
  "prompt": "<?php\n// Write a function to check whether it follows the sequence given in the patterns array.\nfunction is_samepatterns($colors, $patterns) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_74_is_samepatterns.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return is_samepatterns(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"red\", \"green\", \"green\"), array(\"a\", \"b\", \"b\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"red\", \"green\", \"greenn\"), array(\"a\", \"b\", \"b\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"red\", \"green\", \"greenn\"), array(\"a\", \"b\")) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = true;\n    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    if ($patterns_count > $colors_count) {\n        $result = false;\n    } else {\n        for ($i = 0; $i < $patterns_count; $i++) {\n            if ($colors[$i] != $patterns[$i]) {\n                $result = false;\n                break;\n            }\n        }\n    }\n    return $result;\n}\n",
    "    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    $patterns_index = 0;\n    $colors_index = 0;\n    while ($patterns_index < $patterns_count && $colors_index < $colors_count) {\n        if ($patterns[$patterns_index] == $colors[$colors_index]) {\n            $patterns_index++;\n            $colors_index++;\n        } else {\n            $colors_index++;\n        }\n    }\n    if ($patterns_index == $patterns_count) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$colors = array('red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue', 'red', 'green', 'blue', 'blue",
    "    $result = true;\n    $patterns_count = count($patterns);\n    for ($i = 0; $i < $patterns_count; $i++) {\n        $pattern = $patterns[$i];\n        $pattern_count = count($pattern);\n        for ($j = 0; $j < $pattern_count; $j++) {\n            $color = $pattern[$j];\n            $color_count = count($color);\n            for ($k = 0; $k < $color_count; $k++) {\n                $color_value = $color[$k];\n                if ($colors[$i][$j][$k] !== $color_value) {\n                    $result = false;\n                    break;\n                }\n            }\n        }\n    }\n    return $result;\n}\n",
    "    $pattern = implode('', $patterns);\n    $colors = implode('', $colors);\n    return preg_match(\"/$pattern/\", $colors);\n}\n\n$colors = ['red', 'blue', 'red', 'green', 'blue', 'red'];\n$patterns = ['red', 'blue', 'red'];\n\nvar_dump(is_samepatterns($colors, $patterns));",
    "    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    $colors_index = 0;\n    $patterns_index = 0;\n    $patterns_index_count = 0;\n    $patterns_index_count_temp = 0;\n    $patterns_index_count_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    $patterns_index_count_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_",
    "    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    $patterns_index = 0;\n    $colors_index = 0;\n    while ($colors_index < $colors_count) {\n        if ($patterns_index == $patterns_count) {\n            $patterns_index = 0;\n        }\n        if ($colors[$colors_index] != $patterns[$patterns_index]) {\n            return false;\n        }\n        $colors_index++;\n        $patterns_index++;\n    }\n    return true;\n}\n",
    "    $count = count($patterns);\n    $i = 0;\n    $j = 0;\n    while ($i < count($colors) && $j < $count) {\n        if ($colors[$i] == $patterns[$j]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $j == $count;\n}\n\n$colors = array(\"red\", \"green\", \"blue\", \"red\", \"green\", \"blue\", \"red\", \"green\", \"blue\");\n$patterns = array(\"red\", \"green\", \"blue\");\n\nif (is_samepatterns($colors, $patterns)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    $patterns_index = 0;\n    $colors_index = 0;\n    while ($patterns_index < $patterns_count && $colors_index < $colors_count) {\n        $pattern = $patterns[$patterns_index];\n        $color = $colors[$colors_index];\n        if ($pattern == $color) {\n            $patterns_index++;\n            $colors_index++;\n        } else {\n            $colors_index++;\n        }\n    }\n    if ($patterns_index == $patterns_count) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$colors = array('red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green', 'blue', 'red', 'green",
    "\t$colors = str_split($colors);\n\t$patterns = str_split($patterns);\n\t$patterns_count = count($patterns);\n\t$colors_count = count($colors);\n\t$patterns_index = 0;\n\t$colors_index = 0;\n\t$patterns_char = $patterns[$patterns_index];\n\t$colors_char = $colors[$colors_index];\n\twhile($patterns_index < $patterns_count && $colors_index < $colors_count) {\n\t\tif($patterns_char == $colors_char) {\n\t\t\t$patterns_index++;\n\t\t\t$colors_index++;\n\t\t\t$patterns_char = $patterns[$patterns_index];\n\t\t\t$colors_char = $colors[$colors_index];\n\t\t} else {\n\t\t\t$colors_index++;\n\t\t\t$colors_char = $colors[$colors_index];\n\t\t}\n\t}\n\tif($patterns_index == $patterns_count) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$colors = \"RBYYBGRBG\";\n$patterns = \"RRGGBB\";\necho is_samepatterns($colors, $patterns);",
    "    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    $patterns_index = 0;\n    $colors_index = 0;\n    $patterns_length = strlen($patterns[0]);\n    $colors_length = strlen($colors[0]);\n    $patterns_string = '';\n    $colors_string = '';\n    $patterns_string_count = 0;\n    $colors_string_count = 0;\n    $patterns_string_index = 0;\n    $colors_string_index = 0;\n    $patterns_string_length = 0;\n    $colors_string_length = 0;\n    $patterns_string_count_index = 0;\n    $colors_string_count_index = 0;\n    $patterns_string_count_length = 0;\n    $colors_string_count_length = 0;\n    $patterns_string_count_index_length = 0;\n    $colors_string_count_index_length = 0;\n    $patterns_string_count_index_length_index = 0;\n    $colors_string_count_index_length_index = 0;\n    $patterns_string_count_index_length_index_length = 0;\n    $colors_string_count_index_length_index_length = 0;\n    $patterns_string_count_index_length_index_length_index = 0;\n    $colors_string_count_index_length_index_length_index = 0;\n    $patterns_string_count_index_length_index_length_index_length = 0;\n    $colors_string_count_index_length_index_length_index_length = 0;\n    $patterns_string_count_index_length_index_length_index_length_index = 0;\n    $colors_string_count_index_length_index_length_index_length_index = 0;\n    $patterns_string_count_index_length_index_length_index_length_index_length = 0;\n    $colors_",
    "\t$patterns_count = count($patterns);\n\t$colors_count = count($colors);\n\t$patterns_index = 0;\n\t$colors_index = 0;\n\twhile ($colors_index < $colors_count) {\n\t\tif ($patterns_index == $patterns_count) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($colors[$colors_index] == $patterns[$patterns_index]) {\n\t\t\t$colors_index++;\n\t\t\t$patterns_index++;\n\t\t} else {\n\t\t\t$colors_index++;\n\t\t}\n\t}\n\treturn true;\n}\n\n$colors = array('red', 'green', 'white', 'black', 'pink', 'yellow');\n$patterns1 = array('red', 'black');\n$patterns2 = array('red', 'black', 'pink');\n$patterns3 = array('red', 'black', 'pink', 'yellow');\n$patterns4 = array('red', 'black', 'pink', 'yellow', 'white');\n$patterns5 = array('red', 'black', 'pink', 'yellow', 'white', 'green');\n$patterns6 = array('red', 'black', 'pink', 'yellow', 'white', 'green', 'orange');\n\necho is_samepatterns($colors, $patterns1) ? 'true' : 'false';\necho \"\\n\";\necho is_samepatterns($colors, $patterns2) ? 'true' : 'false';\necho \"\\n\";\necho is_samepatterns($colors, $patterns3) ? 'true' : 'false';\necho \"\\n\";\necho is_samepatterns($colors, $patterns4) ? 'true' : 'false';\necho \"\\n\";\necho is_samepatterns($colors, $patterns5) ? 'true' : 'false';\necho \"\\n\";\necho is_samepatterns($colors, $patterns6) ? 'true' : 'false';\necho \"\\n\";",
    "    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    $patterns_index = 0;\n    $colors_index = 0;\n    $patterns_length = strlen($patterns[$patterns_index]);\n    $colors_length = strlen($colors[$colors_index]);\n    $patterns_char = $patterns[$patterns_index][$patterns_length - 1];\n    $colors_char = $colors[$colors_index][$colors_length - 1];\n    while ($patterns_index < $patterns_count && $colors_index < $colors_count) {\n        if ($patterns_char == $colors_char) {\n            $patterns_index++;\n            $colors_index++;\n            if ($patterns_index < $patterns_count) {\n                $patterns_length = strlen($patterns[$patterns_index]);\n                $patterns_char = $patterns[$patterns_index][$patterns_length - 1];\n            }\n            if ($colors_index < $colors_count) {\n                $colors_length = strlen($colors[$colors_index]);\n                $colors_char = $colors[$colors_index][$colors_length - 1];\n            }\n        } else {\n            $colors_index++;\n            if ($colors_index < $colors_count) {\n                $colors_length = strlen($colors[$colors_index]);\n                $colors_char = $colors[$colors_index][$colors_length - 1];\n            }\n        }\n    }\n    if ($patterns_index == $patterns_count) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$colors = array(\"red\", \"green\", \"blue\", \"red\", \"blue\", \"red\", \"green\", \"blue\", \"red\", \"blue\", \"red\", \"green\", \"blue\", \"red\", \"blue\", \"red\", \"green\", \"blue\", \"red\",",
    "    $result = true;\n    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    $patterns_index = 0;\n    $colors_index = 0;\n    while ($patterns_index < $patterns_count && $colors_index < $colors_count) {\n        if ($patterns[$patterns_index] == $colors[$colors_index]) {\n            $patterns_index++;\n            $colors_index++;\n        } else {\n            $colors_index++;\n        }\n    }\n    if ($patterns_index < $patterns_count) {\n        $result = false;\n    }\n    return $result;\n}\n\n$colors = array('red', 'green', 'white', 'black', 'pink', 'yellow');\n$patterns1 = array('red', 'black');\n$patterns2 = array('red', 'white', 'black');\n$patterns3 = array('red', 'white', 'black', 'green', 'pink');\n$patterns4 = array('red', 'white', 'yellow', 'green', 'pink');\n\necho is_samepatterns($colors, $patterns1) ? 'true' : 'false';\necho \"\\n\";\necho is_samepatterns($colors, $patterns2) ? 'true' : 'false';\necho \"\\n\";\necho is_samepatterns($colors, $patterns3) ? 'true' : 'false';\necho \"\\n\";\necho is_samepatterns($colors, $patterns4) ? 'true' : 'false';\necho \"\\n\";",
    "    $result = true;\n    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    $patterns_index = 0;\n    $colors_index = 0;\n    while ($patterns_index < $patterns_count && $colors_index < $colors_count) {\n        $pattern = $patterns[$patterns_index];\n        $color = $colors[$colors_index];\n        if ($pattern == $color) {\n            $patterns_index++;\n            $colors_index++;\n        } else {\n            $colors_index++;\n        }\n    }\n    if ($patterns_index < $patterns_count) {\n        $result = false;\n    }\n    return $result;\n}\n\n$colors = array('red', 'green', 'blue', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green', 'red', 'blue', 'green',",
    "    $pattern = implode($patterns);\n    $color = implode($colors);\n    if (strpos($color, $pattern) !== false) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$colors = array(\"red\", \"green\", \"blue\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue",
    "    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    $patterns_index = 0;\n    $colors_index = 0;\n    while ($patterns_index < $patterns_count && $colors_index < $colors_count) {\n        if ($patterns[$patterns_index] == $colors[$colors_index]) {\n            $patterns_index++;\n            $colors_index++;\n        } else {\n            $colors_index++;\n        }\n    }\n    return $patterns_index == $patterns_count;\n}\n\n$colors = array(\"red\", \"blue\", \"green\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\", \"blue\", \"red\",",
    "    $count = 0;\n    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    for ($i = 0; $i < $colors_count; $i++) {\n        if ($patterns[$count] == $colors[$i]) {\n            $count++;\n        }\n        if ($count == $patterns_count) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$colors = array('red', 'green', 'white', 'black', 'pink', 'yellow');\n$patterns = array('red', 'black');\n\nif (is_samepatterns($colors, $patterns)) {\n    echo \"It follows the sequence given in the patterns array.\";\n} else {\n    echo \"It does not follow the sequence given in the patterns array.\";\n}",
    "    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    $patterns_index = 0;\n    $colors_index = 0;\n    $patterns_string = \"\";\n    $colors_string = \"\";\n    $patterns_string_count = 0;\n    $colors_string_count = 0;\n    $patterns_string_index = 0;\n    $colors_string_index = 0;\n    $patterns_string_length = 0;\n    $colors_string_length = 0;\n    $patterns_string_length_index = 0;\n    $colors_string_length_index = 0;\n    $patterns_string_length_count = 0;\n    $colors_string_length_count = 0;\n    $patterns_string_length_count_index = 0;\n    $colors_string_length_count_index = 0;\n    $patterns_string_length_count_index_count = 0;\n    $colors_string_length_count_index_count = 0;\n    $patterns_string_length_count_index_count_index = 0;\n    $colors_string_length_count_index_count_index = 0;\n    $patterns_string_length_count_index_count_index_count = 0;\n    $colors_string_length_count_index_count_index_count = 0;\n    $patterns_string_length_count_index_count_index_count_index = 0;\n    $colors_string_length_count_index_count_index_count_index = 0;\n    $patterns_string_length_count_index_count_index_count_index_count = 0;\n    $colors_string_length_count_index_count_index_count_index_count = 0;\n    $patterns_string_length_count_index_count_index_count_index_count_index = 0;\n    $colors_string_length_count_index_count_index_count_index_count_index = 0;\n    $patterns_string_length_",
    "    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    $patterns_index = 0;\n    $colors_index = 0;\n    while($patterns_index < $patterns_count && $colors_index < $colors_count) {\n        $pattern = $patterns[$patterns_index];\n        $color = $colors[$colors_index];\n        if($pattern == $color) {\n            $patterns_index++;\n            $colors_index++;\n        } else {\n            $colors_index++;\n        }\n    }\n    if($patterns_index == $patterns_count) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$colors = ['red', 'green', 'blue', 'red', 'yellow', 'blue', 'red'];\n$patterns = ['red', 'blue'];\nvar_dump(is_samepatterns($colors, $patterns));\n\n$colors = ['red', 'green', 'blue', 'red', 'yellow', 'blue', 'red'];\n$patterns = ['red', 'blue', 'yellow'];\nvar_dump(is_samepatterns($colors, $patterns));\n\n$colors = ['red', 'green', 'blue', 'red', 'yellow', 'blue', 'red'];\n$patterns = ['red', 'blue', 'yellow', 'red'];\nvar_dump(is_samepatterns($colors, $patterns));\n\n$colors = ['red', 'green', 'blue', 'red', 'yellow', 'blue', 'red'];\n$patterns = ['red', 'blue', 'yellow', 'red', 'green'];\nvar_dump(is_samepatterns($colors, $patterns));\n\n$colors = ['red', 'green', 'blue', 'red', 'yellow', 'blue', 'red'];\n$patterns = ['red', 'blue', 'yellow', 'red', 'green', 'blue'];\nvar_dump(is_samepatterns($colors, $patterns));\n\n$colors = ['",
    "    $patterns = array_map('strtolower', $patterns);\n    $colors = array_map('strtolower', $colors);\n    $patterns_count = count($patterns);\n    $colors_count = count($colors);\n    $patterns_index = 0;\n    $colors_index = 0;\n    $result = true;\n    while ($patterns_index < $patterns_count && $colors_index < $colors_count) {\n        if ($patterns[$patterns_index] == $colors[$colors_index]) {\n            $patterns_index++;\n            $colors_index++;\n        } else {\n            $colors_index++;\n        }\n    }\n    if ($patterns_index < $patterns_count) {\n        $result = false;\n    }\n    return $result;\n}\n"
  ]
}
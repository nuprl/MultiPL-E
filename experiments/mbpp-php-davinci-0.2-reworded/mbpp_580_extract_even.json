{
  "name": "mbpp_580_extract_even",
  "language": "php",
  "prompt": "<?php\n// Write a function to remove uneven elements in the nested mixed array.\nfunction extract_even($test_tuple) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_580_extract_even.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return extract_even(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 5, array(7, 6, array(2, 4)), 6, 8)) !== array(4, array(6, array(2, 4)), 6, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, array(8, 7, array(4, 8)), 7, 9)) !== array(6, array(8, array(4, 8)))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, array(9, 8, array(4, 6)), 8, 10)) !== array(6, array(8, array(4, 6)), 8, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8), 9, 10);\nprint_r(extract_even($test_tuple));",
    "    $even_array = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $even_array[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $even_array[$key] = $value;\n            }\n        }\n    }\n    return $even_array;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25,\n            26,\n            27,\n            28,\n            29,\n            30,\n            31,\n            32,\n            33,\n            34,\n            35,\n            36,\n            37,\n            38,\n            39,\n            40,\n            41,\n            42,\n            43,\n            44,\n            45,\n            46,\n            47,\n            48,\n            49,\n            50,\n            51,\n            52,\n            53,\n            54,\n            55,\n            56,\n            57,\n            58,\n            59,\n            60,\n            61,\n            62,\n            63,\n            64,\n            65,\n            66,\n            67,\n            68,\n            69,\n            70,\n            71,\n            72,\n            73,\n            74,\n            75,\n            76,\n            77,\n            78,\n            79,\n            80,\n            81,\n            82,\n            83,\n            84,\n            85,\n            86,\n            87,\n            88,\n            89,\n            90,\n            91,\n            92,\n            93,\n            94,\n            95,\n            96,\n            97,\n            98",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9, 10), 11, 12);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n            'j' => 8,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4,\n                'h' => 5,\n            ),\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7), 8), 9, 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                'd' => array(\n                    'e' => array(\n                        'f' => array(\n                            'g' => array(\n                                'h' => array(\n                                    'i' => array(\n                                        'j' => array(\n                                            'k' => array(\n                                                'l' => array(\n                                                    'm' => array(\n                                                        'n' => array(\n                                                            'o' => array(\n                                                                'p' => array(\n                                                                    'q' => array(\n                                                                        'r' => array(\n                                                                            's' => array(\n                                                                                't' => array(\n                                                                                    'u' => array(\n                                                                                        'v' => array(\n                                                                                            'w' => array(\n                                                                                                'x' => array(\n                                                                                                    'y' => array(\n                                                                                                        'z' => array(\n                                                                                                            'A' => array(\n                                                                                                                'B' => array(\n                                                                                                                    'C' => array(\n                                                                                                                        'D' => array(\n                                                                                                                            'E' => array(\n                                                                                                                                'F' => array(\n                                                                                                                                    'G' => array(\n                                                                                                                                        'H' => array(\n                                                                                                                                            'I' => array(\n                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8,",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6, 7), 8, 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    \"a\" => 1,\n    \"b\" => array(\n        \"c\" => array(\n            3,\n            6,\n            9\n        ),\n        \"d\" => array(\n            \"e\" => 2,\n            \"f\" => 5,\n            \"g\" => 8\n        )\n    ),\n    \"h\" => 11,\n    \"i\" => array(\n        0,\n        22,\n        array(\n            44,\n            66\n        )\n    )\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, 3, [4, 5, 6], 7, 8, [9, 10, [11, 12, 13, [14, 15, 16]]]];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                                                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                1,\n                2,\n                3\n            ),\n            'd' => array(\n                4,\n                5,\n                6\n            ),\n            'e' => array(\n                7,\n                8,\n                9\n            )\n        ),\n        'f' => array(\n            'g' => array(\n                10,\n                11,\n                12\n            ),\n            'h' => array(\n                13,\n                14,\n                15\n            ),\n            'i' => array(\n                16,\n                17,\n                18\n            )\n        ),\n        'j' => array(\n            'k' => array(\n                19,\n                20,\n                21\n            ),\n            'l' => array(\n                22,\n                23,\n                24\n            ),\n            'm' => array(\n                25,\n                26,\n                27\n            )\n        )\n    )\n);\n\necho '<pre>';\nprint_r(extract_even($test_tuple));\necho '</pre>';",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => array(\n            'f' => 4,\n            'g' => 5,\n            'h' => array(\n                'i' => 6,\n                'j' => 7,\n                'k' => 8,\n            ),\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n"
  ]
}
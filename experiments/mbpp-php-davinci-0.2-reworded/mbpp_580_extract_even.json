{
  "name": "mbpp_580_extract_even",
  "language": "php",
  "prompt": "<?php\n// Write a function to remove uneven elements in the nested mixed array.\nfunction extract_even($test_tuple) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_580_extract_even.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return extract_even(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4, 5, array(7, 6, array(2, 4)), 6, 8)) !== array(4, array(6, array(2, 4)), 6, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, array(8, 7, array(4, 8)), 7, 9)) !== array(6, array(8, array(4, 8)))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, array(9, 8, array(4, 6)), 8, 10)) !== array(6, array(8, array(4, 6)), 8, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8), 9, 10);\nprint_r(extract_even($test_tuple));",
    "    $even_array = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $even_array[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $even_array[$key] = $value;\n            }\n        }\n    }\n    return $even_array;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25,\n            26,\n            27,\n            28,\n            29,\n            30,\n            31,\n            32,\n            33,\n            34,\n            35,\n            36,\n            37,\n            38,\n            39,\n            40,\n            41,\n            42,\n            43,\n            44,\n            45,\n            46,\n            47,\n            48,\n            49,\n            50,\n            51,\n            52,\n            53,\n            54,\n            55,\n            56,\n            57,\n            58,\n            59,\n            60,\n            61,\n            62,\n            63,\n            64,\n            65,\n            66,\n            67,\n            68,\n            69,\n            70,\n            71,\n            72,\n            73,\n            74,\n            75,\n            76,\n            77,\n            78,\n            79,\n            80,\n            81,\n            82,\n            83,\n            84,\n            85,\n            86,\n            87,\n            88,\n            89,\n            90,\n            91,\n            92,\n            93,\n            94,\n            95,\n            96,\n            97,\n            98",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9, 10), 11, 12);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n            'j' => 8,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4,\n                'h' => 5,\n            ),\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7), 8), 9, 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                'd' => array(\n                    'e' => array(\n                        'f' => array(\n                            'g' => array(\n                                'h' => array(\n                                    'i' => array(\n                                        'j' => array(\n                                            'k' => array(\n                                                'l' => array(\n                                                    'm' => array(\n                                                        'n' => array(\n                                                            'o' => array(\n                                                                'p' => array(\n                                                                    'q' => array(\n                                                                        'r' => array(\n                                                                            's' => array(\n                                                                                't' => array(\n                                                                                    'u' => array(\n                                                                                        'v' => array(\n                                                                                            'w' => array(\n                                                                                                'x' => array(\n                                                                                                    'y' => array(\n                                                                                                        'z' => array(\n                                                                                                            'A' => array(\n                                                                                                                'B' => array(\n                                                                                                                    'C' => array(\n                                                                                                                        'D' => array(\n                                                                                                                            'E' => array(\n                                                                                                                                'F' => array(\n                                                                                                                                    'G' => array(\n                                                                                                                                        'H' => array(\n                                                                                                                                            'I' => array(\n                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9),\n    array(1, 2, 3, 4, 5, 6, 7, 8,",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6, 7), 8, 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    \"a\" => 1,\n    \"b\" => array(\n        \"c\" => array(\n            3,\n            6,\n            9\n        ),\n        \"d\" => array(\n            \"e\" => 2,\n            \"f\" => 5,\n            \"g\" => 8\n        )\n    ),\n    \"h\" => 11,\n    \"i\" => array(\n        0,\n        22,\n        array(\n            44,\n            66\n        )\n    )\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, 3, [4, 5, 6], 7, 8, [9, 10, [11, 12, 13, [14, 15, 16]]]];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                                                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                1,\n                2,\n                3\n            ),\n            'd' => array(\n                4,\n                5,\n                6\n            ),\n            'e' => array(\n                7,\n                8,\n                9\n            )\n        ),\n        'f' => array(\n            'g' => array(\n                10,\n                11,\n                12\n            ),\n            'h' => array(\n                13,\n                14,\n                15\n            ),\n            'i' => array(\n                16,\n                17,\n                18\n            )\n        ),\n        'j' => array(\n            'k' => array(\n                19,\n                20,\n                21\n            ),\n            'l' => array(\n                22,\n                23,\n                24\n            ),\n            'm' => array(\n                25,\n                26,\n                27\n            )\n        )\n    )\n);\n\necho '<pre>';\nprint_r(extract_even($test_tuple));\necho '</pre>';",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => array(\n            'f' => 4,\n            'g' => 5,\n            'h' => array(\n                'i' => 6,\n                'j' => 7,\n                'k' => 8,\n            ),\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } elseif ($element % 2 == 0) {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6), 7), 8, 9);\n$result = extract_even($test_tuple);\nprint_r($result);\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10, array(11, 12, 13, 14))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'c' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'd' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'e' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n    ),\n    'f' => array(\n        'g' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'h' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'i' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'j' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6",
    "  $result = array();\n  foreach ($test_tuple as $key => $value) {\n    if (is_array($value)) {\n      $result[$key] = extract_even($value);\n    } else {\n      if ($value % 2 == 0) {\n        $result[$key] = $value;\n      }\n    }\n  }\n  return $result;\n}\n\n$test_tuple = array(\n  'a' => 1,\n  'b' => array(\n    'c' => 2,\n    'd' => 3,\n    'e' => array(\n      'f' => 4,\n      'g' => 5,\n    ),\n  ),\n  'h' => 6,\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n            'j' => 8,\n        ),\n    ),\n    'k' => 9,\n    'l' => 10,\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20\n        ),\n        array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20\n        ),\n        array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20\n        ),\n        array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20\n        ),\n        array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_numeric($value) && $value % 2 == 0) {\n            $result[$key] = $value;\n        } elseif (is_array($value)) {\n            $result[$key] = extract_even($value);\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => array(\n            'f' => 4,\n            'g' => 5,\n            'h' => array(\n                'i' => 6,\n                'j' => 7,\n                'k' => 8,\n            ),\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => 1,\n            'd' => 2,\n            'e' => 3,\n            'f' => 4,\n        ),\n        'g' => array(\n            'h' => 5,\n            'i' => 6,\n            'j' => 7,\n            'k' => 8,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } elseif ($value % 2 == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } elseif ($element % 2 == 0) {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                                                                                                                                                            array(\n                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                ",
    "    $result = [];\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [\n    [1, 2, [3, 4, [5]]],\n    [6, 7, 8],\n    9,\n    10,\n];\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => 1,\n            'd' => 2,\n            'e' => 3,\n            'f' => 4,\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n            'j' => 8,\n            'k' => 9,\n            'l' => 10,\n            'm' => 11,\n            'n' => 12,\n            'o' => 13,\n            'p' => 14,\n            'q' => 15,\n            'r' => 16,\n            's' => 17,\n            't' => 18,\n            'u' => 19,\n            'v' => 20,\n            'w' => 21,\n            'x' => 22,\n            'y' => 23,\n            'z' => 24,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => 1,\n            'd' => 2,\n            'e' => 3,\n        ),\n        'f' => array(\n            'g' => 4,\n            'h' => 5,\n            'i' => 6,\n        ),\n    ),\n    'j' => array(\n        'k' => array(\n            'l' => 7,\n            'm' => 8,\n            'n' => 9,\n        ),\n        'o' => array(\n            'p' => 10,\n            'q' => 11,\n            'r' => 12,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "  $result = array();\n  foreach ($test_tuple as $item) {\n    if (is_array($item)) {\n      $result[] = extract_even($item);\n    } else {\n      if ($item % 2 == 0) {\n        $result[] = $item;\n      }\n    }\n  }\n  return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n            'j' => 8,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9, 10), 11, 12);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)));\n\nprint_r($test_tuple);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                                                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8, array(9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6), 7), 8, 9, array(10, 11, 12));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7, array(8, 9))));\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                                                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    \"a\" => 1,\n    \"b\" => array(\n        \"c\" => 2,\n        \"d\" => array(\n            \"e\" => 3,\n            \"f\" => array(\n                \"g\" => 4,\n                \"h\" => 5,\n                \"i\" => 6,\n            ),\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6), 7, 8), 9);\nprint_r(extract_even($test_tuple));",
    "    $even_array = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $even_array[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $even_array[$key] = $value;\n            }\n        }\n    }\n    return $even_array;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), array(6, array(7, 8, 9), 10), 11, 12);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => array(\n            3,\n            6,\n            9\n        ),\n        'd' => array(\n            'e' => 2,\n            'f' => array(\n                5,\n                10\n            )\n        )\n    )\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8, array(9, 10))));\nprint_r(extract_even($test_tuple));\n",
    "    $even_array = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $even_array[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $even_array[] = $value;\n            }\n        }\n    }\n    return $even_array;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, array(6, 7, 8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => array(\n            3,\n            6,\n            9\n        ),\n        'd' => array(\n            'e' => 4,\n            'f' => 8\n        ),\n        5\n    ),\n    10\n);\n\nprint_r(extract_even($test_tuple));",
    "\t$result = array();\n\tforeach ($test_tuple as $key => $value) {\n\t\tif (is_numeric($value)) {\n\t\t\tif ($value % 2 == 0) {\n\t\t\t\t$result[$key] = $value;\n\t\t\t}\n\t\t} else {\n\t\t\t$result[$key] = extract_even($value);\n\t\t}\n\t}\n\treturn $result;\n}\n\n$test_tuple = array(\n\t'a' => 1,\n\t'b' => array(\n\t\t'c' => 2,\n\t\t'd' => array(\n\t\t\t'e' => 3,\n\t\t\t'f' => array(\n\t\t\t\t'g' => 4,\n\t\t\t\t'h' => 5,\n\t\t\t),\n\t\t),\n\t),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = [];\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [\n    1,\n    [\n        2,\n        3,\n        4,\n        [\n            5,\n            6,\n            7,\n            [\n                8,\n                9,\n                10,\n                [\n                    11,\n                    12,\n                    13,\n                    [\n                        14,\n                        15,\n                        16,\n                        [\n                            17,\n                            18,\n                            19,\n                            [\n                                20,\n                                21,\n                                22,\n                                [\n                                    23,\n                                    24,\n                                    25,\n                                    [\n                                        26,\n                                        27,\n                                        28,\n                                        [\n                                            29,\n                                            30,\n                                            31,\n                                            [\n                                                32,\n                                                33,\n                                                34,\n                                                [\n                                                    35,\n                                                    36,\n                                                    37,\n                                                    [\n                                                        38,\n                                                        39,\n                                                        40,\n                                                        [\n                                                            41,\n                                                            42,\n                                                            43,\n                                                            [\n                                                                44,\n                                                                45,\n                                                                46,\n                                                                [\n                                                                    47,\n                                                                    48,\n                                                                    49,\n                                                                    [\n                                                                        50,\n                                                                        51,\n                                                                        52,\n                                                                        [\n                                                                            53,\n                                                                            54,\n                                                                            55,\n                                                                            [\n                                                                                56,\n                                                                                57,\n                                                ",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n    ),\n    'c' => array(\n        'd' => array(\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n        ),\n    ),\n);\n\n$result = extract_even($test_tuple);\nprint_r($result);\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20));\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)));\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => array(\n            'f' => 4,\n            'g' => 5,\n        ),\n    ),\n    'h' => 6,\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4,\n                'h' => 5,\n            ),\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, array(6, 7))), 8, 9);\nprint_r(extract_even($test_tuple));",
    "    $result = [];\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } elseif ($value % 2 == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, 3, [4, 5, 6], 7, 8, [9, 10, [11, 12, [13, 14]]]];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7), 8), 9, 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach($test_tuple as $key => $value) {\n        if(is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4,\n                'h' => 5,\n            ),\n        ),\n    ),\n);\n\n$result = extract_even($test_tuple);\nprint_r($result);\n",
    "    $result = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } elseif ($item % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, [2, 3, [4, 5, 6, [7, 8, 9, [10, 11, 12, [13, 14, 15]]]]]];\nprint_r(extract_even($test_tuple));\n",
    "    $result = [];\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [\n    'a' => [\n        'b' => [\n            'c' => [\n                'd' => 1,\n                'e' => 2,\n                'f' => 3,\n                'g' => 4,\n            ],\n            'h' => [\n                'i' => 5,\n                'j' => 6,\n                'k' => 7,\n                'l' => 8,\n            ],\n        ],\n        'm' => [\n            'n' => [\n                'o' => 9,\n                'p' => 10,\n                'q' => 11,\n                'r' => 12,\n            ],\n            's' => [\n                't' => 13,\n                'u' => 14,\n                'v' => 15,\n                'w' => 16,\n            ],\n        ],\n    ],\n];\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7), 8), 9);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } elseif ($value % 2 == 0) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n            ),\n            'd' => array(\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18,\n                19,\n                20,\n            ),\n        ),\n        'e' => array(\n            'f' => array(\n                21,\n                22,\n                23,\n                24,\n                25,\n                26,\n                27,\n                28,\n                29,\n                30,\n            ),\n            'g' => array(\n                31,\n                32,\n                33,\n                34,\n                35,\n                36,\n                37,\n                38,\n                39,\n                40,\n            ),\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 3,\n        'd' => 4,\n        'e' => array(\n            'f' => 5,\n            'g' => 6,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4,\n                'h' => 5,\n            ),\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4,\n                'h' => 5,\n            ),\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, array(10, 11, 12))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'c' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'd' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'e' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n    ),\n    'f' => array(\n        'g' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'h' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'i' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'j' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8, array(9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n    ),\n    'f' => 5,\n    'g' => array(\n        'h' => 6,\n        'i' => 7,\n        'j' => 8,\n    ),\n    'k' => 9,\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, array(6, 7))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8, 9, 10, array(11, 12, 13, 14, 15, 16))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, array(6, 7))));\nprint_r(extract_even($test_tuple));",
    "    $result = [];\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, [3, 4, [5, 6]], 7, 8, [9, 10, [11, 12]], 13, 14];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6)), 7, array(8, 9, 10));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), array(6, 7, array(8, 9, 10)));\n$result = extract_even($test_tuple);\nprint_r($result);\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6, array(7, 8, 9))), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    \"a\" => 1,\n    \"b\" => array(\n        \"c\" => 2,\n        \"d\" => 3,\n        \"e\" => 4,\n    ),\n    \"f\" => 5,\n    \"g\" => array(\n        \"h\" => 6,\n        \"i\" => 7,\n        \"j\" => 8,\n    ),\n    \"k\" => 9,\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8), 9);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n            'j' => 8,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, 6, array(7, 8, 9)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6)), 7, array(8, 9, 10));\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, array(9, 10)))));\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach($test_tuple as $item) {\n        if(is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, 5), array(6, 7, array(8, 9, 10)));\n$result = extract_even($test_tuple);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18,\n                19,\n                20\n            ),\n            'd' => array(\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18,\n                19,\n                20\n            )\n        ),\n        'e' => array(\n            'f' => array(\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18,\n                19,\n                20\n            ),\n            'g' => array(\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18,\n                19,\n                20\n            )\n        )\n    )\n);\n\n$result = extract_even($test_t",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    1 => array(\n        2 => array(\n            3 => array(\n                4 => array(\n                    5 => array(\n                        6 => array(\n                            7 => array(\n                                8 => array(\n                                    9 => array(\n                                        10 => array(\n                                            11 => array(\n                                                12 => array(\n                                                    13 => array(\n                                                        14 => array(\n                                                            15 => array(\n                                                                16 => array(\n                                                                    17 => array(\n                                                                        18 => array(\n                                                                            19 => array(\n                                                                                20 => array(\n                                                                                    21 => array(\n                                                                                        22 => array(\n                                                                                            23 => array(\n                                                                                                24 => array(\n                                                                                                    25 => array(\n                                                                                                        26 => array(\n                                                                                                            27 => array(\n                                                                                                                28 => array(\n                                                                                                                    29 => array(\n                                                                                                                        30 => array(\n                                                                                                                            31 => array(\n                                                                                                                                32 => array(\n                                                                                                                                    33 => array(\n                                                                                                                                        34 => array(\n                                                                                                                                            35 => array(\n                                                                                                                                                36 => array(\n                                                                                                                                                    37 => array(\n                                                                                                                                                        38 => array(\n                                                                                                                                                            39 => array(\n                                                                                                                                                                40 => array(\n                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                                                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                ",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n    ),\n    'f' => 5,\n    'g' => array(\n        'h' => 6,\n        'i' => 7,\n        'j' => 8,\n    ),\n    'k' => 9,\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => array(\n            'f' => 4,\n            'g' => 5,\n            'h' => array(\n                'i' => 6,\n                'j' => 7,\n                'k' => 8,\n            ),\n        ),\n    ),\n);\n\n$result = extract_even($test_tuple);\nprint_r($result);\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4,\n                'h' => 5,\n                'i' => 6,\n            ),\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n            'j' => 8,\n        ),\n    ),\n    'k' => 9,\n    'l' => 10,\n);\n\n$result = extract_even($test_tuple);\nprint_r($result);\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                                                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n        ),\n        'c' => array(\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n        ),\n    ),\n    'd' => array(\n        'e' => array(\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n        ),\n        'f' => array(\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    \"a\" => 1,\n    \"b\" => array(\n        \"c\" => array(\n            3,\n            6,\n            9\n        ),\n        \"d\" => array(\n            \"e\" => 2,\n            \"f\" => 5,\n            \"g\" => 8\n        ),\n        4\n    ),\n    5\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8), 9, 10);\nprint_r(extract_even($test_tuple));",
    "    $result = [];\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                ",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, 6, array(7, 8)), 9, 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => array(\n            'd' => 2,\n            'e' => 3,\n            'f' => 4,\n        ),\n        'g' => 5,\n        'h' => 6,\n    ),\n    'i' => 7,\n    'j' => array(\n        'k' => array(\n            'l' => 8,\n            'm' => 9,\n            'n' => 10,\n        ),\n        'o' => 11,\n        'p' => 12,\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } elseif ($element % 2 == 0) {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, 6, array(7, 8, 9)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = [];\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } elseif ($value % 2 == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = [1, 2, [3, 4, [5, 6]], 7, [8, [9, 10]]];\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                                                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, array(6, 7), 8), 9);\n$result = extract_even($test_tuple);\nprint_r($result);\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10\n        ),\n        'c' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10\n        ),\n        'd' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10\n        ),\n        'e' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10\n        )\n    ),\n    'f' => array(\n        'g' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10\n        ),\n        'h' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10\n        ),\n        'i' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10\n        ),\n        'j' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n           ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n        ),\n    ),\n    'j' => 8,\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                ",
    "\t$result = array();\n\tforeach ($test_tuple as $key => $value) {\n\t\tif (is_array($value)) {\n\t\t\t$result[$key] = extract_even($value);\n\t\t} else {\n\t\t\tif ($value % 2 == 0) {\n\t\t\t\t$result[$key] = $value;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6, array(7, 8, 9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$result = extract_even($test_tuple);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$result = extract_even($test_tuple);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6)), 7, array(8, 9, 10), 11, array(12, 13, 14));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => array(\n            'd' => 2,\n            'e' => 3,\n        ),\n        'f' => array(\n            'g' => 4,\n            'h' => 5,\n        ),\n    ),\n    'i' => 6,\n    'j' => array(\n        'k' => array(\n            'l' => 7,\n            'm' => 8,\n        ),\n        'n' => array(\n            'o' => 9,\n            'p' => 10,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8)), 9, 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, array(9, 10, array(11, 12, array(13, 14, array(15, 16, array(17, 18, array(19, 20, array(21, 22, array(23, 24, array(25, 26, array(27, 28, array(29, 30, array(31, 32, array(33, 34, array(35, 36, array(37, 38, array(39, 40, array(41, 42, array(43, 44, array(45, 46, array(47, 48, array(49, 50, array(51, 52, array(53, 54, array(55, 56, array(57, 58, array(59, 60, array(61, 62, array(63, 64, array(65, 66, array(67, 68, array(69, 70, array(71, 72, array(73, 74, array(75, 76, array(77, 78, array(79, 80, array(81, 82, array(83, 84, array(85, 86, array(87, 88, array(89, 90, array(91, 92, array(93, 94, array(95, 96, array(97, 98, array(99, 100, array(101, 102, array(103, 104, array(105, 106, array(107, 108, array(109, 110, array(111, 112, array(113, 114, array(115, 116, array(117, 118, array(119, 120, array(121, 122, array(123, 124, array(125, 126, array(127, 128, array(129, 130, array(131, 132, array(133, 134, array(135, 136, array",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                1,\n                2,\n                3,\n                4,\n                5\n            ),\n            'd' => array(\n                6,\n                7,\n                8,\n                9,\n                10\n            ),\n            'e' => array(\n                11,\n                12,\n                13,\n                14,\n                15\n            )\n        )\n    )\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                ",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6)), 7, array(8, 9, 10));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n        ),\n    ),\n    'j' => 8,\n    'k' => 9,\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6\n        )\n    ),\n    'i' => 7,\n    'j' => 8\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6), 7, 8), 9);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, array(6, 7))), 8, array(9, array(10, 11)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } else {\n            if ($element % 2 == 0) {\n                $result[] = $element;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                                                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, 6, array(7, 8, array(9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8), 9), 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, array(7, 8)), 9, 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8), 9), 10, 11, 12);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => array(\n            'f' => 4,\n            'g' => 5,\n            'h' => 6,\n        ),\n    ),\n    'i' => 7,\n    'j' => array(\n        'k' => 8,\n        'l' => 9,\n        'm' => array(\n            'n' => 10,\n            'o' => 11,\n            'p' => 12,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, 8), 9, 10);\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    \"a\" => 1,\n    \"b\" => array(\n        \"c\" => array(\n            3,\n            6,\n            9\n        ),\n        \"d\" => array(\n            \"e\" => 2,\n            \"f\" => 5,\n            \"g\" => 8\n        ),\n        4\n    ),\n    5\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), array(5, 6, array(7, 8, array(9, 10))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n            'j' => 8,\n        ),\n    ),\n    'k' => 9,\n    'l' => 10,\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'c' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'd' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'e' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n    ),\n    'f' => array(\n        'g' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'h' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'i' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'j' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6",
    "  $result = array();\n  foreach ($test_tuple as $value) {\n    if (is_array($value)) {\n      $result[] = extract_even($value);\n    } else {\n      if ($value % 2 == 0) {\n        $result[] = $value;\n      }\n    }\n  }\n  return $result;\n}\n\n$test_tuple = array(\n  array(\n    array(\n      array(\n        array(\n          array(\n            array(\n              array(\n                array(\n                  array(\n                    array(\n                      array(\n                        array(\n                          array(\n                            array(\n                              array(\n                                array(\n                                  array(\n                                    array(\n                                      array(\n                                        array(\n                                          array(\n                                            array(\n                                              array(\n                                                array(\n                                                  array(\n                                                    array(\n                                                      array(\n                                                        array(\n                                                          array(\n                                                            array(\n                                                              array(\n                                                                array(\n                                                                  array(\n                                                                    array(\n                                                                      array(\n                                                                        array(\n                                                                          array(\n                                                                            array(\n                                                                              array(\n                                                                                array(\n                                                                                  array(\n                                                                                    array(\n                                                                                      array(\n                                                                                        array(\n                                                                                          array(\n                                                                                            array(\n                                                                                              array(\n                                                                                                array(\n                                                                                                  array(\n                                                                                                    array(\n                                                                                                      array(\n                                                                                                        array(\n                                                                                                          array(\n                                                                                                            array(\n                                                                                                              array(\n                                                                                                                array(\n                                                                                                                  array(\n                                                                                                                    array(\n                                                                                                                      array(\n                                                                                                                        array(\n                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6, array(7, 8, 9))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10\n            ),\n            'd' => array(\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18,\n                19,\n                20\n            ),\n            'e' => array(\n                21,\n                22,\n                23,\n                24,\n                25,\n                26,\n                27,\n                28,\n                29,\n                30\n            )\n        )\n    )\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5, 6, 7, 8, 9), 10, 11, 12, 13, 14, array(1, 2, 3, 4, 5, 6, 7, 8, 9));\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                                                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4), 5, array(6, 7, array(8, 9, 10)));\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                1,\n                2,\n                3,\n                4,\n                5\n            ),\n            'd' => array(\n                6,\n                7,\n                8,\n                9,\n                10\n            ),\n            'e' => array(\n                11,\n                12,\n                13,\n                14,\n                15\n            )\n        )\n    )\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $value) {\n        if (is_array($value)) {\n            $result[] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                                                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else if ($value % 2 == 0) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n            ),\n            'd' => array(\n                'e' => array(\n                    'f' => array(\n                        11, 12, 13, 14, 15, 16, 17, 18, 19, 20\n                    )\n                )\n            )\n        )\n    )\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4,\n                'h' => 5\n            )\n        )\n    )\n);\n\necho '<pre>';\nprint_r(extract_even($test_tuple));\necho '</pre>';\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => 4,\n        'f' => array(\n            'g' => 5,\n            'h' => 6,\n            'i' => 7,\n            'j' => 8,\n        ),\n    ),\n    'k' => 9,\n    'l' => 10,\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n        ),\n        'c' => array(\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'd' => array(\n            11,\n            12,\n            13,\n            14,\n            15,\n        ),\n    ),\n    'e' => array(\n        'f' => array(\n            16,\n            17,\n            18,\n            19,\n            20,\n        ),\n        'g' => array(\n            21,\n            22,\n            23,\n            24,\n            25,\n        ),\n        'h' => array(\n            26,\n            27,\n            28,\n            29,\n            30,\n        ),\n    ),\n    'i' => array(\n        'j' => array(\n            31,\n            32,\n            33,\n            34,\n            35,\n        ),\n        'k' => array(\n            36,\n            37,\n            38,\n            39,\n            40,\n        ),\n        'l' => array(\n            41,\n            42,\n            43,\n            44,\n            45,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, 4, array(5, 6, 7, 8, array(9, 10, 11, 12, array(13, 14, 15, 16))));\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $element) {\n        if (is_array($element)) {\n            $result[] = extract_even($element);\n        } elseif ($element % 2 == 0) {\n            $result[] = $element;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, array(2, 3, array(4, 5, 6), array(7, 8, 9)), 10);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4,\n                'h' => 5\n            )\n        )\n    )\n);\n\nprint_r(extract_even($test_tuple));",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                'd' => array(\n                    'e' => array(\n                        'f' => array(\n                            'g' => array(\n                                'h' => array(\n                                    'i' => array(\n                                        'j' => array(\n                                            'k' => array(\n                                                'l' => array(\n                                                    'm' => array(\n                                                        'n' => array(\n                                                            'o' => array(\n                                                                'p' => array(\n                                                                    'q' => array(\n                                                                        'r' => array(\n                                                                            's' => array(\n                                                                                't' => array(\n                                                                                    'u' => array(\n                                                                                        'v' => array(\n                                                                                            'w' => array(\n                                                                                                'x' => array(\n                                                                                                    'y' => array(\n                                                                                                        'z' => array(\n                                                                                                            '1' => array(\n                                                                                                                '2' => array(\n                                                                                                                    '3' => array(\n                                                                                                                        '4' => array(\n                                                                                                                            '5' => array(\n                                                                                                                                '6' => array(\n                                                                                                                                    '7' => array(\n                                                                                                                                        '8' => array(\n                                                                                                                                            '9' => array(\n                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, array(3, 4, array(5, 6, 7, 8, 9), 10), 11, 12);\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $item) {\n        if (is_array($item)) {\n            $result[] = extract_even($item);\n        } else {\n            if ($item % 2 == 0) {\n                $result[] = $item;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    array(\n        array(\n            array(\n                array(\n                    array(\n                        array(\n                            array(\n                                array(\n                                    array(\n                                        array(\n                                            array(\n                                                array(\n                                                    array(\n                                                        array(\n                                                            array(\n                                                                array(\n                                                                    array(\n                                                                        array(\n                                                                            array(\n                                                                                array(\n                                                                                    array(\n                                                                                        array(\n                                                                                            array(\n                                                                                                array(\n                                                                                                    array(\n                                                                                                        array(\n                                                                                                            array(\n                                                                                                                array(\n                                                                                                                    array(\n                                                                                                                        array(\n                                                                                                                            array(\n                                                                                                                                array(\n                                                                                                                                    array(\n                                                                                                                                        array(\n                                                                                                                                            array(\n                                                                                                                                                array(\n                                                                                                                                                    array(\n                                                                                                                                                        array(\n                                                                                                                                                            array(\n                                                                                                                                                                array(\n                                                                                                                                                                    array(\n                                                                                                                                                                        array(\n                                                                                                                                                                            array(\n                                                                                                                                                                                array(\n                                                                                                                                                                                    array(\n                                                                                                                                                                                        array(\n                                                                                                                                                                                ",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9\n            ),\n            'd' => array(\n                10,\n                11,\n                12,\n                13,\n                14,\n                15,\n                16,\n                17,\n                18\n            ),\n            'e' => array(\n                19,\n                20,\n                21,\n                22,\n                23,\n                24,\n                25,\n                26,\n                27\n            )\n        ),\n        'f' => array(\n            'g' => array(\n                28,\n                29,\n                30,\n                31,\n                32,\n                33,\n                34,\n                35,\n                36\n            ),\n            'h' => array(\n                37,\n                38,\n                39,\n                40,\n                41,\n                42,\n                43,\n                44,\n                45\n            ),\n            'i' => array(\n                46,\n                47,\n                48,\n                49,\n                50,\n                51,\n                52,\n                53,\n                54\n            )\n        ),\n        'j' => array(\n            'k' => array(\n                55,\n                56,\n                57,\n                58,\n                59,\n                60,\n                61,\n                62,\n                63\n            ),\n            'l' => array(\n                64,\n                65,\n                66,\n                67,\n                68,\n                69,\n                70,\n                71,\n                72\n            ),\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => 3,\n        'e' => array(\n            'f' => 4,\n            'g' => 5,\n            'h' => 6,\n        ),\n        'i' => 7,\n    ),\n    'j' => 8,\n);\n\nprint_r(extract_even($test_tuple));\n",
    "    $result = array();\n    foreach ($test_tuple as $key => $value) {\n        if (is_array($value)) {\n            $result[$key] = extract_even($value);\n        } else {\n            if ($value % 2 == 0) {\n                $result[$key] = $value;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(\n    'a' => array(\n        'b' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n        ),\n        'c' => array(\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n    ),\n    'd' => array(\n        'e' => array(\n            11,\n            12,\n            13,\n            14,\n            15,\n        ),\n        'f' => array(\n            16,\n            17,\n            18,\n            19,\n            20,\n        ),\n    ),\n);\n\nprint_r(extract_even($test_tuple));\n"
  ]
}
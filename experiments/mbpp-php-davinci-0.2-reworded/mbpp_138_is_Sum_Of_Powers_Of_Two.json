{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nfunction is_Sum_Of_Powers_Of_Two($n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return is_Sum_Of_Powers_Of_Two(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += pow(2, $i);\n        if ($sum == $n) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$n = 8;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += pow(2, $i);\n        if ($sum == $n) {\n            return true;\n        }\n    }\n    return false;\n}\n\nif (is_Sum_Of_Powers_Of_Two(10)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum = $sum + pow(2, $i);\n        if ($sum == $n) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$n = intval(readline());\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}",
    "    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += pow(2, $i);\n        if ($sum == $n) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$n = 10;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"YES\";\n} else {\n    echo \"NO\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    return $sum == $n;\n}\n\n$n = 10;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 10;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $result = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $result += pow(2, $i);\n        if ($result == $n) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$n = 8;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    return $sum == $n;\n}\n\n$n = intval(readline());\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 10;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 5;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"YES\";\n} else {\n    echo \"NO\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}",
    "    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += pow(2, $i);\n        if ($sum == $n) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$n = 8;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(readline());\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 8;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += pow(2, $i);\n        if ($sum == $n) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$n = 10;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $sum += pow(2, $i);\n        if ($sum == $n) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$n = 10;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum = $sum + pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_Sum_Of_Powers_Of_Two(4);\necho is_Sum_Of_Powers_Of_Two(5);",
    "\t$n = (int)$n;\n\tif ($n <= 0) {\n\t\treturn false;\n\t}\n\t$sum = 0;\n\t$i = 0;\n\twhile ($sum < $n) {\n\t\t$sum += pow(2, $i);\n\t\t$i++;\n\t}\n\tif ($sum == $n) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$n = readline(\"Enter the number: \");\nif (is_Sum_Of_Powers_Of_Two($n)) {\n\techo \"True\";\n} else {\n\techo \"False\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    }\n    return false;\n}\n\n$n = 10;\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $sum = 0;\n    $i = 0;\n    while ($sum < $n) {\n        $sum += pow(2, $i);\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = intval(trim(fgets(STDIN)));\nif (is_Sum_Of_Powers_Of_Two($n)) {\n    echo \"True\";\n} else {\n    echo \"False\";\n}"
  ]
}
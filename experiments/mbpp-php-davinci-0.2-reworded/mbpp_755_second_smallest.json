{
  "name": "mbpp_755_second_smallest",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the second smallest number in an array.\nfunction second_smallest($numbers) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_755_second_smallest.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return second_smallest(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, -8, -2, 0, -2)) !== -2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, -0.5, 0, 2, -2, -2)) !== -0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 2)) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 2, 2)) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $first_min = min($numbers);\n    $second_min = max($numbers);\n    foreach ($numbers as $number) {\n        if ($number < $second_min && $number != $first_min) {\n            $second_min = $number;\n        }\n    }\n    return $second_min;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = INF;\n    foreach ($numbers as $number) {\n        if ($number > $first_min && $number < $second_min) {\n            $second_min = $number;\n        }\n    }\n    return $second_min;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = $first_min;\n    foreach ($numbers as $number) {\n        if ($number < $second_min && $number != $first_min) {\n            $second_min = $number;\n        }\n    }\n    return $second_min;\n}\n",
    "    $first = min($numbers);\n    $second = min(array_diff($numbers, array($first)));\n    return $second;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = max($numbers);\n    foreach ($numbers as $number) {\n        if ($number < $second_min && $number != $first_min) {\n            $second_min = $number;\n        }\n    }\n    return $second_min;\n}\n\n$numbers = array(1,2,3,4,5,6,7,8,9,10);\necho second_smallest($numbers);\n",
    "    $first_min = min($numbers);\n    $second_min = max($numbers);\n    foreach ($numbers as $number) {\n        if ($number < $second_min && $number != $first_min) {\n            $second_min = $number;\n        }\n    }\n    return $second_min;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = min(array_diff($numbers, array($first_min)));\n    return $second_min;\n}\n\n$numbers = array(1, 2, 3, 4, 5);\necho second_smallest($numbers);",
    "    $first = min($numbers);\n    $second = max($numbers);\n    foreach ($numbers as $number) {\n        if ($number < $second && $number != $first) {\n            $second = $number;\n        }\n    }\n    return $second;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = max($numbers);\n    foreach ($numbers as $number) {\n        if ($number < $second_min && $number != $first_min) {\n            $second_min = $number;\n        }\n    }\n    return $second_min;\n}\n\n$numbers = array(1,2,3,4,5,6,7,8,9,10);\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = max($numbers);\n    foreach ($numbers as $num) {\n        if ($num < $second_min && $num > $first_min) {\n            $second_min = $num;\n        }\n    }\n    return $second_min;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\necho second_smallest($numbers);",
    "    $min1 = $min2 = PHP_INT_MAX;\n    foreach ($numbers as $number) {\n        if ($number < $min1) {\n            $min2 = $min1;\n            $min1 = $number;\n        } elseif ($number < $min2) {\n            $min2 = $number;\n        }\n    }\n    return $min2;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = min(array_diff($numbers, array($first_min)));\n    return $second_min;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = INF;\n    foreach ($numbers as $number) {\n        if ($number > $first_min && $number < $second_min) {\n            $second_min = $number;\n        }\n    }\n    return $second_min;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $first = $second = PHP_INT_MAX;\n    foreach ($numbers as $number) {\n        if ($number < $first) {\n            $second = $first;\n            $first = $number;\n        } else if ($number < $second && $number != $first) {\n            $second = $number;\n        }\n    }\n    return $second;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = min(array_diff($numbers, array($first_min)));\n    return $second_min;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = min(array_diff($numbers, array($first_min)));\n    return $second_min;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);",
    "    $first = $second = PHP_INT_MAX;\n    foreach ($numbers as $number) {\n        if ($number < $first) {\n            $second = $first;\n            $first = $number;\n        } else if ($number < $second && $number != $first) {\n            $second = $number;\n        }\n    }\n    return $second;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = $first_min;\n    foreach ($numbers as $number) {\n        if ($number < $second_min && $number != $first_min) {\n            $second_min = $number;\n        }\n    }\n    return $second_min;\n}\n\n$numbers = [1, 2, 3, 4, 5];\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = min(array_diff($numbers, array($first_min)));\n    return $second_min;\n}\n\n$numbers = array(1,2,3,4,5,6,7,8,9,10);\necho second_smallest($numbers);",
    "    $first_min = min($numbers);\n    $second_min = $first_min;\n    foreach ($numbers as $number) {\n        if ($number < $second_min && $number != $first_min) {\n            $second_min = $number;\n        }\n    }\n    return $second_min;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho second_smallest($numbers);"
  ]
}
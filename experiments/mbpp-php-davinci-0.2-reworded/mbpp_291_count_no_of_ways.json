{
  "name": "mbpp_291_count_no_of_ways",
  "language": "php",
  "prompt": "<?php\n// Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nfunction count_no_of_ways($n, $k) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_291_count_no_of_ways.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return count_no_of_ways(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 4) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 2) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 4) !== 228) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);",
    "    $dp = array();\n    $dp[0] = 0;\n    $dp[1] = $k;\n    $dp[2] = $k * $k;\n    for($i = 3; $i <= $n; $i++) {\n        $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n    }\n    return $dp[$n];\n}\n\n$n = 3;\n$k = 2;\necho count_no_of_ways($n, $k);",
    "  $dp = array();\n  $dp[0] = $k;\n  $dp[1] = $k * $k;\n  for ($i = 2; $i < $n; $i++) {\n    $dp[$i] = ($k - 1) * ($dp[$i - 1] + $dp[$i - 2]);\n  }\n  return $dp[$n - 1];\n}\n\necho count_no_of_ways(3, 2);",
    "    $same = 0;\n    $diff = k;\n    for($i=2; $i<=$n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k-1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);",
    "    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);",
    "    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);",
    "    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);",
    "    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);",
    "    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 4);",
    "    $same = 0;\n    $diff = $k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);",
    "    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 3);",
    "    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return $k;\n    }\n    $same = $k;\n    $diff = $k * ($k - 1);\n    for ($i = 3; $i <= $n; $i++) {\n        $prev_diff = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $prev_diff;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2) . \"\\n\";\necho count_no_of_ways(2, 4) . \"\\n\";\necho count_no_of_ways(4, 2) . \"\\n\";\necho count_no_of_ways(5, 2) . \"\\n\";",
    "    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 4);",
    "    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 4);",
    "    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);",
    "    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n",
    "    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(2, 3);",
    "\t$same = 0;\n\t$diff = k;\n\tfor ($i = 2; $i <= $n; $i++) {\n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k - 1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);",
    "\t$same = 0;\n\t$diff = k;\n\tfor ($i=2; $i <= $n; $i++) { \n\t\t$temp = $diff;\n\t\t$diff = ($same + $diff) * ($k-1);\n\t\t$same = $temp;\n\t}\n\treturn $same + $diff;\n}\n\necho count_no_of_ways(3, 2);",
    "    $same = 0;\n    $diff = k;\n    for ($i = 2; $i <= $n; $i++) {\n        $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}\n\necho count_no_of_ways(3, 2);"
  ]
}
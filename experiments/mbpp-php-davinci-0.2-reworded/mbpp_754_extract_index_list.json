{
  "name": "mbpp_754_extract_index_list",
  "language": "php",
  "prompt": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_754_extract_index_list.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [1, 2, 3, 4, 5, 6];\n$l3 = [1, 2, 3, 4, 5, 6];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n",
    "    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));",
    "    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));",
    "    $result = [];\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $result[] = $index;\n        }\n    }\n    return $result;\n}\n",
    "    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6, 7);\n$l2 = array(1, 2, 3, 4, 5, 6, 7);\n$l3 = array(1, 2, 3, 4, 5, 6, 7);\n\n$result = extract_index_list($l1, $l2, $l3);\n\nprint_r($result);",
    "    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(1, 2, 3, 4, 5);\n$l3 = array(1, 2, 3, 4, 5);\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);",
    "    $index_list = [];\n    $length = count($l1);\n    for ($i = 0; $i < $length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n",
    "    $result = [];\n    $length = count($l1);\n    for ($i = 0; $i < $length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));",
    "    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n",
    "    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n",
    "    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n",
    "    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n",
    "    $result = array();\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $result[] = $index;\n        }\n    }\n    return $result;\n}\n",
    "    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));",
    "    $result = [];\n    $min_length = min(count($l1), count($l2), count($l3));\n    for ($i = 0; $i < $min_length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n",
    "    $result = [];\n    $len = min(count($l1), count($l2), count($l3));\n    for ($i = 0; $i < $len; $i++) {\n        if ($l1[$i] === $l2[$i] && $l2[$i] === $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [1, 2, 3, 4, 5, 6];\n$l3 = [1, 2, 3, 4, 5, 6];\n\nvar_dump(extract_index_list($l1, $l2, $l3));",
    "    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\necho implode(', ', extract_index_list($l1, $l2, $l3));",
    "    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n",
    "    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n"
  ]
}
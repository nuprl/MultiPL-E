{
  "name": "mbpp_430_parabola_directrix",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the directrix of a parabola.\nfunction parabola_directrix($a, $b, $c) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return parabola_directrix(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5, 3, 2) !== -198) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 8, 4) !== -2336) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 4, 6) !== -130) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    return -($a * $c) / $b;\n}\n",
    "    return -$c / $b;\n}\n",
    "    return -$c / $a;\n}\n",
    "    return -$c / $b;\n}\n",
    "    return -$c / $b;\n}\n",
    "    return -$c / $b;\n}\n",
    "    return -($b / (2 * $a));\n}\n",
    "    return -$c / $b;\n}\n",
    "    return -$c / $b;\n}\n",
    "    return -$c / $b;\n}\n",
    "    return -$a / $b;\n}\n",
    "  $d = -$b / (2 * $a);\n  $k = $c - $d * $d * $a;\n  return $k;\n}\n",
    "\treturn -($a / $b);\n}\n",
    "    return -($a * $c) / $b;\n}\n",
    "    return -($a * $a) / (4 * $b) + $c;\n}\n",
    "\treturn -$c / $b;\n}\n",
    "    return -$c / $a;\n}\n",
    "  return -$c / $b;\n}\n",
    "    return -$c / $b;\n}\n",
    "\treturn -$c / $b;\n}\n"
  ]
}
{
  "name": "mbpp_773_occurance_substring",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the occurrence and position of the substrings within a string. Return null if there is no match.\nfunction occurance_substring($text, $pattern) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_773_occurance_substring.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return occurance_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"python programming, python language\", \"python\") !== array(\"python\", 0, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"python programming,programming language\", \"programming\") !== array(\"programming\", 7, 18)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"python programming,programming language\", \"language\") !== array(\"language\", 31, 39)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"c++ programming, c++ language\", \"python\") !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $occurance = array();\n    $len = strlen($text);\n    $len_pattern = strlen($pattern);\n    for ($i = 0; $i < $len; $i++) {\n        if ($text[$i] == $pattern[0]) {\n            $j = 0;\n            $k = $i;\n            while ($j < $len_pattern && $k < $len && $text[$k] == $pattern[$j]) {\n                $k++;\n                $j++;\n            }\n            if ($j == $len_pattern) {\n                $occurance[] = $i;\n            }\n        }\n    }\n    return $occurance;\n}\n\n$text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\n$pattern = \"ipsum\";\n$occurance = occurance_substring($text, $pattern);\necho \"Text: $text<br>\";\necho \"Pattern: $pattern<br>\";\necho \"Occurance: \";\nprint_r($occurance);",
    "    $result = array();\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos++;\n    }\n    return $result;\n}\n\n$text = 'This is a test';\n$pattern = 'is';\n$result = occurance_substring($text, $pattern);\nif ($result) {\n    echo \"The pattern '$pattern' was found in the string '$text' at positions: \" . implode(', ', $result);\n} else {\n    echo \"The pattern '$pattern' was not found in the string '$text'\";\n}",
    "    $result = array();\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos++;\n    }\n    return $result;\n}\n\n$text = \"This is a test. This is, too.\";\n$pattern = \"is\";\n$result = occurance_substring($text, $pattern);\nprint_r($result);",
    "    $result = [];\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos = $pos + strlen($pattern);\n    }\n    return $result;\n}\n\n$text = 'This is a test. This is a programming test. This is a programming test in PHP.';\n$pattern = 'is';\n$result = occurance_substring($text, $pattern);\necho '<pre>';\nprint_r($result);\necho '</pre>';\n",
    "    $result = [];\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos = $pos + strlen($pattern);\n    }\n    return $result;\n}\n\n$text = \"The quick brown fox jumps over the lazy dog.\";\n$pattern = \"the\";\n\n$result = occurance_substring($text, $pattern);\n\nif ($result) {\n    echo \"The pattern '$pattern' is found at the following positions: \" . implode(\", \", $result);\n} else {\n    echo \"The pattern '$pattern' is not found.\";\n}\n",
    "    $result = array();\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos = $pos + strlen($pattern);\n    }\n    return $result;\n}\n\n$text = \"The quick brown fox jumps over the lazy dog.\";\n$pattern = \"the\";\n$result = occurance_substring($text, $pattern);\nif ($result) {\n    echo \"The pattern '$pattern' occurs \" . count($result) . \" times in the text. <br>\";\n    echo \"The positions of the pattern are: \" . implode(\", \", $result);\n} else {\n    echo \"The pattern '$pattern' does not occur in the text.\";\n}",
    "    $result = [];\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos = $pos + strlen($pattern);\n    }\n    return $result;\n}\n\n$text = 'This is a test';\n$pattern = 'is';\n$result = occurance_substring($text, $pattern);\necho '<pre>';\nprint_r($result);\necho '</pre>';",
    "    $result = array();\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos = $pos + strlen($pattern);\n    }\n    return $result;\n}\n\n$text = \"The quick brown fox jumps over the lazy dog.\";\n$pattern = \"the\";\n$result = occurance_substring($text, $pattern);\necho \"The pattern '$pattern' occurs \" . count($result) . \" times in the text '$text' at positions: \" . implode(\", \", $result);",
    "    $result = [];\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos++;\n    }\n    return $result;\n}\n\n$text = 'This is a test';\n$pattern = 'is';\n$result = occurance_substring($text, $pattern);\necho '<pre>';\nprint_r($result);\necho '</pre>';",
    "    $pos = strpos($text, $pattern);\n    $count = 0;\n    while ($pos !== false) {\n        $count++;\n        $pos = strpos($text, $pattern, $pos + 1);\n    }\n    if ($count > 0) {\n        return $count;\n    } else {\n        return null;\n    }\n}\n\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"the\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"fox\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"dog\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"cat\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"The\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"The\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"The\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"The\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"The\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"The\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"The\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"The\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"The\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"The\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"The\");\necho \"<br>\";\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"The",
    "    $result = array();\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos++;\n    }\n    return $result;\n}\n\n$text = \"The quick brown fox jumps over the lazy dog.\";\n$pattern = \"the\";\n\n$result = occurance_substring($text, $pattern);\n\nif (count($result) > 0) {\n    echo \"The pattern '$pattern' occurs \" . count($result) . \" times in the text.\\n\";\n    echo \"The positions are: \" . implode(\", \", $result);\n} else {\n    echo \"No match found.\";\n}",
    "    $result = array();\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos = $pos + strlen($pattern);\n    }\n    return $result;\n}\n\n$text = \"This is a test string. This is a test string. This is a test string.\";\n$pattern = \"test\";\n$result = occurance_substring($text, $pattern);\necho \"Occurance of '$pattern' in '$text' is \" . count($result) . \"<br>\";\necho \"Position of '$pattern' in '$text' is \" . implode(\", \", $result);",
    "    $result = [];\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos++;\n    }\n    return $result;\n}\n\n$text = \"The quick brown fox jumps over the lazy dog.\";\n$pattern = \"the\";\n$result = occurance_substring($text, $pattern);\nif (count($result) > 0) {\n    echo \"The pattern '$pattern' is found in the text at positions: \";\n    foreach ($result as $pos) {\n        echo $pos . \" \";\n    }\n} else {\n    echo \"The pattern '$pattern' is not found in the text.\";\n}",
    "    $result = array();\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos = $pos + strlen($pattern);\n    }\n    return $result;\n}\n\n$text = \"The quick brown fox jumps over the lazy dog.\";\n$pattern = \"the\";\n$result = occurance_substring($text, $pattern);\necho \"The pattern '$pattern' occurs \" . count($result) . \" times in the text '$text' at positions: \" . implode(\", \", $result);",
    "    $pos = strpos($text, $pattern);\n    if ($pos === false) {\n        return null;\n    } else {\n        $occurance = substr_count($text, $pattern);\n        return \"The substring '$pattern' occurs $occurance times in the string '$text' and the first occurance is at position $pos\";\n    }\n}\n\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"the\");",
    "    $pos = strpos($text, $pattern);\n    if ($pos === false) {\n        return null;\n    } else {\n        return $pos;\n    }\n}\n\n$text = \"The quick brown fox jumps over the lazy dog.\";\n$pattern = \"fox\";\n$result = occurance_substring($text, $pattern);\necho $result;",
    "    $pos = strpos($text, $pattern);\n    if ($pos === false) {\n        return null;\n    } else {\n        return \"Pattern found at position $pos\";\n    }\n}\n\necho occurance_substring(\"The quick brown fox jumps over the lazy dog\", \"the\");",
    "    $result = [];\n    $pos = 0;\n    while (($pos = strpos($text, $pattern, $pos)) !== false) {\n        $result[] = $pos;\n        $pos = $pos + strlen($pattern);\n    }\n    return $result;\n}\n",
    "    $pos = strpos($text, $pattern);\n    $count = 0;\n    $positions = [];\n    while ($pos !== false) {\n        $positions[] = $pos;\n        $pos = strpos($text, $pattern, $pos + 1);\n        $count++;\n    }\n    if ($count > 0) {\n        return [\n            'count' => $count,\n            'positions' => $positions\n        ];\n    }\n    return null;\n}\n\n$text = 'This is a test. This is a programming test. This is a programming test in PHP.';\n$pattern = 'is';\n$result = occurance_substring($text, $pattern);\necho '<pre>';\nprint_r($result);\necho '</pre>';\n\n$text = 'This is a test. This is a programming test. This is a programming test in PHP.';\n$pattern = 'the';\n$result = occurance_substring($text, $pattern);\necho '<pre>';\nprint_r($result);\necho '</pre>';\n\n$text = 'This is a test. This is a programming test. This is a programming test in PHP.';\n$pattern = 'z';\n$result = occurance_substring($text, $pattern);\necho '<pre>';\nprint_r($result);\necho '</pre>';",
    "    $result = [];\n    $position = 0;\n    while (($position = strpos($text, $pattern, $position)) !== false) {\n        $result[] = $position;\n        $position = $position + strlen($pattern);\n    }\n    return $result;\n}\n\n$text = \"This is a test. This is, too.\";\n$pattern = \"is\";\n$result = occurance_substring($text, $pattern);\necho \"Text: $text<br>\";\necho \"Pattern: $pattern<br>\";\necho \"Result: \";\nprint_r($result);"
  ]
}
{
  "name": "mbpp_724_power_base_sum",
  "language": "php",
  "prompt": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_724_power_base_sum.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$result = pow($base, $power);\n\t$sum = 0;\n\twhile ($result > 0) {\n\t\t$sum += $result % 10;\n\t\t$result = floor($result / 10);\n\t}\n\treturn $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp4g0fnr4y.php:8\nStack trace:\n#0 /tmp/tmp4g0fnr4y.php(14): power_base_sum(2, 100)\n#1 /tmp/tmp4g0fnr4y.php(18): candidate(2, 100)\n#2 /tmp/tmp4g0fnr4y.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp4g0fnr4y.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $base_power = pow($base, $power);\n    while($base_power > 0) {\n        $sum += $base_power % 10;\n        $base_power = (int)($base_power / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpfpytfteb.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpfpytfteb.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpytfteb.php:19\nStack trace:\n#0 /tmp/tmpfpytfteb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpfpytfteb.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw7ke93d6.php:8\nStack trace:\n#0 /tmp/tmpw7ke93d6.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpw7ke93d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10); // 4\necho '<br>';\necho power_base_sum(2, 100); // 5\necho '<br>';\necho power_base_sum(2, 1000); // 7\necho '<br>';\necho power_base_sum(2, 10000); // 11\necho '<br>';\necho power_base_sum(2, 100000); // 14\necho '<br>';\necho power_base_sum(2, 1000000); // 18\necho '<br>';\necho power_base_sum(2, 10000000); // 23\necho '<br>';\necho power_base_sum(2, 100000000); // 29\necho '<br>';\necho power_base_sum(2, 1000000000); // 37\necho '<br>';\necho power_base_sum(2, 10000000000); // 46\necho '<br>';\necho power_base_sum(2, 100000000000); // 57\necho '<br>';\necho power_base_sum(2, 1000000000000); // 70\necho '<br>';\necho power_base_sum(2, 10000000000000); // 86\necho '<br>';\necho power_base_sum(2, 100000000000000); // 105\necho '<br>';\necho power_base_sum(2, 1000000000000000); // 128\necho '<br>';\necho power_base_sum(2, 10000000000000000); // 155\necho '<br>';\necho power_base_sum(2, 100000000000000000); // 187\necho '<br>';\necho power_base_sum(2, 1000000000000000000); // 226\necho '<br>';\necho power_base_sum(2, 10000000000000000000); // 272\necho '<br>';\necho power_base_sum(2, 100000000000000000000); // 327\necho '<br>';\necho power_base\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpudby8_u4.php on line 54\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmperr8086s.php on line 10\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmperr8086s.php on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperr8086s.php:22\nStack trace:\n#0 /tmp/tmperr8086s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmperr8086s.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = $base ** $power;\n  $sum = 0;\n  while ($result > 0) {\n    $sum += $result % 10;\n    $result = floor($result / 10);\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = $base ** $power;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmphma52159.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmphma52159.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmphma52159.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmphma52159.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmphma52159.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmphma52159.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmphma52159.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmphma52159.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(12, 2);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "9\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkpg7plbh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkpg7plbh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkpg7plbh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkpg7plbh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkpg7plbh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkpg7plbh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkpg7plbh.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkpg7plbh.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    $str = strval($result);\n    for ($i = 0; $i < strlen($str); $i++) {\n        $sum += intval($str[$i]);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "57\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqqgzub2m.php:19\nStack trace:\n#0 /tmp/tmpqqgzub2m.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqqgzub2m.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $sum = 0;\n  $result = pow($base, $power);\n  $result = str_split($result);\n  foreach ($result as $value) {\n    $sum += $value;\n  }\n  return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmptczfofc7.php:8\nStack trace:\n#0 /tmp/tmptczfofc7.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmptczfofc7.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp2u3f713w.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp2u3f713w.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2u3f713w.php:19\nStack trace:\n#0 /tmp/tmp2u3f713w.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2u3f713w.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmphbf6o2b9.php:8\nStack trace:\n#0 /tmp/tmphbf6o2b9.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmphbf6o2b9.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result /= 10;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124168,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+293 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+292 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+291 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+290 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+289 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+288 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+287 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+286 to int loses precision in /tmp/tmpbry42x54.php on line 10\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhpdkn1b.php:19\nStack trace:\n#0 /tmp/tmphhpdkn1b.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphhpdkn1b.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nWarning: Trying to access array offset on value of type float in /tmp/tmprla650lc.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmprla650lc.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmprla650lc.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmprla650lc.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmprla650lc.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmprla650lc.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmprla650lc.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmprla650lc.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmprla650lc.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmprla650lc.php on line 7\n\nWarning: Trying to access array offset on value of ty",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $result = str_split($result);\n  $sum = 0;\n  foreach ($result as $value) {\n    $sum += $value;\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpld4j3j20.php:8\nStack trace:\n#0 /tmp/tmpld4j3j20.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpld4j3j20.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\necho power_base_sum(2, 8);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "13\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbqi8jrzy.php:15\nStack trace:\n#0 /tmp/tmpbqi8jrzy.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpbqi8jrzy.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpjwj7k5wb.php:8\nStack trace:\n#0 /tmp/tmpjwj7k5wb.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpjwj7k5wb.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Imp",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 3);\necho \"\\n\";\necho power_base_sum(5, 4);\necho \"\\n\";\necho power_base_sum(9, 2);\necho \"\\n\";\necho power_base_sum(2, 8);\necho \"\\n\";\necho power_base_sum(9, 3);\necho \"\\n\";\necho power_base_sum(3, 3);\necho \"\\n\";\necho power_base_sum(2, 10);\necho \"\\n\";\necho power_base_sum(5, 5);\necho \"\\n\";\necho power_base_sum(9, 4);\necho \"\\n\";\necho power_base_sum(2, 16);\necho \"\\n\";\necho power_base_sum(5, 6);\necho \"\\n\";\necho power_base_sum(9, 5);\necho \"\\n\";\necho power_base_sum(2, 32);\necho \"\\n\";\necho power_base_sum(5, 7);\necho \"\\n\";\necho power_base_sum(9, 6);\necho \"\\n\";\necho power_base_sum(2, 64);\necho \"\\n\";\necho power_base_sum(5, 8);\necho \"\\n\";\necho power_base_sum(9, 7);\necho \"\\n\";\necho power_base_sum(2, 128);\necho \"\\n\";\necho power_base_sum(5, 9);\necho \"\\n\";\necho power_base_sum(9, 8);\necho \"\\n\";\necho power_base_sum(2, 256);\necho \"\\n\";\necho power_base_sum(5, 10);\necho \"\\n\";\necho power_base_sum(9, 9);\necho \"\\n\";\necho power_base_sum(2, 512);\necho \"\\n\";\necho power_base_sum(5, 11);\necho \"\\n\";\necho power_base_sum(9\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpvkaa5tc_.php on line 66\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjzi_jv7.php:16\nStack trace:\n#0 /tmp/tmpmjzi_jv7.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmjzi_jv7.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nWarning: Trying to access array offset on value of type float in /tmp/tmp1g2u8z9b.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp1g2u8z9b.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp1g2u8z9b.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp1g2u8z9b.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp1g2u8z9b.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp1g2u8z9b.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp1g2u8z9b.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp1g2u8z9b.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp1g2u8z9b.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmp1g2u8z9b.php on line 7\n\nWarning: Trying to access array offset on value of ty",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string) $result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpcit5zy76.php:8\nStack trace:\n#0 /tmp/tmpcit5zy76.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpcit5zy76.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $result = str_split($result);\n  $result = array_sum($result);\n  return $result;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpop0d3zni.php:16\nStack trace:\n#0 /tmp/tmpop0d3zni.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpop0d3zni.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp3pjn_nw5.php:8\nStack trace:\n#0 /tmp/tmp3pjn_nw5.php(13): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmp3pjn_nw5.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpmcnu2dil.php on line 10\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpmcnu2dil.php on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmcnu2dil.php:22\nStack trace:\n#0 /tmp/tmpmcnu2dil.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmcnu2dil.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmphbf6o2b9.php:8\nStack trace:\n#0 /tmp/tmphbf6o2b9.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmphbf6o2b9.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp_h47w7ry.php:8\nStack trace:\n#0 /tmp/tmp_h47w7ry.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp_h47w7ry.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\n\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$sum = 0;\n\t$result = pow($base, $power);\n\t$result = (string)$result;\n\tfor($i = 0; $i < strlen($result); $i++) {\n\t\t$sum += $result[$i];\n\t}\n\treturn $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpsmpwylsa.php:8\nStack trace:\n#0 /tmp/tmpsmpwylsa.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpsmpwylsa.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpgrkjnw8z.php:8\nStack trace:\n#0 /tmp/tmpgrkjnw8z.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpgrkjnw8z.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$sum = 0;\n\t$base_to_power = pow($base, $power);\n\t$base_to_power_str = (string)$base_to_power;\n\tfor ($i=0; $i < strlen($base_to_power_str); $i++) { \n\t\t$sum += $base_to_power_str[$i];\n\t}\n\treturn $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp16op0oa8.php:8\nStack trace:\n#0 /tmp/tmp16op0oa8.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp16op0oa8.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $result = str_split($result);\n  $sum = 0;\n  foreach ($result as $value) {\n    $sum += $value;\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpld4j3j20.php:8\nStack trace:\n#0 /tmp/tmpld4j3j20.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpld4j3j20.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000) . \"\\n\";\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpn7olaroc.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpn7olaroc.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpn7olaroc.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpn7olaroc.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpn7olaroc.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpn7olaroc.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpn7olaroc.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpn7olaroc.php on line 10\n\nDeprecated: Imp",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $result = str_split($result);\n    return array_sum($result);\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "57\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppufeiwqd.php:18\nStack trace:\n#0 /tmp/tmppufeiwqd.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppufeiwqd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "57\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4kplqqv.php:16\nStack trace:\n#0 /tmp/tmpc4kplqqv.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpc4kplqqv.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmphbf6o2b9.php:8\nStack trace:\n#0 /tmp/tmphbf6o2b9.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmphbf6o2b9.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $sum = 0;\n  while ($result > 0) {\n    $sum += $result % 10;\n    $result = floor($result / 10);\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw7ke93d6.php:8\nStack trace:\n#0 /tmp/tmpw7ke93d6.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpw7ke93d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhpdkn1b.php:19\nStack trace:\n#0 /tmp/tmphhpdkn1b.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphhpdkn1b.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $sum = 0;\n  $result = pow($base, $power);\n  $result = str_split($result);\n  foreach ($result as $value) {\n    $sum += $value;\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpk76479f8.php:8\nStack trace:\n#0 /tmp/tmpk76479f8.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpk76479f8.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result != 0) {\n        $sum += $result % 10;\n        $result /= 10;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nDeprecated: Implicit conversion from float 102.4 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 10.24 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 1.024 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 0.1024 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 0.01024 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 0.0010240000000000002 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 0.00010240000000000002 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 1.0240000000000002E-5 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 1.0240000000000003E-6 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 1.0240000000000003E-7 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 1.0240000000000003E-8 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 1.0240000000000002E-9 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 1.0240000000000002E-10 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 1.0240000000000002E-11 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 1.024E-12 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 1.0240000000000001E-13 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 1.024E-14 to int loses precision in /tmp/tmp1z7cvw_3.php on line 7\n\nDeprecated: Implicit conversion from float 1.024E-15 ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result != 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpgis6bntq.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpgis6bntq.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgis6bntq.php:19\nStack trace:\n#0 /tmp/tmpgis6bntq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgis6bntq.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\n\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpegulfasv.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmperr8086s.php on line 10\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmperr8086s.php on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperr8086s.php:22\nStack trace:\n#0 /tmp/tmperr8086s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmperr8086s.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $sum = 0;\n  $result = pow($base, $power);\n  $result = str_split($result);\n  foreach ($result as $value) {\n    $sum += $value;\n  }\n  return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmprc0e6w_o.php:8\nStack trace:\n#0 /tmp/tmprc0e6w_o.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmprc0e6w_o.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpx0zhg8la.php:8\nStack trace:\n#0 /tmp/tmpx0zhg8la.php(13): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmpx0zhg8la.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 4);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp1u73oxtp.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1u73oxtp.php:19\nStack trace:\n#0 /tmp/tmp1u73oxtp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1u73oxtp.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$result = pow($base, $power);\n\t$sum = 0;\n\twhile ($result > 0) {\n\t\t$sum += $result % 10;\n\t\t$result = floor($result / 10);\n\t}\n\treturn $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = $base ** $power;\n  $sum = 0;\n  while ($result > 0) {\n    $sum += $result % 10;\n    $result = floor($result / 10);\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpmfl74ycc.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$result = pow($base, $power);\n\t$sum = 0;\n\twhile ($result > 0) {\n\t\t$sum += $result % 10;\n\t\t$result = (int)($result / 10);\n\t}\n\treturn $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmphljg97oj.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphljg97oj.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphljg97oj.php:19\nStack trace:\n#0 /tmp/tmphljg97oj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphljg97oj.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$result = pow($base, $power);\n\t$sum = 0;\n\twhile ($result > 0) {\n\t\t$sum += $result % 10;\n\t\t$result = floor($result / 10);\n\t}\n\treturn $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpu6pwegz_.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\necho \"\\n\";\necho power_base_sum(2, 1000);\necho \"\\n\";\necho power_base_sum(2, 1000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000000000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000000000000000000000000000000000000);\necho \"\\n\";\necho power_base_sum(2, 1000000000000000000000000000000000000000000000000000000000000000000\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp5_uv_iue.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000) . \"\\n\";\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpovnvatgu.php on line 10\n0\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpovnvatgu.php on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovnvatgu.php:22\nStack trace:\n#0 /tmp/tmpovnvatgu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpovnvatgu.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $result = str_split($result);\n  $result = array_sum($result);\n  return $result;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpop0d3zni.php:16\nStack trace:\n#0 /tmp/tmpop0d3zni.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpop0d3zni.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "57\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5zlazdgt.php:15\nStack trace:\n#0 /tmp/tmp5zlazdgt.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp5zlazdgt.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 3);\necho '<br>';\necho power_base_sum(2, 4);\necho '<br>';\necho power_base_sum(2, 5);\necho '<br>';\necho power_base_sum(2, 6);\necho '<br>';\necho power_base_sum(2, 7);\necho '<br>';\necho power_base_sum(2, 8);\necho '<br>';\necho power_base_sum(2, 9);\necho '<br>';\necho power_base_sum(2, 10);\necho '<br>';\necho power_base_sum(2, 11);\necho '<br>';\necho power_base_sum(2, 12);\necho '<br>';\necho power_base_sum(2, 13);\necho '<br>';\necho power_base_sum(2, 14);\necho '<br>';\necho power_base_sum(2, 15);\necho '<br>';\necho power_base_sum(2, 16);\necho '<br>';\necho power_base_sum(2, 17);\necho '<br>';\necho power_base_sum(2, 18);\necho '<br>';\necho power_base_sum(2, 19);\necho '<br>';\necho power_base_sum(2, 20);\necho '<br>';\necho power_base_sum(2, 21);\necho '<br>';\necho power_base_sum(2, 22);\necho '<br>';\necho power_base_sum(2, 23);\necho '<br>';\necho power_base_sum(2, 24);\necho '<br>';\necho power_base_sum(2, 25);\necho '<br>';\necho power_base_sum(2, 26);\necho\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpj4idsm8g.php on line 61\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp_h47w7ry.php:8\nStack trace:\n#0 /tmp/tmp_h47w7ry.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp_h47w7ry.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp4g0fnr4y.php:8\nStack trace:\n#0 /tmp/tmp4g0fnr4y.php(14): power_base_sum(2, 100)\n#1 /tmp/tmp4g0fnr4y.php(18): candidate(2, 100)\n#2 /tmp/tmp4g0fnr4y.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp4g0fnr4y.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpjkr9jc_w.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpjkr9jc_w.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpjkr9jc_w.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpjkr9jc_w.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpjkr9jc_w.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpjkr9jc_w.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpjkr9jc_w.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpjkr9jc_w.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9anl0yc_.php:8\nStack trace:\n#0 /tmp/tmp9anl0yc_.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp9anl0yc_.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw4hlaj5q.php:9\nStack trace:\n#0 /tmp/tmpw4hlaj5q.php(13): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmpw4hlaj5q.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(5, 2);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpjov9c6do.php:8\nStack trace:\n#0 /tmp/tmpjov9c6do.php(14): power_base_sum(2, 100)\n#1 /tmp/tmpjov9c6do.php(18): candidate(2, 100)\n#2 /tmp/tmpjov9c6do.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpjov9c6do.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 4);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpr_bfatx8.php:8\nStack trace:\n#0 /tmp/tmpr_bfatx8.php(15): power_base_sum(2, 100)\n#1 /tmp/tmpr_bfatx8.php(19): candidate(2, 100)\n#2 /tmp/tmpr_bfatx8.php(25): test()\n#3 {main}\n  thrown in /tmp/tmpr_bfatx8.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$result = 1;\n\tfor ($i = 0; $i < $power; $i++) {\n\t\t$result *= $base;\n\t}\n\t$result = str_split($result);\n\t$sum = 0;\n\tforeach ($result as $value) {\n\t\t$sum += $value;\n\t}\n\treturn $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp5d2rzvks.php:11\nStack trace:\n#0 /tmp/tmp5d2rzvks.php(17): power_base_sum(2, 100)\n#1 /tmp/tmp5d2rzvks.php(21): candidate(2, 100)\n#2 /tmp/tmp5d2rzvks.php(27): test()\n#3 {main}\n  thrown in /tmp/tmp5d2rzvks.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp33s_o_oe.php:11\nStack trace:\n#0 /tmp/tmp33s_o_oe.php(15): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp33s_o_oe.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $sum = 0;\n  $result = pow($base, $power);\n  $result = str_split($result);\n  foreach ($result as $value) {\n    $sum += $value;\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpk76479f8.php:8\nStack trace:\n#0 /tmp/tmpk76479f8.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpk76479f8.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $power_base = pow($base, $power);\n    $power_base_sum = 0;\n    while ($power_base > 0) {\n        $power_base_sum += $power_base % 10;\n        $power_base = floor($power_base / 10);\n    }\n    return $power_base_sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpduxqwo5v.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpduxqwo5v.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpduxqwo5v.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpduxqwo5v.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpduxqwo5v.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpduxqwo5v.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpduxqwo5v.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpduxqwo5v.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpjwj7k5wb.php:8\nStack trace:\n#0 /tmp/tmpjwj7k5wb.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpjwj7k5wb.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp4g0fnr4y.php:8\nStack trace:\n#0 /tmp/tmp4g0fnr4y.php(14): power_base_sum(2, 100)\n#1 /tmp/tmp4g0fnr4y.php(18): candidate(2, 100)\n#2 /tmp/tmp4g0fnr4y.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp4g0fnr4y.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpeql47gyu.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpeql47gyu.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeql47gyu.php:19\nStack trace:\n#0 /tmp/tmpeql47gyu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpeql47gyu.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$result = pow($base, $power);\n\t$result = str_split($result);\n\t$sum = 0;\n\tforeach ($result as $value) {\n\t\t$sum += $value;\n\t}\n\treturn $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpjd0ocips.php:8\nStack trace:\n#0 /tmp/tmpjd0ocips.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpjd0ocips.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpgrkjnw8z.php:8\nStack trace:\n#0 /tmp/tmpgrkjnw8z.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpgrkjnw8z.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw7ke93d6.php:8\nStack trace:\n#0 /tmp/tmpw7ke93d6.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpw7ke93d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result_string = strval($result);\n    $result_array = str_split($result_string);\n    $sum = 0;\n    foreach ($result_array as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmptxno4bat.php:9\nStack trace:\n#0 /tmp/tmptxno4bat.php(13): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmptxno4bat.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $base_to_power = pow($base, $power);\n    $base_to_power_str = strval($base_to_power);\n    $base_to_power_arr = str_split($base_to_power_str);\n    $sum = 0;\n    foreach ($base_to_power_arr as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpm25294f8.php:9\nStack trace:\n#0 /tmp/tmpm25294f8.php(14): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpm25294f8.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $base_to_power = pow($base, $power);\n    $base_to_power_array = str_split($base_to_power);\n    $sum = 0;\n    foreach ($base_to_power_array as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpca7ooj8w.php:8\nStack trace:\n#0 /tmp/tmpca7ooj8w.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpca7ooj8w.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp9anl0yc_.php:8\nStack trace:\n#0 /tmp/tmp9anl0yc_.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp9anl0yc_.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnirbav7d.php:15\nStack trace:\n#0 /tmp/tmpnirbav7d.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpnirbav7d.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10) . \"\\n\";\necho power_base_sum(3, 5) . \"\\n\";\necho power_base_sum(5, 3) . \"\\n\";\necho power_base_sum(10, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\n9\n8\n1\n\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpixrh_sct.php:11\nStack trace:\n#0 /tmp/tmpixrh_sct.php(20): power_base_sum(2, 100)\n#1 /tmp/tmpixrh_sct.php(24): candidate(2, 100)\n#2 /tmp/tmpixrh_sct.php(30): test()\n#3 {main}\n  thrown in /tmp/tmpixrh_sct.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpbwgvbn54.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp4g0fnr4y.php:8\nStack trace:\n#0 /tmp/tmp4g0fnr4y.php(14): power_base_sum(2, 100)\n#1 /tmp/tmp4g0fnr4y.php(18): candidate(2, 100)\n#2 /tmp/tmp4g0fnr4y.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp4g0fnr4y.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpjwj7k5wb.php:8\nStack trace:\n#0 /tmp/tmpjwj7k5wb.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpjwj7k5wb.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhpdkn1b.php:19\nStack trace:\n#0 /tmp/tmphhpdkn1b.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphhpdkn1b.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmphbf6o2b9.php:8\nStack trace:\n#0 /tmp/tmphbf6o2b9.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmphbf6o2b9.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 3);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "8\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 3);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "8\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpzj8zbp9p.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpzj8zbp9p.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpzj8zbp9p.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpzj8zbp9p.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpzj8zbp9p.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpzj8zbp9p.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpzj8zbp9p.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpzj8zbp9p.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 3);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "8\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpi0zq757k.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\necho power_base_sum(2, 4);\necho \"<br>\";\necho power_base_sum(2, 10);\necho \"<br>\";\necho power_base_sum(2, 15);\necho \"<br>\";\necho power_base_sum(2, 20);\necho \"<br>\";\necho power_base_sum(2, 30);\necho \"<br>\";\necho power_base_sum(2, 40);\necho \"<br>\";\necho power_base_sum(2, 50);\necho \"<br>\";\necho power_base_sum(2, 60);\necho \"<br>\";\necho power_base_sum(2, 70);\necho \"<br>\";\necho power_base_sum(2, 80);\necho \"<br>\";\necho power_base_sum(2, 90);\necho \"<br>\";\necho power_base_sum(2, 100);\necho \"<br>\";\necho power_base_sum(2, 200);\necho \"<br>\";\necho power_base_sum(2, 300);\necho \"<br>\";\necho power_base_sum(2, 400);\necho \"<br>\";\necho power_base_sum(2, 500);\necho \"<br>\";\necho power_base_sum(2, 600);\necho \"<br>\";\necho power_base_sum(2, 700);\necho \"<br>\";\necho power_base_sum(2, 800);\necho \"<br>\";\necho power_base_sum(2, 900);\necho \"<br>\";\necho power_base_sum(2, 1000);\necho \"<br>\";\necho power_base_sum(2, 2000);\necho \"<br>\";\necho power_base_sum(2, 3000);\necho \"<br>\";\necho power_base_sum(2, 4000);\necho \"<br>\";\necho power_base_sum(2, 5000);\necho \"<br>\";\necho power_base_sum(2, 6000);\necho \"<br>\";\necho\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmphw3htcka.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Imp",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmphhpdkn1b.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhpdkn1b.php:19\nStack trace:\n#0 /tmp/tmphhpdkn1b.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphhpdkn1b.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp4uckjede.php:8\nStack trace:\n#0 /tmp/tmp4uckjede.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp4uckjede.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\necho power_base_sum(2, 4);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80am5p80.php:15\nStack trace:\n#0 /tmp/tmp80am5p80.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp80am5p80.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnirbav7d.php:15\nStack trace:\n#0 /tmp/tmpnirbav7d.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpnirbav7d.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $sum = 0;\n  while ($result > 0) {\n    $sum += $result % 10;\n    $result = floor($result / 10);\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $sum = 0;\n  $result = pow($base, $power);\n  $result = str_split($result);\n  foreach ($result as $digit) {\n    $sum += $digit;\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp1awh2vn9.php:8\nStack trace:\n#0 /tmp/tmp1awh2vn9.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp1awh2vn9.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp4chuvtde.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp4chuvtde.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp4chuvtde.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp4chuvtde.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp4chuvtde.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp4chuvtde.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp4chuvtde.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmp4chuvtde.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = bcpow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function bcpow() in /tmp/tmp690vudwp.php:4\nStack trace:\n#0 /tmp/tmp690vudwp.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmp690vudwp.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result_arr = str_split($result);\n    foreach ($result_arr as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpxk4rigvl.php:8\nStack trace:\n#0 /tmp/tmpxk4rigvl.php(14): power_base_sum(2, 100)\n#1 /tmp/tmpxk4rigvl.php(18): candidate(2, 100)\n#2 /tmp/tmpxk4rigvl.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpxk4rigvl.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = bcpow($base, $power);\n    $sum = 0;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function bcpow() in /tmp/tmpaqsdaqbt.php:4\nStack trace:\n#0 /tmp/tmpaqsdaqbt.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpaqsdaqbt.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $sum = 0;\n  while ($result > 0) {\n    $sum += $result % 10;\n    $result = floor($result / 10);\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmp5tywb5j7.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpf4fnm9d6.php:8\nStack trace:\n#0 /tmp/tmpf4fnm9d6.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmpf4fnm9d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmperr8086s.php on line 10\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmperr8086s.php on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperr8086s.php:22\nStack trace:\n#0 /tmp/tmperr8086s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmperr8086s.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = bcpow($base, $power);\n    $sum = 0;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function bcpow() in /tmp/tmphv20dd86.php:4\nStack trace:\n#0 /tmp/tmphv20dd86.php(12): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmphv20dd86.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = $base ** $power;\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp3pjn_nw5.php:8\nStack trace:\n#0 /tmp/tmp3pjn_nw5.php(13): power_base_sum(2, 100)\n#1 {main}\n  thrown in /tmp/tmp3pjn_nw5.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmp4g0fnr4y.php:8\nStack trace:\n#0 /tmp/tmp4g0fnr4y.php(14): power_base_sum(2, 100)\n#1 /tmp/tmp4g0fnr4y.php(18): candidate(2, 100)\n#2 /tmp/tmp4g0fnr4y.php(24): test()\n#3 {main}\n  thrown in /tmp/tmp4g0fnr4y.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw7ke93d6.php:8\nStack trace:\n#0 /tmp/tmpw7ke93d6.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpw7ke93d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\necho power_base_sum(2, 4);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80am5p80.php:15\nStack trace:\n#0 /tmp/tmp80am5p80.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp80am5p80.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$result = pow($base, $power);\n\t$sum = 0;\n\twhile($result > 0) {\n\t\t$sum += $result % 10;\n\t\t$result = floor($result / 10);\n\t}\n\treturn $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpsupx7vvw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpsupx7vvw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpsupx7vvw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpsupx7vvw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpsupx7vvw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpsupx7vvw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpsupx7vvw.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpsupx7vvw.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpmwd7w66r.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $result = pow($base, $power);\n  $sum = 0;\n  while ($result > 0) {\n    $sum += $result % 10;\n    $result = floor($result / 10);\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpnkylm9od.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = str_split($result);\n    foreach ($result as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpw7ke93d6.php:8\nStack trace:\n#0 /tmp/tmpw7ke93d6.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpw7ke93d6.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpbihbb6sv.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $sum = 0;\n    $result = pow($base, $power);\n    $result = (string)$result;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpwsfaq6w4.php:8\nStack trace:\n#0 /tmp/tmpwsfaq6w4.php(14): power_base_sum(2, 100)\n#1 /tmp/tmpwsfaq6w4.php(18): candidate(2, 100)\n#2 /tmp/tmpwsfaq6w4.php(24): test()\n#3 {main}\n  thrown in /tmp/tmpwsfaq6w4.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\n\necho power_base_sum(2, 4);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_nvozbfj.php:16\nStack trace:\n#0 /tmp/tmp_nvozbfj.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_nvozbfj.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $result_array = str_split($result);\n    $sum = 0;\n    foreach ($result_array as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpmqx1frna.php:8\nStack trace:\n#0 /tmp/tmpmqx1frna.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpmqx1frna.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n\t$sum = 0;\n\t$result = pow($base, $power);\n\t$result = (string)$result;\n\tfor ($i=0; $i < strlen($result); $i++) { \n\t\t$sum += $result[$i];\n\t}\n\treturn $sum;\n}\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpy83lsd3l.php:8\nStack trace:\n#0 /tmp/tmpy83lsd3l.php(12): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpy83lsd3l.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpyhiwibpo.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhiwibpo.php:19\nStack trace:\n#0 /tmp/tmpyhiwibpo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyhiwibpo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "7\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmpkywlxf2n.php on line 7\n\nDeprecated: Implicit conversio",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = bcpow($base, $power);\n    $result = str_split($result);\n    $result = array_sum($result);\n    return $result;\n}\n\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught Error: Call to undefined function bcpow() in /tmp/tmpsxpk98w7.php:4\nStack trace:\n#0 /tmp/tmpsxpk98w7.php(10): power_base_sum(2, 10)\n#1 {main}\n  thrown in /tmp/tmpsxpk98w7.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmperr8086s.php on line 10\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmperr8086s.php on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperr8086s.php:22\nStack trace:\n#0 /tmp/tmperr8086s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmperr8086s.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    for ($i = 0; $i < strlen($result); $i++) {\n        $sum += $result[$i];\n    }\n    return $sum;\n}\necho power_base_sum(2, 4);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmpprg82f5y.php on line 7\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpprg82f5y.php on line 7\n0\nWarning: Trying to access array offset on value of type float in /tmp/tmpprg82f5y.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpprg82f5y.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpprg82f5y.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpprg82f5y.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpprg82f5y.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpprg82f5y.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpprg82f5y.php on line 7\n\nWarning: Trying to access array offset on value of type float in /tmp/tmpprg82f5y.php on line 7\n\nWarning: Trying to access array offset on value of type ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp3ii4g482.php on line 10\n\nDeprecated: Imp",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmp7c454v3c.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\necho power_base_sum(2, 100);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+29 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+28 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282294E+27 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+26 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282295E+25 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282296E+24 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion from float 1.2676506002282297E+23 to int loses precision in /tmp/tmp2pxdnnvb.php on line 7\n\nDeprecated: Implicit conversion",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $result = str_split($result);\n    $sum = 0;\n    foreach ($result as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n}\necho power_base_sum(2, 10);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "7\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpur84ftyb.php:11\nStack trace:\n#0 /tmp/tmpur84ftyb.php(17): power_base_sum(2, 100)\n#1 /tmp/tmpur84ftyb.php(21): candidate(2, 100)\n#2 /tmp/tmpur84ftyb.php(27): test()\n#3 {main}\n  thrown in /tmp/tmpur84ftyb.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n  $sum = 0;\n  $result = pow($base, $power);\n  $result = (string)$result;\n  for($i = 0; $i < strlen($result); $i++) {\n    $sum += $result[$i];\n  }\n  return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: int + string in /tmp/tmpv2a9afjm.php:8\nStack trace:\n#0 /tmp/tmpv2a9afjm.php(13): power_base_sum(2, 1000)\n#1 {main}\n  thrown in /tmp/tmpv2a9afjm.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = pow($base, $power);\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = floor($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517192,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+300 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+299 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862673E+298 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+297 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862674E+296 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862675E+295 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit conversion from float 1.0715086071862676E+294 to int loses precision in /tmp/tmpltxv1yzh.php on line 7\n\nDeprecated: Implicit co",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\nfunction power_base_sum($base, $power) {\n    $result = 1;\n    for ($i = 0; $i < $power; $i++) {\n        $result *= $base;\n    }\n    $sum = 0;\n    while ($result > 0) {\n        $sum += $result % 10;\n        $result = intval($result / 10);\n    }\n    return $sum;\n}\n\necho power_base_sum(2, 1000);\nfunction candidate(...$args) {\n    return power_base_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 100) !== 115) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 10) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 15) !== 62) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 3) !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124162,
      "stdout": "\nDeprecated: Implicit conversion from float 1.0715086071862673E+301 to int loses precision in /tmp/tmp4rvj0e77.php on line 10\n0\nDeprecated: Implicit conversion from float 1.2676506002282294E+30 to int loses precision in /tmp/tmp4rvj0e77.php on line 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rvj0e77.php:22\nStack trace:\n#0 /tmp/tmp4rvj0e77.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4rvj0e77.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_754_extract_index_list",
  "language": "php",
  "prompt": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_754_extract_index_list.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [1, 2, 3, 4, 5, 6];\n$l3 = [1, 2, 3, 4, 5, 6];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $result[] = $index;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa03puu3j.php:18\nStack trace:\n#0 /tmp/tmpa03puu3j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa03puu3j.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6, 7);\n$l2 = array(1, 2, 3, 4, 5, 6, 7);\n$l3 = array(1, 2, 3, 4, 5, 6, 7);\n\n$result = extract_index_list($l1, $l2, $l3);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(1, 2, 3, 4, 5);\n$l3 = array(1, 2, 3, 4, 5);\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    $length = count($l1);\n    for ($i = 0; $i < $length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu43j2auv.php:19\nStack trace:\n#0 /tmp/tmpu43j2auv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpu43j2auv.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $length = count($l1);\n    for ($i = 0; $i < $length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $result[] = $index;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqcn00xo.php:18\nStack trace:\n#0 /tmp/tmpoqcn00xo.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpoqcn00xo.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $min_length = min(count($l1), count($l2), count($l3));\n    for ($i = 0; $i < $min_length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $len = min(count($l1), count($l2), count($l3));\n    for ($i = 0; $i < $len; $i++) {\n        if ($l1[$i] === $l2[$i] && $l2[$i] === $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [1, 2, 3, 4, 5, 6];\n$l3 = [1, 2, 3, 4, 5, 6];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "array(6) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n  [5]=>\n  int(6)\n}\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\necho implode(', ', extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "1, 2, 3, 4, 5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $result[] = $index;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa03puu3j.php:18\nStack trace:\n#0 /tmp/tmpa03puu3j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa03puu3j.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n\t$result = [];\n\tfor ($i = 0; $i < count($l1); $i++) {\n\t\tif ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n\t\t\t$result[] = $l1[$i];\n\t\t}\n\t}\n\treturn $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(1, 2, 3, 4, 5);\n$l3 = array(1, 2, 3, 4, 5);\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $common_indexes = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $common_indexes[] = $i;\n        }\n    }\n    return $common_indexes;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2nbzkve.php:18\nStack trace:\n#0 /tmp/tmpg2nbzkve.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpg2nbzkve.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l1[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7];\n$l2 = [1, 2, 3, 4, 5, 6, 7];\n$l3 = [1, 2, 3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $result[] = $index;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa03puu3j.php:18\nStack trace:\n#0 /tmp/tmpa03puu3j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa03puu3j.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1,\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9bjk2qpm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $length = min(count($l1), count($l2), count($l3));\n    for ($i = 0; $i < $length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [1, 2, 3, 4, 5, 6];\n$l3 = [1, 2, 3, 4, 5, 6];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l1[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "array(5) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n}\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $length = min(count($l1), count($l2), count($l3));\n    for ($i = 0; $i < $length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [1, 2, 3, 4, 5, 6];\n$l3 = [1, 2, 3, 4, 5, 6];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(2, 3, 4, 5, 6);\n$l3 = array(3, 4, 5, 6, 7);\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "array(5) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n}\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $l1_length = count($l1);\n    $l2_length = count($l2);\n    $l3_length = count($l3);\n    $min_length = min($l1_length, $l2_length, $l3_length);\n    for ($i = 0; $i < $min_length; $i++) {\n        if ($l1[$i] === $l2[$i] && $l2[$i] === $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [1, 2, 3, 4, 5, 6];\n$l3 = [1, 2, 3, 4, 5, 6];\n$l4 = [1, 2, 3, 4, 5, 6];\n$l5 = [1, 2, 3, 4, 5, 6];\n$l6 = [1, 2, 3, 4, 5, 6];\n$l7 = [1, 2, 3, 4, 5, 6];\n$l8 = [1, 2, 3, 4, 5, 6];\n$l9 = [1, 2, 3, 4, 5, 6];\n$l10 = [1, 2, 3, 4, 5, 6];\n$l11 = [1, 2, 3, 4, 5, 6];\n$l12 = [1, 2, 3, 4, 5, 6];\n$l13 = [1, 2, 3, 4, 5, 6];\n$l14 = [1, 2, 3, 4, 5, 6];\n$l15 = [1, 2, 3, 4, 5, 6];\n$l16 = [1, 2, 3, 4, 5, 6];\n$l17 = [1, 2, 3, 4, 5, 6];\n$l18 = [1, 2, 3, 4, 5, 6];\n$l19 = [1, 2, 3, 4, 5, 6];\n$l20 = [1, 2, 3, 4, 5,\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpcpm1h2r8.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l1[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1,\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9bjk2qpm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l1[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zfrd3t8.php:18\nStack trace:\n#0 /tmp/tmp_zfrd3t8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_zfrd3t8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [1, 2, 3, 4, 5, 6];\n$l3 = [1, 2, 3, 4, 5, 6];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $l1_length = count($l1);\n    $l2_length = count($l2);\n    $l3_length = count($l3);\n    $min_length = min($l1_length, $l2_length, $l3_length);\n    for ($i = 0; $i < $min_length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            array_push($result, $l1[$i]);\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\n$result = extract_index_list($l1, $l2, $l3);\n\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "1, 2, 3, 4, 5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            array_push($result, $l1[$i]);\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(1, 2, 3, 4, 5);\n$l3 = array(1, 2, 3, 4, 5);\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [2, 3, 4, 5, 6, 7];\n$l3 = [3, 4, 5, 6, 7, 8];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1,\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp9bjk2qpm.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $result[] = $index;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa03puu3j.php:18\nStack trace:\n#0 /tmp/tmpa03puu3j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa03puu3j.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $l = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            array_push($l, $i);\n        }\n    }\n    return $l;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu7_z3dss.php:18\nStack trace:\n#0 /tmp/tmpu7_z3dss.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpu7_z3dss.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $len = count($l1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [2, 3, 4, 5, 6, 7];\n$l3 = [3, 4, 5, 6, 7, 8];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "array(0) {\n}\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n$l3 = [3, 4, 5, 6, 7, 8, 9, 10, 11];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l1[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [1, 2, 3, 4, 5, 6];\n$l3 = [1, 2, 3, 4, 5, 6];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $indexes = [];\n    $length = count($l1);\n    for ($i = 0; $i < $length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $indexes[] = $i;\n        }\n    }\n    return $indexes;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpln1yz14n.php:19\nStack trace:\n#0 /tmp/tmpln1yz14n.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpln1yz14n.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $len1 = count($l1);\n    $len2 = count($l2);\n    $len3 = count($l3);\n    $len = min($len1, $len2, $len3);\n    for ($i = 0; $i < $len; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l3 = array_values($l3);\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] === $l2[$i] && $l2[$i] === $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1,\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjmqm8_7y.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7];\n$l2 = [1, 2, 3, 4, 5, 6, 7];\n$l3 = [1, 2, 3, 4, 5, 6, 7];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "array(5) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n}\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    $l1_count = count($l1);\n    $l2_count = count($l2);\n    $l3_count = count($l3);\n    $max_count = max($l1_count, $l2_count, $l3_count);\n    for ($i = 0; $i < $max_count; $i++) {\n        if ($i < $l1_count && $i < $l2_count && $i < $l3_count) {\n            if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n                $index_list[] = $i;\n            }\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjmvyurrp.php:24\nStack trace:\n#0 /tmp/tmpjmvyurrp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjmvyurrp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $len = count($l1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3];\n$l2 = [2, 3, 4];\n$l3 = [3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $index_list[] = $index;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn92_mjok.php:18\nStack trace:\n#0 /tmp/tmpn92_mjok.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpn92_mjok.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $l1_length = count($l1);\n    $l2_length = count($l2);\n    $l3_length = count($l3);\n    $max_length = max($l1_length, $l2_length, $l3_length);\n    $result = [];\n    for ($i = 0; $i < $max_length; $i++) {\n        if (isset($l1[$i]) && isset($l2[$i]) && isset($l3[$i]) && $l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $result[] = $index;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa03puu3j.php:18\nStack trace:\n#0 /tmp/tmpa03puu3j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa03puu3j.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $count = count($l1);\n    for ($i = 0; $i < $count; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [1, 2, 3, 4, 5, 6];\n$l3 = [1, 2, 3, 4, 5, 6];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "array(5) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n}\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $result[] = $index;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa03puu3j.php:18\nStack trace:\n#0 /tmp/tmpa03puu3j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa03puu3j.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $l1_length = count($l1);\n    $l2_length = count($l2);\n    $l3_length = count($l3);\n    $index_list = array();\n    for ($i = 0; $i < $l1_length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            array_push($index_list, $i);\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxqmg68o.php:21\nStack trace:\n#0 /tmp/tmpmxqmg68o.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmxqmg68o.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [2, 3, 4, 5, 6, 7];\n$l3 = [3, 4, 5, 6, 7, 8];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index]) && $l2[$index] == $value && $l3[$index] == $value) {\n            $index_list[] = $index;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7zlolrl.php:18\nStack trace:\n#0 /tmp/tmpc7zlolrl.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpc7zlolrl.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $l1_count = count($l1);\n    $l2_count = count($l2);\n    $l3_count = count($l3);\n    $max_count = max($l1_count, $l2_count, $l3_count);\n    for ($i = 0; $i < $max_count; $i++) {\n        if (isset($l1[$i]) && isset($l2[$i]) && isset($l3[$i])) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkc67tb3p.php:27\nStack trace:\n#0 /tmp/tmpkc67tb3p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkc67tb3p.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $l1_keys = array_keys($l1);\n    $l2_keys = array_keys($l2);\n    $l3_keys = array_keys($l3);\n    $common_keys = array_intersect($l1_keys, $l2_keys, $l3_keys);\n    return $common_keys;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9bd_0tt5.php:16\nStack trace:\n#0 /tmp/tmp9bd_0tt5.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9bd_0tt5.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l1[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(1, 2, 3, 4, 5);\n$l3 = array(1, 2, 3, 4, 5);\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(1, 2, 3, 4, 5);\n$l3 = array(1, 2, 3, 4, 5);\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $result[] = $index;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa03puu3j.php:18\nStack trace:\n#0 /tmp/tmpa03puu3j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa03puu3j.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    $length = count($l1);\n    for ($i = 0; $i < $length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu43j2auv.php:19\nStack trace:\n#0 /tmp/tmpu43j2auv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpu43j2auv.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "array(9) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n  [5]=>\n  int(6)\n  [6]=>\n  int(7)\n  [7]=>\n  int(8)\n  [8]=>\n  int(9)\n}\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(2, 3, 4, 5, 6);\n$l3 = array(3, 4, 5, 6, 7);\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [2, 4, 6, 8, 10, 12, 14, 16, 18];\n$l3 = [3, 6, 9, 12, 15, 18, 21, 24, 27];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $l = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $l[] = $l1[$i];\n        }\n    }\n    return $l;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [2, 3, 4, 5, 6, 7];\n$l3 = [3, 4, 5, 6, 7, 8];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l1[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $length = count($l1);\n    for ($i = 0; $i < $length; $i++) {\n        if ($l1[$i] === $l2[$i] && $l2[$i] === $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7];\n$l2 = [1, 2, 3, 4, 5, 6, 7];\n$l3 = [1, 2, 3, 4, 5, 6, 7];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\n$l1 = [1, 2, 3, 4, 5, 6, 7];\n$l2 = [1, 2, 3, 4, 5, 6, 7];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\n$l1 = [1, 2, 3, 4, 5, 6, 7];\n$l2 = [1, 2, 3, 4, 5, 6, 7];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\n$l1 = [1, 2, 3, 4, 5, 6, 7];\n$l2 = [1, 2, 3, 4, 5, 6, 7];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\n$l1 = [1, 2, 3, 4, 5, 6, 7];\n$l2 = [1, 2, 3, 4, 5, 6, 7];\n$l\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpaf_xx5nx.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l1[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zfrd3t8.php:18\nStack trace:\n#0 /tmp/tmp_zfrd3t8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_zfrd3t8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\necho implode(', ', extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "1, 2, 3, 4, 5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] === $l2[$i] && $l2[$i] === $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    $l1_length = count($l1);\n    $l2_length = count($l2);\n    $l3_length = count($l3);\n    $max_length = max($l1_length, $l2_length, $l3_length);\n    for ($i = 0; $i < $max_length; $i++) {\n        if (isset($l1[$i]) && isset($l2[$i]) && isset($l3[$i])) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(1, 2, 3, 4, 5);\n$l3 = array(1, 2, 3, 4, 5);\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(1, 2, 3, 4, 5);\n$l3 = array(1, 2, 3, 4, 5, 6);\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(1, 2, 3, 4, 5, 6);\n$l3 = array(1, 2, 3, 4, 5, 6);\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\n$l1 = array(1, 2, 3, 4, 5, 6);\n$l2 = array(1, 2, 3, 4, 5, 6);\n$l3 = array(1, 2, 3, 4, 5, 6);\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2okp4fc0.php:49\nStack trace:\n#0 /tmp/tmp2okp4fc0.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp2okp4fc0.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $len = count($l1);\n    for ($i = 0; $i < $len; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $result[] = $index;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa03puu3j.php:18\nStack trace:\n#0 /tmp/tmpa03puu3j.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpa03puu3j.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5, 6];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5, 6, 7];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpi22i_9bq.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7];\n$l2 = [1, 2, 3, 4, 5, 6, 7];\n$l3 = [1, 2, 3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\necho \"<pre>\";\nprint_r(extract_index_list($l1, $l2, $l3));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "<pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n\t$result = [];\n\t$size = count($l1);\n\tfor ($i = 0; $i < $size; $i++) {\n\t\tif ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n\t\t\t$result[] = $l1[$i];\n\t\t}\n\t}\n\treturn $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(1, 2, 3, 4, 5);\n$l3 = array(1, 2, 3, 4, 5);\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l1[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    foreach ($l1 as $index => $value) {\n        if ($value == $l2[$index] && $value == $l3[$index]) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(1, 2, 3, 4, 5);\n$l3 = array(1, 2, 3, 4, 5);\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "array(5) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n}\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphwu1gf7m.php:18\nStack trace:\n#0 /tmp/tmphwu1gf7m.php(24): test()\n#1 {main}\n  thrown in /tmp/tmphwu1gf7m.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $size = count($l1);\n    for ($i = 0; $i < $size; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\n$l2 = [1, 2, 3, 4, 5, 6];\n$l3 = [1, 2, 3, 4, 5, 6];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7];\n$l2 = [1, 2, 3, 4, 5, 6, 7];\n$l3 = [1, 2, 3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l1[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    $l1_length = count($l1);\n    $l2_length = count($l2);\n    $l3_length = count($l3);\n    $max_length = max($l1_length, $l2_length, $l3_length);\n    for ($i = 0; $i < $max_length; $i++) {\n        if (isset($l1[$i]) && isset($l2[$i]) && isset($l3[$i])) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3cvkxbje.php:22\nStack trace:\n#0 /tmp/tmp3cvkxbje.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3cvkxbje.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(1, 2, 3, 4, 5);\n$l3 = array(1, 2, 3, 4, 5);\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    $length = count($l1);\n    for ($i = 0; $i < $length; $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $l = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $l[] = $l1[$i];\n        }\n    }\n    return $l;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n\t$result = [];\n\t$l1_length = count($l1);\n\t$l2_length = count($l2);\n\t$l3_length = count($l3);\n\tfor ($i = 0; $i < $l1_length; $i++) {\n\t\tif ($i < $l2_length && $i < $l3_length) {\n\t\t\tif ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n\t\t\t\t$result[] = $l1[$i];\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    foreach ($l1 as $index => $value) {\n        if (isset($l2[$index]) && isset($l3[$index])) {\n            $result[] = $index;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqcn00xo.php:18\nStack trace:\n#0 /tmp/tmpoqcn00xo.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpoqcn00xo.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = array(2, 3, 4, 5, 6);\n$l3 = array(3, 4, 5, 6, 7);\n\n$result = extract_index_list($l1, $l2, $l3);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $index_list = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $index_list[] = $i;\n        }\n    }\n    return $index_list;\n}\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqyg8rc7.php:18\nStack trace:\n#0 /tmp/tmplqyg8rc7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplqyg8rc7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [2, 3, 4, 5, 6];\n$l3 = [3, 4, 5, 6, 7];\n\nvar_dump(extract_index_list($l1, $l2, $l3));\n\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123092,
      "stdout": "array(0) {\n}\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// We say that an element is common for arrays l1, l2, l3 if it appears in all three arrays under the same index. Write a function to find common elements from three arrays. The function should return an array.\nfunction extract_index_list($l1, $l2, $l3) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($l1[$i] == $l2[$i] && $l2[$i] == $l3[$i]) {\n            $result[] = $l1[$i];\n        }\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5];\n$l3 = [1, 2, 3, 4, 5];\n\nprint_r(extract_index_list($l1, $l2, $l3));\nfunction candidate(...$args) {\n    return extract_index_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 5, 6, 7), array(0, 1, 2, 3, 4, 6, 5), array(0, 1, 2, 3, 4, 6, 7)) !== array(1, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 3, 4, 6, 5, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array(1, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 6, 6, 6), array(0, 1, 2, 3, 4, 5, 7), array(0, 1, 2, 3, 4, 5, 7)) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510022,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
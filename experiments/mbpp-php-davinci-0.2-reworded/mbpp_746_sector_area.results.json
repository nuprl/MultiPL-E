{
  "name": "mbpp_746_sector_area",
  "language": "php",
  "prompt": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_746_sector_area.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        return ($r * $r * $a) / 2;\n    }\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "4500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8oad551.php:17\nStack trace:\n#0 /tmp/tmph8oad551.php(22): test()\n#1 {main}\n  thrown in /tmp/tmph8oad551.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmpme1oxujq.php on line 75\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(10, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "314.15926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(10, 360);\necho \"\\n\";\necho sector_area(10, 361);\necho \"\\n\";\necho sector_area(10, 45);\necho \"\\n\";\necho sector_area(10, 90);\necho \"\\n\";\necho sector_area(10, 180);\necho \"\\n\";\necho sector_area(10, 270);\necho \"\\n\";\necho sector_area(10, 360);\necho \"\\n\";\necho sector_area(10, 361);\necho \"\\n\";\necho sector_area(10, 45);\necho \"\\n\";\necho sector_area(10, 90);\necho \"\\n\";\necho sector_area(10, 180);\necho \"\\n\";\necho sector_area(10, 270);\necho \"\\n\";\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "314.15926535898\n\n39.269908169872\n78.539816339745\n157.07963267949\n235.61944901923\n314.15926535898\n\n39.269908169872\n78.539816339745\n157.07963267949\n235.61944901923\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 400);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 30);\necho \"<br>\";\necho sector_area(10, 20);\necho \"<br>\";\necho sector_area(10, 10);\necho \"<br>\";\necho sector_area(10, 5);\necho \"<br>\";\necho sector_area(10, 1);\necho \"<br>\";\necho sector_area(10, 0);\necho \"<br>\";\necho sector_area(10, -1);\necho \"<br>\";\necho sector_area(10, -5);\necho \"<br>\";\necho sector_area(10, -10);\necho \"<br>\";\necho sector_area(10, -20);\necho \"<br>\";\necho sector_area(10, -30);\necho \"<br>\";\necho sector_area(10, -90);\necho \"<br>\";\necho sector_area(10, -180);\necho \"<br>\";\necho sector_area(10, -360);\necho \"<br>\";\necho sector_area(10, -400);\necho \"<br>\";\necho sector_area(10, -450);\necho \"<br>\";\necho sector_area(10, -500);\necho \"<br>\";\necho sector_area(10, -1000);\necho \"<br>\";\necho sector_area(10, -10000);\necho \"<br>\";\necho sector_area(10, -100000);\necho \"<br>\";\necho sector_area(10, -1000000);\necho \"<br>\";\necho sector_area(10, -10000000);\necho \"<br>\";\necho sector_area(10, -100000000);\necho \"<br>\";\necho sector_area\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpl5i6lqlc.php on line 67\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    $a = $a * pi() / 180;\n    $area = $a * $r * $r / 2;\n    if ($a > 2 * pi()) {\n        return null;\n    }\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    $area = ($r * $r * $a) / 2;\n    if ($a > 360) {\n        return null;\n    } else {\n        return $area;\n    }\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "4500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw4qdkgvo.php:19\nStack trace:\n#0 /tmp/tmpw4qdkgvo.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpw4qdkgvo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp92ll1794.php on line 70\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "4500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpttuzexev.php:16\nStack trace:\n#0 /tmp/tmpttuzexev.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpttuzexev.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 30);\necho \"\\n\";\necho sector_area(5, 15);\necho \"\\n\";\necho sector_area(5, 7.5);\necho \"\\n\";\necho sector_area(5, 3.75);\necho \"\\n\";\necho sector_area(5, 1.875);\necho \"\\n\";\necho sector_area(5, 0.9375);\necho \"\\n\";\necho sector_area(5, 0.46875);\necho \"\\n\";\necho sector_area(5, 0.234375);\necho \"\\n\";\necho sector_area(5, 0.1171875);\necho \"\\n\";\necho sector_area(5, 0.05859375);\necho \"\\n\";\necho sector_area(5, 0.029296875);\necho \"\\n\";\necho sector_area(5, 0.015625);\necho \"\\n\";\necho sector_area(5, 0.0078125);\necho \"\\n\";\necho sector_area(5, 0.00390625);\necho \"\\n\";\necho sector_area(5, 0.001953125);\necho \"\\n\";\necho sector_area(5, 0.0009765625);\necho \"\\n\";\necho sector_area(5, 0.00048828125);\necho \"\\n\";\necho sector_area(5, 0.000244140625);\necho \"\\n\";\necho sector_area(5, 0.0001220703125);\necho \"\\n\";\necho sector_area(5, 0.00006103515625);\necho \"\\n\";\necho sector_area(5, 0.000030517578125);\necho \"\\n\";\necho sector\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpsv091n3s.php on line 63\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = (1/2) * $r * $r * $a;\n    return $area;\n}\n\necho sector_area(3, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "1620\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1pr0jt_r.php:17\nStack trace:\n#0 /tmp/tmp1pr0jt_r.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1pr0jt_r.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "4500\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplt9859z8.php:20\nStack trace:\n#0 /tmp/tmplt9859z8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplt9859z8.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n\tif ($a > 360) {\n\t\treturn null;\n\t}\n\t$area = ($a / 360) * pi() * $r * $r;\n\treturn $area;\n}\n\necho sector_area(10, 45);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "39.269908169872",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(2, 45);\necho \"<br>\";\necho sector_area(2, 400);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "1.5707963267949<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(10, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "314.15926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a/360)*pi()*$r*$r;\n}\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 361);\necho\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpyhv96a55.php on line 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(10, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "314.15926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(3, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "28.274333882308",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(4, 360);\necho \"<br>\";\necho sector_area(4, 361);\necho \"<br>\";\necho sector_area(4, 180);\necho \"<br>\";\necho sector_area(4, 90);\necho \"<br>\";\necho sector_area(4, 45);\necho \"<br>\";\necho sector_area(4, 30);\necho \"<br>\";\necho sector_area(4, 15);\necho \"<br>\";\necho sector_area(4, 7.5);\necho \"<br>\";\necho sector_area(4, 3.75);\necho \"<br>\";\necho sector_area(4, 1.875);\necho \"<br>\";\necho sector_area(4, 0.9375);\necho \"<br>\";\necho sector_area(4, 0.46875);\necho \"<br>\";\necho sector_area(4, 0.234375);\necho \"<br>\";\necho sector_area(4, 0.1171875);\necho \"<br>\";\necho sector_area(4, 0.05859375);\necho \"<br>\";\necho sector_area(4, 0.029296875);\necho \"<br>\";\necho sector_area(4, 0.0146484375);\necho \"<br>\";\necho sector_area(4, 0.007421875);\necho \"<br>\";\necho sector_area(4, 0.0037109375);\necho \"<br>\";\necho sector_area(4, 0.00185546875);\necho \"<br>\";\necho sector_area(4, 0.000927734375);\necho \"<br>\";\necho sector_area(4, 0.0004638671875);\necho \"<br>\";\necho sector_area(4, 0.00023193359375);\necho \"<br>\";\necho sector_area(4, 0.000115966796875);\necho \"<br>\";\necho sector\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmp2d86d2t3.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmp4du62tum.php on line 75\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp92ll1794.php on line 70\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n\tif ($a > 360) {\n\t\treturn null;\n\t}\n\t$area = ($a / 360) * pi() * $r * $r;\n\treturn $area;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809<br>78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809<br>78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809<br>78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809<br>78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $r * $r * $a / 2;\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "2250\n18000\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctb3d9ra.php:18\nStack trace:\n#0 /tmp/tmpctb3d9ra.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpctb3d9ra.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $r * $r * $a / 360;\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.5\n100\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_fbxqnpx.php:18\nStack trace:\n#0 /tmp/tmp_fbxqnpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_fbxqnpx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        $area = ($a / 360) * pi() * $r * $r;\n        return $area;\n    }\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(3, 360) . \"\\n\";\necho sector_area(3, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "1620\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvwvfqo6.php:18\nStack trace:\n#0 /tmp/tmpfvwvfqo6.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfvwvfqo6.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809<br>78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809<br>78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809<br>78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809<br>78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "39.269908169872\n314.15926535898\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($r * $r * $a) / 360;\n    return $area;\n}\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 400);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 360.1);\necho \"<br>\";\necho sector_area(10, 359.9);\necho \"<br>\";\necho sector_area(10, -1);\necho \"<br>\";\necho sector_area(10, -10);\necho \"<br>\";\necho sector_area(10, -100);\necho \"<br>\";\necho sector_area(10, -360);\necho \"<br>\";\necho sector_area(10, -360.1);\necho \"<br>\";\necho sector_area(10, -359.9);\necho \"<br>\";\necho sector_area(10, -361);\necho \"<br>\";\necho sector_area(10, -370);\necho \"<br>\";\necho sector_area(10, -400);\necho \"<br>\";\necho sector_area(10, -1000);\necho \"<br>\";\necho sector_area(10, -10000);\necho \"<br>\";\necho sector_area(10, -100000);\necho \"<br>\";\necho sector_area(10, -1000000);\necho \"<br>\";\necho sector_area(10, -10000000);\necho \"<br>\";\necho sector_area(10, -100000000);\necho \"<br>\";\necho sector_area(10, -1000000000);\necho \"<br>\";\necho sector_area(10, -10000000000);\necho \"<br>\";\necho sector_area(10, -100000000000);\necho \"<br>\";\necho sector_area(10, -1000000000000);\necho \"<br>\";\necho sector_area(10, -10000000000000);\necho \"<br>\";\necho sector_area(10, -100000000000000);\necho \"<br>\";\necho sector_area(10, -\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpdh5vfj25.php on line 63\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(10, 360);\necho \"\\n\";\necho sector_area(10, 361);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "314.15926535898\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($r * $r * $a) / 360;\n    return $area;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpice_oewd.php:18\nStack trace:\n#0 /tmp/tmpice_oewd.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpice_oewd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809<br>78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809<br>78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809<br>78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809<br>78.539816339745<br><br>9.8174770424681<br>19.634954084936<br>39.269908169872<br>58.904862254809",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        $area = ($a / 360) * pi() * pow($r, 2);\n        return $area;\n    }\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        return ($a/360)*(pi()*pow($r, 2));\n    }\n}\necho sector_area(2, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.566370614359",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        $area = ($r * $r * $a) / 360;\n        return $area;\n    }\n}\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgg2dyp8s.php:17\nStack trace:\n#0 /tmp/tmpgg2dyp8s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpgg2dyp8s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $r * $r * $a / 360;\n}\n\necho sector_area(5, 90);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "6.25\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3jd165l.php:17\nStack trace:\n#0 /tmp/tmpy3jd165l.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpy3jd165l.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $r * $r * $a / 360;\n}\n\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 400);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "3.125\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz6xk5nhh.php:20\nStack trace:\n#0 /tmp/tmpz6xk5nhh.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpz6xk5nhh.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        return ($a / 360) * pi() * $r * $r;\n    }\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    $area = 0;\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(4, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "50.265482457437",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($r * $r * $a) / 2;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "4500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_101uup.php:17\nStack trace:\n#0 /tmp/tmp8_101uup.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp8_101uup.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(2, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.566370614359",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(5, 45) . \"\\n\";\necho sector_area(5, 360) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "9.8174770424681\n78.539816339745\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "2250\n18000\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj980tz4q.php:18\nStack trace:\n#0 /tmp/tmpj980tz4q.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpj980tz4q.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        return ($a/360)*pi()*$r*$r;\n    }\n}\n\necho sector_area(2, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.566370614359",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpklswn8mo.php on line 73\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($r * $r * $a) / 2;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "4500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_101uup.php:17\nStack trace:\n#0 /tmp/tmp8_101uup.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp8_101uup.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 30);\necho \"\\n\";\necho sector_area(5, 15);\necho \"\\n\";\necho sector_area(5, 60);\necho \"\\n\";\necho sector_area(5, 120);\necho \"\\n\";\necho sector_area(5, 240);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 300);\necho \"\\n\";\necho sector_area(5, 330);\necho \"\\n\";\necho sector_area(5, 345);\necho \"\\n\";\necho sector_area(5, 359);\necho \"\\n\";\necho sector_area(5, 0);\necho \"\\n\";\necho sector_area(5, 1);\necho \"\\n\";\necho sector_area(5, 2);\necho \"\\n\";\necho sector_area(5, 3);\necho \"\\n\";\necho sector_area(5, 4);\necho \"\\n\";\necho sector_area(5, 5);\necho \"\\n\";\necho sector_area(5, 6);\necho \"\\n\";\necho sector_area(5, 7);\necho \"\\n\";\necho sector_area(5, 8);\necho \"\\n\";\necho sector_area(5, 9);\necho \"\\n\";\necho sector_area(5, 10);\necho \"\\n\";\necho sector_area(5, 11);\necho \"\\n\";\necho sector_area(5, 12);\necho \"\\n\";\necho sector_area(5, 13);\necho \"\\n\";\necho sector_area(5, 14);\necho \"\\n\";\necho sector_area(5, 15);\necho \"\\n\";\necho sector_area(5, 16);\necho\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpsxj6mnuk.php on line 74\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 30);\necho \"<br>\";\necho sector_area(5, 15);\necho \"<br>\";\necho sector_area(5, 7.5);\necho \"<br>\";\necho sector_area(5, 3.75);\necho \"<br>\";\necho sector_area(5, 1.875);\necho \"<br>\";\necho sector_area(5, 0.9375);\necho \"<br>\";\necho sector_area(5, 0.46875);\necho \"<br>\";\necho sector_area(5, 0.234375);\necho \"<br>\";\necho sector_area(5, 0.1171875);\necho \"<br>\";\necho sector_area(5, 0.05859375);\necho \"<br>\";\necho sector_area(5, 0.029296875);\necho \"<br>\";\necho sector_area(5, 0.015625);\necho \"<br>\";\necho sector_area(5, 0.0078125);\necho \"<br>\";\necho sector_area(5, 0.00390625);\necho \"<br>\";\necho sector_area(5, 0.001953125);\necho \"<br>\";\necho sector_area(5, 0.0009765625);\necho \"<br>\";\necho sector_area(5, 0.00048828125);\necho \"<br>\";\necho sector_area(5, 0.000244140625);\necho \"<br>\";\necho sector_area(5, 0.0001220703125);\necho \"<br>\";\necho sector_area(5, 0.00006103515625);\necho \"<br>\";\necho\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpkx83psuw.php on line 61\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r ** 2) * ($a / 360) * pi();\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n\tif ($a > 360) {\n\t\treturn null;\n\t}\n\treturn ($r * $r * $a) / 2;\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "2250\n18000\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4u_sr338.php:19\nStack trace:\n#0 /tmp/tmp4u_sr338.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp4u_sr338.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(2, 360);\necho \"<br>\";\necho sector_area(2, 361);\necho \"<br>\";\necho sector_area(2, 180);\necho \"<br>\";\necho sector_area(2, 90);\necho \"<br>\";\necho sector_area(2, 45);\necho \"<br>\";\necho sector_area(2, 30);\necho \"<br>\";\necho sector_area(2, 15);\necho \"<br>\";\necho sector_area(2, 7.5);\necho \"<br>\";\necho sector_area(2, 3.75);\necho \"<br>\";\necho sector_area(2, 1.875);\necho \"<br>\";\necho sector_area(2, 0.9375);\necho \"<br>\";\necho sector_area(2, 0.46875);\necho \"<br>\";\necho sector_area(2, 0.234375);\necho \"<br>\";\necho sector_area(2, 0.1171875);\necho \"<br>\";\necho sector_area(2, 0.05859375);\necho \"<br>\";\necho sector_area(2, 0.029296875);\necho \"<br>\";\necho sector_area(2, 0.015625);\necho \"<br>\";\necho sector_area(2, 0.0078125);\necho \"<br>\";\necho sector_area(2, 0.00390625);\necho \"<br>\";\necho sector_area(2, 0.001953125);\necho \"<br>\";\necho sector_area(2, 0.0009765625);\necho \"<br>\";\necho sector_area(2, 0.00048828125);\necho \"<br>\";\necho sector_area(2, 0.000244140625);\necho \"<br>\";\necho sector_area(2, 0.0001220703125);\necho \"<br>\";\necho sector_area(2, 0.000061035\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpscjy6yim.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        return (1/2) * $r * $r * $a;\n    }\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmprqnpsfua.php on line 70\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(10, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "314.15926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(2, 360) . \"\\n\";\necho sector_area(2, 180) . \"\\n\";\necho sector_area(2, 270) . \"\\n\";\necho sector_area(2, 720) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.566370614359\n6.2831853071796\n9.4247779607694\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * (pi() * pow($r, 2));\n}\n\necho sector_area(2, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.566370614359",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        $area = ($a / 360) * pi() * pow($r, 2);\n        return $area;\n    }\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3c5csqd.php:17\nStack trace:\n#0 /tmp/tmpo3c5csqd.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpo3c5csqd.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.5\n100\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg45bt_7m.php:19\nStack trace:\n#0 /tmp/tmpg45bt_7m.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpg45bt_7m.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.5<br>100<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5twmmxj.php:22\nStack trace:\n#0 /tmp/tmpe5twmmxj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe5twmmxj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = (1 / 2) * $r * $r * $a;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "4500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpet9d_tmc.php:17\nStack trace:\n#0 /tmp/tmpet9d_tmc.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpet9d_tmc.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $r * $r * $a / 360;\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.5\n100\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_fbxqnpx.php:18\nStack trace:\n#0 /tmp/tmp_fbxqnpx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_fbxqnpx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\n$r = 10;\n$a = 360;\necho sector_area($r, $a);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "314.15926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2bey4p4.php:20\nStack trace:\n#0 /tmp/tmpi2bey4p4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpi2bey4p4.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        $area = ($a / 360) * pi() * ($r ** 2);\n        return $area;\n    }\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpz2baw0rv.php on line 74\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmcrfldyc.php:15\nStack trace:\n#0 /tmp/tmpmcrfldyc.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpmcrfldyc.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $r * $r * $a / 2;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmp239bqs0m.php on line 79\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 30);\necho \"\\n\";\necho sector_area(5, 60);\necho \"\\n\";\necho sector_area(5, 120);\necho \"\\n\";\necho sector_area(5, 150);\necho \"\\n\";\necho sector_area(5, 240);\necho \"\\n\";\necho sector_area(5, 300);\necho \"\\n\";\necho sector_area(5, 315);\necho \"\\n\";\necho sector_area(5, 330);\necho \"\\n\";\necho sector_area(5, 345);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 30);\necho \"\\n\";\necho sector_area(5, 60);\necho \"\\n\";\necho sector_area(5, 120);\necho \"\\n\";\necho sector_area(5, 150);\necho \"\\n\";\necho sector_area(5, 240);\necho \"\\n\";\necho sector_area(5, 300);\necho \"\\n\";\necho sector_area(5, 315);\necho \"\\n\";\necho sector_area(5, 330);\necho \"\\n\";\necho sector_area(5, 345);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745\n\n19.634954084936\n39.269908169872\n58.904862254809\n9.8174770424681\n6.5449846949787\n13.089969389957\n26.179938779915\n32.724923474894\n52.35987755983\n65.449846949787\n68.722339297277\n71.994831644766\n75.267323992255\n78.539816339745\n\n19.634954084936\n39.269908169872\n58.904862254809\n9.8174770424681\n6.5449846949787\n13.089969389957\n26.179938779915\n32.724923474894\n52.35987755983\n65.449846949787\n68.722339297277\n71.994831644766\n75.267323992255\n78.539816339745\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpklswn8mo.php on line 73\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(5, 360) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lf4fgwd.php:18\nStack trace:\n#0 /tmp/tmp_lf4fgwd.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_lf4fgwd.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(3, 360);\necho \"<br>\";\necho sector_area(3, 361);\necho \"<br>\";\necho sector_area(3, 180);\necho \"<br>\";\necho sector_area(3, 90);\necho \"<br>\";\necho sector_area(3, 45);\necho \"<br>\";\necho sector_area(3, 30);\necho \"<br>\";\necho sector_area(3, 15);\necho \"<br>\";\necho sector_area(3, 7.5);\necho \"<br>\";\necho sector_area(3, 3.75);\necho \"<br>\";\necho sector_area(3, 1.875);\necho \"<br>\";\necho sector_area(3, 0.9375);\necho \"<br>\";\necho sector_area(3, 0.46875);\necho \"<br>\";\necho sector_area(3, 0.234375);\necho \"<br>\";\necho sector_area(3, 0.1171875);\necho \"<br>\";\necho sector_area(3, 0.05859375);\necho \"<br>\";\necho sector_area(3, 0.029296875);\necho \"<br>\";\necho sector_area(3, 0.015625);\necho \"<br>\";\necho sector_area(3, 0.0078125);\necho \"<br>\";\necho sector_area(3, 0.00390625);\necho \"<br>\";\necho sector_area(3, 0.001953125);\necho \"<br>\";\necho sector_area(3, 0.0009765625);\necho \"<br>\";\necho sector_area(3, 0.00048828125);\necho \"<br>\";\necho sector_area(3, 0.000244140625);\necho \"<br>\";\necho sector_area(3, 0.0001220703125);\necho \"<br>\";\necho sector_area(3, 0.00006103515625);\necho \"<br>\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmp2b372wgh.php on line 65\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = (1/2) * $r * $r * $a;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "4500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzm0g89m6.php:17\nStack trace:\n#0 /tmp/tmpzm0g89m6.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpzm0g89m6.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(10, 45);\necho \"\\n\";\necho sector_area(10, 400);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "39.269908169872\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(10, 45);\necho \"\\n\";\necho sector_area(10, 400);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "39.269908169872\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $r * $r * $a / 360;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1jsyd2z2.php:17\nStack trace:\n#0 /tmp/tmp1jsyd2z2.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1jsyd2z2.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    $area = ($a / 360) * (pi() * $r * $r);\n    if ($a > 360) {\n        return null;\n    } else {\n        return $area;\n    }\n}\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 60);\necho \"<br>\";\necho sector_area(5, 30);\necho \"<br>\";\necho sector_area(5, 15);\necho \"<br>\";\necho sector_area(5, 7.5);\necho \"<br>\";\necho sector_area(5, 3.75);\necho \"<br>\";\necho sector_area(5, 1.875);\necho \"<br>\";\necho sector_area(5, 0.9375);\necho \"<br>\";\necho sector_area(5, 0.46875);\necho \"<br>\";\necho sector_area(5, 0.234375);\necho \"<br>\";\necho sector_area(5, 0.1171875);\necho \"<br>\";\necho sector_area(5, 0.05859375);\necho \"<br>\";\necho sector_area(5, 0.029296875);\necho \"<br>\";\necho sector_area(5, 0.0146484375);\necho \"<br>\";\necho sector_area(5, 0.007421875);\necho \"<br>\";\necho sector_area(5, 0.0037109375);\necho \"<br>\";\necho sector_area(5, 0.00185546875);\necho \"<br>\";\necho sector_area(5, 0.000927734375);\necho \"<br>\";\necho sector_area(5, 0.0004638671875);\necho \"<br>\";\necho sector_area(5, 0.00023\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmprqptrx2i.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "2250\n18000\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj980tz4q.php:18\nStack trace:\n#0 /tmp/tmpj980tz4q.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpj980tz4q.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    $area = ($a / 360) * pi() * $r * $r;\n    if ($a > 360) {\n        return null;\n    } else {\n        return $area;\n    }\n}\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(4, 60);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "8.3775804095728",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "4500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_iy0jr4s.php:17\nStack trace:\n#0 /tmp/tmp_iy0jr4s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_iy0jr4s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        return ($r * $r * $a) / 2;\n    }\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "2250\n18000\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ojdzgiu.php:20\nStack trace:\n#0 /tmp/tmp2ojdzgiu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2ojdzgiu.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a/360)*pi()*$r*$r;\n}\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a/360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        return ($a/360)*pi()*$r*$r;\n    }\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(3, 360) . \"\\n\";\necho sector_area(3, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "28.274333882308\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(5, 360) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "4500\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1cmeo3f3.php:18\nStack trace:\n#0 /tmp/tmp1cmeo3f3.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp1cmeo3f3.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "4500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpttuzexev.php:16\nStack trace:\n#0 /tmp/tmpttuzexev.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpttuzexev.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(2, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.566370614359",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(3, 360) . \"\\n\";\necho sector_area(3, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "1620\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvwvfqo6.php:18\nStack trace:\n#0 /tmp/tmpfvwvfqo6.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfvwvfqo6.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "4500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_iy0jr4s.php:17\nStack trace:\n#0 /tmp/tmp_iy0jr4s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_iy0jr4s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        return ($a / 360) * pi() * $r * $r;\n    }\n}\necho sector_area(5, 360) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        $area = ($a / 360) * pi() * pow($r, 2);\n        return $area;\n    }\n}\n\necho sector_area(3, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "28.274333882308",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(4, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "50.265482457437",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 30);\necho \"<br>\";\necho sector_area(5, 15);\necho \"<br>\";\necho sector_area(5, 10);\necho \"<br>\";\necho sector_area(5, 5);\necho \"<br>\";\necho sector_area(5, 1);\necho \"<br>\";\necho sector_area(5, 0.5);\necho \"<br>\";\necho sector_area(5, 0.1);\necho \"<br>\";\necho sector_area(5, 0.05);\necho \"<br>\";\necho sector_area(5, 0.01);\necho \"<br>\";\necho sector_area(5, 0.005);\necho \"<br>\";\necho sector_area(5, 0.001);\necho \"<br>\";\necho sector_area(5, 0.0005);\necho \"<br>\";\necho sector_area(5, 0.0001);\necho \"<br>\";\necho sector_area(5, 0.00005);\necho \"<br>\";\necho sector_area(5, 0.00001);\necho \"<br>\";\necho sector_area(5, 0.000005);\necho \"<br>\";\necho sector_area(5, 0.000001);\necho \"<br>\";\necho sector_area(5, 0.0000005);\necho \"<br>\";\necho sector_area(5, 0.0000001);\necho \"<br>\";\necho sector_area(5, 0.00000005);\necho \"<br>\";\necho sector_area(5, 0.00000001);\necho \"<br>\";\necho sector_area(5, 0.000000005);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25<br><br>12.5<br>6.25<br>3.125<br>2.0833333333333<br>1.0416666666667<br>0.69444444444444<br>0.34722222222222<br>0.069444444444444<br>0.034722222222222<br>0.0069444444444444<br>0.0034722222222222<br>0.00069444444444444<br>0.00034722222222222<br>6.9444444444444E-5<br>3.4722222222222E-5<br>6.9444444444444E-6<br>3.4722222222222E-6<br>6.9444444444444E-7<br>3.4722222222222E-7<br>6.9444444444444E-8<br>3.4722222222222E-8<br>6.9444444444444E-9<br>3.4722222222222E-9<br>6.9444444444444E-10<br>3.4722222222222E-10<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbscc11bz.php:70\nStack trace:\n#0 /tmp/tmpbscc11bz.php(75): test()\n#1 {main}\n  thrown in /tmp/tmpbscc11bz.php on line 70\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($r ** 2) * ($a / 360) * pi();\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $r * $r * $a / 360;\n}\n\necho sector_area(10, 45);\necho \"\\n\";\necho sector_area(10, 400);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.5\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7kuzm4pw.php:20\nStack trace:\n#0 /tmp/tmp7kuzm4pw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7kuzm4pw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(4, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "50.265482457437",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(10, 45);\necho \"\\n\";\necho sector_area(10, 400);\necho \"\\n\";\necho sector_area(10, 360);\necho \"\\n\";\necho sector_area(10, 180);\necho \"\\n\";\necho sector_area(10, 90);\necho \"\\n\";\necho sector_area(10, 30);\necho \"\\n\";\necho sector_area(10, 15);\necho \"\\n\";\necho sector_area(10, 7.5);\necho \"\\n\";\necho sector_area(10, 3.75);\necho \"\\n\";\necho sector_area(10, 1.875);\necho \"\\n\";\necho sector_area(10, 0.9375);\necho \"\\n\";\necho sector_area(10, 0.46875);\necho \"\\n\";\necho sector_area(10, 0.234375);\necho \"\\n\";\necho sector_area(10, 0.1171875);\necho \"\\n\";\necho sector_area(10, 0.05859375);\necho \"\\n\";\necho sector_area(10, 0.029296875);\necho \"\\n\";\necho sector_area(10, 0.0146484375);\necho \"\\n\";\necho sector_area(10, 0.007421875);\necho \"\\n\";\necho sector_area(10, 0.0037109375);\necho \"\\n\";\necho sector_area(10, 0.00185546875);\necho \"\\n\";\necho sector_area(10, 0.000927734375);\necho \"\\n\";\necho sector_area(10, 0.0004638671875);\necho \"\\n\";\necho sector_area(10, 0.00023193359375);\necho \"\\n\";\necho sector_area(10, 0.000115966796875);\necho \"\\n\";\necho sector_area(10, 5.79830169677734375e-05);\necho \"\\n\";\necho sector_area(10, 2.899\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmphy_hys9p.php on line 61\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $r * $r * $a / 2;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "4500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl43e5ssu.php:17\nStack trace:\n#0 /tmp/tmpl43e5ssu.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl43e5ssu.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(2, 360);\necho \"<br>\";\necho sector_area(2, 361);\necho \"<br>\";\necho sector_area(2, 45);\necho \"<br>\";\necho sector_area(2, 90);\necho \"<br>\";\necho sector_area(2, 180);\necho \"<br>\";\necho sector_area(2, 270);\necho \"<br>\";\necho sector_area(2, 360);\necho \"<br>\";\necho sector_area(2, 361);\necho \"<br>\";\necho sector_area(2, 45);\necho \"<br>\";\necho sector_area(2, 90);\necho \"<br>\";\necho sector_area(2, 180);\necho \"<br>\";\necho sector_area(2, 270);\necho \"<br>\";\necho sector_area(2, 360);\necho \"<br>\";\necho sector_area(2, 361);\necho \"<br>\";\necho sector_area(2, 45);\necho \"<br>\";\necho sector_area(2, 90);\necho \"<br>\";\necho sector_area(2, 180);\necho \"<br>\";\necho sector_area(2, 270);\necho \"<br>\";\necho sector_area(2, 360);\necho \"<br>\";\necho sector_area(2, 361);\necho \"<br>\";\necho sector_area(2, 45);\necho \"<br>\";\necho sector_area(2, 90);\necho \"<br>\";\necho sector_area(2, 180);\necho \"<br>\";\necho sector_area(2, 270);\necho \"<br>\";\necho sector_area(2, 360);\necho \"<br>\";\necho sector_area(2, 361);\necho \"<br>\";\necho sector_area(2, 45);\necho \"<br>\";\necho sector_area(2, 90);\necho \"<br>\";\necho sector_area(2, 180);\necho \"<br>\";\necho\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0hx8kttp.php on line 70\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    else {\n        $area = ($a / 360) * pi() * $r * $r;\n        return $area;\n    }\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a * $r * $r) / 2;\n    return $area;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "4500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzsp54hw.php:18\nStack trace:\n#0 /tmp/tmpgzsp54hw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpgzsp54hw.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(10, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "314.15926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(5, 360) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 45) . \"\\n\";\necho sector_area(5, 90) . \"\\n\";\necho sector_area(5, 180) . \"\\n\";\necho sector_area(5, 270) . \"\\n\";\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25\n\n3.125\n6.25\n12.5\n18.75\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppra3xcti.php:21\nStack trace:\n#0 /tmp/tmppra3xcti.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppra3xcti.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(2, 90);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "3.1415926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(10, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "314.15926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(3, 360);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 720);\necho \"\\n\";\necho sector_area(5, 721);\necho \"\\n\";\necho sector_area(5, -1);\necho \"\\n\";\necho sector_area(5, -360);\necho \"\\n\";\necho sector_area(5, -361);\necho \"\\n\";\necho sector_area(5, -720);\necho \"\\n\";\necho sector_area(5, -721);\necho \"\\n\";\necho sector_area(5, 0);\necho \"\\n\";\necho sector_area(5, 1);\necho \"\\n\";\necho sector_area(5, 359);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 719);\necho \"\\n\";\necho sector_area(5, 720);\necho \"\\n\";\necho sector_area(5, 721);\necho \"\\n\";\necho sector_area(5, -1);\necho \"\\n\";\necho sector_area(5, -359);\necho \"\\n\";\necho sector_area(5, -360);\necho \"\\n\";\necho sector_area(5, -361);\necho \"\\n\";\necho sector_area(5, -719);\necho \"\\n\";\necho sector_area(5, -720);\necho \"\\n\";\necho sector_area(5, -721);\necho \"\\n\";\necho sector_area(5, 0);\necho \"\\n\";\necho sector_area(5, 1);\necho \"\\n\";\necho sector_area(5, 359);\necho \"\\\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmppofekgbf.php on line 76\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $r * $r * $a / 360;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71fhptd7.php:16\nStack trace:\n#0 /tmp/tmp71fhptd7.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp71fhptd7.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(2, 360) . \"\\n\";\necho sector_area(2, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.566370614359\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "2250\n18000\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp48y6_hxe.php:19\nStack trace:\n#0 /tmp/tmp48y6_hxe.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp48y6_hxe.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "39.269908169872\n314.15926535898\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(10, 45);\necho \"\\n\";\necho sector_area(10, 400);\necho \"\\n\";\necho sector_area(10, 360);\necho \"\\n\";\necho sector_area(10, 180);\necho \"\\n\";\necho sector_area(10, 90);\necho \"\\n\";\necho sector_area(10, 30);\necho \"\\n\";\necho sector_area(10, 15);\necho \"\\n\";\necho sector_area(10, 7.5);\necho \"\\n\";\necho sector_area(10, 3.75);\necho \"\\n\";\necho sector_area(10, 1.875);\necho \"\\n\";\necho sector_area(10, 0.9375);\necho \"\\n\";\necho sector_area(10, 0.46875);\necho \"\\n\";\necho sector_area(10, 0.234375);\necho \"\\n\";\necho sector_area(10, 0.1171875);\necho \"\\n\";\necho sector_area(10, 0.05859375);\necho \"\\n\";\necho sector_area(10, 0.029296875);\necho \"\\n\";\necho sector_area(10, 0.015625);\necho \"\\n\";\necho sector_area(10, 0.0078125);\necho \"\\n\";\necho sector_area(10, 0.00390625);\necho \"\\n\";\necho sector_area(10, 0.001953125);\necho \"\\n\";\necho sector_area(10, 0.0009765625);\necho \"\\n\";\necho sector_area(10, 0.00048828125);\necho \"\\n\";\necho sector_area(10, 0.000244140625);\necho \"\\n\";\necho sector_area(10, 0.0001220703125);\necho \"\\n\";\necho sector_area(10, 0.00006103515625);\necho \"\\n\";\necho sector_area(10, 0.000030517578125);\necho \"\\n\";\necho sector_area(\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmparnnmqbn.php on line 63\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(10, 45);\necho \"\\n\";\necho sector_area(10, 360);\necho \"\\n\";\necho sector_area(10, 361);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.5\n100\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjc2wx3uw.php:22\nStack trace:\n#0 /tmp/tmpjc2wx3uw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjc2wx3uw.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = $a * $r * $r / 360;\n    return $area;\n}\n\necho sector_area(10, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsw7j0zcj.php:17\nStack trace:\n#0 /tmp/tmpsw7j0zcj.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpsw7j0zcj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "39.269908169872<br>314.15926535898<br><br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmpu_4r3hhb.php on line 75\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        $area = ($r * $r * $a) / 360;\n        return $area;\n    }\n}\n\necho sector_area(10, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpix47q354.php:18\nStack trace:\n#0 /tmp/tmpix47q354.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpix47q354.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "4500\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplt9859z8.php:20\nStack trace:\n#0 /tmp/tmplt9859z8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplt9859z8.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n\tif ($a > 360) {\n\t\treturn null;\n\t}\n\treturn $r * $r * $a * M_PI / 360;\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "39.269908169872\n314.15926535898\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 400);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, -1);\necho \"<br>\";\necho sector_area(10, 0);\necho \"<br>\";\necho sector_area(10, 1);\necho \"<br>\";\necho sector_area(10, 359);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, -1);\necho \"<br>\";\necho sector_area(10, -360);\necho \"<br>\";\necho sector_area(10, -361);\necho \"<br>\";\necho sector_area(10, -362);\necho \"<br>\";\necho sector_area(10, -720);\necho \"<br>\";\necho sector_area(10, -721);\necho \"<br>\";\necho sector_area(10, -722);\necho \"<br>\";\necho sector_area(10, -1440);\necho \"<br>\";\necho sector_area(10, -1441);\necho \"<br>\";\necho sector_area(10, -1442);\necho \"<br>\";\necho sector_area(10, -2880);\necho \"<br>\";\necho sector_area(10, -2881);\necho \"<br>\";\necho sector_area(10, -2882);\necho \"<br>\";\necho sector_area(10, -5760);\necho \"<br>\";\necho sector_area(10, -5761);\necho \"<br>\";\necho sector_area(10, -5762);\necho \"<br>\";\necho sector_area(10, -11520);\necho \"<br>\";\necho sector_area(10, -11521);\necho \"<br>\";\necho sector_area(10, -11522);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.5<br><br>100<br>-0.27777777777778<br>0<br>0.27777777777778<br>99.722222222222<br>100<br><br>-0.27777777777778<br>-100<br>-100.27777777778<br>-100.55555555556<br>-200<br>-200.27777777778<br>-200.55555555556<br>-400<br>-400.27777777778<br>-400.55555555556<br>-800<br>-800.27777777778<br>-800.55555555556<br>-1600<br>-1600.2777777778<br>-1600.5555555556<br>-3200<br>-3200.2777777778<br>-3200.5555555556\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjog0h9dx.php:71\nStack trace:\n#0 /tmp/tmpjog0h9dx.php(76): test()\n#1 {main}\n  thrown in /tmp/tmpjog0h9dx.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        $area = ($a / 360) * pi() * pow($r, 2);\n        return $area;\n    }\n}\n\necho sector_area(2, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.566370614359",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(5, 360) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "4500\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1cmeo3f3.php:18\nStack trace:\n#0 /tmp/tmp1cmeo3f3.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp1cmeo3f3.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(10, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "314.15926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpklswn8mo.php on line 73\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(2, 90);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "3.1415926535898",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmpqbqd60cc.php on line 75\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp_owvp2r9.php on line 70\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 30);\necho \"<br>\";\necho sector_area(5, 15);\necho \"<br>\";\necho sector_area(5, 10);\necho \"<br>\";\necho sector_area(5, 5);\necho \"<br>\";\necho sector_area(5, 1);\necho \"<br>\";\necho sector_area(5, 0.1);\necho \"<br>\";\necho sector_area(5, 0.01);\necho \"<br>\";\necho sector_area(5, 0.001);\necho \"<br>\";\necho sector_area(5, 0.0001);\necho \"<br>\";\necho sector_area(5, 0.00001);\necho \"<br>\";\necho sector_area(5, 0.000001);\necho \"<br>\";\necho sector_area(5, 0.0000001);\necho \"<br>\";\necho sector_area(5, 0.00000001);\necho \"<br>\";\necho sector_area(5, 0.000000001);\necho \"<br>\";\necho sector_area(5, 0.0000000001);\necho \"<br>\";\necho sector_area(5, 0.00000000001);\necho \"<br>\";\necho sector_area(5, 0.000000000001);\necho \"<br>\";\necho sector_area(5, 0.0000000000001);\necho \"<br>\";\necho sector_area(5, 0.00000000000001);\necho \"<br>\";\necho sector_area(5, 0.000000000000001);\necho \"<br>\";\necho sector_area(5, 0.0000000000000001);\necho \"<br>\";\necho sector_area(5, 0.\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpetp5sgkx.php on line 63\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\necho sector_area(2, 45);\necho \"<br>\";\necho sector_area(2, 400);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "1.5707963267949<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25\n\n12.5\n6.25\n3.125\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxsu50fcw.php:25\nStack trace:\n#0 /tmp/tmpxsu50fcw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxsu50fcw.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(3, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "28.274333882308",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        return ($r * $r * $a) / 360;\n    }\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmps6xkgjt7.php on line 74\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $r * $r * $a / 360;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmp_oycn3ev.php on line 75\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(2, 180);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "6.2831853071796",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(10, 90);\necho \"\\n\";\necho sector_area(10, 360);\necho \"\\n\";\necho sector_area(10, 361);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745\n314.15926535898\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 400);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 270);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 0);\necho \"<br>\";\necho sector_area(10, -90);\necho \"<br>\";\necho sector_area(10, -180);\necho \"<br>\";\necho sector_area(10, -270);\necho \"<br>\";\necho sector_area(10, -360);\necho \"<br>\";\necho sector_area(10, -400);\necho \"<br>\";\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "39.269908169872<br><br>314.15926535898<br>235.61944901923<br>157.07963267949<br>78.539816339745<br>0<br>-78.539816339745<br>-157.07963267949<br>-235.61944901923<br>-314.15926535898<br>-349.06585039887<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpax8asro1.php:15\nStack trace:\n#0 /tmp/tmpax8asro1.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpax8asro1.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        $area = ($r * $r * $a) / 2;\n        return $area;\n    }\n}\n\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 361);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 30);\necho \"<br>\";\necho sector_area(10, 15);\necho \"<br>\";\necho sector_area(10, 10);\necho \"<br>\";\necho sector_area(10, 5);\necho \"<br>\";\necho sector_area(10, 1);\necho \"<br>\";\necho sector_area(10, 0.1);\necho \"<br>\";\necho sector_area(10, 0.01);\necho \"<br>\";\necho sector_area(10, 0.001);\necho \"<br>\";\necho sector_area(10, 0.0001);\necho \"<br>\";\necho sector_area(10, 0.00001);\necho \"<br>\";\necho sector_area(10, 0.000001);\necho \"<br>\";\necho sector_area(10, 0.0000001);\necho \"<br>\";\necho sector_area(10, 0.00000001);\necho \"<br>\";\necho sector_area(10, 0.000000001);\necho \"<br>\";\necho sector_area(10, 0.0000000001);\necho \"<br>\";\necho sector_area(10, 0.00000000001);\necho \"<br>\";\necho sector_area(10, 0.000000000001);\necho \"<br>\";\necho sector_area(10, 0.0000000000001);\necho \"<br>\";\necho sector_area(10, 0.00000000000001);\necho \"<br>\";\necho sector_area(10, 0.000000000000001);\necho \"<br>\";\necho sector_area(10, 0.0000000000000001);\necho \"<br>\";\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "18000<br><br>9000<br>4500<br>2250<br>1500<br>750<br>500<br>250<br>50<br>5<br>0.5<br>0.05<br>0.005<br>0.0005<br>5.0E-5<br>5.0E-6<br>5.0E-7<br>5.0E-8<br>5.0E-9<br>5.0E-10<br>5.0E-11<br>5.0E-12<br>5.0E-13<br>5.0E-14<br>5.0E-15<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2edszp__.php:69\nStack trace:\n#0 /tmp/tmp2edszp__.php(74): test()\n#1 {main}\n  thrown in /tmp/tmp2edszp__.php on line 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        $area = (($a / 360) * pi() * pow($r, 2));\n        return $area;\n    }\n}\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmprabm_h5e.php on line 74\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    } else {\n        return ($r * $r * $a) / 360;\n    }\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmxhh5hj.php:17\nStack trace:\n#0 /tmp/tmpcmxhh5hj.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpcmxhh5hj.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(3, 360);\necho \"\\n\";\necho sector_area(3, 361);\necho \"\\n\";\necho sector_area(3, 45);\necho \"\\n\";\necho sector_area(3, 90);\necho \"\\n\";\necho sector_area(3, 180);\necho \"\\n\";\necho sector_area(3, 270);\necho \"\\n\";\necho sector_area(3, 360);\necho \"\\n\";\necho sector_area(3, 361);\necho \"\\n\";\necho sector_area(3, 45);\necho \"\\n\";\necho sector_area(3, 90);\necho \"\\n\";\necho sector_area(3, 180);\necho \"\\n\";\necho sector_area(3, 270);\necho \"\\n\";\necho sector_area(3, 360);\necho \"\\n\";\necho sector_area(3, 361);\necho \"\\n\";\necho sector_area(3, 45);\necho \"\\n\";\necho sector_area(3, 90);\necho \"\\n\";\necho sector_area(3, 180);\necho \"\\n\";\necho sector_area(3, 270);\necho \"\\n\";\necho sector_area(3, 360);\necho \"\\n\";\necho sector_area(3, 361);\necho \"\\n\";\necho sector_area(3, 45);\necho \"\\n\";\necho sector_area(3, 90);\necho \"\\n\";\necho sector_area(3, 180);\necho \"\\n\";\necho sector_area(3, 270);\necho \"\\n\";\necho sector_area(3, 360);\necho \"\\n\";\necho sector_area(3, 361);\necho \"\\n\";\necho sector_area(3, 45);\necho \"\\n\";\necho sector_area(3, 90);\necho \"\\n\";\necho sector_area(3, 180);\necho \"\\n\";\necho sector_area(3, 270);\necho \"\\n\";\necho sector_area(3, 360);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "28.274333882308\n\n3.5342917352885\n7.068583470577\n14.137166941154\n21.205750411731\n28.274333882308\n\n3.5342917352885\n7.068583470577\n14.137166941154\n21.205750411731\n28.274333882308\n\n3.5342917352885\n7.068583470577\n14.137166941154\n21.205750411731\n28.274333882308\n\n3.5342917352885\n7.068583470577\n14.137166941154\n21.205750411731\n28.274333882308\n\n3.5342917352885\n7.068583470577\n14.137166941154\n21.205750411731\n28.274333882308\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $a * pow($r, 2) / 2;\n}\n\necho sector_area(10, 45);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "2250\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph2anjrgf.php:16\nStack trace:\n#0 /tmp/tmph2anjrgf.php(21): test()\n#1 {main}\n  thrown in /tmp/tmph2anjrgf.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(10, 45);\necho \"<br>\";\necho sector_area(10, 400);\necho \"<br>\";\necho sector_area(10, 360);\necho \"<br>\";\necho sector_area(10, 180);\necho \"<br>\";\necho sector_area(10, 90);\necho \"<br>\";\necho sector_area(10, 60);\necho \"<br>\";\necho sector_area(10, 30);\necho \"<br>\";\necho sector_area(10, 20);\necho \"<br>\";\necho sector_area(10, 10);\necho \"<br>\";\necho sector_area(10, 5);\necho \"<br>\";\necho sector_area(10, 1);\necho \"<br>\";\necho sector_area(10, 0);\necho \"<br>\";\necho sector_area(10, -1);\necho \"<br>\";\necho sector_area(10, -5);\necho \"<br>\";\necho sector_area(10, -10);\necho \"<br>\";\necho sector_area(10, -20);\necho \"<br>\";\necho sector_area(10, -30);\necho \"<br>\";\necho sector_area(10, -60);\necho \"<br>\";\necho sector_area(10, -90);\necho \"<br>\";\necho sector_area(10, -180);\necho \"<br>\";\necho sector_area(10, -360);\necho \"<br>\";\necho sector_area(10, -400);\necho \"<br>\";\necho sector_area(10, -450);\necho \"<br>\";\necho sector_area(10, -540);\necho \"<br>\";\necho sector_area(10, -720);\necho \"<br>\";\necho sector_area(10, -1080);\necho \"<br>\";\necho sector_area(10, -1440);\necho \"<br>\";\necho sector_area(10, -1800);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "39.269908169872<br><br>314.15926535898<br>157.07963267949<br>78.539816339745<br>52.35987755983<br>26.179938779915<br>17.453292519943<br>8.7266462599716<br>4.3633231299858<br>0.87266462599716<br>0<br>-0.87266462599716<br>-4.3633231299858<br>-8.7266462599716<br>-17.453292519943<br>-26.179938779915<br>-52.35987755983<br>-78.539816339745<br>-157.07963267949<br>-314.15926535898<br>-349.06585039887<br>-392.69908169872<br>-471.23889803847<br>-628.31853071796<br>-942.47779607694<br>-1256.6370614359<br>-1570.7963267949<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 30);\necho \"<br>\";\necho sector_area(5, 15);\necho \"<br>\";\necho sector_area(5, 7.5);\necho \"<br>\";\necho sector_area(5, 3.75);\necho \"<br>\";\necho sector_area(5, 1.875);\necho \"<br>\";\necho sector_area(5, 0.9375);\necho \"<br>\";\necho sector_area(5, 0.46875);\necho \"<br>\";\necho sector_area(5, 0.234375);\necho \"<br>\";\necho sector_area(5, 0.1171875);\necho \"<br>\";\necho sector_area(5, 0.05859375);\necho \"<br>\";\necho sector_area(5, 0.029296875);\necho \"<br>\";\necho sector_area(5, 0.015625);\necho \"<br>\";\necho sector_area(5, 0.0078125);\necho \"<br>\";\necho sector_area(5, 0.00390625);\necho \"<br>\";\necho sector_area(5, 0.001953125);\necho \"<br>\";\necho sector_area(5, 0.0009765625);\necho \"<br>\";\necho sector_area(5, 0.00048828125);\necho \"<br>\";\necho sector_area(5, 0.000244140625);\necho \"<br>\";\necho sector_area(5, 0.0001220703125);\necho \"<br>\";\necho sector_area(5, 0.000061035\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmphqjgluvb.php on line 60\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360) . \"\\n\";\necho sector_area(5, 180) . \"\\n\";\necho sector_area(5, 90) . \"\\n\";\necho sector_area(5, 45) . \"\\n\";\necho sector_area(5, 360) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\n\";\necho sector_area(5, 361) . \"\\\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"Test\", expecting \",\" or \";\" in /tmp/tmpqwotslu9.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho sector_area(5, 270);\necho \"<br>\";\necho sector_area(5, 360);\necho \"<br>\";\necho sector_area(5, 361);\necho \"<br>\";\necho sector_area(5, 45);\necho \"<br>\";\necho sector_area(5, 90);\necho \"<br>\";\necho sector_area(5, 180);\necho \"<br>\";\necho\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp35eli5qm.php on line 70\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * pow($r, 2);\n    return $area;\n}\n\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\necho sector_area(5, 361);\necho \"\\n\";\necho sector_area(5, 45);\necho \"\\n\";\necho sector_area(5, 90);\necho \"\\n\";\necho sector_area(5, 180);\necho \"\\n\";\necho sector_area(5, 270);\necho \"\\n\";\necho sector_area(5, 360);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "78.539816339745\n\n9.8174770424681\n19.634954084936\n39.269908169872\n58.904862254809\n78.539816339745\n\n9.8174770424681\n19.634954084936\n39.269908169872\n58.904862254809\n78.539816339745\n\n9.8174770424681\n19.634954084936\n39.269908169872\n58.904862254809\n78.539816339745\n\n9.8174770424681\n19.634954084936\n39.269908169872\n58.904862254809\n78.539816339745\n\n9.8174770424681\n19.634954084936\n39.269908169872\n58.904862254809\n78.539816339745\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return $r * $r * $a / 360;\n}\n\necho sector_area(10, 45);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ou4bjsq.php:17\nStack trace:\n#0 /tmp/tmp8ou4bjsq.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp8ou4bjsq.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 360;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "25\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprb_2_d2_.php:16\nStack trace:\n#0 /tmp/tmprb_2_d2_.php(21): test()\n#1 {main}\n  thrown in /tmp/tmprb_2_d2_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a * $r * $r) / 360;\n    return $area;\n}\n\necho sector_area(10, 45);\necho \"\\n\";\necho sector_area(10, 400);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "12.5\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvdmb37nm.php:21\nStack trace:\n#0 /tmp/tmpvdmb37nm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvdmb37nm.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($r * $r * $a) / 2;\n    return $area;\n}\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn1qyxf_m.php:16\nStack trace:\n#0 /tmp/tmpn1qyxf_m.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpn1qyxf_m.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * $r * $r;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($r * $r * $a) / 2;\n}\n\necho sector_area(10, 45) . \"\\n\";\necho sector_area(10, 360) . \"\\n\";\necho sector_area(10, 361) . \"\\n\";\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "2250\n18000\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp48y6_hxe.php:19\nStack trace:\n#0 /tmp/tmp48y6_hxe.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp48y6_hxe.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    $area = ($a / 360) * pi() * $r * $r;\n    return $area;\n}\n\necho sector_area(5, 360);\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509858,
      "stdout": "78.539816339745",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\nfunction sector_area($r, $a) {\n    if ($a > 360) {\n        return null;\n    }\n    return ($a / 360) * pi() * pow($r, 2);\n}\n\necho sector_area(10, 60);\n\nfunction candidate(...$args) {\n    return sector_area(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 45) !== 6.283185307179586) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 45) !== 31.808625617596654) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9, 361) !== null) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122411,
      "stdout": "52.35987755983",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
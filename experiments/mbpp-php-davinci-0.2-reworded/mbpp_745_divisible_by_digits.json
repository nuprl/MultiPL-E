{
  "name": "mbpp_745_divisible_by_digits",
  "language": "php",
  "prompt": "<?php\n// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/phpthon-exercises/lambda/phpthon-lambda-exercise-24.php\nfunction divisible_by_digits($startnum, $endnum) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return divisible_by_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 22) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1, 15) !== array(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20, 25) !== array(22, 24)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(10, 30));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $flag = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach($digits as $digit) {\n            if($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $divisible = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n            $num = floor($num / 10);\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && $n % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $str = strval($i);\n        $flag = true;\n        for ($j = 0; $j < strlen($str); $j++) {\n            if ($i % intval($str[$j]) != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers from $startnum to $endnum divisible by every digit it contains: \";\necho implode(', ', $result);",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $divisible = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n            $num = floor($num / 10);\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains are: \";\necho implode(\", \", $result);",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && $n % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function ($n) {\n        $digits = str_split($n);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $num = $i;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num /= 10;\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\necho implode(\", \", divisible_by_digits($startnum, $endnum));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && ($n % $digit == 0);\n        }, true);\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $item) use ($n) {\n            return $carry && ($n % $item == 0);\n        }, true);\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($number) {\n        $digits = str_split($number);\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $rem = $num % 10;\n            if ($rem == 0 || $i % $rem != 0) {\n                $flag = false;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum which are divisible by their digits are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                return false;\n            }\n            if ($num % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($number) {\n        $digits = str_split($number);\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum which are divisible by their digits are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $arr = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = 0;\n        while ($num > 0) {\n            $rem = $num % 10;\n            if ($rem == 0) {\n                $flag = 1;\n                break;\n            }\n            if ($i % $rem != 0) {\n                $flag = 1;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag == 0) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum are divisible by every digit it contains are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int)($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum which are divisible by the digits they contain are: \";\necho implode(\", \", divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && $n % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $arr = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = floor($num / 10);\n        }\n        if ($flag) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));\necho \"<br>\";\nprint_r(divisible_by_digits(100, 200));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"Divisible by digits: \";\necho implode(\", \", divisible_by_digits(10, 20));\necho \"\\n\";\n",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n\necho \"The numbers between $startnum and $endnum divisible by the digits they contain are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && $n % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum are divisible by every digit it contains are : \";\necho implode(', ', $result);",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && ($n % $digit == 0);\n        }, true);\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $numbers = range($startnum, $endnum);\n    $divisible_by_digits = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $divisible_by_digits;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && $n % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = floor($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum are divisible by the digits they contain: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum that are divisible by each digit it contains are: \";\necho implode(\", \", $result);",
    "    $arr = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = 0;\n        $num = $i;\n        while ($num) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = 1;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag == 0) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$arr = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum are divisible by their digits are: \";\necho implode(', ', $arr);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"Divisible by digits from 1 to 100: \";\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array_filter(range($startnum, $endnum), function ($n) {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n            if ($n % $digit !== 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($digit != 0 && $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "  $result = array();\n  for ($i = $startnum; $i <= $endnum; $i++) {\n    $digits = str_split($i);\n    $divisible = true;\n    foreach ($digits as $digit) {\n      if ($i % $digit != 0) {\n        $divisible = false;\n        break;\n      }\n    }\n    if ($divisible) {\n      $result[] = $i;\n    }\n  }\n  return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"Numbers between $startnum and $endnum which are divisible by their digits are: \";\n$result = divisible_by_digits($startnum, $endnum);\necho implode(\", \", $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = floor($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum which are divisible by the sum of their digits are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $divisible = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n            $num = (int)($num / 10);\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains: \";\necho implode(\", \", $result);",
    "    $numbers = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $numbers[] = $i;\n        }\n    }\n    return $numbers;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $num = $i;\n        while ($num != 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains: \";\necho implode(', ', $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0) {\n                $flag = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum which are divisible by the sum of their digits are: \";\necho implode(\", \", divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $flag = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(', ', $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $num = $i;\n        while ($num > 0) {\n            $rem = $num % 10;\n            if ($rem == 0 || $i % $rem != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\necho implode(', ', $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        foreach($digits as $digit) {\n            if($n % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $num = $i;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum which are divisible by the digits they contain are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array_filter(range($startnum, $endnum), function ($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function ($n) {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n            if ($n % $digit !== 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $rem = $num % 10;\n            if ($rem == 0 || $i % $rem != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\necho implode(\", \", $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = floor($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 500;\nprint_r(divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num != 0) {\n            $rem = $num % 10;\n            if ($rem == 0 || $i % $rem != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum are divisible by every digit it contains are: \";\necho implode(\", \", $result);",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $arr = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($arr, $i);\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($digit != 0) {\n                if ($i % $digit != 0) {\n                    $flag = false;\n                    break;\n                }\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(1, 100));\necho \"</pre>\";\n",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int)($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"The numbers between 100 and 1000 divisible by digits are: \";\necho implode(\", \", divisible_by_digits(100, 1000));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $num = $i;\n        while ($num > 0) {\n            $rem = $num % 10;\n            if ($rem == 0 || $i % $rem != 0) {\n                $flag = false;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum are divisible by their digits are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array_filter(range($startnum, $endnum), function($number) {\n        $digits = str_split($number);\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($number) {\n        $digits = str_split($number);\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && ($n % $digit == 0);\n        }, true);\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = floor($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\necho implode(\", \", $result);",
    "    $result = array_filter(range($startnum, $endnum), function ($number) {\n        $digits = str_split($number);\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n\necho \"The numbers between $startnum and $endnum which are divisible by their digits are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function ($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n\n$result = divisible_by_digits($startnum, $endnum);\n\necho \"The numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\necho implode(', ', $result);",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                return false;\n            }\n            if ($num % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $divisible = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n            $num = floor($num / 10);\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\necho \"The numbers between $startnum and $endnum that are divisible by the digits they contain are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum are divisible by every digit it contains are: \";\necho implode(\", \", $result);",
    "    $arr = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = 0;\n        $str = (string) $i;\n        for ($j = 0; $j < strlen($str); $j++) {\n            if ($str[$j] == 0) {\n                $flag = 1;\n                break;\n            }\n            if ($i % $str[$j] != 0) {\n                $flag = 1;\n                break;\n            }\n        }\n        if ($flag == 0) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $numbers = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $numbers[] = $i;\n        }\n    }\n    return $numbers;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\necho implode(\", \", $result);",
    "    $result = array_filter(range($startnum, $endnum), function ($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function ($carry, $digit) use ($n) {\n            return $carry && $n % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $arr = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $rem = $num % 10;\n            if ($rem == 0 || $i % $rem != 0) {\n                $flag = false;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $divisible = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n            $num = (int)($num / 10);\n        }\n        if ($divisible) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains are: \";\necho implode(\", \", $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $flag = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum which are divisible by the digits they contain are: \";\necho implode(\", \", divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = array_map('intval', str_split($i));\n        if (array_reduce($digits, function($carry, $item) use ($i) {\n            return $carry && $i % $item == 0;\n        }, true)) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($digit == 0) {\n                $is_divisible = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by digits: \" . implode(', ', $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\necho implode(\", \", $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum divisible by digits are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && $n % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $arr = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = 0;\n        $num = $i;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0) {\n                $flag = 1;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $flag = 1;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag == 0) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n\n$startnum = 100;\n$endnum = 1000;\nprint_r(divisible_by_digits($startnum, $endnum));",
    "    $result = array_filter(range($startnum, $endnum), function ($n) {\n        $digits = str_split($n);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \" . implode(', ', $result);",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"Divisible by digits: \";\nprint_r(divisible_by_digits(100, 1000));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        foreach($digits as $digit) {\n            if($n % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $flag = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\nprint_r(divisible_by_digits($startnum, $endnum));",
    "    $result = array_filter(range($startnum, $endnum), function($var) {\n        $digits = str_split($var);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($var % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);",
    "    $result = array_filter(range($startnum, $endnum), function ($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function ($carry, $digit) use ($n) {\n            return $carry && $n % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(100, 1000));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $str = strval($i);\n        $flag = true;\n        for ($j = 0; $j < strlen($str); $j++) {\n            if ($i % intval($str[$j]) != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\n",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && ($n % $digit == 0);\n        }, true);\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = [];\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\nprint_r(divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum divisible by the digits it contains are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains are: \";\necho implode(\", \", $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int)($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum which are divisible by the digits they contain are: \";\necho implode(\", \", $result);",
    "    $result = array_filter(range($startnum, $endnum), function ($num) {\n        $digits = str_split($num);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $str = (string)$i;\n        $flag = true;\n        for ($j = 0; $j < strlen($str); $j++) {\n            if ($i % (int)$str[$j] != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\nprint_r(divisible_by_digits($startnum, $endnum));",
    "    $result = array_filter(range($startnum, $endnum), function($number) {\n        $digits = str_split($number);\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1,100));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by every digit it contains: \";\necho implode(\", \", $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $rem = $num % 10;\n            if ($rem == 0 || $i % $rem != 0) {\n                $flag = false;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum which are divisible by the digits they contain are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by each digit: \" . implode(', ', $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $num = $i;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0) {\n                $flag = false;\n                break;\n            }\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\necho implode(', ', $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $divisible = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\nprint_r($result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"Divisible by digits: \" . implode(', ', divisible_by_digits(1, 100)) . \"\\n\";\n",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n$startnum = 100;\n$endnum = 1000;\necho \"Numbers between $startnum and $endnum divisible by digits are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum which are divisible by every digit it contains are: \";\necho implode(\", \", $result);",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        return $n % array_product(str_split($n)) == 0;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(100, 1000));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"Divisible by digits: \" . implode(\", \", divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && $n % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($digit != 0 && $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = 1;\n$endnum = 100;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        return $is_divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && $n % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(100, 200));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains: \";\necho implode(\", \", $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum which are divisible by their digits are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = 0;\n        $num = $i;\n        while ($num != 0) {\n            $rem = $num % 10;\n            if ($rem == 0) {\n                $flag = 1;\n                break;\n            }\n            if ($i % $rem != 0) {\n                $flag = 1;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag == 0) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum that are divisible by the digits they contain are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $rem = $num % 10;\n            if ($rem == 0) {\n                $flag = false;\n                break;\n            }\n            if ($i % $rem != 0) {\n                $flag = false;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum which are divisible by every digit it contains are : \";\necho implode(', ', $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $num = $i;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int) ($num / 10);\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum which are divisible by the sum of their digits are: \";\necho implode(', ', divisible_by_digits($startnum, $endnum));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $divisible = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n            $num = floor($num / 10);\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $flag = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $rem = $num % 10;\n            if ($rem == 0 || $i % $rem != 0) {\n                $flag = false;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"The numbers between $startnum and $endnum are divisible by their digits are: \";\necho implode(\", \", $result);",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && $n % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit == 0 || $i % $digit != 0) {\n                $flag = false;\n                break;\n            }\n            $num = (int)($num / 10);\n        }\n        if ($flag) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\necho \"The numbers between $startnum and $endnum are divisible by the digits they contain are: \";\necho implode(\", \", divisible_by_digits($startnum, $endnum));",
    "\t$result = array_filter(range($startnum, $endnum), function($num) {\n\t\t$digits = str_split($num);\n\t\t$divisible = true;\n\t\tforeach($digits as $digit) {\n\t\t\tif($num % $digit != 0) {\n\t\t\t\t$divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn $divisible;\n\t});\n\treturn $result;\n}\n\necho \"divisible_by_digits(1, 100) = \";\nprint_r(divisible_by_digits(1, 100));\necho \"<br>\";\necho \"divisible_by_digits(100, 1000) = \";\nprint_r(divisible_by_digits(100, 1000));\necho \"<br>\";\necho \"divisible_by_digits(1000, 10000) = \";\nprint_r(divisible_by_digits(1000, 10000));\necho \"<br>\";\necho \"divisible_by_digits(10000, 100000) = \";\nprint_r(divisible_by_digits(10000, 100000));\necho \"<br>\";\necho \"divisible_by_digits(100000, 1000000) = \";\nprint_r(divisible_by_digits(100000, 1000000));\necho \"<br>\";\necho \"divisible_by_digits(1000000, 10000000) = \";\nprint_r(divisible_by_digits(1000000, 10000000));\necho \"<br>\";\necho \"divisible_by_digits(10000000, 100000000) = \";\nprint_r(divisible_by_digits(10000000, 100000000));\necho \"<br>\";\necho \"divisible_by_digits(100000000, 1000000000) = \";\nprint_r(divisible_by_digits(100000000, 1000000000));\necho \"<br>\";\necho \"divisible_by_digits(1000000000, 10000000000) = \";\nprint_r(divisible_by_digits(1000000000, 10000000000));\necho \"<br>\";",
    "    $result = array_filter(range($startnum, $endnum), function ($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function ($carry, $digit) use ($n) {\n            return $carry && $n % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\nprint_r(divisible_by_digits(10, 30));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        return array_reduce($digits, function($carry, $digit) use ($n) {\n            return $carry && ($n % $digit == 0);\n        }, true);\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($n) {\n        $digits = str_split($n);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($n % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "  $result = array_filter(range($startnum, $endnum), function($n) {\n    $digits = str_split($n);\n    foreach ($digits as $digit) {\n      if ($n % $digit != 0) {\n        return false;\n      }\n    }\n    return true;\n  });\n  return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        return $is_divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $numbers = range($startnum, $endnum);\n    $result = array_filter($numbers, function($number) {\n        $digits = str_split($number);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        return $divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $divisible = true;\n        $digits = str_split($i);\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 500;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum that are divisible by every digit it contains are: \";\necho implode(\", \", $result);",
    "    $result = array_filter(range($startnum, $endnum), function($number) {\n        $digits = str_split($number);\n        $is_divisible = true;\n        foreach ($digits as $digit) {\n            if ($number % $digit != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        return $is_divisible;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(100, 200));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $num = $i;\n        $flag = true;\n        while ($num > 0) {\n            $rem = $num % 10;\n            if ($rem == 0 || $i % $rem != 0) {\n                $flag = false;\n                break;\n            }\n            $num = $num / 10;\n        }\n        if ($flag) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));\nprint_r(divisible_by_digits(100, 200));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $str = (string)$i;\n        $flag = true;\n        for ($j = 0; $j < strlen($str); $j++) {\n            if ($str[$j] == 0) {\n                $flag = false;\n                break;\n            }\n            if ($i % $str[$j] != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\n$result = divisible_by_digits($startnum, $endnum);\necho \"Numbers between $startnum and $endnum divisible by every digit it contains: \";\necho implode(\", \", $result);",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(divisible_by_digits(10, 20));\necho \"</pre>\";",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\n$startnum = 100;\n$endnum = 1000;\nprint_r(divisible_by_digits($startnum, $endnum));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        return array_reduce($digits, function($carry, $digit) use ($num) {\n            return $carry && $num % $digit == 0;\n        }, true);\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));",
    "    $result = array();\n    for ($i = $startnum; $i <= $endnum; $i++) {\n        $digits = str_split($i);\n        $divisible = true;\n        foreach ($digits as $digit) {\n            if ($i % $digit != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nprint_r(divisible_by_digits(10, 20));",
    "    $result = array_filter(range($startnum, $endnum), function($num) {\n        $digits = str_split($num);\n        foreach ($digits as $digit) {\n            if ($num % $digit != 0) {\n                return false;\n            }\n        }\n        return true;\n    });\n    return $result;\n}\n\nprint_r(divisible_by_digits(1, 100));"
  ]
}
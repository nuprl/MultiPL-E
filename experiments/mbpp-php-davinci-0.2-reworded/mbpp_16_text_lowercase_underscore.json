{
  "name": "mbpp_16_text_lowercase_underscore",
  "language": "php",
  "prompt": "<?php\n// Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore($text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_16_text_lowercase_underscore.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return text_lowercase_underscore(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"aab_cbbbc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aab_Abbbc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Aaab_abbbc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "\t$text = str_split($text);\n\t$lowercase = range('a', 'z');\n\t$underscore = '_';\n\t$count = 0;\n\tforeach ($text as $key => $value) {\n\t\tif (in_array($value, $lowercase)) {\n\t\t\t$count++;\n\t\t} elseif ($value == $underscore) {\n\t\t\t$count++;\n\t\t}\n\t}\n\tif ($count == count($text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho text_lowercase_underscore('text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_unders",
    "    return preg_match('/^[a-z_]+$/', $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$text = strtolower($text);\n\t$text = str_replace('_', '', $text);\n\tif ($text == str_replace('_', '', $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho text_lowercase_underscore('this_is_a_text');\necho '<br>';\necho text_lowercase_underscore('thisIsAText');\necho '<br>';\necho text_lowercase_underscore('thisIs_aText');\necho '<br>';\necho text_lowercase_underscore('this_is_a_text');\necho '<br>';\necho text_lowercase_underscore('this_Is_a_text');\necho '<br>';\necho text_lowercase_underscore('this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text');\necho '<br>';\necho text_lowercase_underscore('this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text');\necho '<br>';\necho text_lowercase_underscore('this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text');\necho '<br>';\necho text_lowercase_underscore('this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text');\necho '<br>';\necho text_lowercase_underscore('this_is_a_text_');\necho '<br>';\necho text_lowercase_unders",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $text = str_split($text);\n    $result = [];\n    $result_string = '';\n    foreach ($text as $char) {\n        if (ctype_lower($char) || $char == '_') {\n            $result[] = $char;\n        }\n    }\n    foreach ($result as $char) {\n        $result_string .= $char;\n    }\n    if ($result_string == $text) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho text_lowercase_underscore('hello_world');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3_",
    "    $result = preg_match('/^[a-z_]+$/', $text);\n    if ($result) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$pattern = '/^[a-z_]+$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $text = str_replace('_', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = \"/^[a-z_]+$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_replace('_', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world') . '<br>';\necho text_lowercase_underscore('hello_world_') . '<br>';\necho text_lowercase_underscore('hello_world_123') . '<br>';\necho text_lowercase_underscore('hello_world_123_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+_[a-z]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_split($text);\n    $result = true;\n    for ($i = 0; $i < count($text); $i++) {\n        if ($i == 0) {\n            if (ctype_lower($text[$i])) {\n                $result = true;\n            } else {\n                $result = false;\n                break;\n            }\n        } else {\n            if ($text[$i] == '_') {\n                if (ctype_lower($text[$i + 1])) {\n                    $result = true;\n                } else {\n                    $result = false;\n                    break;\n                }\n            } else {\n                if (ctype_lower($text[$i])) {\n                    $result = true;\n                } else {\n                    $result = false;\n                    break;\n                }\n            }\n        }\n    }\n    return $result;\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\treturn preg_match($pattern, $text);\n}\n",
    "    $text_array = str_split($text);\n    $text_array_count = count($text_array);\n    $text_array_count_minus_one = $text_array_count - 1;\n    $text_array_count_minus_two = $text_array_count - 2;\n    $text_array_count_minus_three = $text_array_count - 3;\n    $text_array_count_minus_four = $text_array_count - 4;\n    $text_array_count_minus_five = $text_array_count - 5;\n    $text_array_count_minus_six = $text_array_count - 6;\n    $text_array_count_minus_seven = $text_array_count - 7;\n    $text_array_count_minus_eight = $text_array_count - 8;\n    $text_array_count_minus_nine = $text_array_count - 9;\n    $text_array_count_minus_ten = $text_array_count - 10;\n    $text_array_count_minus_eleven = $text_array_count - 11;\n    $text_array_count_minus_twelve = $text_array_count - 12;\n    $text_array_count_minus_thirteen = $text_array_count - 13;\n    $text_array_count_minus_fourteen = $text_array_count - 14;\n    $text_array_count_minus_fifteen = $text_array_count - 15;\n    $text_array_count_minus_sixteen = $text_array_count - 16;\n    $text_array_count_minus_seventeen = $text_array_count - 17;\n    $text_array_count_minus_eighteen = $text_array_count - 18;\n    $text_array_count_minus_nineteen = $text_array_count - 19;\n    $text_array_count_minus_twenty = $text_array_count - 20;\n    $text_array_count_minus_twentyone = $text_array_count - 21;\n    $text_array_count_",
    "\t$text = str_replace('_', '', $text);\n\tif (ctype_lower($text)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    preg_match($pattern, $text, $matches);\n    if (count($matches) > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_split($text);\n    $result = false;\n    $count = 0;\n    foreach ($text as $key => $value) {\n        if (ctype_lower($value)) {\n            $count++;\n        } elseif ($value == '_') {\n            $count = 0;\n        } else {\n            $count = 0;\n            break;\n        }\n    }\n    if ($count > 1) {\n        $result = true;\n    }\n    return $result;\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)+$/';\n\treturn preg_match($pattern, $text);\n}\n",
    "\t$pattern = '/^[a-z_]+$/';\n\treturn preg_match($pattern, $text);\n}\n",
    "\t$text = strtolower($text);\n\t$text = str_replace(\"_\", \"\", $text);\n\tif ($text == str_replace(\" \", \"\", $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $regex = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($regex, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world') . PHP_EOL;\necho text_lowercase_underscore('hello_world_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_!') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_!') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_!_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_!_456') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_!_456_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_!_456_!') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_!_456_!_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_!_456_!_789') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_!_456_!_789_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_!_456_!_789_!') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_!_456_!_789_!_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_!_456_!_789_!_0') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_!_456_!_789_!_0_') . PHP_EOL;\necho text_lower",
    "    return preg_match('/^[a-z_]+$/', $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\treturn preg_match($pattern, $text);\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match(\"/^[a-z_]+$/\", $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\treturn preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_split($text);\n    $result = [];\n    foreach ($text as $key => $value) {\n        if (ctype_lower($value) || $value == '_') {\n            $result[] = $value;\n        }\n    }\n    if (count($result) == count($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$text = 'abc_def';\necho text_lowercase_underscore($text);\n\necho '<br>';\n",
    "    $regex = '/^[a-z]+(_[a-z]+)+$/';\n    return preg_match($regex, $text);\n}\n",
    "    $text = str_replace(\"_\", \"\", $text);\n    $text = str_replace(\" \", \"\", $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_split($text);\n    $text_lowercase = array_filter($text, function($item) {\n        return ctype_lower($item);\n    });\n    $text_underscore = array_filter($text, function($item) {\n        return $item == '_';\n    });\n    if (count($text_lowercase) + count($text_underscore) == count($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$text = 'a_b_c';\necho text_lowercase_underscore($text);\necho '<br>';\n\n$text = 'a_b_c_';\necho text_lowercase_underscore($text);\necho '<br>';\n\n$text = 'a_b_c_d';\necho text_lowercase_underscore($text);\necho '<br>';\n\n$text = 'a_b_c_d_';\necho text_lowercase_underscore($text);\necho '<br>';\n\n$text = 'a_b_c_d_e';\necho text_lowercase_underscore($text);\necho '<br>';\n\n$text = 'a_b_c_d_e_';\necho text_lowercase_underscore($text);\necho '<br>';\n\n$text = 'a_b_c_d_e_f';\necho text_lowercase_underscore($text);\necho '<br>';\n\n$text = 'a_b_c_d_e_f_';\necho text_lowercase_underscore($text);\necho '<br>';\n\n$text = 'a_b_c_d_e_f_g';\necho text_lowercase_underscore($text);\necho '<br>';\n\n$text = 'a_b_c_d_e_f_g_';\necho text_lowercase_underscore($text);\necho '<br>';\n\n$text = 'a_b_c_d_e_f_g_h';\necho text_lowercase_underscore($text);\necho '<br>';\n\n$text = 'a_b_c_d_e_f_g_h_';\necho text_lowercase_underscore($text);\necho '<br>';\n\n$text = 'a_b_c_d_e_f_g_h_i",
    "    $text_array = str_split($text);\n    $text_array_count = count($text_array);\n    $text_array_count_minus_1 = $text_array_count - 1;\n    $i = 0;\n    $result = true;\n    while ($i < $text_array_count) {\n        if ($i == 0) {\n            if (ctype_lower($text_array[$i])) {\n                $i++;\n            } else {\n                $result = false;\n                break;\n            }\n        } elseif ($i == $text_array_count_minus_1) {\n            if (ctype_lower($text_array[$i])) {\n                $i++;\n            } else {\n                $result = false;\n                break;\n            }\n        } else {\n            if (ctype_lower($text_array[$i]) || $text_array[$i] == '_') {\n                $i++;\n            } else {\n                $result = false;\n                break;\n            }\n        }\n    }\n    return $result;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z]+_[a-z]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $text_array = str_split($text);\n    $text_array_count = count($text_array);\n    $text_array_count_minus_one = $text_array_count - 1;\n    $i = 0;\n    $j = 1;\n    $k = 2;\n    $l = 3;\n    $m = 4;\n    $n = 5;\n    $o = 6;\n    $p = 7;\n    $q = 8;\n    $r = 9;\n    $s = 10;\n    $t = 11;\n    $u = 12;\n    $v = 13;\n    $w = 14;\n    $x = 15;\n    $y = 16;\n    $z = 17;\n    $underscore = 18;\n    $lowercase_letters = array($a, $b, $c, $d, $e, $f, $g, $h, $i, $j, $k, $l, $m, $n, $o, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z, $underscore);\n    $lowercase_letters_count = count($lowercase_letters);\n    $lowercase_letters_count_minus_one = $lowercase_letters_count - 1;\n    $lowercase_letters_count_minus_two = $lowercase_letters_count - 2;\n    $lowercase_letters_count_minus_three = $lowercase_letters_count - 3;\n    $lowercase_letters_count_minus_four = $lowercase_letters_count - 4;\n    $lowercase_letters_count_minus_five = $lowercase_letters_count - 5;\n    $lowercase_letters_count_minus_six = $lowercase_letters_count - 6;\n    $lowercase_letters_count_minus_seven = $lowercase_letters_count - 7;\n    $lowercase_letters_count_minus_eight = $lowercase_letters_count - 8;\n    $lowercase_letters_count_minus_nine = $lowercase_letters_count - 9;\n    $lower",
    "    $regex = '/^[a-z_]+$/';\n    return preg_match($regex, $text);\n}\n",
    "    if(preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text_array = str_split($text);\n    $text_array_count = count($text_array);\n    $text_array_count_minus_1 = $text_array_count - 1;\n    $text_array_count_minus_2 = $text_array_count - 2;\n    for ($i = 0; $i < $text_array_count; $i++) {\n        if ($i == 0) {\n            if (ctype_lower($text_array[$i]) == false) {\n                return false;\n            }\n        } elseif ($i == $text_array_count_minus_1) {\n            if (ctype_lower($text_array[$i]) == false) {\n                return false;\n            }\n        } elseif ($i == $text_array_count_minus_2) {\n            if (ctype_lower($text_array[$i]) == false) {\n                return false;\n            }\n        } elseif ($text_array[$i] == '_') {\n            if (ctype_lower($text_array[$i - 1]) == false) {\n                return false;\n            }\n            if (ctype_lower($text_array[$i + 1]) == false) {\n                return false;\n            }\n        } elseif (ctype_lower($text_array[$i]) == false) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3_');\necho '<br>';\necho text_",
    "    $pattern = '/^[a-z_]+$/';\n    return preg_match($pattern, $text);\n}\n",
    "    if (preg_match('/^[a-z]+_[a-z]+$/', $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_split($text);\n    $result = false;\n    foreach ($text as $key => $value) {\n        if (ctype_lower($value)) {\n            $result = true;\n        } elseif ($value == '_') {\n            $result = true;\n        } else {\n            return false;\n        }\n    }\n    return $result;\n}\n",
    "    $text_array = str_split($text);\n    $text_array_length = count($text_array);\n    $i = 0;\n    $result = true;\n    while ($i < $text_array_length) {\n        if ($text_array[$i] == '_') {\n            if ($i == 0 || $i == $text_array_length - 1) {\n                $result = false;\n                break;\n            } else {\n                if ($text_array[$i - 1] == '_' || $text_array[$i + 1] == '_') {\n                    $result = false;\n                    break;\n                } else {\n                    if (!ctype_lower($text_array[$i - 1]) || !ctype_lower($text_array[$i + 1])) {\n                        $result = false;\n                        break;\n                    }\n                }\n            }\n        } else {\n            if (!ctype_lower($text_array[$i])) {\n                $result = false;\n                break;\n            }\n        }\n        $i++;\n    }\n    return $result;\n}\n",
    "    $text = str_replace(\"_\", \"\", $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore(\"hello_world\") . \"\\n\";\necho text_lowercase_underscore(\"helloWorld\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_!\") . \"\\n\";\necho text_lowercase_underscore(\"hello_World\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123\") . \"\\n\";\necho text_lowercase_underscore(\"hello_world_123!\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD_\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD_!\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD_123\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD_123!\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD_123_!\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD_123_!_\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD_123_!_!\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD_123_!_!_\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD_123_!_!_!\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD_123_!_!_!_\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD_123_!_!_!_!\") . \"\\n\";\necho text_lowercase_underscore(\"HELLO_WORLD_123_!_",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match(\"/^[a-z_]+$/\", $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_replace(' ', '', $text);\n    $text = str_replace('_', '', $text);\n    $text = strtolower($text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello world');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!');\necho '<br>';\necho text_lowercase_underscore('Hello_world');\necho '<br>';\necho text_lowercase_underscore('Hello_World');\necho '<br>';\necho text_lowercase_underscore('Hello_World_!');\necho '<br>';\necho text_lowercase_underscore('Hello_World_!_');\necho '<br>';\necho text_lowercase_underscore('Hello_World_!_!');\necho '<br>';\necho text_lowercase_underscore('Hello_World_!_!_');\necho '<br>';\necho text_lowercase_underscore('Hello_World_!_!_!');\necho '<br>';\necho text_lowercase_underscore('Hello_World_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('Hello_World_!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('Hello_World_!_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('Hello_World_!_!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('Hello_World_!_!_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('Hello_World_!_!_!_!_!_!');\necho '<br>';",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text_array = str_split($text);\n    $text_array_length = count($text_array);\n    $text_array_length_minus_1 = $text_array_length - 1;\n    $text_array_length_minus_2 = $text_array_length - 2;\n    $text_array_length_minus_3 = $text_array_length - 3;\n    $text_array_length_minus_4 = $text_array_length - 4;\n    $text_array_length_minus_5 = $text_array_length - 5;\n    $text_array_length_minus_6 = $text_array_length - 6;\n    $text_array_length_minus_7 = $text_array_length - 7;\n    $text_array_length_minus_8 = $text_array_length - 8;\n    $text_array_length_minus_9 = $text_array_length - 9;\n    $text_array_length_minus_10 = $text_array_length - 10;\n    $text_array_length_minus_11 = $text_array_length - 11;\n    $text_array_length_minus_12 = $text_array_length - 12;\n    $text_array_length_minus_13 = $text_array_length - 13;\n    $text_array_length_minus_14 = $text_array_length - 14;\n    $text_array_length_minus_15 = $text_array_length - 15;\n    $text_array_length_minus_16 = $text_array_length - 16;\n    $text_array_length_minus_17 = $text_array_length - 17;\n    $text_array_length_minus_18 = $text_array_length - 18;\n    $text_array_length_minus_19 = $text_array_length - 19;\n    $text_array_length_minus_20 = $text_array_length - 20;\n    $text_array_length_minus_21 = $text_array_length - 21;\n    $text_array_length_minus_22 = $text_array_length - 22;",
    "\t$text = str_replace(' ', '', $text);\n\t$text = str_replace('_', '', $text);\n\tif (ctype_lower($text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "  $text = str_replace('_', '', $text);\n  if (ctype_lower($text)) {\n    return true;\n  }\n  return false;\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world') . PHP_EOL;\necho text_lowercase_underscore('hello_world_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_') . PHP_EOL;\necho text_lowercase_underscore('hello_world123') . PHP_EOL;\necho text_lowercase_underscore('hello_world123_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_1') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_1_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3') . PHP_EOL;\necho text_lowercase",
    "    $text = strtolower($text);\n    $text = str_replace('_', '', $text);\n    $text = str_replace(' ', '', $text);\n    $text = str_replace('-', '', $text);\n    $text = str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n    $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n    $text = str_replace('\"', '', $text);\n    $text = str_replace('\\'', '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('*', '', $text);\n    $text = str_replace('+', '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('$', '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@', '', $text);\n    $text = str_replace('^', '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('`', '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('<', '', $text);\n    $text = str_replace('>', '', $text);\n    $text =",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $text = str_split($text);\n    $count = 0;\n    $count_underscore = 0;\n    foreach ($text as $key => $value) {\n        if (ord($value) >= 97 && ord($value) <= 122) {\n            $count++;\n        }\n        if ($value == '_') {\n            $count_underscore++;\n        }\n    }\n    if ($count == count($text) - $count_underscore) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!_!_!_');\necho '<br>';\necho text_lowercase",
    "    if (preg_match('/^[a-z]+_[a-z]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match(\"/^[a-z]+(_[a-z]+)*$/\", $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_!_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_!_!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_!_!_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_!_!_!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_!_!_!_!_!_!_');\necho",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\tif (preg_match(\"/^[a-z]+_[a-z]+$/\", $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n\n$text = 'abc_def';\necho text_lowercase_underscore($text) ? 'true' : 'false';\necho '<br>';\n$text = 'abc_def_ghi';\necho text_lowercase_underscore($text) ? 'true' : 'false';\necho '<br>';\n$text = 'abc_def_ghi_jkl';\necho text_lowercase_underscore($text) ? 'true' : 'false';\necho '<br>';\n$text = 'abc_def_ghi_jkl_mno';\necho text_lowercase_underscore($text) ? 'true' : 'false';\necho '<br>';\n$text = 'abc_def_ghi_jkl_mno_pqr';\necho text_lowercase_underscore($text) ? 'true' : 'false';\necho '<br>';\n$text = 'abc_def_ghi_jkl_mno_pqr_stu';\necho text_lowercase_underscore($text) ? 'true' : 'false';\necho '<br>';\n$text = 'abc_def_ghi_jkl_mno_pqr_stu_vwx';\necho text_lowercase_underscore($text) ? 'true' : 'false';\necho '<br>';\n$text = 'abc_def_ghi_jkl_mno_pqr_stu_vwx_yz';\necho text_lowercase_underscore($text) ? 'true' : 'false';\necho '<br>';\n$text = 'abc_def_ghi_jkl_mno_pqr_stu_vwx_yz_123';\necho text_lowercase_underscore($text) ? 'true' : 'false';\necho '<br>';\n$text = 'abc_def_ghi_jkl_mno_pqr_stu_",
    "    $text = str_replace(\"_\", \"\", $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore(\"hello_world\");\necho \"<br>\";\necho text_lowercase_underscore(\"helloWorld\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456\");\necho \"<br>\";\necho text_lowercase_underscore(\"hello_world_123_456_\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_123_456_\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_123_456_789\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_123_456_789_\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_123_456_789_0\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_123_456_789_0_\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_123_456_789_0_1\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_123_456_789_0_1_\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_123_456_789_0_1_2\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_123_456_789_0_1_2_\");\necho \"<br>\";\necho text_lowercase_underscore(\"_hello_world_123_456",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $pattern = \"/^[a-z_]+$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    return preg_match($pattern, $text);\n}\n\necho text_lowercase_underscore('hello_world') . PHP_EOL;\necho text_lowercase_underscore('helloWorld') . PHP_EOL;\necho text_lowercase_underscore('hello_world_') . PHP_EOL;\necho text_lowercase_underscore('_hello_world') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_') . PHP_EOL;\necho text_lowercase_underscore('_hello_world_123') . PHP_EOL;\necho text_lowercase_underscore('_hello_world_123_') . PHP_EOL;",
    "    if (preg_match('/^[a-z]+(_[a-z]+)+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    return preg_match('/^[a-z_]+$/', $text);\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\treturn preg_match($pattern, $text);\n}\n",
    "\t$pattern = \"/^[a-z]+(_[a-z]+)*$/\";\n\treturn preg_match($pattern, $text);\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "\treturn preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "\tif (preg_match('/^[a-z_]+$/', $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $regex = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($regex, $text);\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)+$/';\n\treturn preg_match($pattern, $text);\n}\n",
    "\t$text = str_split($text);\n\t$result = false;\n\t$count = 0;\n\tforeach ($text as $key => $value) {\n\t\tif (ctype_lower($value)) {\n\t\t\t$count++;\n\t\t} elseif ($value == '_') {\n\t\t\t$count = 0;\n\t\t} else {\n\t\t\t$count = 0;\n\t\t}\n\t\tif ($count == 3) {\n\t\t\t$result = true;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho text_lowercase_underscore('abc_def_ghi');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz_123');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz_123_456');\necho '<br>';\necho text_lowercase_underscore('abc_def_ghi_jkl_mno_pqr_stu_vwx_yz_123_456_789');\necho '<br>';\necho text_lower",
    "    return preg_match(\"/^[a-z_]+$/\", $text);\n}\n",
    "    $text = str_replace('_', '', $text);\n    $text = str_replace(' ', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "  return preg_match('/^[a-z_]+$/', $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "  $pattern = '/^[a-z]+(_[a-z]+)*$/';\n  return preg_match($pattern, $text);\n}\n\necho text_lowercase_underscore('hello_world') . PHP_EOL;\necho text_lowercase_underscore('hello_world_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_1') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_1_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3_4') . PHP_E",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "\t$pattern = '/^[a-z_]+$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3_');\necho '<br>';\necho text",
    "    return preg_match('/^[a-z_]+$/', $text);\n}\n",
    "    $pattern = \"/^[a-z]+(_[a-z]+)*$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    return preg_match(\"/^[a-z]+(_[a-z]+)*$/\", $text);\n}\n",
    "    $text = str_split($text);\n    $valid = true;\n    for ($i = 0; $i < count($text); $i++) {\n        if ($text[$i] == '_') {\n            if ($i == 0 || $i == count($text) - 1) {\n                $valid = false;\n                break;\n            }\n            if (!ctype_lower($text[$i - 1]) || !ctype_lower($text[$i + 1])) {\n                $valid = false;\n                break;\n            }\n        }\n    }\n    return $valid;\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\tif (preg_match(\"/^[a-z_]+$/\", $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $text_lowercase_underscore = preg_match(\"/^[a-z_]+$/\", $text);\n    return $text_lowercase_underscore;\n}\n",
    "    return preg_match('/^[a-z_]+$/', $text);\n}\n",
    "\tif (preg_match('/^[a-z_]+$/', $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "\t$text = strtolower($text);\n\t$text = str_replace('_', '', $text);\n\tif (strlen($text) == strlen(preg_replace('/[^a-z]/', '', $text))) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    return preg_match($pattern, $text);\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "  $text_array = str_split($text);\n  $text_array_length = count($text_array);\n  $text_array_length_minus_one = $text_array_length - 1;\n  $text_array_length_minus_two = $text_array_length - 2;\n  $text_array_length_minus_three = $text_array_length - 3;\n  $text_array_length_minus_four = $text_array_length - 4;\n  $text_array_length_minus_five = $text_array_length - 5;\n  $text_array_length_minus_six = $text_array_length - 6;\n  $text_array_length_minus_seven = $text_array_length - 7;\n  $text_array_length_minus_eight = $text_array_length - 8;\n  $text_array_length_minus_nine = $text_array_length - 9;\n  $text_array_length_minus_ten = $text_array_length - 10;\n  $text_array_length_minus_eleven = $text_array_length - 11;\n  $text_array_length_minus_twelve = $text_array_length - 12;\n  $text_array_length_minus_thirteen = $text_array_length - 13;\n  $text_array_length_minus_fourteen = $text_array_length - 14;\n  $text_array_length_minus_fifteen = $text_array_length - 15;\n  $text_array_length_minus_sixteen = $text_array_length - 16;\n  $text_array_length_minus_seventeen = $text_array_length - 17;\n  $text_array_length_minus_eighteen = $text_array_length - 18;\n  $text_array_length_minus_nineteen = $text_array_length - 19;\n  $text_array_length_minus_twenty = $text_array_length - 20;\n  $text_array_length_minus_twentyone = $text_array_length - 21;\n  $text_array_length_",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $text = str_replace('_', '', $text);\n    $text = str_replace(' ', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\tif (preg_match('/^[a-z]+_[a-z]+$/', $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "\treturn preg_match('/^[a-z_]+$/', $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = \"/^[a-z_]+$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text_array = str_split($text);\n    $result = true;\n    $i = 0;\n    while ($i < count($text_array)) {\n        if ($text_array[$i] == '_') {\n            $i++;\n            if (ctype_lower($text_array[$i])) {\n                $i++;\n            } else {\n                $result = false;\n                break;\n            }\n        } else {\n            $i++;\n        }\n    }\n    return $result;\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "\t$text = str_replace(' ', '', $text);\n\tif (preg_match('/^[a-z]+_[a-z]+$/', $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho text_lowercase_underscore('hello_world');\necho text_lowercase_underscore('hello world');\necho text_lowercase_underscore('hello_world_');\necho text_lowercase_underscore('hello_world_!');\necho text_lowercase_underscore('hello_world_1');\necho text_lowercase_underscore('hello_world_1!');\necho text_lowercase_underscore('hello_world_1!_');\necho text_lowercase_underscore('hello_world_1!_2');\necho text_lowercase_underscore('hello_world_1!_2!');\necho text_lowercase_underscore('hello_world_1!_2!_');\necho text_lowercase_underscore('hello_world_1!_2!_3');\necho text_lowercase_underscore('hello_world_1!_2!_3!');\necho text_lowercase_underscore('hello_world_1!_2!_3!_');\necho text_lowercase_underscore('hello_world_1!_2!_3!_4');\necho text_lowercase_underscore('hello_world_1!_2!_3!_4!');\necho text_lowercase_underscore('hello_world_1!_2!_3!_4!_');\necho text_lowercase_underscore('hello_world_1!_2!_3!_4!_5');\necho text_lowercase_underscore('hello_world_1!_2!_3!_4!_5!');\necho text_lowercase_underscore('hello_world_1!_2!_3!_4!_5!_');\necho text_lowercase_underscore('hello_world_1!_2!_3!_4!_5!_6');\necho text_lowercase_underscore('hello",
    "    $regex = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($regex, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_replace('_', '', $text);\n    $text = strtolower($text);\n    if ($text === $text) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_World');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('hello_world_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!_!_!_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!_!_!_!');\necho '<br>';\necho text_lowercase_underscore('hello_world_123!_!_!_!_!",
    "  $pattern = '/^[a-z_]+$/';\n  return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z]+_[a-z]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$regex = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($regex, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $text_array = str_split($text);\n    $is_lowercase = false;\n    $is_underscore = false;\n    foreach ($text_array as $char) {\n        if (ctype_lower($char)) {\n            $is_lowercase = true;\n        } elseif ($char == '_') {\n            $is_underscore = true;\n        } else {\n            return false;\n        }\n    }\n    return $is_lowercase && $is_underscore;\n}\n",
    "\tif (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho text_lowercase_underscore('this_is_a_text') . \"\\n\";\necho text_lowercase_underscore('thisIsAText') . \"\\n\";\necho text_lowercase_underscore('thisIs_aText') . \"\\n\";\necho text_lowercase_underscore('this_is_a_text_') . \"\\n\";\necho text_lowercase_underscore('_this_is_a_text') . \"\\n\";\necho text_lowercase_underscore('this_is_a_text_1') . \"\\n\";",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\tif (preg_match(\"/^[a-z]+(_[a-z]+)*$/\", $text)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    if (preg_match(\"/^[a-z_]+$/\", $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "\t$text = str_split($text);\n\t$result = false;\n\tforeach ($text as $key => $value) {\n\t\tif (ctype_lower($value)) {\n\t\t\t$result = true;\n\t\t} elseif ($value == '_') {\n\t\t\t$result = true;\n\t\t} else {\n\t\t\t$result = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n",
    "\t$regex = '/^[a-z_]+$/';\n\tif (preg_match($regex, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $text = str_replace(' ', '', $text);\n    $text = str_replace('_', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_HELLO');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_hello');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_hello_world_123_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world_123_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_hello_world_123_hello');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_hello_world_123_hello_');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_hello_world_123_hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_hello_world_123_hello_world_123_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world_123_hello_world_123_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_123_hello_world_123_hello_world_123');\necho '<br>';\necho text_lowercase_underscore('hello_world_123_hello_world_123_hello_world_123_",
    "    if (preg_match('/^[a-z_]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/^[a-z_]+$/', $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = strtolower($text);\n    $text = str_replace('_', '', $text);\n    if ($text == str_replace(' ', '', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = \"/^[a-z]+(_[a-z]+)*$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "  $text_array = str_split($text);\n  $text_array_count = count($text_array);\n  $text_array_count_minus_1 = $text_array_count - 1;\n  $text_array_count_minus_2 = $text_array_count - 2;\n  $text_array_count_minus_3 = $text_array_count - 3;\n  $text_array_count_minus_4 = $text_array_count - 4;\n  $text_array_count_minus_5 = $text_array_count - 5;\n  $text_array_count_minus_6 = $text_array_count - 6;\n  $text_array_count_minus_7 = $text_array_count - 7;\n  $text_array_count_minus_8 = $text_array_count - 8;\n  $text_array_count_minus_9 = $text_array_count - 9;\n  $text_array_count_minus_10 = $text_array_count - 10;\n  $text_array_count_minus_11 = $text_array_count - 11;\n  $text_array_count_minus_12 = $text_array_count - 12;\n  $text_array_count_minus_13 = $text_array_count - 13;\n  $text_array_count_minus_14 = $text_array_count - 14;\n  $text_array_count_minus_15 = $text_array_count - 15;\n  $text_array_count_minus_16 = $text_array_count - 16;\n  $text_array_count_minus_17 = $text_array_count - 17;\n  $text_array_count_minus_18 = $text_array_count - 18;\n  $text_array_count_minus_19 = $text_array_count - 19;\n  $text_array_count_minus_20 = $text_array_count - 20;\n  $text_array_count_minus_21 = $text_array_count - 21;\n  $text_array_count_minus_22 = $text_array_count - 22;",
    "    $text = str_replace(\"_\", \"\", $text);\n    return ctype_lower($text);\n}\n",
    "    $pattern = \"/^[a-z]+(_[a-z]+)*$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\tif (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z]+_[a-z]+$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    return preg_match($pattern, $text);\n}\n\necho text_lowercase_underscore('hello_world') . PHP_EOL;\necho text_lowercase_underscore('helloWorld') . PHP_EOL;\necho text_lowercase_underscore('hello_world_') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123') . PHP_EOL;\necho text_lowercase_underscore('hello_world_123_') . PHP_EOL;\necho text_lowercase_underscore('_hello_world') . PHP_EOL;\necho text_lowercase_underscore('_hello_world_') . PHP_EOL;\necho text_lowercase_underscore('_hello_world_123') . PHP_EOL;\necho text_lowercase_underscore('_hello_world_123_') . PHP_EOL;\necho text_lowercase_underscore('123_hello_world') . PHP_EOL;\necho text_lowercase_underscore('123_hello_world_') . PHP_EOL;\necho text_lowercase_underscore('123_hello_world_123') . PHP_EOL;\necho text_lowercase_underscore('123_hello_world_123_') . PHP_EOL;\necho text_lowercase_underscore('_123_hello_world') . PHP_EOL;\necho text_lowercase_underscore('_123_hello_world_') . PHP_EOL;\necho text_lowercase_underscore('_123_hello_world_123') . PHP_EOL;\necho text_lowercase_underscore('_123_hello_world_123_') . PHP_EOL;\necho text_lowercase_underscore('123_hello_world_123_') . PHP_EOL;\necho text_lowercase_underscore('_123_hello_world_123_') . PHP_EOL;\necho text_lowercase_underscore('_123_hello_world_123_') . PHP_EOL;\necho text_lowercase_underscore('_123_hello_world",
    "    $text_array = str_split($text);\n    $text_array_count = count($text_array);\n    $text_array_count_minus_one = $text_array_count - 1;\n    $text_array_count_minus_two = $text_array_count - 2;\n    $text_array_count_minus_three = $text_array_count - 3;\n    $text_array_count_minus_four = $text_array_count - 4;\n    $text_array_count_minus_five = $text_array_count - 5;\n    $text_array_count_minus_six = $text_array_count - 6;\n    $text_array_count_minus_seven = $text_array_count - 7;\n    $text_array_count_minus_eight = $text_array_count - 8;\n    $text_array_count_minus_nine = $text_array_count - 9;\n    $text_array_count_minus_ten = $text_array_count - 10;\n    $text_array_count_minus_eleven = $text_array_count - 11;\n    $text_array_count_minus_twelve = $text_array_count - 12;\n    $text_array_count_minus_thirteen = $text_array_count - 13;\n    $text_array_count_minus_fourteen = $text_array_count - 14;\n    $text_array_count_minus_fifteen = $text_array_count - 15;\n    $text_array_count_minus_sixteen = $text_array_count - 16;\n    $text_array_count_minus_seventeen = $text_array_count - 17;\n    $text_array_count_minus_eighteen = $text_array_count - 18;\n    $text_array_count_minus_nineteen = $text_array_count - 19;\n    $text_array_count_minus_twenty = $text_array_count - 20;\n    $text_array_count_minus_twentyone = $text_array_count - 21;\n    $text_array_count_",
    "    $text = str_replace('_', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_World');\necho '<br>';\necho text_lowercase_underscore('helloWorld');\necho '<br>';\necho text_lowercase_underscore('hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_hello_world_hello_world_hello_world');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_hello_world_hello_world_hello_world_');\necho '<br>';\necho text_lowercase_underscore('_hello_world_hello_world_hello_world_hello_world_hello_world_hello_world');\necho '<br>';\necho text_",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$text = str_split($text);\n\t$result = true;\n\tforeach ($text as $key => $value) {\n\t\tif ($value == '_') {\n\t\t\tif (!ctype_lower($text[$key - 1]) || !ctype_lower($text[$key + 1])) {\n\t\t\t\t$result = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_text');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_text_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_text_text');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_text_text_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_text_text_text');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_text_text_text_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_text_text_text_text');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_text_text_text_text_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_text_text_text_text_text');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_text_text_text_text_text_');\necho '<br>';\necho text_lowercase_underscore('text_lower",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n"
  ]
}
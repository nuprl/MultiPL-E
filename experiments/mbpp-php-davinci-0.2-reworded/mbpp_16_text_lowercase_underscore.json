{
  "name": "mbpp_16_text_lowercase_underscore",
  "language": "php",
  "prompt": "<?php\n// Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore($text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_16_text_lowercase_underscore.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return text_lowercase_underscore(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"aab_cbbbc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aab_Abbbc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Aaab_abbbc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "\t$text = str_split($text);\n\t$lowercase = range('a', 'z');\n\t$underscore = '_';\n\t$count = 0;\n\tforeach ($text as $key => $value) {\n\t\tif (in_array($value, $lowercase)) {\n\t\t\t$count++;\n\t\t} elseif ($value == $underscore) {\n\t\t\t$count++;\n\t\t}\n\t}\n\tif ($count == count($text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho text_lowercase_underscore('text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_unders",
    "    return preg_match('/^[a-z_]+$/', $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$text = strtolower($text);\n\t$text = str_replace('_', '', $text);\n\tif ($text == str_replace('_', '', $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho text_lowercase_underscore('this_is_a_text');\necho '<br>';\necho text_lowercase_underscore('thisIsAText');\necho '<br>';\necho text_lowercase_underscore('thisIs_aText');\necho '<br>';\necho text_lowercase_underscore('this_is_a_text');\necho '<br>';\necho text_lowercase_underscore('this_Is_a_text');\necho '<br>';\necho text_lowercase_underscore('this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text');\necho '<br>';\necho text_lowercase_underscore('this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text');\necho '<br>';\necho text_lowercase_underscore('this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text');\necho '<br>';\necho text_lowercase_underscore('this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text_');\necho '<br>';\necho text_lowercase_underscore('_this_is_a_text');\necho '<br>';\necho text_lowercase_underscore('this_is_a_text_');\necho '<br>';\necho text_lowercase_unders",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $text = str_split($text);\n    $result = [];\n    $result_string = '';\n    foreach ($text as $char) {\n        if (ctype_lower($char) || $char == '_') {\n            $result[] = $char;\n        }\n    }\n    foreach ($result as $char) {\n        $result_string .= $char;\n    }\n    if ($result_string == $text) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_');\necho '<br>';\necho text_lowercase_underscore('text_lowercase_underscore_text_lowercase_underscore_text_lowercase_underscore_text_lowercase_",
    "\t$pattern = '/^[a-z]+(_[a-z]+)*$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho text_lowercase_underscore('hello_world');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3_');\necho \"\\n\";\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3_",
    "    $result = preg_match('/^[a-z_]+$/', $text);\n    if ($result) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    if (preg_match('/^[a-z]+(_[a-z]+)*$/', $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$pattern = '/^[a-z_]+$/';\n\tif (preg_match($pattern, $text)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $text = str_replace('_', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = \"/^[a-z_]+$/\";\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    return preg_match($pattern, $text);\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/^[a-z]+(_[a-z]+)*$/', $text);\n}\n",
    "    $pattern = '/^[a-z]+(_[a-z]+)*$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $text = str_replace('_', '', $text);\n    if (ctype_lower($text)) {\n        return true;\n    }\n    return false;\n}\n",
    "    $pattern = '/^[a-z_]+$/';\n    if (preg_match($pattern, $text)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho text_lowercase_underscore('hello_world') . '<br>';\necho text_lowercase_underscore('hello_world_') . '<br>';\necho text_lowercase_underscore('hello_world_123') . '<br>';\necho text_lowercase_underscore('hello_world_123_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_0_1_2_3_') . '<br>';\necho text_lowercase_underscore('hello_world_123_456_789_"
  ]
}
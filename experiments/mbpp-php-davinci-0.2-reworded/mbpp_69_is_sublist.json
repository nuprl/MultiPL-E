{
  "name": "mbpp_69_is_sublist",
  "language": "php",
  "prompt": "<?php\n// Write a function to check whether an array contains the given subarray or not.\nfunction is_sublist($l, $s) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return is_sublist(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2, 4, 3, 5, 7), array(3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(4, 3)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 3, 5, 7), array(1, 6)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\nif(is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}",
    "    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1,2,3,4,5,6,7,8,9,10);\n$s = array(2,3,4);\n\nif(is_sublist($l, $s)) {\n    echo \"Yes, sublist exists\";\n} else {\n    echo \"No, sublist does not exists\";\n}",
    "    if(empty($s)) {\n        return true;\n    }\n\n    if(empty($l)) {\n        return false;\n    }\n\n    if($l[0] == $s[0]) {\n        $s = array_slice($s, 1);\n    }\n\n    return is_sublist(array_slice($l, 1), $s);\n}\n",
    "    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n\nif(is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}",
    "    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n\nif(is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6);\n$s = array(2, 3);\n\nif(is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}",
    "    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(2, 3);\n\nif(is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\n",
    "    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s = array_slice($s, 1);\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    foreach($s as $v) if(!in_array($v, $l)) return false;\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6);\n$s = array(2, 3, 4);\n\nif(is_sublist($l, $s)) echo \"Yes\";\nelse echo \"No\";",
    "    foreach($s as $v) if(!in_array($v, $l)) return false;\n    return true;\n}\n\n$list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$sublist = array(2, 3, 4);\n\nif(is_sublist($list, $sublist)) {\n    echo \"Sublist found\";\n} else {\n    echo \"Sublist not found\";\n}",
    "    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s = array_slice($s, 1);\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$s = [3, 4, 5];\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}",
    "    if (empty($s)) {\n        return true;\n    }\n    if (empty($l)) {\n        return false;\n    }\n    if ($l[0] == $s[0]) {\n        $s = array_slice($s, 1);\n    }\n    return is_sublist(array_slice($l, 1), $s);\n}\n\n$l = array(1, 2, 3, 4, 5);\n$s = array(3, 4);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$list = array(1, 2, 3, 4, 5);\n$sublist = array(2, 3);\n\nif(is_sublist($list, $sublist)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}",
    "    foreach($s as $v) if(!in_array($v, $l)) return false;\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6);\n$s = array(2, 3);\n\nif(is_sublist($l, $s)) echo \"Yes\";\nelse echo \"No\";",
    "    $i = 0;\n    $j = 0;\n    $n = count($l);\n    $m = count($s);\n    while ($i < $n && $j < $m) {\n        if ($l[$i] == $s[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n\nif (is_sublist($l, $s)) {\n    echo \"Sublist found\";\n} else {\n    echo \"Sublist not found\";\n}",
    "    $i = 0;\n    $j = 0;\n    while ($i < count($l) && $j < count($s)) {\n        if ($l[$i] == $s[$j]) {\n            $j++;\n        }\n        $i++;\n    }\n    return ($j == count($s));\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(3, 4, 5);\n\nif (is_sublist($l, $s)) {\n    echo \"Yes, it is a sublist\";\n} else {\n    echo \"No, it is not a sublist\";\n}",
    "    foreach($s as $v) {\n        if(!in_array($v, $l)) return false;\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(1, 2, 3);\n\nif(is_sublist($l, $s)) {\n    echo \"Yes, the sublist is present in the list.\";\n} else {\n    echo \"No, the sublist is not present in the list.\";\n}",
    "    foreach($s as $v) if(!in_array($v, $l)) return false;\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$s = array(2, 3, 4);\n\nif(is_sublist($l, $s)) {\n    echo \"Sublist found\";\n} else {\n    echo \"Sublist not found\";\n}",
    "    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$s = array(2, 3, 4);\n$s1 = array(2, 3, 5);\n\nif(is_sublist($l, $s)) {\n    echo \"Sublist found\";\n} else {\n    echo \"Sublist not found\";\n}\n\necho \"<br>\";\n\nif(is_sublist($l, $s1)) {\n    echo \"Sublist found\";\n} else {\n    echo \"Sublist not found\";\n}",
    "    foreach($s as $v) {\n        if(!in_array($v, $l)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$l = [1,2,3,4,5,6,7,8,9];\n$s = [3,4,5];\n\nvar_dump(is_sublist($l, $s));\n"
  ]
}
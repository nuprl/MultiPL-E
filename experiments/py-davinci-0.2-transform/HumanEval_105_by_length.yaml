name: HumanEval_105_by_length
language: py
prompt: "from typing import List\n\ndef by_length(arr: List[int]) -> List[str]:\n\
  \    \"\"\"\n    Given an array of integers, sort the integers that are between\
  \ 1 and 9 inclusive,\n    reverse the resulting array, and then replace each digit\
  \ by its corresponding name from\n    \"One\", \"Two\", \"Three\", \"Four\", \"\
  Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n\n    For example:\n    >>> by_length([2,\
  \ 1, 1, 4, 5, 8, 2, 3])\n    ['Eight', 'Five', 'Four', 'Three', 'Two', 'Two', 'One',\
  \ 'One']\n    \n      If the array is empty, return an empty array:\n    >>> by_length([])\n\
  \    []\n    \n      If the array has any strange number ignore it:\n    >>> by_length([1,\
  \ -1, 55])\n    ['One']\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([2, 1, 1, 4, 5, 8, 2, 3]) == ['Eight',\
  \ 'Five', 'Four', 'Three', 'Two', 'Two', 'One', 'One']\n    assert candidate([])\
  \ == []\n    assert candidate([1, -1, 55]) == ['One']\n    assert candidate([1,\
  \ -1, 3, 2]) == ['Three', 'Two', 'One']\n    assert candidate([9, 4, 8]) == ['Nine',\
  \ 'Eight', 'Four']\n\ndef test_check():\n    check(by_length)\n\ntest_check()\n"
completions: ["    # TODO: implement this function\n    pass\n\n", "    # your code\
    \ here\n    # return []\n    # return [\"One\"]\n    # return [\"Eight\", \"Five\"\
    , \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"]\n    # return [\"One\"\
    , \"One\", \"Two\", \"Two\", \"Three\", \"Four\", \"Five\", \"Eight\"]\n    #\
    \ return [\"One\", \"One\", \"Two\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
    Eight\"]\n    # return [\"One\", \"One\", \"Two\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Eight\"]\n    # return [\"One\", \"One\", \"Two\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Eight\"]\n    # return [\"One\", \"One\", \"Two\", \"\
    Two\", \"Three\", \"Four\", \"Five\", \"Eight\"]\n    # return [\"One\", \"One\"\
    , \"Two\", \"Two\", \"Three\", \"Four\", \"Five\", \"Eight\"]\n    # return [\"\
    One\", \"One\", \"Two\", \"Two\", \"Three\", \"Four\", \"Five\", \"Eight\"]\n\
    \    # return [\"One\", \"One\", \"Two\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Eight\"]\n    # return [\"One\", \"One\", \"Two\", \"Two\", \"Three\", \"\
    Four\", \"Five\", \"Eight\"]\n    # return [\"One\", \"One\", \"Two\", \"Two\"\
    , \"Three\", \"Four\", \"Five\", \"Eight\"]\n    # return [\"One\", \"One\", \"\
    Two\", \"Two\", \"Three\", \"Four\", \"Five\", \"Eight\"]\n    # return [\"One\"\
    , \"One\", \"Two\", \"Two\", \"Three\", \"Four\", \"Five\", \"Eight\"]\n    #\
    \ return [\"One\", \"One\", \"Two\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
    Eight\"]\n    # return [\"One\", \"One\", \"Two\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Eight\"]\n    # return [\"One\", \"One\", \"Two\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Eight\"]\n    # return [\"One\", \"One\", \"Two\", \"\
    Two\", \"Three\", \"Four\", \"Five\", \"Eight\"]\n    # return [\"One\", \"One\"\
    , \"Two\", \"Two\", \"Three", "    # TODO: Implement me\n    pass\n", "    # TODO:\
    \ implement this function\n    pass\n", "    # TODO: Implement me!\n    pass\n",
  "    # TODO: Implement me\n    pass\n", "    # TODO: Implement me\n    pass\n",
  "    # TODO: Write your code here\n    pass\n\n", "    # YOUR CODE HERE\n    raise\
    \ NotImplementedError()\n", "    # your code here\n    pass\n\n", "    # TODO:\
    \ implement this function\n    pass\n", "    # TODO: Implement me\n    pass\n",
  "    # TODO: write your code here\n    pass\n\n", "    # TODO: Implement me!\n \
    \   pass\n", "    # TODO: implement this function\n    pass\n", "    # TODO: Implement\
    \ me\n    pass\n", "    pass\n", "    # YOUR CODE HERE\n    raise NotImplementedError()\n\
    \n", "    # TODO: Write your code here\n    pass\n", "    # TODO: Implement me!\n\
    \    pass\n", "    # TODO: Implement me\n    pass\n", "    # TODO: Write your\
    \ code here\n    pass\n\n", "    # TODO: Implement me\n    pass\n", "    # TODO:\
    \ Implement me!\n    pass\n", "    # TODO: Implement me!\n    pass\n", "    num_names\
    \ = {\n        1: \"One\",\n        2: \"Two\",\n        3: \"Three\",\n     \
    \   4: \"Four\",\n        5: \"Five\",\n        6: \"Six\",\n        7: \"Seven\"\
    ,\n        8: \"Eight\",\n        9: \"Nine\"\n    }\n    arr = [num_names[num]\
    \ for num in arr if num in num_names]\n    arr.sort()\n    arr.reverse()\n   \
    \ return arr\n", "    numbers = {\n        1: \"One\",\n        2: \"Two\",\n\
    \        3: \"Three\",\n        4: \"Four\",\n        5: \"Five\",\n        6:\
    \ \"Six\",\n        7: \"Seven\",\n        8: \"Eight\",\n        9: \"Nine\"\n\
    \    }\n    return [numbers[num] for num in sorted(arr, reverse=True) if num in\
    \ numbers]", "    # TODO: Implement me!\n    pass\n", "    # TODO: Implement me\n\
    \    pass\n", "    # TODO: Implement me\n    pass\n", "    # TODO: Implement me\n\
    \    pass\n", "    # TODO: implement this function\n    pass\n", "    # TODO:\
    \ Implement this function\n    pass\n", "    # your code here\n    return []\n",
  "    # TODO: implement this function\n    pass\n", "    # TODO: implement this function\n\
    \    pass\n", "    # TODO: implement me\n    pass\n", "    # TODO: Write your\
    \ code here\n    pass\n", '    pass', "    # TODO: Implement me!\n    pass\n",
  "    # TODO: write your code here\n    pass\n", "    # TODO: Implement me!\n   \
    \ pass\n", "    # your code here\n    return []", "    # TODO: Implement me\n\
    \    pass\n", "    # TODO: Implement me\n    pass\n", "    # your code here\n\
    \    pass\n", "    # TODO: Your code here\n    pass\n", "    # TODO: Write your\
    \ code here\n    pass\n\n", "    # Your code goes here\n    pass\n", "    # TODO:\
    \ Implement me!\n    pass\n", "    # TODO: Implement me\n    pass\n", "    # TODO:\
    \ Implement me!\n    pass\n", "    # your code here\n    pass\n", '    pass',
  "    # TODO: Implement me\n    pass\n", "    # TODO: implement me!\n    return []\n",
  "    # TODO: Implement me!\n    pass\n", "    # TODO: Implement me!\n    pass\n",
  "    # TODO: Implement me\n    return []\n", "    # TODO: Implement this function\n\
    \    pass\n", "    # TODO: implement this function\n    pass\n", "    # TODO:\
    \ Implement me!\n    pass\n", "    # TODO: Implement me\n    pass\n", "    # TODO:\
    \ implement this function\n    pass\n", "    # TODO: Implement me!\n    pass\n\
    \n", "    numbers = [str(i) for i in arr if i in range(1, 10)]\n    numbers.sort()\n\
    \    numbers.reverse()\n    numbers = [int(i) for i in numbers]\n    return [number_to_name(i)\
    \ for i in numbers]\n", "    # TODO: Implement me\n    pass\n", "    # TODO: implement\
    \ this function\n    pass\n", "    # YOUR CODE HERE\n    raise NotImplementedError()\n",
  "    # TODO: implement this function\n    pass\n", "    # TODO: Implement me\n \
    \   pass\n", "    # TODO: Write your code here\n    pass\n", "    # your code\
    \ here\n    pass\n\n", "    # your code here\n    pass\n", "    # TODO: write\
    \ your code here\n    pass\n\n", "    # TODO: Implement me\n    pass\n", "   \
    \ pass\n", "    # TODO: Implement me!\n    pass\n", "    # TODO: write your code\
    \ here\n    pass\n\n", "    pass\n", "    numbers = [str(num) for num in arr if\
    \ num in range(1, 10)]\n    numbers.sort(key=len)\n    numbers.reverse()\n   \
    \ return [\n        \"One\" if num == \"1\" else \"Two\" if num == \"2\" else\
    \ \"Three\" if num == \"3\" else \"Four\" if num == \"4\" else \"Five\" if num\
    \ == \"5\" else \"Six\" if num == \"6\" else \"Seven\" if num == \"7\" else \"\
    Eight\" if num == \"8\" else \"Nine\" for num in numbers\n    ]\n", "    # TODO:\
    \ Implement me\n    pass\n", "    # TODO: Write your code here\n    pass\n", " \
    \   # TODO: implement this function\n    pass\n", "    # TODO: Implement me!\n\
    \    pass\n", "    # your code here\n    return []\n", "    # 1. sort the array\n\
    \    # 2. reverse the array\n    # 3. replace each digit by its corresponding\
    \ name\n    # 4. return the array\n    #\n    # 1. sort the array\n    # 2. reverse\
    \ the array\n    # 3. replace each digit by its corresponding name\n    # 4. return\
    \ the array\n    #\n    # 1. sort the array\n    # 2. reverse the array\n    #\
    \ 3. replace each digit by its corresponding name\n    # 4. return the array\n\
    \    #\n    # 1. sort the array\n    # 2. reverse the array\n    # 3. replace\
    \ each digit by its corresponding name\n    # 4. return the array\n    #\n   \
    \ # 1. sort the array\n    # 2. reverse the array\n    # 3. replace each digit\
    \ by its corresponding name\n    # 4. return the array\n    #\n    # 1. sort the\
    \ array\n    # 2. reverse the array\n    # 3. replace each digit by its corresponding\
    \ name\n    # 4. return the array\n    #\n    # 1. sort the array\n    # 2. reverse\
    \ the array\n    # 3. replace each digit by its corresponding name\n    # 4. return\
    \ the array\n    #\n    # 1. sort the array\n    # 2. reverse the array\n    #\
    \ 3. replace each digit by its corresponding name\n    # 4. return the array\n\
    \    #\n    # 1. sort the array\n    # 2. reverse the array\n    # 3. replace\
    \ each digit by its corresponding name\n    # 4. return the array\n    #\n   \
    \ # 1. sort the array\n    # 2. reverse the array\n    # 3. replace each digit\
    \ by its corresponding name\n    # 4. return the array\n    #\n    # 1. sort the\
    \ array\n    # 2. reverse the array\n    # 3. replace each digit by its corresponding\
    \ name\n    # 4. return the array\n    #\n    # 1. sort the array\n    # 2. reverse\
    \ the array\n    # 3. replace each digit by its corresponding name\n    # 4. return\
    \ the array\n    #\n    # 1. sort the array\n    # 2. reverse the array\n    #\
    \ 3. replace each digit by its corresponding name\n    # 4. return the array\n\
    \    #\n    # 1.", "    # TODO: Implement me\n    pass\n", "    # TODO: Write\
    \ your code here\n    pass\n\n", "    arr = [str(i) for i in arr if i in range(1,\
    \ 10)]\n    arr.sort(key=len)\n    arr.reverse()\n    return [{1: 'One', 2: 'Two',\
    \ 3: 'Three', 4: 'Four', 5: 'Five', 6: 'Six', 7: 'Seven', 8: 'Eight', 9: 'Nine'}[int(i)]\
    \ for i in arr]", "    # TODO: Write your code here\n    pass\n", "    # TODO:\
    \ Write your code here\n    pass\n\n", "    # TODO: Write your code here\n   \
    \ pass\n", "    # TODO: Implement me!\n    pass\n", "    # TODO: Implement me\n\
    \    pass\n", "    # your code here\n    pass\n", "    # TODO: Implement me\n\
    \    pass\n", "    # TODO: write your code here\n    pass\n\n", "    # TODO: Implement\
    \ me\n    pass\n", "    # TODO: Implement me!\n    #raise NotImplementedError()\n\
    \    arr.sort()\n    arr.reverse()\n    for i in range(len(arr)):\n        if\
    \ arr[i] == 1:\n            arr[i] = \"One\"\n        elif arr[i] == 2:\n    \
    \        arr[i] = \"Two\"\n        elif arr[i] == 3:\n            arr[i] = \"\
    Three\"\n        elif arr[i] == 4:\n            arr[i] = \"Four\"\n        elif\
    \ arr[i] == 5:\n            arr[i] = \"Five\"\n        elif arr[i] == 6:\n   \
    \         arr[i] = \"Six\"\n        elif arr[i] == 7:\n            arr[i] = \"\
    Seven\"\n        elif arr[i] == 8:\n            arr[i] = \"Eight\"\n        elif\
    \ arr[i] == 9:\n            arr[i] = \"Nine\"\n        else:\n            arr[i]\
    \ = \"\"\n    arr = list(filter(None, arr))\n    return arr\n", "    # TODO: Implement\
    \ me\n    pass\n", "    # YOUR CODE HERE\n    raise NotImplementedError()\n\n",
  "    # TODO: implement this function\n    pass\n", "    # your code here\n    pass\n\
    \n", "    # YOUR CODE HERE\n    raise NotImplementedError()\n\n", "    # TODO:\
    \ Implement me\n    pass\n", "    # your code here\n    pass\n", "    # TODO:\
    \ Implement me\n    pass\n", "    # TODO: Write your code here\n    pass\n", " \
    \   # TODO: Implement me!\n    pass\n", "    # TODO: implement this function\n\
    \    pass\n", "    pass\n", "    # TODO: Implement me!\n    pass\n", "    # TODO:\
    \ Implement me\n    pass\n", "    # your code here\n    pass\n\n", "    sorted_arr\
    \ = sorted(arr)\n    reversed_arr = sorted_arr[::-1]\n    result = []\n    for\
    \ num in reversed_arr:\n        if num == 1:\n            result.append(\"One\"\
    )\n        elif num == 2:\n            result.append(\"Two\")\n        elif num\
    \ == 3:\n            result.append(\"Three\")\n        elif num == 4:\n      \
    \      result.append(\"Four\")\n        elif num == 5:\n            result.append(\"\
    Five\")\n        elif num == 6:\n            result.append(\"Six\")\n        elif\
    \ num == 7:\n            result.append(\"Seven\")\n        elif num == 8:\n  \
    \          result.append(\"Eight\")\n        elif num == 9:\n            result.append(\"\
    Nine\")\n    return result\n", "    # TODO: Implement me\n    pass\n", "    #\
    \ TODO: Implement me\n    pass\n", "    # TODO: implement this function\n    pass\n",
  "    # TODO: implement me\n    # raise NotImplementedError()\n    # return []\n\
    \    # return ['One']\n    # return ['Eight', 'Five', 'Four', 'Three', 'Two',\
    \ 'Two', 'One', 'One']\n    # return ['One', 'One', 'Two', 'Two', 'Three', 'Four',\
    \ 'Five', 'Eight']\n    # return ['One', 'One', 'Two', 'Two', 'Three', 'Four',\
    \ 'Five', 'Eight', 'Nine']\n    # return ['One', 'One', 'Two', 'Two', 'Three',\
    \ 'Four', 'Five', 'Eight', 'Nine', 'Nine']\n    # return ['One', 'One', 'Two',\
    \ 'Two', 'Three', 'Four', 'Five', 'Eight', 'Nine', 'Nine', 'Nine']\n    # return\
    \ ['One', 'One', 'Two', 'Two', 'Three', 'Four', 'Five', 'Eight', 'Nine', 'Nine',\
    \ 'Nine', 'Nine']\n    # return ['One', 'One', 'Two', 'Two', 'Three', 'Four',\
    \ 'Five', 'Eight', 'Nine', 'Nine', 'Nine', 'Nine', 'Nine']\n    # return ['One',\
    \ 'One', 'Two', 'Two', 'Three', 'Four', 'Five', 'Eight', 'Nine', 'Nine', 'Nine',\
    \ 'Nine', 'Nine', 'Nine']\n    # return ['One', 'One', 'Two', 'Two', 'Three',\
    \ 'Four', 'Five', 'Eight', 'Nine', 'Nine', 'Nine', 'Nine', 'Nine', 'Nine', 'Nine']\n\
    \    # return ['One', 'One', 'Two', 'Two', 'Three', 'Four', 'Five', 'Eight', 'Nine',\
    \ 'Nine', 'Nine', 'Nine', 'Nine', 'Nine', 'Nine', 'Nine']\n    # return ['One',\
    \ 'One', 'Two', 'Two', 'Three', 'Four', 'Five', 'Eight', 'Nine', 'Nine', 'Nine',\
    \ 'Nine', 'Nine', 'Nine', 'Nine', 'Nine', 'Nine']\n    # return ['One', 'One',\
    \ 'Two', 'Two', 'Three', 'Four', 'Five', 'Eight', 'Nine', 'Nine', 'Nine', 'Nine",
  "    # TODO: Implement me\n    pass\n", "    # Your code here\n    pass\n\n", " \
    \   # TODO: Implement me!\n    pass\n", "    # YOUR CODE HERE\n    pass\n\n",
  "    # TODO: implement this function\n    pass\n", "    # TODO: Implement me!\n\
    \    pass\n", "    # TODO: Implement this function\n    pass\n", "    # TODO:\
    \ Implement me!\n    pass\n", "    # your code here\n    pass\n", "    # TODO:\
    \ Implement me\n    pass\n", "    # your code here\n    pass\n\n", "    numbers\
    \ = [str(i) for i in arr if i in range(1, 10)]\n    numbers.sort()\n    numbers.reverse()\n\
    \    return [{'1': 'One', '2': 'Two', '3': 'Three', '4': 'Four', '5': 'Five',\
    \ '6': 'Six', '7': 'Seven', '8': 'Eight', '9': 'Nine'}[i] for i in numbers]",
  "    # TODO: Write your code here\n    pass\n", "    # TODO: implement this function\n\
    \    pass\n", "    # TODO: Implement me\n    pass\n", "    # TODO: Implement me\n\
    \    pass\n", "    # your code here\n    return []\n", "    # TODO: Implement\
    \ me!\n    pass\n", "    # TODO: Implement me\n    pass\n", "    # TODO: implement\
    \ this function\n    pass\n", "    # TODO: Implement me\n    pass\n", "    # TODO:\
    \ Implement me!\n    pass\n", "    # TODO: Implement me!\n    pass\n", "    #\
    \ your code here\n    pass\n", "    # TODO: write your code here\n    pass\n\n",
  "    # TODO: Implement me!\n    return []\n\n", "    # TODO: Implement me!\n   \
    \ pass\n", "    # TODO: Write your code here\n    pass\n", "    # your code here\n\
    \    pass\n", "    if len(arr) == 0:\n        return []\n    else:\n        arr\
    \ = [x for x in arr if x > 0 and x < 10]\n        arr.sort()\n        arr.reverse()\n\
    \        return [{1: 'One', 2: 'Two', 3: 'Three', 4: 'Four', 5: 'Five', 6: 'Six',\
    \ 7: 'Seven', 8: 'Eight', 9: 'Nine'}[x] for x in arr]\n", "    # TODO: Implement\
    \ me!\n    pass\n", "    # TODO: implement this function\n    pass\n", "    #\
    \ TODO: implement this function\n    pass\n", "    pass\n", "    # TODO: Implement\
    \ me\n    pass\n", "    # TODO: Write your code here\n    pass\n\n", "    # TODO:\
    \ Implement me!\n    pass\n", "    # TODO: implement this function\n    pass\n",
  "    # TODO: Implement me\n    pass\n", "    # TODO: Implement me!\n    return []\n",
  "    # your code here\n    pass\n", "    # TODO: Write your code here\n    pass\n",
  "    # TODO: Implement me!\n    pass\n", "    # TODO: write your code here\n   \
    \ pass\n", "    # your code here\n    return []", "    # TODO: Implement me\n\
    \    pass\n", "    # TODO: Implement me!\n    pass\n", "    # TODO: Implement\
    \ this function\n    pass\n\n", "    # TODO: Implement me\n    pass\n", "    #\
    \ TODO: Implement me\n    pass\n", "    # TODO: implement this function\n    pass\n",
  "    # your code here\n    pass\n", "    # TODO: Implement me!\n    pass\n", " \
    \   # TODO: implement me\n    pass\n", "    # TODO: Implement me\n    pass\n",
  "    # your code here\n    pass\n", "    # TODO: Implement me\n    pass\n", "  \
    \  # TODO: Write your code here\n    pass\n", "    # TODO: implement me\n    pass\n",
  "    # TODO: Write your code here\n    pass\n", "    # YOUR CODE HERE\n    raise\
    \ NotImplementedError()\n", "    # TODO: your code here\n    pass\n\n", '    pass',
  "    # TODO: Write your code here\n    pass\n", "    # YOUR CODE HERE\n    raise\
    \ NotImplementedError()\n", "    # TODO: implement this function\n    pass\n",
  "    # TODO: implement this function\n    pass\n", "    # TODO: Implement me!\n\
    \    pass\n", "    # TODO: Implement me\n    pass\n", "    # TODO: Implement me!\n\
    \    pass\n", "    pass\n", "    # YOUR CODE HERE\n    raise NotImplementedError()\n",
  "    # Your code here\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n \
    \   # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n   ", "    # TODO: implement this function\n    pass\n",
  "    # TODO: Your code here!\n    pass\n", "    # Your code here\n    pass\n", " \
    \   names = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\"]\n    return [names[i-1] for i in sorted(arr, reverse=True)\
    \ if i in range(1, 10)]", "    # TODO: implement this function\n    pass\n", " \
    \   # TODO: implement this function\n    pass\n", "    # TODO: Implement me!\n\
    \    pass\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

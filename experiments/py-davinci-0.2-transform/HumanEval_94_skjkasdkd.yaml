name: HumanEval_94_skjkasdkd
language: py
prompt: "from typing import List\n\ndef skjkasdkd(lst: List[int]) -> int:\n    \"\"\
  \"You are given a list of integers.\n    You need to find the largest prime value\
  \ and return the sum of its digits.\n\n    Examples:\n    >>> skjkasdkd([0, 3, 2,\
  \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n    10\n   \
  \ >>> skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n  \
  \  25\n    >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32,\
  \ 30, 1, 9, 3])\n    13\n    >>> skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91,\
  \ 83, 0, 5, 6])\n    11\n    >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n    3\n    >>>\
  \ skjkasdkd([0, 8, 1, 2, 1, 7])\n    7\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
  \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) == 10\n    assert candidate([1, 0,\
  \ 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) == 25\n    assert candidate([1,\
  \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) == 13\n    assert\
  \ candidate([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) == 11\n    assert\
  \ candidate([0, 81, 12, 3, 1, 21]) == 3\n    assert candidate([0, 8, 1, 2, 1, 7])\
  \ == 7\n    assert candidate([8191]) == 19\n    assert candidate([8191, 123456,\
  \ 127, 7]) == 19\n    assert candidate([127, 97, 8192]) == 10\n\ndef test_check():\n\
  \    check(skjkasdkd)\n\ntest_check()\n"
completions: ["    # your code here\n    return 0\n\n", "    return sum(int(x) for\
    \ x in str(max(filter(lambda x: all(x % i for i in range(2, x)), lst))))\n", " \
    \   def is_prime(n):\n        if n == 1:\n            return False\n        for\
    \ i in range(2, n):\n            if n % i == 0:\n                return False\n\
    \        return True\n\n    primes = [i for i in lst if is_prime(i)]\n    largest_prime\
    \ = max(primes)\n    return sum(int(i) for i in str(largest_prime))\n", "    return\
    \ sum(int(i) for i in str(max(i for i in lst if is_prime(i))))\n", "    def is_prime(n):\n\
    \        if n == 1:\n            return False\n        elif n == 2:\n        \
    \    return True\n        else:\n            for i in range(2, n):\n         \
    \       if n % i == 0:\n                    return False\n            return True\n\
    \n    def sum_of_digits(n):\n        return sum([int(i) for i in str(n)])\n\n\
    \    return sum_of_digits(max([i for i in lst if is_prime(i)]))\n\n", "    return\
    \ sum(map(int, str(max(filter(lambda x: all(x % i for i in range(2, x)), lst)))))\n",
  "    lst = sorted(lst, reverse=True)\n    for i in lst:\n        if i > 1:\n   \
    \         for j in range(2, i):\n                if (i % j) == 0:\n          \
    \          break\n            else:\n                return sum(map(int, str(i)))\n\
    \    return 0\n", "    return sum(map(int, str(max(filter(lambda x: all(x % i\
    \ for i in range(2, x)), lst)))))\n", "    return sum(map(int, str(max(filter(is_prime,\
    \ lst)))))\n\n", "    lst.sort()\n    lst.reverse()\n    for i in lst:\n     \
    \   if is_prime(i):\n            return sum(int(x) for x in str(i))\n", "    return\
    \ sum(map(int, str(max(filter(lambda x: all(x % i for i in range(2, x)), lst)))))\n",
  "    lst = sorted(lst, reverse=True)\n    for i in lst:\n        if is_prime(i):\n\
    \            return sum(map(int, str(i)))\n", "    primes = []\n    for i in lst:\n\
    \        if i > 1:\n            for j in range(2, i):\n                if (i %\
    \ j) == 0:\n                    break\n            else:\n                primes.append(i)\n\
    \    return sum(map(int, str(max(primes))))\n", "    def is_prime(n):\n      \
    \  if n == 2 or n == 3: return True\n        if n < 2 or n%2 == 0: return False\n\
    \        if n < 9: return True\n        if n%3 == 0: return False\n        r =\
    \ int(n**0.5)\n        f = 5\n        while f <= r:\n            if n%f == 0:\
    \ return False\n            if n%(f+2) == 0: return False\n            f +=6\n\
    \        return True\n    def sum_digits(n):\n        s = 0\n        while n:\n\
    \            s += n % 10\n            n //= 10\n        return s\n    lst = sorted(lst,\
    \ reverse=True)\n    for i in lst:\n        if is_prime(i):\n            return\
    \ sum_digits(i)\n", "    return sum(map(int, str(max(filter(lambda x: all(x %\
    \ i for i in range(2, x)), lst)))))\n", "    lst.sort()\n    lst.reverse()\n \
    \   for i in lst:\n        if is_prime(i):\n            return sum(int(x) for\
    \ x in str(i))\n", "    return sum(map(int, str(max(filter(lambda x: all(x % i\
    \ for i in range(2, x)), lst)))))\n\n", "    return sum(map(int, str(max(filter(lambda\
    \ x: all(x % i for i in range(2, x)), lst)))))\n", "    return sum(map(int, str(max(filter(lambda\
    \ x: all(x % i for i in range(2, x)), lst)))))\n", "    return sum(map(int, str(max(filter(lambda\
    \ x: all(x % i for i in range(2, x)), lst)))))\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

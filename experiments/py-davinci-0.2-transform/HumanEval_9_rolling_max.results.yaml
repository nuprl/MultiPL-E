language: py
name: HumanEval_9_rolling_max
results:
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzug93450.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpzug93450.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpzug93450.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpzug93450.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw4ud_4m8.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpw4ud_4m8.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpw4ud_4m8.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpw4ud_4m8.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw4ud_4m8.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpw4ud_4m8.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpw4ud_4m8.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpw4ud_4m8.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        max_list.append(max_so_far)\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwsn4ocy2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpwsn4ocy2.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpwsn4ocy2.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpwsn4ocy2.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw4ud_4m8.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpw4ud_4m8.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpw4ud_4m8.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpw4ud_4m8.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzug93450.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpzug93450.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpzug93450.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpzug93450.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = 0\n    for number in numbers:\n        if number > max_so_far:\n\
    \            max_so_far = number\n        result.append(max_so_far)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = -1\n    for number in numbers:\n        if number > max_so_far:\n\
    \            max_so_far = number\n        result.append(max_so_far)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwll43r6s.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpwll43r6s.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpwll43r6s.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpwll43r6s.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_list = []\n\
    \    max_value = 0\n    for number in numbers:\n        if number > max_value:\n\
    \            max_value = number\n        max_list.append(max_value)\n    return\
    \ max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzug93450.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpzug93450.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpzug93450.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpzug93450.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_7utfccg.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_7utfccg.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp_7utfccg.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_7utfccg.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwll43r6s.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpwll43r6s.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpwll43r6s.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpwll43r6s.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = -1\n    for number in numbers:\n        if number > max_so_far:\n\
    \            max_so_far = number\n        result.append(max_so_far)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_7utfccg.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_7utfccg.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp_7utfccg.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_7utfccg.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5ll8__qb.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp5ll8__qb.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp5ll8__qb.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5ll8__qb.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_7utfccg.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_7utfccg.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp_7utfccg.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_7utfccg.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    rolling_max =\
    \ []\n    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n       \
    \ if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n        rolling_max.append(max_so_far)\n\
    \    return rolling_max\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkfrmy8nw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpkfrmy8nw.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpkfrmy8nw.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpkfrmy8nw.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for n in numbers[1:]:\n        if\
    \ n > max_so_far:\n            max_so_far = n\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv7k8a5m3.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpv7k8a5m3.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpv7k8a5m3.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpv7k8a5m3.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_so_far_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_so_far_list.append(max_so_far)\n    return max_so_far_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl7uxe9he.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpl7uxe9he.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpl7uxe9he.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpl7uxe9he.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''

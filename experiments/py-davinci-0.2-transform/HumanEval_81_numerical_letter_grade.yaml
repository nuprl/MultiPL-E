name: HumanEval_81_numerical_letter_grade
language: py
prompt: "from typing import List\n\ndef numerical_letter_grade(grades: List[float])\
  \ -> List[str]:\n    \"\"\"It is the last week of the semester and the teacher has\
  \ to give the grades\n    to students. The teacher has been making her own algorithm\
  \ for grading.\n    The only problem is, she has lost the code she used for grading.\n\
  \    She has given you a list of GPAs for some students and you have to write \n\
  \    a function that can output a list of letter grades using the following table:\n\
  \             GPA       |    Letter grade\n              4.0                A+\n\
  \            > 3.7                A \n            > 3.3                A- \n   \
  \         > 3.0                B+\n            > 2.7                B \n       \
  \     > 2.3                B-\n            > 2.0                C+\n           \
  \ > 1.7                C\n            > 1.3                C-\n            > 1.0\
  \                D+ \n            > 0.7                D \n            > 0.0   \
  \             D-\n              0.0                E\n    \n\n    Example:\n   \
  \ >>> grade_equation([4.0, 3, 1.7, 2, 3.5])\n    ['A+', 'B', 'C-', 'C', 'A-']\n\
  \    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([4.0, 3, 1.7, 2, 3.5]) == ['A+',\
  \ 'B', 'C-', 'C', 'A-']\n    assert candidate([1.2]) == ['D+']\n    assert candidate([0.5])\
  \ == ['D-']\n    assert candidate([0.0]) == ['E']\n    assert candidate([1.0, 0.3,\
  \ 1.5, 2.8, 3.3]) == ['D', 'D-', 'C-', 'B', 'B+']\n    assert candidate([0.0, 0.7])\
  \ == ['E', 'D-']\n\ndef test_check():\n    check(numerical_letter_grade)\n\ntest_check()\n"
completions: ["    # Write your code here\n    pass\n\n", "    grades_list = []\n\
    \    for grade in grades:\n        if grade >= 4.0:\n            grades_list.append('A+')\n\
    \        elif grade >= 3.7:\n            grades_list.append('A')\n        elif\
    \ grade >= 3.3:\n            grades_list.append('A-')\n        elif grade >= 3.0:\n\
    \            grades_list.append('B+')\n        elif grade >= 2.7:\n          \
    \  grades_list.append('B')\n        elif grade >= 2.3:\n            grades_list.append('B-')\n\
    \        elif grade >= 2.0:\n            grades_list.append('C+')\n        elif\
    \ grade >= 1.7:\n            grades_list.append('C')\n        elif grade >= 1.3:\n\
    \            grades_list.append('C-')\n        elif grade >= 1.0:\n          \
    \  grades_list.append('D+')\n        elif grade >= 0.7:\n            grades_list.append('D')\n\
    \        elif grade >= 0.0:\n            grades_list.append('D-')\n        else:\n\
    \            grades_list.append('E')\n    return grades_list\n", "    letter_grades\
    \ = []\n    for grade in grades:\n        if grade >= 4.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 3.7:\n            letter_grades.append('A')\n        elif\
    \ grade >= 3.3:\n            letter_grades.append('A-')\n        elif grade >=\
    \ 3.0:\n            letter_grades.append('B+')\n        elif grade >= 2.7:\n \
    \           letter_grades.append('B')\n        elif grade >= 2.3:\n          \
    \  letter_grades.append('B-')\n        elif grade >= 2.0:\n            letter_grades.append('C+')\n\
    \        elif grade >= 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade >= 1.3:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('D+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    return letter_grades\n", "    # Your code here\n    pass\n", "    # TODO:\
    \ Write your code here\n    pass\n", "    # TODO: Write your code here\n    pass\n",
  "    # YOUR CODE HERE\n    pass\n", "    # TODO: Write your code here\n    pass\n",
  "    # YOUR CODE HERE\n    pass\n\n", "    # YOUR CODE HERE\n    raise NotImplementedError()\n",
  "    pass\n\n", "    # YOUR CODE HERE\n    pass\n", "    # YOUR CODE HERE\n    return\
    \ []\n", "    # TODO: Write your code here\n    pass\n\n", "    # YOUR CODE HERE\n\
    \    grades_list = []\n    for grade in grades:\n        if grade == 4.0:\n  \
    \          grades_list.append('A+')\n        elif grade > 3.7:\n            grades_list.append('A')\n\
    \        elif grade > 3.3:\n            grades_list.append('A-')\n        elif\
    \ grade > 3.0:\n            grades_list.append('B+')\n        elif grade > 2.7:\n\
    \            grades_list.append('B')\n        elif grade > 2.3:\n            grades_list.append('B-')\n\
    \        elif grade > 2.0:\n            grades_list.append('C+')\n        elif\
    \ grade > 1.7:\n            grades_list.append('C')\n        elif grade > 1.3:\n\
    \            grades_list.append('C-')\n        elif grade > 1.0:\n           \
    \ grades_list.append('D+')\n        elif grade > 0.7:\n            grades_list.append('D')\n\
    \        elif grade > 0.0:\n            grades_list.append('D-')\n        elif\
    \ grade == 0.0:\n            grades_list.append('E')\n    return grades_list\n",
  "    grades_list = []\n    for grade in grades:\n        if grade >= 4.0:\n    \
    \        grades_list.append('A+')\n        elif grade >= 3.7:\n            grades_list.append('A')\n\
    \        elif grade >= 3.3:\n            grades_list.append('A-')\n        elif\
    \ grade >= 3.0:\n            grades_list.append('B+')\n        elif grade >= 2.7:\n\
    \            grades_list.append('B')\n        elif grade >= 2.3:\n           \
    \ grades_list.append('B-')\n        elif grade >= 2.0:\n            grades_list.append('C+')\n\
    \        elif grade >= 1.7:\n            grades_list.append('C')\n        elif\
    \ grade >= 1.3:\n            grades_list.append('C-')\n        elif grade >= 1.0:\n\
    \            grades_list.append('D+')\n        elif grade >= 0.7:\n          \
    \  grades_list.append('D')\n        elif grade >= 0.0:\n            grades_list.append('D-')\n\
    \        else:\n            grades_list.append('E')\n    return grades_list\n",
  "    # TODO: Write your code here\n    pass\n", "    # TODO: Write your code here\n\
    \    pass\n", "    # TODO: Write your code here\n    pass\n", "    letter_grades\
    \ = []\n    for grade in grades:\n        if grade >= 4.0:\n            letter_grades.append('A+')\n\
    \        elif grade >= 3.7:\n            letter_grades.append('A')\n        elif\
    \ grade >= 3.3:\n            letter_grades.append('A-')\n        elif grade >=\
    \ 3.0:\n            letter_grades.append('B+')\n        elif grade >= 2.7:\n \
    \           letter_grades.append('B')\n        elif grade >= 2.3:\n          \
    \  letter_grades.append('B-')\n        elif grade >= 2.0:\n            letter_grades.append('C+')\n\
    \        elif grade >= 1.7:\n            letter_grades.append('C')\n        elif\
    \ grade >= 1.3:\n            letter_grades.append('C-')\n        elif grade >=\
    \ 1.0:\n            letter_grades.append('D+')\n        elif grade >= 0.7:\n \
    \           letter_grades.append('D')\n        elif grade >= 0.0:\n          \
    \  letter_grades.append('D-')\n        else:\n            letter_grades.append('E')\n\
    \    return letter_grades\n\nprint(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]))"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

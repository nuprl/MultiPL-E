language: py
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_el:\n            max_el = l[i]\n    return max_el\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max = l[0]\n    for i in l:\n        if i > max:\n          \
    \  max = i\n    return max\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_element = l[0]\n    for i in l:\n        if i > max_element:\n\
    \            max_element = i\n    return max_element\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max = l[0]\n    for i in l:\n        if i > max:\n          \
    \  max = i\n    return max\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    else:\n        max_element\
    \ = l[0]\n        for i in range(1, len(l)):\n            if l[i] > max_element:\n\
    \                max_element = l[i]\n        return max_element\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746655
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if\
    \ l[i] > max_value:\n            max_value = l[i]\n    return max_value\n\ndef\
    \ check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746640
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_el:\n            max_el = l[i]\n    return max_el\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n \
    \       return l[0]\n    if len(l) == 2:\n        return l[0] if l[0] > l[1] else\
    \ l[1]\n    return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n  \
    \  assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746655
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    m = l[0]\n    for e in l:\n        if e > m:\n            m =\
    \ e\n    return m\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) ==\
    \ 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\n\
    def test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    max_element = l[0]\n\
    \    for i in range(1, len(l)):\n        if l[i] > max_element:\n            max_element\
    \ = l[i]\n    return max_element\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746655
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_element = l[0]\n    for i in l:\n        if i > max_element:\n\
    \            max_element = i\n    return max_element\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_element = l[0]\n    for i in l:\n        if i > max_element:\n\
    \            max_element = i\n    return max_element\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_el:\n            max_el = l[i]\n    return max_el\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_element = l[0]\n    for i in l:\n        if i > max_element:\n\
    \            max_element = i\n    return max_element\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746655
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    max_elem = l[0]\n \
    \   for elem in l:\n        if elem > max_elem:\n            max_elem = elem\n\
    \    return max_elem\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746655
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_value = l[0]\n    for i in range(1, len(l)):\n        if\
    \ l[i] > max_value:\n            max_value = l[i]\n    return max_value\n\ndef\
    \ check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746640
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    else:\n        max_elem\
    \ = l[0]\n        for elem in l:\n            if elem > max_elem:\n          \
    \      max_elem = elem\n        return max_elem\n\ndef check(candidate):\n   \
    \ assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746640
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_element = l[0]\n    for i in l:\n        if i > max_element:\n\
    \            max_element = i\n    return max_element\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    max_elem = l[0]\n \
    \   for elem in l:\n        if elem > max_elem:\n            max_elem = elem\n\
    \    return max_elem\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746655
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    max_elem = l[0]\n \
    \   for elem in l:\n        if elem > max_elem:\n            max_elem = elem\n\
    \    return max_elem\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746655
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    max_elem = l[0]\n \
    \   for elem in l:\n        if elem > max_elem:\n            max_elem = elem\n\
    \    return max_elem\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746655
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    m = l[0]\n    for i in l:\n        if i > m:\n            m =\
    \ i\n    return m\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) ==\
    \ 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\n\
    def test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746640
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_el = l[0]\n    for el in l:\n        if el > max_el:\n  \
    \          max_el = el\n    return max_el\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124,\
    \ 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    if len(l) == 0:\n        return None\n    max_elem = l[0]\n \
    \   for elem in l:\n        if elem > max_elem:\n            max_elem = elem\n\
    \    return max_elem\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746655
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    return max(l)\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) ==\
    \ 124\n\ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for elem in l:\n        if elem > max_elem:\n\
    \            max_elem = elem\n    return max_elem\n\ndef check(candidate):\n \
    \   assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef max_element(l: List[int]) -> int:\n   \
    \ \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n\
    \    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n\
    \    \"\"\"\n    max_elem = l[0]\n    for i in range(1, len(l)):\n        if l[i]\
    \ > max_elem:\n            max_elem = l[i]\n    return max_elem\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''

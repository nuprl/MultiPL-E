name: HumanEval_75_is_multiply_prime
language: py
prompt: "def is_multiply_prime(a: int) -> bool:\n    \"\"\"Write a function that returns\
  \ true if the given number is the multiplication of 3 prime numbers\n    and false\
  \ otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    >>> is_multiply_prime(30)\n\
  \    True\n    30 = 2 * 3 * 5\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(5) == False\n    assert candidate(30)\
  \ == True\n    assert candidate(8) == True\n    assert candidate(10) == False\n\
  \    assert candidate(125) == True\n    assert candidate(105) == True\n    assert\
  \ candidate(126) == False\n    assert candidate(729) == False\n    assert candidate(891)\
  \ == False\n    assert candidate(1001) == True\n\ndef test_check():\n    check(is_multiply_prime)\n\
  \ntest_check()\n"
completions: ["    for i in range(2, a):\n        if a % i == 0:\n            for\
    \ j in range(2, a):\n                if a % j == 0:\n                    for k\
    \ in range(2, a):\n                        if a % k == 0:\n                  \
    \          if i * j * k == a:\n                                return True\n \
    \   return False\n\n", "    if a == 1:\n        return False\n    if a == 2:\n\
    \        return True\n    if a % 2 == 0:\n        return False\n    for i in range(3,\
    \ a, 2):\n        if a % i == 0:\n            return False\n    return True\n\n",
  "    for i in range(2, a):\n        if a % i == 0:\n            for j in range(2,\
    \ a):\n                if a % j == 0:\n                    for k in range(2, a):\n\
    \                        if a % k == 0:\n                            if a == i\
    \ * j * k:\n                                return True\n    return False\n\n",
  "    # Write your code here\n    pass\n\n", "    for i in range(2, a):\n       \
    \ if a % i == 0:\n            for j in range(2, a):\n                if a % j\
    \ == 0:\n                    for k in range(2, a):\n                        if\
    \ a % k == 0:\n                            if a == i * j * k:\n              \
    \                  return True\n    return False\n\n", "    pass\n\n", "    for\
    \ i in range(2, a):\n        if a % i == 0:\n            for j in range(2, a):\n\
    \                if a % j == 0:\n                    for k in range(2, a):\n \
    \                       if a % k == 0:\n                            if i * j *\
    \ k == a:\n                                return True\n    return False\n\n",
  "    for i in range(2, a):\n        if a % i == 0:\n            for j in range(2,\
    \ a):\n                if a % j == 0:\n                    for k in range(2, a):\n\
    \                        if a % k == 0:\n                            if a == i\
    \ * j * k:\n                                return True\n    return False\n\n",
  "    pass\n\n", "    if a == 1:\n        return False\n    for i in range(2, a):\n\
    \        if a % i == 0:\n            if is_prime(i):\n                if is_prime(a\
    \ // i):\n                    if is_prime(a // (a // i)):\n                  \
    \      return True\n    return False\n\n", "    if a == 1:\n        return False\n\
    \    for i in range(2, a):\n        if a % i == 0:\n            if is_prime(i):\n\
    \                if is_prime(a // i):\n                    return True\n    return\
    \ False\n\n", "    if a <= 1:\n        return False\n    for i in range(2, a):\n\
    \        if a % i == 0:\n            if is_prime(i):\n                if is_prime(a\
    \ // i):\n                    return True\n    return False\n\n", "    for i in\
    \ range(2, a):\n        if a % i == 0:\n            for j in range(2, a):\n  \
    \              if a % j == 0:\n                    for k in range(2, a):\n   \
    \                     if a % k == 0:\n                            if i * j * k\
    \ == a:\n                                return True\n    return False\n\n", " \
    \   # your code here\n    return\n\n", "    if a == 1:\n        return False\n\
    \    for i in range(2, a):\n        if a % i == 0:\n            return is_multiply_prime(a\
    \ // i)\n    return True\n\n", "    if a == 1:\n        return False\n    for\
    \ i in range(2, a):\n        if a % i == 0:\n            return is_multiply_prime(a\
    \ // i)\n    return True\n\n", "    if a <= 1:\n        return False\n    for\
    \ i in range(2, a):\n        if a % i == 0:\n            if is_prime(i):\n   \
    \             return True\n    return False\n\n", "    if a == 1:\n        return\
    \ False\n    for i in range(2, a):\n        if a % i == 0:\n            if is_prime(i):\n\
    \                if is_prime(a // i):\n                    if is_prime(a // (a\
    \ // i)):\n                        return True\n    return False\n\n", "    pass\n\
    \n", "    for i in range(2, a):\n        if a % i == 0:\n            for j in\
    \ range(2, i):\n                if i % j == 0:\n                    for k in range(2,\
    \ j):\n                        if j % k == 0:\n                            if\
    \ a == i * j * k:\n                                return True\n    return False\n\
    \n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

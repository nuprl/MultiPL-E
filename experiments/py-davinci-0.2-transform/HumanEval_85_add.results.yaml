language: py
name: HumanEval_85_add
results:
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 1 and lst[i]\
    \ % 2 == 0:\n            sum += lst[i]\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4,\
    \ 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    total = 0\n    for i in range(1, len(lst), 2):\n        if lst[i] % 2 ==\
    \ 0:\n            total += lst[i]\n    return total\n\ndef check(candidate):\n\
    \    assert candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4,\
    \ 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(1, len(lst), 2):\n        if lst[i] % 2 == 0:\n\
    \            sum += lst[i]\n    return sum\n\ndef check(candidate):\n    assert\
    \ candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n\
    \    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) ==\
    \ 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 1 and lst[i]\
    \ % 2 == 0:\n            sum += lst[i]\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4,\
    \ 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 1 and lst[i]\
    \ % 2 == 0:\n            sum += lst[i]\n    return sum\ndef check(candidate):\n\
    \    assert candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4,\
    \ 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 1 and lst[i]\
    \ % 2 == 0:\n            sum += lst[i]\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4,\
    \ 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 1 and lst[i]\
    \ % 2 == 0:\n            sum += lst[i]\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4,\
    \ 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 1 and lst[i]\
    \ % 2 == 0:\n            sum += lst[i]\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4,\
    \ 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(1, len(lst), 2):\n        if lst[i] % 2 == 0:\n\
    \            sum += lst[i]\n    return sum\n\ndef check(candidate):\n    assert\
    \ candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n\
    \    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) ==\
    \ 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 1 and lst[i]\
    \ % 2 == 0:\n            sum += lst[i]\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4,\
    \ 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(1, len(lst), 2):\n        if lst[i] % 2 == 0:\n\
    \            sum += lst[i]\n    return sum\n\ndef check(candidate):\n    assert\
    \ candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n\
    \    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) ==\
    \ 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 1 and lst[i]\
    \ % 2 == 0:\n            sum += lst[i]\n    return sum\ndef check(candidate):\n\
    \    assert candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4,\
    \ 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 1 and lst[i]\
    \ % 2 == 0:\n            sum += lst[i]\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4,\
    \ 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(1, len(lst), 2):\n        if lst[i] % 2 == 0:\n\
    \            sum += lst[i]\n    return sum\n\ndef check(candidate):\n    assert\
    \ candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n\
    \    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) ==\
    \ 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 1 and lst[i]\
    \ % 2 == 0:\n            sum += lst[i]\n    return sum\ndef check(candidate):\n\
    \    assert candidate([4, 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122])\
    \ == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert candidate([4, 4,\
    \ 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 21, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ouuy0l6.py\"\
    , line 16, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\ndef check(candidate):\n    assert candidate([4, 88])\
    \ == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 19, in test_check\n    check(add)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8n6qhng.py\"\
    , line 14, in check\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"\
    Given a non-empty list of integers lst. add the even elements that are at odd\
    \ indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n\
    \    return sum(lst[1::2])\n\ndef check(candidate):\n    assert candidate([4,\
    \ 88]) == 88\n    assert candidate([4, 5, 6, 7, 2, 122]) == 122\n    assert candidate([4,\
    \ 0, 6, 7]) == 0\n    assert candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n\
    \    check(add)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz_1rwv.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmptuz_1rwv.py\", line 20,\
    \ in test_check\n    check(add)\n  File \"/tmp/tmptuz_1rwv.py\", line 15, in check\n\
    \    assert candidate([4, 5, 6, 7, 2, 122]) == 122\nAssertionError\n"
  stdout: ''

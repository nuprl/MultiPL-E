language: py
name: HumanEval_145_order_by_points
results:
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(int(c) for c in\
    \ str(abs(x))), nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo_xez4ne.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpo_xez4ne.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpo_xez4ne.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbte84c8y.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(int(d) for d in\
    \ str(abs(x))), nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpplljwofu.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpplljwofu.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpplljwofu.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748273
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbte84c8y.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # your code here\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyxxgwv44.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpyxxgwv44.py\", line 29,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpyxxgwv44.py\", line\
    \ 21, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748238
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    if not nums:\n        return []\n    return sorted(nums,\
    \ key=lambda x: (sum(map(int, str(abs(x)))), x))\n\ndef check(candidate):\n  \
    \  assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1bzy52bp.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp1bzy52bp.py\", line 29,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1bzy52bp.py\", line\
    \ 21, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748273
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    if not nums:\n        return []\n    return sorted(nums,\
    \ key=lambda x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvtcyqcp1.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvtcyqcp1.py\", line 29,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpvtcyqcp1.py\", line\
    \ 21, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748273
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # your code here\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyxxgwv44.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpyxxgwv44.py\", line 29,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpyxxgwv44.py\", line\
    \ 21, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748238
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbte84c8y.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # your code here\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdptlw6au.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpdptlw6au.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpdptlw6au.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748273
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # your code here\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), x))\n\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp33bxp6o9.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp33bxp6o9.py\", line 29,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp33bxp6o9.py\", line\
    \ 21, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748238
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbte84c8y.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    if not nums:\n        return []\n    return sorted(nums,\
    \ key=lambda x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvtcyqcp1.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvtcyqcp1.py\", line 29,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpvtcyqcp1.py\", line\
    \ 21, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748273
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(int(d) for d in\
    \ str(abs(x))), x))\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1od4o4wx.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1od4o4wx.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1od4o4wx.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748273
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbte84c8y.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # TODO: implement this function\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphz68e9s7.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmphz68e9s7.py\", line 29,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphz68e9s7.py\", line\
    \ 21, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748273
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(int(i) for i in\
    \ str(abs(x))), nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp543vynen.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp543vynen.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp543vynen.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # TODO: implement this function\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphz68e9s7.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmphz68e9s7.py\", line 29,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphz68e9s7.py\", line\
    \ 21, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748273
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # your code here\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\ndef check(candidate):\n \
    \   assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa4pi_wke.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpa4pi_wke.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpa4pi_wke.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748238
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbte84c8y.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbte84c8y.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # your code here\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyxxgwv44.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpyxxgwv44.py\", line 29,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpyxxgwv44.py\", line\
    \ 21, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748238
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(int(i) for i in\
    \ str(abs(x))), nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp543vynen.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp543vynen.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp543vynen.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbte84c8y.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbte84c8y.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpbte84c8y.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    if not nums:\n        return []\n    return sorted(nums,\
    \ key=lambda x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl7hz2udk.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl7hz2udk.py\"\
    , line 30, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl7hz2udk.py\"\
    , line 22, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(int(i) for i in\
    \ str(abs(x))), nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp543vynen.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp543vynen.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp543vynen.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # your code here\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdptlw6au.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpdptlw6au.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpdptlw6au.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748273
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # TODO: implement this function\n    pass\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfipy0p2v.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfipy0p2v.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpfipy0p2v.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748273
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    if not nums:\n        return []\n    return sorted(nums,\
    \ key=lambda x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvtcyqcp1.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvtcyqcp1.py\", line 29,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpvtcyqcp1.py\", line\
    \ 21, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1659748273
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ x))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 27, in test_check\n    check(order_by_points)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqb9g7jfb.py\"\
    , line 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmphtsodx6z.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmphtsodx6z.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "from typing import List\n\ndef order_by_points(nums: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Write a function which sorts the given list of integers\n   \
    \ in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n    >>> order_by_points([1,\
    \ 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))),\
    \ nums.index(x)))\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11,\
    \ -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert\
    \ candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43,\
    \ 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) ==\
    \ [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp1l209jy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp1l209jy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''

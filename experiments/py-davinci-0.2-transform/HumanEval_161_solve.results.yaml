language: py
name: HumanEval_161_solve
results:
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnjosqfny.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpnjosqfny.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpnjosqfny.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return\
    \ s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower() for c in\
    \ s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert\
    \ candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert\
    \ candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return\
    \ s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower() for c in\
    \ s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert\
    \ candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert\
    \ candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_9m_y8xk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp_9m_y8xk.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_9m_y8xk.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_9m_y8xk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp_9m_y8xk.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_9m_y8xk.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnjosqfny.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpnjosqfny.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpnjosqfny.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n  \
    \  else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpblj5fyum.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpblj5fyum.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpblj5fyum.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_9m_y8xk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp_9m_y8xk.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_9m_y8xk.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqirjqm5n.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqirjqm5n.py\", line 30,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpqirjqm5n.py\", line 23, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4lvvqx61.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp4lvvqx61.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4lvvqx61.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return\
    \ s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper() for c in\
    \ s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert\
    \ candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert\
    \ candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_9m_y8xk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp_9m_y8xk.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_9m_y8xk.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s:\n        return ''\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "def solve(s: str) -> str:\n    \"\"\"You are given a string s.\n    if\
    \ s[i] is a letter, reverse its case from lower to upper or vise versa, \n   \
    \ otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve('1234')\n    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n\
    \    '#A@c'\n    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n   \
    \ else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4lvvqx61.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp4lvvqx61.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4lvvqx61.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''

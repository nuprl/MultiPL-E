language: py
name: HumanEval_19_sort_numbers
results:
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    nums = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    return ' '.join(sorted(numbers.split(), key=lambda x: nums[x]))\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [str(num) for num\
    \ in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert\
    \ candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprytk9vji.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprytk9vji.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmprytk9vji.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_int(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw21b7osr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpw21b7osr.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpw21b7osr.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpw21b7osr.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_int(x))\n\
    \  File \"/tmp/tmpw21b7osr.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_int(x))\nNameError: name 'numeral_to_int' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjxdpmxbx.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpjxdpmxbx.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjxdpmxbx.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjxdpmxbx.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmpjxdpmxbx.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_digit(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpalh_ctn_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpalh_ctn_.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpalh_ctn_.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpalh_ctn_.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmpalh_ctn_.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numbers_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2m71srxz.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp2m71srxz.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2m71srxz.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2m71srxz.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numbers_dict[x])\n \
    \ File \"/tmp/tmp2m71srxz.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numbers_dict[x])\nNameError: name 'numbers_dict' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = [num_dict[num] for num in numbers.split()]\n \
    \   num_list.sort()\n    return ' '.join([str(num) for num in num_list])\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6gcfh536.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp6gcfh536.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp6gcfh536.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9qwjx0e9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9qwjx0e9.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp9qwjx0e9.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp9qwjx0e9.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num[x]))\n\
    \  File \"/tmp/tmp9qwjx0e9.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num[x]))\nNameError: name 'word_to_num' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number[str(number)] for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5t7mm5ub.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp5t7mm5ub.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5t7mm5ub.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5t7mm5ub.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp5t7mm5ub.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [numbers_dict[num] for num in numbers]\n    numbers.sort()\n  \
    \  numbers = [numbers_dict_reverse[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaf2h2jb7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpaf2h2jb7.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpaf2h2jb7.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpaf2h2jb7.py\"\
    , line 9, in sort_numbers\n    numbers = [numbers_dict[num] for num in numbers]\n\
    \  File \"/tmp/tmpaf2h2jb7.py\", line 9, in <listcomp>\n    numbers = [numbers_dict[num]\
    \ for num in numbers]\nNameError: name 'numbers_dict' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [str(num) for num\
    \ in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert\
    \ candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprytk9vji.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprytk9vji.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmprytk9vji.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[num]) for num in numbers]\n    numbers.sort()\n  \
    \  numbers = [NUMBERS[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zwwijx4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4zwwijx4.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4zwwijx4.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp4zwwijx4.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmp4zwwijx4.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: NUMBERS[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf1kvo4ka.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpf1kvo4ka.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf1kvo4ka.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf1kvo4ka.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: NUMBERS[x]))\n  File \"/tmp/tmpf1kvo4ka.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: NUMBERS[x]))\nNameError: name\
    \ 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(str(number)) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 23, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 17, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 9, in <listcomp>\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\nNameError: name 'number_to_digit' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(str(number)) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 23, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 17, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 9, in <listcomp>\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\nNameError: name 'number_to_digit' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_int(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw21b7osr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpw21b7osr.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpw21b7osr.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpw21b7osr.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_int(x))\n\
    \  File \"/tmp/tmpw21b7osr.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_int(x))\nNameError: name 'numeral_to_int' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(str(number)) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 23, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 17, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 9, in <listcomp>\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\nNameError: name 'number_to_digit' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(numbers[i]) for i in range(len(numbers))]\n    numbers.sort()\n\
    \    numbers = [str(numbers[i]) for i in range(len(numbers))]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpews_9de8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpews_9de8.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpews_9de8.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpews_9de8.py\"\
    , line 9, in sort_numbers\n    numbers = [int(numbers[i]) for i in range(len(numbers))]\n\
    \  File \"/tmp/tmpews_9de8.py\", line 9, in <listcomp>\n    numbers = [int(numbers[i])\
    \ for i in range(len(numbers))]\nValueError: invalid literal for int() with base\
    \ 10: 'three'\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_digit(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpalh_ctn_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpalh_ctn_.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpalh_ctn_.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpalh_ctn_.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmpalh_ctn_.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: NUMBERS[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf1kvo4ka.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpf1kvo4ka.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf1kvo4ka.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf1kvo4ka.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: NUMBERS[x]))\n  File \"/tmp/tmpf1kvo4ka.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: NUMBERS[x]))\nNameError: name\
    \ 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: int(NUMBERS[x])))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv925qhv9.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpv925qhv9.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpv925qhv9.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpv925qhv9.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: int(NUMBERS[x])))\n  File \"/tmp/tmpv925qhv9.py\", line 8, in <lambda>\n\
    \    return ' '.join(sorted(numbers.split(), key=lambda x: int(NUMBERS[x])))\n\
    NameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_digit(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpalh_ctn_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpalh_ctn_.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpalh_ctn_.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpalh_ctn_.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmpalh_ctn_.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: NUMBERS[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf1kvo4ka.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpf1kvo4ka.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf1kvo4ka.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf1kvo4ka.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: NUMBERS[x]))\n  File \"/tmp/tmpf1kvo4ka.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: NUMBERS[x]))\nNameError: name\
    \ 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(WORDS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ukzfbgh.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp_ukzfbgh.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_ukzfbgh.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_ukzfbgh.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(WORDS[x]))\n  File\
    \ \"/tmp/tmp_ukzfbgh.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ int(WORDS[x]))\nNameError: name 'WORDS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numbers_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2m71srxz.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp2m71srxz.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2m71srxz.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2m71srxz.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numbers_dict[x])\n \
    \ File \"/tmp/tmp2m71srxz.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numbers_dict[x])\nNameError: name 'numbers_dict' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [str(num) for num\
    \ in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert\
    \ candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprytk9vji.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprytk9vji.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmprytk9vji.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numbers_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2m71srxz.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp2m71srxz.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2m71srxz.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2m71srxz.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numbers_dict[x])\n \
    \ File \"/tmp/tmp2m71srxz.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numbers_dict[x])\nNameError: name 'numbers_dict' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [num for num in num_list]\n\
    \    return ' '.join(num_list)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpux2268rc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpux2268rc.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpux2268rc.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpux2268rc.py\"\
    , line 13, in sort_numbers\n    return ' '.join(num_list)\nTypeError: sequence\
    \ item 0: expected str instance, int found\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_int(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw21b7osr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpw21b7osr.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpw21b7osr.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpw21b7osr.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_int(x))\n\
    \  File \"/tmp/tmpw21b7osr.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_int(x))\nNameError: name 'numeral_to_int' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[i] for\
    \ i in num_list]\n    num_list.sort()\n    num_list = [str(i) for i in num_list]\n\
    \    return ' '.join(num_list)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpejakwk7j.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpejakwk7j.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpejakwk7j.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = sorted(numbers, key=lambda x: int(number_to_digit(x)))\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl2ztr_nl.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpl2ztr_nl.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpl2ztr_nl.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpl2ztr_nl.py\"\
    , line 9, in sort_numbers\n    numbers = sorted(numbers, key=lambda x: int(number_to_digit(x)))\n\
    \  File \"/tmp/tmpl2ztr_nl.py\", line 9, in <lambda>\n    numbers = sorted(numbers,\
    \ key=lambda x: int(number_to_digit(x)))\nNameError: name 'number_to_digit' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_number(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbffa97_s.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpbffa97_s.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbffa97_s.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpbffa97_s.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_number(x))\n\
    \  File \"/tmp/tmpbffa97_s.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_number(x))\nNameError: name 'numeral_to_number' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[num]) for num in numbers]\n    numbers.sort()\n  \
    \  numbers = [NUMBERS[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zwwijx4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4zwwijx4.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4zwwijx4.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp4zwwijx4.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmp4zwwijx4.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return \" \".join(sorted(numbers.split(),\
    \ key=lambda x: int(NUMBERS[x])))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyos0nam3.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpyos0nam3.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpyos0nam3.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpyos0nam3.py\"\
    , line 8, in sort_numbers\n    return \" \".join(sorted(numbers.split(), key=lambda\
    \ x: int(NUMBERS[x])))\n  File \"/tmp/tmpyos0nam3.py\", line 8, in <lambda>\n\
    \    return \" \".join(sorted(numbers.split(), key=lambda x: int(NUMBERS[x])))\n\
    NameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: int(NUMBERS[x])))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv925qhv9.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpv925qhv9.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpv925qhv9.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpv925qhv9.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: int(NUMBERS[x])))\n  File \"/tmp/tmpv925qhv9.py\", line 8, in <lambda>\n\
    \    return ' '.join(sorted(numbers.split(), key=lambda x: int(NUMBERS[x])))\n\
    NameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: num_to_int[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiqs_6p3x.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpiqs_6p3x.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpiqs_6p3x.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpiqs_6p3x.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: num_to_int[x])\n  File\
    \ \"/tmp/tmpiqs_6p3x.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ num_to_int[x])\nNameError: name 'num_to_int' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjxdpmxbx.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpjxdpmxbx.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjxdpmxbx.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjxdpmxbx.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmpjxdpmxbx.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num2digit[num]) for num in numbers]\n    numbers.sort()\n\
    \    numbers = [digit2num[str(num)] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptvmssgk3.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptvmssgk3.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptvmssgk3.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptvmssgk3.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num2digit[num]) for num in numbers]\n\
    \  File \"/tmp/tmptvmssgk3.py\", line 9, in <listcomp>\n    numbers = [int(num2digit[num])\
    \ for num in numbers]\nNameError: name 'num2digit' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(WORDS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ukzfbgh.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp_ukzfbgh.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_ukzfbgh.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_ukzfbgh.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(WORDS[x]))\n  File\
    \ \"/tmp/tmp_ukzfbgh.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ int(WORDS[x]))\nNameError: name 'WORDS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[num]) for num in numbers]\n    numbers.sort()\n  \
    \  numbers = [str(num) for num in numbers]\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp50grrc01.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp50grrc01.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp50grrc01.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp50grrc01.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmp50grrc01.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: NUMBERS[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf1kvo4ka.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpf1kvo4ka.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf1kvo4ka.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf1kvo4ka.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: NUMBERS[x]))\n  File \"/tmp/tmpf1kvo4ka.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: NUMBERS[x]))\nNameError: name\
    \ 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [str(num) for num\
    \ in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert\
    \ candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprytk9vji.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprytk9vji.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmprytk9vji.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # TODO: Implement this function\n\
    \    pass\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('three') == 'three'\n    assert candidate('three five nine') == 'three\
    \ five nine'\n    assert candidate('five zero four seven nine eight') == 'zero\
    \ four five seven eight nine'\n    assert candidate('six five four three two one\
    \ zero') == 'zero one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmrc840zk.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpmrc840zk.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmrc840zk.py\", line\
    \ 13, in check\n    assert candidate('') == ''\nAssertionError\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num2digit[num]) for num in numbers]\n    numbers.sort()\n\
    \    numbers = [digit2num[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc97ft5pu.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc97ft5pu.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpc97ft5pu.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpc97ft5pu.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num2digit[num]) for num in numbers]\n\
    \  File \"/tmp/tmpc97ft5pu.py\", line 9, in <listcomp>\n    numbers = [int(num2digit[num])\
    \ for num in numbers]\nNameError: name 'num2digit' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[num]) for num in numbers]\n    numbers.sort()\n  \
    \  numbers = [NUMBERS[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zwwijx4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4zwwijx4.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4zwwijx4.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp4zwwijx4.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmp4zwwijx4.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = [num_dict[num] for num in numbers.split()]\n \
    \   return ' '.join([num for num in sorted(num_list)])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpivp5zr3r.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpivp5zr3r.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpivp5zr3r.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpivp5zr3r.py\"\
    , line 10, in sort_numbers\n    return ' '.join([num for num in sorted(num_list)])\n\
    TypeError: sequence item 0: expected str instance, int found\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num2words(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [num2words(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmply0zk2q0.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmply0zk2q0.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmply0zk2q0.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmply0zk2q0.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num2words(number)) for number in\
    \ numbers]\n  File \"/tmp/tmply0zk2q0.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(num2words(number)) for number in numbers]\nNameError: name 'num2words'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[num]) for num in numbers]\n    numbers.sort()\n  \
    \  numbers = [NUMBERS[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zwwijx4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4zwwijx4.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4zwwijx4.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp4zwwijx4.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmp4zwwijx4.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_dict[n]) for n in numbers]\n    numbers.sort()\n  \
    \  numbers = [number_dict[n] for n in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6_juve2q.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6_juve2q.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp6_juve2q.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp6_juve2q.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_dict[n]) for n in numbers]\n\
    \  File \"/tmp/tmp6_juve2q.py\", line 9, in <listcomp>\n    numbers = [int(number_dict[n])\
    \ for n in numbers]\nNameError: name 'number_dict' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numbers_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2m71srxz.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp2m71srxz.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2m71srxz.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2m71srxz.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numbers_dict[x])\n \
    \ File \"/tmp/tmp2m71srxz.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numbers_dict[x])\nNameError: name 'numbers_dict' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [NUMBERS[number] for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpju_4pg22.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpju_4pg22.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpju_4pg22.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpju_4pg22.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[number]) for number in numbers]\n\
    \  File \"/tmp/tmpju_4pg22.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[number])\
    \ for number in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = sorted(numbers, key=lambda x: numbers_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppv_70mrq.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmppv_70mrq.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppv_70mrq.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppv_70mrq.py\"\
    , line 9, in sort_numbers\n    numbers = sorted(numbers, key=lambda x: numbers_dict[x])\n\
    \  File \"/tmp/tmppv_70mrq.py\", line 9, in <lambda>\n    numbers = sorted(numbers,\
    \ key=lambda x: numbers_dict[x])\nNameError: name 'numbers_dict' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num2digit[num]) for num in numbers]\n    numbers.sort()\n\
    \    numbers = [digit2num[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc97ft5pu.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc97ft5pu.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpc97ft5pu.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpc97ft5pu.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num2digit[num]) for num in numbers]\n\
    \  File \"/tmp/tmpc97ft5pu.py\", line 9, in <listcomp>\n    numbers = [int(num2digit[num])\
    \ for num in numbers]\nNameError: name 'num2digit' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num2words(num)) for num in numbers]\n    numbers.sort()\n\
    \    numbers = [num2words(num) for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvdllcsmw.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpvdllcsmw.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpvdllcsmw.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpvdllcsmw.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num2words(num)) for num in numbers]\n\
    \  File \"/tmp/tmpvdllcsmw.py\", line 9, in <listcomp>\n    numbers = [int(num2words(num))\
    \ for num in numbers]\nNameError: name 'num2words' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjxdpmxbx.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpjxdpmxbx.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjxdpmxbx.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjxdpmxbx.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmpjxdpmxbx.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(str(number)) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 23, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 17, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 9, in <listcomp>\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\nNameError: name 'number_to_digit' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split('\
    \ ')\n    numbers = [int(number_to_digit[number]) for number in numbers]\n   \
    \ numbers.sort()\n    numbers = [digit_to_number[str(number)] for number in numbers]\n\
    \    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7ru0a0js.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp7ru0a0js.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7ru0a0js.py\", line\
    \ 16, in check\n    assert candidate('') == ''\n  File \"/tmp/tmp7ru0a0js.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp7ru0a0js.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748360
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = sorted(numbers, key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7o6zp27b.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7o6zp27b.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7o6zp27b.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp7o6zp27b.py\"\
    , line 9, in sort_numbers\n    numbers = sorted(numbers, key=lambda x: int(NUMBERS[x]))\n\
    \  File \"/tmp/tmp7o6zp27b.py\", line 9, in <lambda>\n    numbers = sorted(numbers,\
    \ key=lambda x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_digit(number) for number in numbers]\n    numbers.sort()\n\
    \    return ' '.join([digit_to_number(number) for number in numbers])\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx2t9o3dk.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpx2t9o3dk.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpx2t9o3dk.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpx2t9o3dk.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmpx2t9o3dk.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjxdpmxbx.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpjxdpmxbx.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjxdpmxbx.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjxdpmxbx.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmpjxdpmxbx.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: number_to_digit(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpch_017sp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpch_017sp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpch_017sp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpch_017sp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: number_to_digit(x))\n\
    \  File \"/tmp/tmpch_017sp.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: number_to_digit(x))\nNameError: name 'number_to_digit' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num2int[num]) for num in numbers]\n    numbers.sort()\n  \
    \  numbers = [int2num[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_xi0n2jd.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_xi0n2jd.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_xi0n2jd.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_xi0n2jd.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num2int[num]) for num in numbers]\n\
    \  File \"/tmp/tmp_xi0n2jd.py\", line 9, in <listcomp>\n    numbers = [int(num2int[num])\
    \ for num in numbers]\nNameError: name 'num2int' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_int[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number[number] for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp20qsbnfi.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp20qsbnfi.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp20qsbnfi.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp20qsbnfi.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_int[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp20qsbnfi.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_int[number]) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [num2int(num) for num in numbers]\n    numbers.sort()\n    numbers\
    \ = [int2num(num) for num in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk62gybn5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpk62gybn5.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpk62gybn5.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpk62gybn5.py\"\
    , line 9, in sort_numbers\n    numbers = [num2int(num) for num in numbers]\n \
    \ File \"/tmp/tmpk62gybn5.py\", line 9, in <listcomp>\n    numbers = [num2int(num)\
    \ for num in numbers]\nNameError: name 'num2int' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBER_WORDS[number]) for number in numbers]\n    numbers.sort()\n\
    \    return ' '.join([NUMBER_WORDS[str(number)] for number in numbers])\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp17z1363w.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp17z1363w.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp17z1363w.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp17z1363w.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBER_WORDS[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp17z1363w.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(NUMBER_WORDS[number]) for number in numbers]\nNameError: name 'NUMBER_WORDS'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_int[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number[number] for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp20qsbnfi.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp20qsbnfi.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp20qsbnfi.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp20qsbnfi.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_int[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp20qsbnfi.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_int[number]) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: number_to_digit[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpenm845l6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpenm845l6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpenm845l6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpenm845l6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: number_to_digit[x])\n\
    \  File \"/tmp/tmpenm845l6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: number_to_digit[x])\nNameError: name 'number_to_digit' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_dict = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    numbers = numbers.split()\n    numbers = [number_dict[number]\
    \ for number in numbers]\n    numbers.sort()\n    numbers = [str(number) for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_4qkyeuc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_4qkyeuc.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_4qkyeuc.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9qwjx0e9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9qwjx0e9.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp9qwjx0e9.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp9qwjx0e9.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num[x]))\n\
    \  File \"/tmp/tmp9qwjx0e9.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num[x]))\nNameError: name 'word_to_num' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(WORDS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ukzfbgh.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp_ukzfbgh.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_ukzfbgh.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_ukzfbgh.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(WORDS[x]))\n  File\
    \ \"/tmp/tmp_ukzfbgh.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ int(WORDS[x]))\nNameError: name 'WORDS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num2words(n)) for n in numbers]\n    numbers.sort()\n    numbers\
    \ = [num2words(n) for n in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0iwtgedu.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp0iwtgedu.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp0iwtgedu.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp0iwtgedu.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num2words(n)) for n in numbers]\n\
    \  File \"/tmp/tmp0iwtgedu.py\", line 9, in <listcomp>\n    numbers = [int(num2words(n))\
    \ for n in numbers]\nNameError: name 'num2words' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(str(number)) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 23, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 17, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 9, in <listcomp>\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\nNameError: name 'number_to_digit' is not defined\n"
  stdout: ''
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: int(DIGITS[x])))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdbvhkydi.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpdbvhkydi.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpdbvhkydi.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpdbvhkydi.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: int(DIGITS[x])))\n  File \"/tmp/tmpdbvhkydi.py\", line 8, in <lambda>\n \
    \   return ' '.join(sorted(numbers.split(), key=lambda x: int(DIGITS[x])))\nNameError:\
    \ name 'DIGITS' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: NUMBERS[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf1kvo4ka.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpf1kvo4ka.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf1kvo4ka.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf1kvo4ka.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: NUMBERS[x]))\n  File \"/tmp/tmpf1kvo4ka.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: NUMBERS[x]))\nNameError: name\
    \ 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_int(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw21b7osr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpw21b7osr.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpw21b7osr.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpw21b7osr.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_int(x))\n\
    \  File \"/tmp/tmpw21b7osr.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_int(x))\nNameError: name 'numeral_to_int' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[n]) for n in numbers]\n    numbers.sort()\n    numbers\
    \ = [NUMBERS[n] for n in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgmn2xnsv.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpgmn2xnsv.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpgmn2xnsv.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpgmn2xnsv.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[n]) for n in numbers]\n\
    \  File \"/tmp/tmpgmn2xnsv.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[n])\
    \ for n in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [num for num in num_list]\n\
    \    return ' '.join(num_list)\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa5gkg5yp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpa5gkg5yp.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpa5gkg5yp.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpa5gkg5yp.py\"\
    , line 13, in sort_numbers\n    return ' '.join(num_list)\nTypeError: sequence\
    \ item 0: expected str instance, int found\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_numeral[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [numeral_to_number[str(number)] for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_pxqdvfc.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_pxqdvfc.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_pxqdvfc.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_pxqdvfc.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_numeral[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp_pxqdvfc.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_numeral[number]) for number in numbers]\nNameError: name 'number_to_numeral'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 21, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 15, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\n\
    \  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\", line\
    \ 9, in <lambda>\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\nNameError:\
    \ name 'number_to_digit' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [num for num in num_list]\n\
    \    return ' '.join(num_list)\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa5gkg5yp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpa5gkg5yp.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpa5gkg5yp.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpa5gkg5yp.py\"\
    , line 13, in sort_numbers\n    return ' '.join(num_list)\nTypeError: sequence\
    \ item 0: expected str instance, int found\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjxdpmxbx.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpjxdpmxbx.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjxdpmxbx.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjxdpmxbx.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmpjxdpmxbx.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_number(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgr_y2fy_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpgr_y2fy_.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpgr_y2fy_.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpgr_y2fy_.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_number(x)))\n\
    \  File \"/tmp/tmpgr_y2fy_.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_number(x)))\nNameError: name 'word_to_number' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: numbers_dict[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ubtdwz.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ubtdwz.py\"\
    , line 19, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ubtdwz.py\"\
    , line 13, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ubtdwz.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: numbers_dict[x]))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ubtdwz.py\"\
    , line 8, in <lambda>\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: numbers_dict[x]))\nNameError: name 'numbers_dict' is not defined\n"
  stdout: ''
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [NUMBERS[num] for num in numbers]\n    numbers.sort()\n    numbers\
    \ = [NUMBERS_INV[num] for num in numbers]\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdz5hwgr9.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpdz5hwgr9.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpdz5hwgr9.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpdz5hwgr9.py\"\
    , line 9, in sort_numbers\n    numbers = [NUMBERS[num] for num in numbers]\n \
    \ File \"/tmp/tmpdz5hwgr9.py\", line 9, in <listcomp>\n    numbers = [NUMBERS[num]\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: numbers_dict[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ubtdwz.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ubtdwz.py\"\
    , line 19, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ubtdwz.py\"\
    , line 13, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ubtdwz.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: numbers_dict[x]))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ubtdwz.py\"\
    , line 8, in <lambda>\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: numbers_dict[x]))\nNameError: name 'numbers_dict' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 21, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 15, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\n\
    \  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\", line\
    \ 9, in <lambda>\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\nNameError:\
    \ name 'number_to_digit' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numbers_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2m71srxz.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp2m71srxz.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2m71srxz.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2m71srxz.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numbers_dict[x])\n \
    \ File \"/tmp/tmp2m71srxz.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numbers_dict[x])\nNameError: name 'numbers_dict' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [convert_number(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [convert_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo1x5nqcm.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpo1x5nqcm.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpo1x5nqcm.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpo1x5nqcm.py\"\
    , line 9, in sort_numbers\n    numbers = [convert_number(number) for number in\
    \ numbers]\n  File \"/tmp/tmpo1x5nqcm.py\", line 9, in <listcomp>\n    numbers\
    \ = [convert_number(number) for number in numbers]\nNameError: name 'convert_number'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[i] for\
    \ i in num_list]\n    num_list.sort()\n    num_list = [str(i) for i in num_list]\n\
    \    return ' '.join(num_list)\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvboa_fqf.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpvboa_fqf.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpvboa_fqf.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number[str(number)] for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5t7mm5ub.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp5t7mm5ub.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5t7mm5ub.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5t7mm5ub.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp5t7mm5ub.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num2words(num)) for num in numbers]\n    numbers.sort()\n\
    \    numbers = [num2words(num) for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvdllcsmw.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpvdllcsmw.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpvdllcsmw.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpvdllcsmw.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num2words(num)) for num in numbers]\n\
    \  File \"/tmp/tmpvdllcsmw.py\", line 9, in <listcomp>\n    numbers = [int(num2words(num))\
    \ for num in numbers]\nNameError: name 'num2words' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjxdpmxbx.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpjxdpmxbx.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjxdpmxbx.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjxdpmxbx.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmpjxdpmxbx.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: DIGITS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdjn797b1.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpdjn797b1.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpdjn797b1.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpdjn797b1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: DIGITS[x])\n  File \"\
    /tmp/tmpdjn797b1.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x: DIGITS[x])\n\
    NameError: name 'DIGITS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[x] for\
    \ x in num_list]\n    num_list.sort()\n    num_list = [str(x) for x in num_list]\n\
    \    return ' '.join(num_list)\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptmp52__y.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptmp52__y.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptmp52__y.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: NUMBERS[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf1kvo4ka.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpf1kvo4ka.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf1kvo4ka.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf1kvo4ka.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: NUMBERS[x]))\n  File \"/tmp/tmpf1kvo4ka.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: NUMBERS[x]))\nNameError: name\
    \ 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [str(num) for num\
    \ in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert\
    \ candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprytk9vji.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprytk9vji.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmprytk9vji.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(str(number)) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 23, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 17, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgpg2ecl6.py\"\
    , line 9, in <listcomp>\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\nNameError: name 'number_to_digit' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 21, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 15, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\n\
    \  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\", line\
    \ 9, in <lambda>\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\nNameError:\
    \ name 'number_to_digit' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 21, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 15, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\n\
    \  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\", line\
    \ 9, in <lambda>\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\nNameError:\
    \ name 'number_to_digit' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_numeral[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [numeral_to_number[str(number)] for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_pxqdvfc.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_pxqdvfc.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_pxqdvfc.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_pxqdvfc.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_numeral[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp_pxqdvfc.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_numeral[number]) for number in numbers]\nNameError: name 'number_to_numeral'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_int(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw21b7osr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpw21b7osr.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpw21b7osr.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpw21b7osr.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_int(x))\n\
    \  File \"/tmp/tmpw21b7osr.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_int(x))\nNameError: name 'numeral_to_int' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[num]) for num in numbers]\n    numbers.sort()\n  \
    \  numbers = [NUMBERS[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zwwijx4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4zwwijx4.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4zwwijx4.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp4zwwijx4.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmp4zwwijx4.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[n]) for n in numbers]\n    numbers.sort()\n    numbers\
    \ = [NUMBERS[n] for n in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgmn2xnsv.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpgmn2xnsv.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpgmn2xnsv.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpgmn2xnsv.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[n]) for n in numbers]\n\
    \  File \"/tmp/tmpgmn2xnsv.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[n])\
    \ for n in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_int(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw21b7osr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpw21b7osr.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpw21b7osr.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpw21b7osr.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_int(x))\n\
    \  File \"/tmp/tmpw21b7osr.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_int(x))\nNameError: name 'numeral_to_int' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num2digit[num]) for num in numbers]\n    numbers.sort()\n\
    \    numbers = [digit2num[str(num)] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptvmssgk3.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptvmssgk3.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptvmssgk3.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptvmssgk3.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num2digit[num]) for num in numbers]\n\
    \  File \"/tmp/tmptvmssgk3.py\", line 9, in <listcomp>\n    numbers = [int(num2digit[num])\
    \ for num in numbers]\nNameError: name 'num2digit' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num_to_int[num]) for num in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_num[str(num)] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7f556jlc.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp7f556jlc.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7f556jlc.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp7f556jlc.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num_to_int[num]) for num in numbers]\n\
    \  File \"/tmp/tmp7f556jlc.py\", line 9, in <listcomp>\n    numbers = [int(num_to_int[num])\
    \ for num in numbers]\nNameError: name 'num_to_int' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [num for num in num_list]\n\
    \    return ' '.join(num_list)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpux2268rc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpux2268rc.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpux2268rc.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpux2268rc.py\"\
    , line 13, in sort_numbers\n    return ' '.join(num_list)\nTypeError: sequence\
    \ item 0: expected str instance, int found\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmf7pf_07.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmf7pf_07.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmf7pf_07.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpmf7pf_07.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptnd_vvo6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptnd_vvo6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptnd_vvo6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmptnd_vvo6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt7q93hoh.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpt7q93hoh.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpt7q93hoh.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpt7q93hoh.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpt7q93hoh.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_numeral[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf1on_js0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpf1on_js0.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf1on_js0.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf1on_js0.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_numeral[x]))\n\
    \  File \"/tmp/tmpf1on_js0.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(number_to_numeral[x]))\nNameError: name 'number_to_numeral' is not defined\n"
  stdout: ''
  timestamp: 1659748394
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 21, in test_check\n    check(sort_numbers)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 15, in check\n    assert candidate('three') == 'three'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\n\
    \  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4qecm42.py\", line\
    \ 9, in <lambda>\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\nNameError:\
    \ name 'number_to_digit' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numbers_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2m71srxz.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp2m71srxz.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2m71srxz.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2m71srxz.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numbers_dict[x])\n \
    \ File \"/tmp/tmp2m71srxz.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numbers_dict[x])\nNameError: name 'numbers_dict' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8xmcalzj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp8xmcalzj.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp8xmcalzj.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp8xmcalzj.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit(x)))\n\
    \  File \"/tmp/tmp8xmcalzj.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(number_to_digit(x)))\nNameError: name 'number_to_digit' is not defined\n"
  stdout: ''
  timestamp: 1659748360
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmfy5s6ph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmfy5s6ph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmfy5s6ph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmfy5s6ph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  stdout: ''
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp195ccgbp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp195ccgbp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp195ccgbp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659748360

name: HumanEval_83_starts_one_ends
language: py
prompt: "def starts_one_ends(n: int) -> int:\n    \"\"\"\n    Given a positive integer\
  \ n, return the count of the numbers of n-digit\n    positive integers that start\
  \ or end with 1.\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(1) == 1\n    assert candidate(2)\
  \ == 18\n    assert candidate(3) == 180\n    assert candidate(4) == 1800\n    assert\
  \ candidate(5) == 18000\n\ndef test_check():\n    check(starts_one_ends)\n\ntest_check()\n"
completions: ["    return count_one_digit(n) + count_one_digit(n - 1)\n\n", "    if\
    \ n == 1:\n        return 2\n    return 10 ** (n - 1) + 9 * starts_one_ends(n\
    \ - 1)\n\n", "    return n * 10 ** (n - 1)\n\n", "    if n == 1:\n        return\
    \ 2\n    if n == 2:\n        return 3\n    return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2)\n\n", "    if n == 1:\n        return 2\n    else:\n        return 10 *\
    \ starts_one_ends(n - 1) - 9 * starts_one_ends(n - 2)\n\n", "    if n == 1:\n\
    \        return 2\n    return 10 * starts_one_ends(n - 1) - 9\n\n", "    return\
    \ 10 ** (n - 1)\n\n", "    return count_n_digit_numbers(n) - count_n_digit_numbers(n\
    \ - 1)\n\n", "    return count_n_digit_numbers(n) - count_n_digit_numbers(n -\
    \ 1)\n\n", "    if n == 1:\n        return 2\n    return 10 * starts_one_ends(n\
    \ - 1) - 9\n\n", "    return 10 ** (n - 1)\n\n", "    if n == 1:\n        return\
    \ 2\n    return 10 * starts_one_ends(n - 1) - 9\n\n", "    return n * (10 ** (n\
    \ - 1))\n\n", "    return count_digits(n) - count_digits(n - 1)\n\n", "    return\
    \ 9 * 10 ** (n - 1)\n\n", "    if n == 1:\n        return 2\n    elif n == 2:\n\
    \        return 3\n    else:\n        return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2)\n\n", "    if n == 1:\n        return 2\n    return 10 * starts_one_ends(n\
    \ - 1) - 9\n\n", "    if n == 1:\n        return 2\n    elif n == 2:\n       \
    \ return 3\n    else:\n        return starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2)\n\n", "    if n == 1:\n        return 2\n    return 10 * starts_one_ends(n\
    \ - 1) - 9\n\n", "    return n * 10 ** (n - 1)\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

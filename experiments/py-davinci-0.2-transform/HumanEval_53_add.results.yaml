language: py
name: HumanEval_53_add
results:
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert\
    \ candidate(1, 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5,\
    \ 7) == 12\n    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n \
    \   >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n    return x\
    \ + y\n\ndef check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
    \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n\
    \    assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''

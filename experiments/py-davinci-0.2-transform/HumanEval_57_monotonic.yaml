name: HumanEval_57_monotonic
language: py
prompt: "from typing import List\n\ndef monotonic(l: List[int]) -> bool:\n    \"\"\
  \"Return True is list elements are monotonically increasing or decreasing.\n   \
  \ >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n  \
  \  False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([1, 2, 4, 10]) == True\n    assert\
  \ candidate([1, 2, 4, 20]) == True\n    assert candidate([1, 20, 4, 10]) == False\n\
  \    assert candidate([4, 1, 0, -10]) == True\n    assert candidate([4, 1, 1, 0])\
  \ == True\n    assert candidate([1, 2, 3, 2, 5, 60]) == False\n    assert candidate([1,\
  \ 2, 3, 4, 5, 60]) == True\n    assert candidate([9, 9, 9, 9]) == True\n\ndef test_check():\n\
  \    check(monotonic)\n\ntest_check()\n"
completions: ["    if len(l) <= 1:\n        return True\n    if l[0] <= l[1]:\n  \
    \      for i in range(len(l) - 1):\n            if l[i] > l[i + 1]:\n        \
    \        return False\n    else:\n        for i in range(len(l) - 1):\n      \
    \      if l[i] < l[i + 1]:\n                return False\n    return True", " \
    \   if l[0] < l[-1]:\n        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\
    \    else:\n        return all(l[i] >= l[i+1] for i in range(len(l)-1))\n", " \
    \   return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l[i+1]\
    \ for i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n  \
    \  elif l[0] < l[1]:\n        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\
    \    else:\n        return all(l[i] >= l[i+1] for i in range(len(l)-1))\n", " \
    \   if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in\
    \ range(len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    else:\n        for i in range(len(l) - 1):\n            if l[i] <\
    \ l[i + 1]:\n                return False\n    return True\n", "    if len(l)\
    \ <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in range(len(l)\
    \ - 1):\n            if l[i] > l[i + 1]:\n                return False\n    else:\n\
    \        for i in range(len(l) - 1):\n            if l[i] < l[i + 1]:\n      \
    \          return False\n    return True\n", "    if len(l) <= 1:\n        return\
    \ True\n    if l[0] < l[1]:\n        for i in range(len(l) - 1):\n           \
    \ if l[i] > l[i + 1]:\n                return False\n    else:\n        for i\
    \ in range(len(l) - 1):\n            if l[i] < l[i + 1]:\n                return\
    \ False\n    return True\n", "    if len(l) <= 1:\n        return True\n    if\
    \ l[0] < l[1]:\n        for i in range(1, len(l) - 1):\n            if l[i] >\
    \ l[i + 1]:\n                return False\n    else:\n        for i in range(1,\
    \ len(l) - 1):\n            if l[i] < l[i + 1]:\n                return False\n\
    \    return True\n", "    if len(l) <= 1:\n        return True\n    if l[0] <\
    \ l[1]:\n        for i in range(1, len(l) - 1):\n            if l[i] > l[i + 1]:\n\
    \                return False\n    else:\n        for i in range(1, len(l) - 1):\n\
    \            if l[i] < l[i + 1]:\n                return False\n    return True\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in\
    \ range(len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    else:\n        for i in range(len(l) - 1):\n            if l[i] <\
    \ l[i + 1]:\n                return False\n    return True\n", "    if len(l)\
    \ <= 1:\n        return True\n    if l[0] < l[1]:\n        return all(l[i] <=\
    \ l[i+1] for i in range(len(l)-1))\n    else:\n        return all(l[i] >= l[i+1]\
    \ for i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n  \
    \  if l[0] < l[1]:\n        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\
    \    elif l[0] > l[1]:\n        return all(l[i] >= l[i+1] for i in range(len(l)-1))\n\
    \    else:\n        return monotonic(l[1:])\n", "    if len(l) <= 1:\n       \
    \ return True\n    if l[0] < l[1]:\n        for i in range(len(l) - 1):\n    \
    \        if l[i] > l[i + 1]:\n                return False\n    else:\n      \
    \  for i in range(len(l) - 1):\n            if l[i] < l[i + 1]:\n            \
    \    return False\n    return True\n", "    if len(l) <= 1:\n        return True\n\
    \    elif l[0] < l[1]:\n        return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\
    \    else:\n        return all(l[i] >= l[i+1] for i in range(len(l)-1))\n", " \
    \   if len(l) <= 1:\n        return True\n    direction = l[1] - l[0]\n    for\
    \ i in range(2, len(l)):\n        if direction == 0:\n            direction =\
    \ l[i] - l[i - 1]\n            continue\n        if breaks_direction(direction,\
    \ l[i - 1], l[i]):\n            return False\n    return True\n", "    if len(l)\
    \ <= 1:\n        return True\n    if l[0] < l[1]:\n        return all(l[i] <=\
    \ l[i+1] for i in range(len(l)-1))\n    else:\n        return all(l[i] >= l[i+1]\
    \ for i in range(len(l)-1))\n", "    if len(l) <= 1:\n        return True\n  \
    \  if l[0] < l[1]:\n        for i in range(len(l) - 1):\n            if l[i] >\
    \ l[i + 1]:\n                return False\n    else:\n        for i in range(len(l)\
    \ - 1):\n            if l[i] < l[i + 1]:\n                return False\n    return\
    \ True\n", "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n  \
    \      for i in range(len(l) - 1):\n            if l[i] > l[i + 1]:\n        \
    \        return False\n    else:\n        for i in range(len(l) - 1):\n      \
    \      if l[i] < l[i + 1]:\n                return False\n    return True\n",
  "    if len(l) <= 1:\n        return True\n    if l[0] < l[1]:\n        for i in\
    \ range(len(l) - 1):\n            if l[i] > l[i + 1]:\n                return\
    \ False\n    else:\n        for i in range(len(l) - 1):\n            if l[i] <\
    \ l[i + 1]:\n                return False\n    return True\n", "    if len(l)\
    \ <= 1:\n        return True\n    else:\n        if l[0] < l[1]:\n           \
    \ return all(l[i] <= l[i+1] for i in range(len(l)-1))\n        else:\n       \
    \     return all(l[i] >= l[i+1] for i in range(len(l)-1))\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_93_encode
language: py
prompt: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that takes\
  \ a message, and encodes in such a \n    way that it swaps case of all letters,\
  \ replaces all vowels in \n    the message with the letter that appears 2 places\
  \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
  \ \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
  \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert\
  \ candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert\
  \ candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I\
  \ DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n\
  \    check(encode)\n\ntest_check()\n"
completions: ["    # YOUR CODE HERE\n    raise NotImplementedError()\n\n", "    #\
    \ Your code here\n    pass\n\n", "    pass\n", "    pass\n", "    return ''.join(\n\
    \        [\n            chr(ord(c) + 2) if c in 'aeiou' else c.upper()\n     \
    \       for c in message.lower()\n        ]\n    )\n\n", "    pass\n\n", "   \
    \ return ''.join(\n        [\n            chr(ord(c) + 2) if c in 'aeiou' else\
    \ c.swapcase()\n            for c in message\n        ]\n    )\n\n", "    pass\n\
    \n", "    # YOUR CODE HERE\n    raise NotImplementedError()\n\n", "    pass\n",
  "    pass\n\n", "    return ''.join(map(lambda c: encode_char(c), message))\n",
  "    return \"\".join(\n        [\n            encode_char(char)\n            for\
    \ char in message\n        ]\n    )\n\n", "    return ''.join(map(encode_char,\
    \ message))\n", "    pass\n\n", "    return ''.join(\n        [\n            chr(ord(c)\
    \ + 2) if c in 'aeiou' else c.swapcase()\n            for c in message\n     \
    \   ]\n    )\n", "    pass\n", "    pass\n", "    pass\n\n", "    pass\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

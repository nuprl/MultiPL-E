name: HumanEval_108_count_nums
language: py
prompt: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n    \"\
  \"\"\n    Write a function count_nums which takes an array of integers and returns\n\
  \    the number of elements which has a sum of digits > 0.\n    If a number is negative,\
  \ then its first signed digit will be negative:\n    e.g. -123 has signed digits\
  \ -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n\
  \    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
  \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1,\
  \ 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n\
  \    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0,\
  \ 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\
  \ntest_check()\n"
completions: ["    return sum(1 for num in arr if sum(map(abs, map(int, str(num))))\
    \ > 0)\n", "    count = 0\n    for num in arr:\n        if num < 0:\n        \
    \    num = -num\n        sum_digits = 0\n        while num > 0:\n            sum_digits\
    \ += num % 10\n            num //= 10\n        if sum_digits > 0:\n          \
    \  count += 1\n    return count\n", "    count = 0\n    for num in arr:\n    \
    \    if num < 0:\n            num = -num\n        while num > 0:\n           \
    \ count += num % 10\n            num //= 10\n    return count\n", "    count =\
    \ 0\n    for num in arr:\n        if num < 0:\n            num = -num\n      \
    \  sum_digits = 0\n        while num > 0:\n            sum_digits += num % 10\n\
    \            num //= 10\n        if sum_digits > 0:\n            count += 1\n\
    \    return count\n", "    count = 0\n    for num in arr:\n        if sum(map(int,\
    \ str(abs(num)))) > 0:\n            count += 1\n    return count\n", "    count\
    \ = 0\n    for num in arr:\n        if num < 0:\n            num = -num\n    \
    \    sum_digits = 0\n        while num > 0:\n            sum_digits += num % 10\n\
    \            num //= 10\n        if sum_digits > 0:\n            count += 1\n\
    \    return count\n", "    count = 0\n    for num in arr:\n        if num < 0:\n\
    \            num = -num\n        sum_digits = 0\n        while num > 0:\n    \
    \        sum_digits += num % 10\n            num //= 10\n        if sum_digits\
    \ > 0:\n            count += 1\n    return count\n", "    count = 0\n    for num\
    \ in arr:\n        if num < 0:\n            num = -num\n        while num > 0:\n\
    \            count += num % 10\n            num //= 10\n    return count\n", " \
    \   count = 0\n    for num in arr:\n        if num < 0:\n            num = -num\n\
    \        while num > 0:\n            count += num % 10\n            num //= 10\n\
    \    return count\n", "    count = 0\n    for num in arr:\n        if num < 0:\n\
    \            num = -num\n        sum_digits = 0\n        while num > 0:\n    \
    \        sum_digits += num % 10\n            num //= 10\n        if sum_digits\
    \ > 0:\n            count += 1\n    return count\n", "    count = 0\n    for num\
    \ in arr:\n        if sum(map(int, str(abs(num)))) > 0:\n            count +=\
    \ 1\n    return count\n", "    count = 0\n    for num in arr:\n        if num\
    \ < 0:\n            num = -num\n        while num > 0:\n            count += num\
    \ % 10\n            num //= 10\n    return count\n", "    count = 0\n    for num\
    \ in arr:\n        if sum(map(int, str(abs(num)))) > 0:\n            count +=\
    \ 1\n    return count\n", "    count = 0\n    for num in arr:\n        if num\
    \ < 0:\n            num = -num\n        sum_digits = 0\n        while num > 0:\n\
    \            sum_digits += num % 10\n            num //= 10\n        if sum_digits\
    \ > 0:\n            count += 1\n    return count\n", '    return len([num for
    num in arr if sum([int(digit) for digit in str(abs(num))]) > 0])', "    count\
    \ = 0\n    for num in arr:\n        if num < 0:\n            num = -num\n    \
    \    while num > 0:\n            count += num % 10\n            num //= 10\n \
    \   return count\n", "    count = 0\n    for num in arr:\n        if num < 0:\n\
    \            num = -num\n        sum_of_digits = 0\n        while num > 0:\n \
    \           sum_of_digits += num % 10\n            num //= 10\n        if sum_of_digits\
    \ > 0:\n            count += 1\n    return count\n", '    return len([num for
    num in arr if sum(map(abs, [int(digit) for digit in str(num)])) > 0])', "    count\
    \ = 0\n    for num in arr:\n        if num < 0:\n            num = -num\n    \
    \    sum_digits = 0\n        while num > 0:\n            sum_digits += num % 10\n\
    \            num //= 10\n        if sum_digits > 0:\n            count += 1\n\
    \    return count\n", "    return sum(1 for num in arr if sum(map(int, str(abs(num))))\
    \ > 0)\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_136_largest_smallest_integers
language: py
prompt: "from typing import List, Tuple, Optional\n\ndef largest_smallest_integers(lst:\
  \ List[int]) -> Tuple[Optional[int], Optional[int]]:\n    \"\"\"\n    Create a function\
  \ that returns a tuple (a, b), where 'a' is\n    the largest of negative integers,\
  \ and 'b' is the smallest\n    of positive integers in a list.\n    If there is\
  \ no negative or positive integers, return them as None.\n\n    Examples:\n    >>>\
  \ largest_smallest_integers([2, 4, 1, 3, 5, 7])\n    (None, 1)\n    >>> largest_smallest_integers([])\n\
  \    (None, None)\n    >>> largest_smallest_integers([0])\n    (None, None)\n  \
  \  \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([2, 4, 1, 3, 5, 7]) == (None,\
  \ 1)\n    assert candidate([2, 4, 1, 3, 5, 7, 0]) == (None, 1)\n    assert candidate([1,\
  \ 3, 2, 4, 5, 6, -2]) == (-2, 1)\n    assert candidate([4, 5, 3, 6, 2, 7, -7]) ==\
  \ (-7, 2)\n    assert candidate([7, 3, 8, 4, 9, 2, 5, -9]) == (-9, 2)\n    assert\
  \ candidate([]) == (None, None)\n    assert candidate([0]) == (None, None)\n   \
  \ assert candidate([-1, -3, -5, -6]) == (-1, None)\n    assert candidate([-1, -3,\
  \ -5, -6, 0]) == (-1, None)\n    assert candidate([-6, -4, -4, -3, 1]) == (-3, 1)\n\
  \    assert candidate([-6, -4, -4, -3, -100, 1]) == (-3, 1)\n\ndef test_check():\n\
  \    check(largest_smallest_integers)\n\ntest_check()\n"
completions: ["    largest_negative = None\n    smallest_positive = None\n    for\
    \ i in lst:\n        if i < 0:\n            if largest_negative is None or i >\
    \ largest_negative:\n                largest_negative = i\n        elif i > 0:\n\
    \            if smallest_positive is None or i < smallest_positive:\n        \
    \        smallest_positive = i\n    return (largest_negative, smallest_positive)\n",
  "    pass\n", "    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None or\
    \ num > largest_negative:\n                largest_negative = num\n        elif\
    \ num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    # YOUR CODE HERE\n    pass\n", "    pass\n", "    largest_negative = None\n\
    \    smallest_positive = None\n    for num in lst:\n        if num < 0:\n    \
    \        if largest_negative is None or num > largest_negative:\n            \
    \    largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    largest_negative =\
    \ None\n    smallest_positive = None\n    for i in lst:\n        if i < 0:\n \
    \           if largest_negative is None or i > largest_negative:\n           \
    \     largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    pass\n", "    largest_negative\
    \ = None\n    smallest_positive = None\n    for i in lst:\n        if i < 0:\n\
    \            if largest_negative is None or i > largest_negative:\n          \
    \      largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    largest_negative = None\n\
    \    smallest_positive = None\n    for num in lst:\n        if num < 0:\n    \
    \        if largest_negative is None or num > largest_negative:\n            \
    \    largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    largest_negative =\
    \ None\n    smallest_positive = None\n    for num in lst:\n        if num < 0:\n\
    \            if largest_negative is None or num > largest_negative:\n        \
    \        largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    largest_neg = None\n\
    \    smallest_pos = None\n    for i in lst:\n        if i < 0:\n            if\
    \ largest_neg is None or i > largest_neg:\n                largest_neg = i\n \
    \       elif i > 0:\n            if smallest_pos is None or i < smallest_pos:\n\
    \                smallest_pos = i\n    return (largest_neg, smallest_pos)\n",
  "    if not lst:\n        return (None, None)\n    else:\n        neg = []\n   \
    \     pos = []\n        for i in lst:\n            if i < 0:\n               \
    \ neg.append(i)\n            elif i > 0:\n                pos.append(i)\n    \
    \    if neg:\n            a = max(neg)\n        else:\n            a = None\n\
    \        if pos:\n            b = min(pos)\n        else:\n            b = None\n\
    \        return (a, b)\n", "    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None or num > largest_negative:\n                largest_negative = num\n\
    \        elif num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None or num > largest_negative:\n\
    \                largest_negative = num\n        elif num > 0:\n            if\
    \ smallest_positive is None or num < smallest_positive:\n                smallest_positive\
    \ = num\n    return (largest_negative, smallest_positive)\n", "    largest_negative\
    \ = None\n    smallest_positive = None\n    for i in lst:\n        if i < 0:\n\
    \            if largest_negative is None or i > largest_negative:\n          \
    \      largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    largest_negative = None\n\
    \    smallest_positive = None\n    for num in lst:\n        if num < 0:\n    \
    \        if largest_negative is None or num > largest_negative:\n            \
    \    largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    if len(lst) == 0:\n\
    \        return (None, None)\n    else:\n        largest_neg = None\n        smallest_pos\
    \ = None\n        for i in lst:\n            if i < 0:\n                if largest_neg\
    \ == None:\n                    largest_neg = i\n                elif i > largest_neg:\n\
    \                    largest_neg = i\n            elif i > 0:\n              \
    \  if smallest_pos == None:\n                    smallest_pos = i\n          \
    \      elif i < smallest_pos:\n                    smallest_pos = i\n        return\
    \ (largest_neg, smallest_pos)\n", "    if len(lst) == 0:\n        return (None,\
    \ None)\n    else:\n        neg_list = [i for i in lst if i < 0]\n        pos_list\
    \ = [i for i in lst if i > 0]\n        if len(neg_list) == 0:\n            neg_list\
    \ = None\n        else:\n            neg_list = max(neg_list)\n        if len(pos_list)\
    \ == 0:\n            pos_list = None\n        else:\n            pos_list = min(pos_list)\n\
    \        return (neg_list, pos_list)\n", "    neg = None\n    pos = None\n   \
    \ for i in lst:\n        if i < 0:\n            if neg is None or i > neg:\n \
    \               neg = i\n        elif i > 0:\n            if pos is None or i\
    \ < pos:\n                pos = i\n    return (neg, pos)\n", "    if not lst:\n\
    \        return (None, None)\n    else:\n        neg_lst = [i for i in lst if\
    \ i < 0]\n        pos_lst = [i for i in lst if i > 0]\n        if not neg_lst:\n\
    \            neg_lst = [None]\n        if not pos_lst:\n            pos_lst =\
    \ [None]\n        return (max(neg_lst), min(pos_lst))\n", "    pass\n\n", "  \
    \  largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None or num > largest_negative:\n\
    \                largest_negative = num\n        elif num > 0:\n            if\
    \ smallest_positive is None or num < smallest_positive:\n                smallest_positive\
    \ = num\n    return (largest_negative, smallest_positive)\n", "    largest_neg\
    \ = None\n    smallest_pos = None\n    for num in lst:\n        if num < 0:\n\
    \            if largest_neg is None or num > largest_neg:\n                largest_neg\
    \ = num\n        elif num > 0:\n            if smallest_pos is None or num < smallest_pos:\n\
    \                smallest_pos = num\n    return (largest_neg, smallest_pos)\n",
  "    largest_neg = None\n    smallest_pos = None\n    for num in lst:\n        if\
    \ num < 0:\n            if largest_neg is None or num > largest_neg:\n       \
    \         largest_neg = num\n        elif num > 0:\n            if smallest_pos\
    \ is None or num < smallest_pos:\n                smallest_pos = num\n    return\
    \ (largest_neg, smallest_pos)", "    largest_neg = None\n    smallest_pos = None\n\
    \    for num in lst:\n        if num < 0:\n            if largest_neg is None\
    \ or num > largest_neg:\n                largest_neg = num\n        elif num >\
    \ 0:\n            if smallest_pos is None or num < smallest_pos:\n           \
    \     smallest_pos = num\n    return (largest_neg, smallest_pos)\n", "    largest_neg\
    \ = None\n    smallest_pos = None\n    for num in lst:\n        if num < 0:\n\
    \            if largest_neg is None or num > largest_neg:\n                largest_neg\
    \ = num\n        elif num > 0:\n            if smallest_pos is None or num < smallest_pos:\n\
    \                smallest_pos = num\n    return (largest_neg, smallest_pos)\n",
  "    # your code here\n    return (None, None)\n", "    pass\n", "    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None or num > largest_negative:\n   \
    \             largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    negative = []\n   \
    \ positive = []\n    for i in lst:\n        if i < 0:\n            negative.append(i)\n\
    \        elif i > 0:\n            positive.append(i)\n    if negative == []:\n\
    \        a = None\n    else:\n        a = max(negative)\n    if positive == []:\n\
    \        b = None\n    else:\n        b = min(positive)\n    return (a, b)\n",
  "    if not lst:\n        return (None, None)\n    else:\n        neg_lst = [i for\
    \ i in lst if i < 0]\n        pos_lst = [i for i in lst if i > 0]\n        if\
    \ not neg_lst:\n            neg_lst = [None]\n        if not pos_lst:\n      \
    \      pos_lst = [None]\n        return (max(neg_lst), min(pos_lst))\n", "   \
    \ largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None or num > largest_negative:\n\
    \                largest_negative = num\n        elif num > 0:\n            if\
    \ smallest_positive is None or num < smallest_positive:\n                smallest_positive\
    \ = num\n    return (largest_negative, smallest_positive)\n", "    pass\n", " \
    \   pass\n", "    if len(lst) == 0:\n        return (None, None)\n    else:\n\
    \        max_neg = None\n        min_pos = None\n        for i in lst:\n     \
    \       if i < 0:\n                if max_neg == None:\n                    max_neg\
    \ = i\n                elif i > max_neg:\n                    max_neg = i\n  \
    \          elif i > 0:\n                if min_pos == None:\n                \
    \    min_pos = i\n                elif i < min_pos:\n                    min_pos\
    \ = i\n        return (max_neg, min_pos)\n", "    if len(lst) == 0:\n        return\
    \ (None, None)\n    else:\n        neg_lst = [i for i in lst if i < 0]\n     \
    \   pos_lst = [i for i in lst if i > 0]\n        if len(neg_lst) == 0:\n     \
    \       a = None\n        else:\n            a = max(neg_lst)\n        if len(pos_lst)\
    \ == 0:\n            b = None\n        else:\n            b = min(pos_lst)\n \
    \       return (a, b)\n", "    largest_neg = None\n    smallest_pos = None\n \
    \   for num in lst:\n        if num < 0:\n            if largest_neg is None or\
    \ num > largest_neg:\n                largest_neg = num\n        elif num > 0:\n\
    \            if smallest_pos is None or num < smallest_pos:\n                smallest_pos\
    \ = num\n    return (largest_neg, smallest_pos)\n", "    pass\n", "    largest_neg\
    \ = None\n    smallest_pos = None\n    for i in lst:\n        if i < 0:\n    \
    \        if largest_neg is None or i > largest_neg:\n                largest_neg\
    \ = i\n        elif i > 0:\n            if smallest_pos is None or i < smallest_pos:\n\
    \                smallest_pos = i\n    return (largest_neg, smallest_pos)\n",
  "    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None or num > largest_negative:\n\
    \                largest_negative = num\n        elif num > 0:\n            if\
    \ smallest_positive is None or num < smallest_positive:\n                smallest_positive\
    \ = num\n    return (largest_negative, smallest_positive)\n", "    pass\n", " \
    \   # TODO: Implement this function\n    pass\n", "    largest_negative = None\n\
    \    smallest_positive = None\n    for num in lst:\n        if num < 0:\n    \
    \        if largest_negative is None or num > largest_negative:\n            \
    \    largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    neg = None\n    pos\
    \ = None\n    for i in lst:\n        if i < 0:\n            if neg is None or\
    \ i > neg:\n                neg = i\n        elif i > 0:\n            if pos is\
    \ None or i < pos:\n                pos = i\n    return (neg, pos)\n", "    #\
    \ TODO: Write your code here\n    pass\n\n", "    pass\n", "    pass\n", "   \
    \ pass\n", "    return (None, None)\n", "    if not lst:\n        return (None,\
    \ None)\n    else:\n        a = max(i for i in lst if i < 0)\n        b = min(i\
    \ for i in lst if i > 0)\n        return (a, b)\n", "    if len(lst) == 0:\n \
    \       return (None, None)\n    else:\n        negative_list = []\n        positive_list\
    \ = []\n        for i in lst:\n            if i < 0:\n                negative_list.append(i)\n\
    \            elif i > 0:\n                positive_list.append(i)\n        if\
    \ len(negative_list) == 0:\n            negative_list.append(None)\n        if\
    \ len(positive_list) == 0:\n            positive_list.append(None)\n        return\
    \ (max(negative_list), min(positive_list))\n", "    largest = None\n    smallest\
    \ = None\n    for num in lst:\n        if num > 0:\n            if smallest is\
    \ None or num < smallest:\n                smallest = num\n        elif num <\
    \ 0:\n            if largest is None or num > largest:\n                largest\
    \ = num\n    return (largest, smallest)\n", "    largest_negative = None\n   \
    \ smallest_positive = None\n    for i in lst:\n        if i < 0:\n           \
    \ if largest_negative is None or i > largest_negative:\n                largest_negative\
    \ = i\n        elif i > 0:\n            if smallest_positive is None or i < smallest_positive:\n\
    \                smallest_positive = i\n    return (largest_negative, smallest_positive)\n",
  "    return (None, None)\n", "    if not lst:\n        return (None, None)\n   \
    \ else:\n        neg = [i for i in lst if i < 0]\n        pos = [i for i in lst\
    \ if i > 0]\n        if not neg:\n            a = None\n        else:\n      \
    \      a = max(neg)\n        if not pos:\n            b = None\n        else:\n\
    \            b = min(pos)\n        return (a, b)\n", "    largest_negative = None\n\
    \    smallest_positive = None\n    for num in lst:\n        if num < 0:\n    \
    \        if largest_negative is None or num > largest_negative:\n            \
    \    largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    pass\n", "    return\
    \ (None, None)\n\n", "    pass\n", "    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None or num > largest_negative:\n                largest_negative = num\n\
    \        elif num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)",
  "    largest_negative = None\n    smallest_positive = None\n    for i in lst:\n\
    \        if i < 0:\n            if largest_negative is None or i > largest_negative:\n\
    \                largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    # your code here\n \
    \   pass\n", "    largest_neg = None\n    smallest_pos = None\n    for num in\
    \ lst:\n        if num < 0:\n            if largest_neg is None or num > largest_neg:\n\
    \                largest_neg = num\n        elif num > 0:\n            if smallest_pos\
    \ is None or num < smallest_pos:\n                smallest_pos = num\n    return\
    \ (largest_neg, smallest_pos)\n", "    pass\n", "    largest_neg = None\n    smallest_pos\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_neg\
    \ is None or num > largest_neg:\n                largest_neg = num\n        elif\
    \ num > 0:\n            if smallest_pos is None or num < smallest_pos:\n     \
    \           smallest_pos = num\n    return (largest_neg, smallest_pos)\n", " \
    \   # your code here\n    pass\n", "    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None or num > largest_negative:\n                largest_negative = num\n\
    \        elif num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    if len(lst) == 0:\n        return (None, None)\n    else:\n        negative\
    \ = []\n        positive = []\n        for i in lst:\n            if i < 0:\n\
    \                negative.append(i)\n            elif i > 0:\n               \
    \ positive.append(i)\n        if len(negative) == 0:\n            a = None\n \
    \       else:\n            a = max(negative)\n        if len(positive) == 0:\n\
    \            b = None\n        else:\n            b = min(positive)\n        return\
    \ (a, b)\n", "    if len(lst) == 0:\n        return (None, None)\n    else:\n\
    \        lst_neg = [x for x in lst if x < 0]\n        lst_pos = [x for x in lst\
    \ if x > 0]\n        if len(lst_neg) == 0:\n            a = None\n        else:\n\
    \            a = max(lst_neg)\n        if len(lst_pos) == 0:\n            b =\
    \ None\n        else:\n            b = min(lst_pos)\n        return (a, b)\n",
  "    largest_negative = None\n    smallest_positive = None\n    for i in lst:\n\
    \        if i < 0:\n            if largest_negative is None or i > largest_negative:\n\
    \                largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    pass\n", "    pass\n",
  "    if len(lst) == 0:\n        return (None, None)\n    else:\n        neg = []\n\
    \        pos = []\n        for i in lst:\n            if i < 0:\n            \
    \    neg.append(i)\n            elif i > 0:\n                pos.append(i)\n \
    \       if len(neg) == 0:\n            a = None\n        else:\n            a\
    \ = max(neg)\n        if len(pos) == 0:\n            b = None\n        else:\n\
    \            b = min(pos)\n        return (a, b)\n", "    if len(lst) == 0:\n\
    \        return (None, None)\n    else:\n        neg_list = [x for x in lst if\
    \ x < 0]\n        pos_list = [x for x in lst if x > 0]\n        if len(neg_list)\
    \ == 0:\n            neg_list = None\n        else:\n            neg_list = max(neg_list)\n\
    \        if len(pos_list) == 0:\n            pos_list = None\n        else:\n\
    \            pos_list = min(pos_list)\n        return (neg_list, pos_list)\n",
  "    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None or num > largest_negative:\n\
    \                largest_negative = num\n        elif num > 0:\n            if\
    \ smallest_positive is None or num < smallest_positive:\n                smallest_positive\
    \ = num\n    return (largest_negative, smallest_positive)\n", "    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None or num > largest_negative:\n   \
    \             largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    pass\n", "    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None or num > largest_negative:\n   \
    \             largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    if len(lst) == 0:\n\
    \        return (None, None)\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for i in lst:\n        if i < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = i\n            elif i > largest_negative:\n\
    \                largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None:\n                smallest_positive = i\n            elif i < smallest_positive:\n\
    \                smallest_positive = i\n    return (largest_negative, smallest_positive)",
  '    pass', "    pass\n", "    if not lst:\n        return (None, None)\n    else:\n\
    \        neg = [x for x in lst if x < 0]\n        pos = [x for x in lst if x >\
    \ 0]\n        if neg:\n            a = max(neg)\n        else:\n            a\
    \ = None\n        if pos:\n            b = min(pos)\n        else:\n         \
    \   b = None\n        return (a, b)\n", "    largest_negative = None\n    smallest_positive\
    \ = None\n    for i in lst:\n        if i < 0:\n            if largest_negative\
    \ is None or i > largest_negative:\n                largest_negative = i\n   \
    \     elif i > 0:\n            if smallest_positive is None or i < smallest_positive:\n\
    \                smallest_positive = i\n    return (largest_negative, smallest_positive)\n",
  "    if len(lst) == 0:\n        return (None, None)\n    elif len(lst) == 1:\n \
    \       if lst[0] > 0:\n            return (None, lst[0])\n        elif lst[0]\
    \ < 0:\n            return (lst[0], None)\n        else:\n            return (None,\
    \ None)\n    else:\n        neg_lst = [x for x in lst if x < 0]\n        pos_lst\
    \ = [x for x in lst if x > 0]\n        if len(neg_lst) == 0:\n            neg_lst\
    \ = [None]\n        if len(pos_lst) == 0:\n            pos_lst = [None]\n    \
    \    return (max(neg_lst), min(pos_lst))\n", "    pass\n", "    pass\n", "   \
    \ pass\n", "    pass\n", "    pass\n", "    if not lst:\n        return (None,\
    \ None)\n    else:\n        negative_lst = [i for i in lst if i < 0]\n       \
    \ positive_lst = [i for i in lst if i > 0]\n        if not negative_lst:\n   \
    \         a = None\n        else:\n            a = max(negative_lst)\n       \
    \ if not positive_lst:\n            b = None\n        else:\n            b = min(positive_lst)\n\
    \        return (a, b)\n", "    pass\n\n", "    largest_negative = None\n    smallest_positive\
    \ = None\n    for i in lst:\n        if i < 0:\n            if largest_negative\
    \ is None or i > largest_negative:\n                largest_negative = i\n   \
    \     elif i > 0:\n            if smallest_positive is None or i < smallest_positive:\n\
    \                smallest_positive = i\n    return (largest_negative, smallest_positive)\n",
  "    pass\n\n", "    if len(lst) == 0:\n        return (None, None)\n    else:\n\
    \        neg_lst = [x for x in lst if x < 0]\n        pos_lst = [x for x in lst\
    \ if x > 0]\n        if len(neg_lst) == 0:\n            a = None\n        else:\n\
    \            a = max(neg_lst)\n        if len(pos_lst) == 0:\n            b =\
    \ None\n        else:\n            b = min(pos_lst)\n        return (a, b)\n",
  "    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None or num > largest_negative:\n\
    \                largest_negative = num\n        elif num > 0:\n            if\
    \ smallest_positive is None or num < smallest_positive:\n                smallest_positive\
    \ = num\n    return (largest_negative, smallest_positive)\n", "    pass\n", " \
    \   pass\n", "    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None or\
    \ num > largest_negative:\n                largest_negative = num\n        elif\
    \ num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    pass\n", "    pass\n", "    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None or num > largest_negative:\n                largest_negative = num\n\
    \        elif num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    if not lst:\n        return (None, None)\n    else:\n        neg_lst = [i for\
    \ i in lst if i < 0]\n        pos_lst = [i for i in lst if i > 0]\n        if\
    \ not neg_lst:\n            a = None\n        else:\n            a = max(neg_lst)\n\
    \        if not pos_lst:\n            b = None\n        else:\n            b =\
    \ min(pos_lst)\n        return (a, b)\n", "    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None or num > largest_negative:\n                largest_negative = num\n\
    \        elif num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    largest_negative = None\n    smallest_positive = None\n    for i in lst:\n\
    \        if i < 0:\n            if largest_negative is None or i > largest_negative:\n\
    \                largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    pass\n\n", "    pass\n",
  "    if not lst:\n        return (None, None)\n    else:\n        neg_max = None\n\
    \        pos_min = None\n        for i in lst:\n            if i < 0:\n      \
    \          if neg_max is None:\n                    neg_max = i\n            \
    \    elif i > neg_max:\n                    neg_max = i\n            elif i >\
    \ 0:\n                if pos_min is None:\n                    pos_min = i\n \
    \               elif i < pos_min:\n                    pos_min = i\n        return\
    \ (neg_max, pos_min)\n", "    # Write your code here\n    pass\n\n", "    largest_negative\
    \ = None\n    smallest_positive = None\n    for i in lst:\n        if i < 0:\n\
    \            if largest_negative is None or i > largest_negative:\n          \
    \      largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    largest_negative = None\n\
    \    smallest_positive = None\n    for num in lst:\n        if num < 0:\n    \
    \        if largest_negative is None or num > largest_negative:\n            \
    \    largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    largest_neg = None\n\
    \    smallest_pos = None\n    for num in lst:\n        if num < 0:\n         \
    \   if largest_neg is None or num > largest_neg:\n                largest_neg\
    \ = num\n        elif num > 0:\n            if smallest_pos is None or num < smallest_pos:\n\
    \                smallest_pos = num\n    return (largest_neg, smallest_pos)\n",
  "    largest_negative = None\n    smallest_positive = None\n    for i in lst:\n\
    \        if i < 0:\n            if largest_negative is None or i > largest_negative:\n\
    \                largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    pass\n\n", "    return\
    \ (None, None)\n", "    largest_negative = None\n    smallest_positive = None\n\
    \    for num in lst:\n        if num < 0:\n            if largest_negative is\
    \ None or num > largest_negative:\n                largest_negative = num\n  \
    \      elif num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None or num > largest_negative:\n\
    \                largest_negative = num\n        elif num > 0:\n            if\
    \ smallest_positive is None or num < smallest_positive:\n                smallest_positive\
    \ = num\n    return (largest_negative, smallest_positive)\n", "    return (None,\
    \ None)\n", "    pass\n", "    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None or num > largest_negative:\n                largest_negative = num\n\
    \        elif num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    if len(lst) == 0:\n        return (None, None)\n    else:\n        neg_list\
    \ = [i for i in lst if i < 0]\n        pos_list = [i for i in lst if i > 0]\n\
    \        if len(neg_list) == 0:\n            a = None\n        else:\n       \
    \     a = max(neg_list)\n        if len(pos_list) == 0:\n            b = None\n\
    \        else:\n            b = min(pos_list)\n        return (a, b)\n", "   \
    \ largest_negative = None\n    smallest_positive = None\n    for i in lst:\n \
    \       if i < 0:\n            if largest_negative is None or i > largest_negative:\n\
    \                largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    largest_negative = None\n\
    \    smallest_positive = None\n    for i in lst:\n        if i < 0:\n        \
    \    if largest_negative is None or i > largest_negative:\n                largest_negative\
    \ = i\n        elif i > 0:\n            if smallest_positive is None or i < smallest_positive:\n\
    \                smallest_positive = i\n    return (largest_negative, smallest_positive)\n",
  "    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None or num > largest_negative:\n\
    \                largest_negative = num\n        elif num > 0:\n            if\
    \ smallest_positive is None or num < smallest_positive:\n                smallest_positive\
    \ = num\n    return (largest_negative, smallest_positive)\n", '    pass', "  \
    \  pass\n", "    pass\n\n", "    largest_neg = None\n    smallest_pos = None\n\
    \    for num in lst:\n        if num < 0:\n            if largest_neg is None\
    \ or num > largest_neg:\n                largest_neg = num\n        elif num >\
    \ 0:\n            if smallest_pos is None or num < smallest_pos:\n           \
    \     smallest_pos = num\n    return (largest_neg, smallest_pos)\n", "    pass\n",
  "    pass\n", "    if not lst:\n        return (None, None)\n    else:\n       \
    \ neg = []\n        pos = []\n        for i in lst:\n            if i < 0:\n \
    \               neg.append(i)\n            elif i > 0:\n                pos.append(i)\n\
    \        if neg:\n            a = max(neg)\n        else:\n            a = None\n\
    \        if pos:\n            b = min(pos)\n        else:\n            b = None\n\
    \        return (a, b)\n", "    largest_negative = None\n    smallest_positive\
    \ = None\n    for i in lst:\n        if i < 0:\n            if largest_negative\
    \ is None or i > largest_negative:\n                largest_negative = i\n   \
    \     elif i > 0:\n            if smallest_positive is None or i < smallest_positive:\n\
    \                smallest_positive = i\n    return (largest_negative, smallest_positive)\n",
  "    pass\n", "    pass\n", "    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None or num > largest_negative:\n                largest_negative = num\n\
    \        elif num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    pass\n", "    if not lst:\n        return (None, None)\n    else:\n       \
    \ a = None\n        b = None\n        for i in lst:\n            if i < 0:\n \
    \               if a is None:\n                    a = i\n                else:\n\
    \                    a = max(a, i)\n            elif i > 0:\n                if\
    \ b is None:\n                    b = i\n                else:\n             \
    \       b = min(b, i)\n        return (a, b)\n", "    return (None, None)\n",
  "    return (None, None)\n", "    pass\n", "    pass\n\n", "    neg_nums = [num\
    \ for num in lst if num < 0]\n    pos_nums = [num for num in lst if num > 0]\n\
    \    return (max(neg_nums) if neg_nums else None, min(pos_nums) if pos_nums else\
    \ None)\n", "    if len(lst) == 0:\n        return (None, None)\n    else:\n \
    \       negative_integers = [i for i in lst if i < 0]\n        positive_integers\
    \ = [i for i in lst if i > 0]\n        if len(negative_integers) == 0:\n     \
    \       a = None\n        else:\n            a = max(negative_integers)\n    \
    \    if len(positive_integers) == 0:\n            b = None\n        else:\n  \
    \          b = min(positive_integers)\n        return (a, b)\n", "    pass\n",
  "    pass\n\n", "    # TODO: implement this function\n    pass\n", "    largest_negative\
    \ = None\n    smallest_positive = None\n    for i in lst:\n        if i < 0:\n\
    \            if largest_negative is None or i > largest_negative:\n          \
    \      largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    if not lst:\n      \
    \  return (None, None)\n    else:\n        max_neg = None\n        min_pos = None\n\
    \        for i in lst:\n            if i < 0:\n                if max_neg is None:\n\
    \                    max_neg = i\n                elif i > max_neg:\n        \
    \            max_neg = i\n            elif i > 0:\n                if min_pos\
    \ is None:\n                    min_pos = i\n                elif i < min_pos:\n\
    \                    min_pos = i\n        return (max_neg, min_pos)\n", "    pass\n",
  "    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None or num > largest_negative:\n\
    \                largest_negative = num\n        elif num > 0:\n            if\
    \ smallest_positive is None or num < smallest_positive:\n                smallest_positive\
    \ = num\n    return (largest_negative, smallest_positive)\n", "    pass\n", " \
    \   neg = None\n    pos = None\n    for i in lst:\n        if i < 0:\n       \
    \     if neg is None or i > neg:\n                neg = i\n        elif i > 0:\n\
    \            if pos is None or i < pos:\n                pos = i\n    return (neg,\
    \ pos)\n", "    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None or\
    \ num > largest_negative:\n                largest_negative = num\n        elif\
    \ num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None or num > largest_negative:\n\
    \                largest_negative = num\n        elif num > 0:\n            if\
    \ smallest_positive is None or num < smallest_positive:\n                smallest_positive\
    \ = num\n    return (largest_negative, smallest_positive)\n", "    if not lst:\n\
    \        return (None, None)\n    else:\n        neg_lst = [x for x in lst if\
    \ x < 0]\n        pos_lst = [x for x in lst if x > 0]\n        if neg_lst:\n \
    \           neg_max = max(neg_lst)\n        else:\n            neg_max = None\n\
    \        if pos_lst:\n            pos_min = min(pos_lst)\n        else:\n    \
    \        pos_min = None\n        return (neg_max, pos_min)\n", "    largest_negative\
    \ = None\n    smallest_positive = None\n    for i in lst:\n        if i < 0:\n\
    \            if largest_negative == None or i > largest_negative:\n          \
    \      largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ == None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    largest_negative = None\n\
    \    smallest_positive = None\n    for num in lst:\n        if num < 0:\n    \
    \        if largest_negative is None or num > largest_negative:\n            \
    \    largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    largest_negative =\
    \ None\n    smallest_positive = None\n    for num in lst:\n        if num < 0:\n\
    \            if largest_negative is None or num > largest_negative:\n        \
    \        largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    pass\n\n", "    pass\n",
  "    largest_negative = None\n    smallest_positive = None\n    for i in lst:\n\
    \        if i < 0:\n            if largest_negative is None or i > largest_negative:\n\
    \                largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    pass\n", "    largest_negative\
    \ = None\n    smallest_positive = None\n    for i in lst:\n        if i < 0:\n\
    \            if largest_negative is None or i > largest_negative:\n          \
    \      largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    pass\n", "    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None or num > largest_negative:\n   \
    \             largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    largest_neg = None\n\
    \    smallest_pos = None\n    for num in lst:\n        if num < 0:\n         \
    \   if largest_neg is None or num > largest_neg:\n                largest_neg\
    \ = num\n        elif num > 0:\n            if smallest_pos is None or num < smallest_pos:\n\
    \                smallest_pos = num\n    return (largest_neg, smallest_pos)\n",
  "    pass\n", "    pass\n", "    # your code here\n    return (None, None)\n\n",
  "    largest_neg = None\n    smallest_pos = None\n    for num in lst:\n        if\
    \ num < 0:\n            if largest_neg is None or num > largest_neg:\n       \
    \         largest_neg = num\n        elif num > 0:\n            if smallest_pos\
    \ is None or num < smallest_pos:\n                smallest_pos = num\n    return\
    \ (largest_neg, smallest_pos)\n", "    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None or num > largest_negative:\n                largest_negative = num\n\
    \        elif num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    pass\n", "    pass\n\n", "    pass\n", "    pass\n", "    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None or num > largest_negative:\n   \
    \             largest_negative = num\n        elif num > 0:\n            if smallest_positive\
    \ is None or num < smallest_positive:\n                smallest_positive = num\n\
    \    return (largest_negative, smallest_positive)\n", "    pass\n", "    largest_negative\
    \ = None\n    smallest_positive = None\n    for i in lst:\n        if i < 0:\n\
    \            if largest_negative is None or i > largest_negative:\n          \
    \      largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    # your code here\n \
    \   return (None, None)\n", "    # your code here\n    pass\n", "    if len(lst)\
    \ == 0:\n        return (None, None)\n    else:\n        pos = []\n        neg\
    \ = []\n        for i in lst:\n            if i > 0:\n                pos.append(i)\n\
    \            elif i < 0:\n                neg.append(i)\n        if len(pos) ==\
    \ 0:\n            pos = None\n        else:\n            pos = min(pos)\n    \
    \    if len(neg) == 0:\n            neg = None\n        else:\n            neg\
    \ = max(neg)\n        return (neg, pos)\n", "    largest_neg = None\n    smallest_pos\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_neg\
    \ is None or num > largest_neg:\n                largest_neg = num\n        elif\
    \ num > 0:\n            if smallest_pos is None or num < smallest_pos:\n     \
    \           smallest_pos = num\n    return (largest_neg, smallest_pos)\n", " \
    \   pass\n", "    largest_negative = None\n    smallest_positive = None\n    for\
    \ i in lst:\n        if i > 0:\n            if smallest_positive is None or i\
    \ < smallest_positive:\n                smallest_positive = i\n        elif i\
    \ < 0:\n            if largest_negative is None or i > largest_negative:\n   \
    \             largest_negative = i\n    return (largest_negative, smallest_positive)\n",
  "    pass\n\n", "    largest_negative = None\n    smallest_positive = None\n   \
    \ for i in lst:\n        if i < 0:\n            if largest_negative is None or\
    \ i > largest_negative:\n                largest_negative = i\n        elif i\
    \ > 0:\n            if smallest_positive is None or i < smallest_positive:\n \
    \               smallest_positive = i\n    return (largest_negative, smallest_positive)\n",
  "    pass\n", "    negatives = [x for x in lst if x < 0]\n    positives = [x for\
    \ x in lst if x > 0]\n    return (max(negatives) if negatives else None, min(positives)\
    \ if positives else None)\n", "    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None or num > largest_negative:\n                largest_negative = num\n\
    \        elif num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    largest_negative = None\n    smallest_positive = None\n    for i in lst:\n\
    \        if i < 0:\n            if largest_negative is None or i > largest_negative:\n\
    \                largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None or i < smallest_positive:\n                smallest_positive = i\n \
    \   return (largest_negative, smallest_positive)\n", "    pass\n", "    pass\n",
  "    # your code here\n    largest_negative = None\n    smallest_positive = None\n\
    \    for i in lst:\n        if i < 0:\n            if largest_negative is None:\n\
    \                largest_negative = i\n            elif i > largest_negative:\n\
    \                largest_negative = i\n        elif i > 0:\n            if smallest_positive\
    \ is None:\n                smallest_positive = i\n            elif i < smallest_positive:\n\
    \                smallest_positive = i\n    return (largest_negative, smallest_positive)\n\
    \n", "    pass\n", "    # your code here\n    pass\n", "    negatives = [x for\
    \ x in lst if x < 0]\n    positives = [x for x in lst if x > 0]\n    if negatives:\n\
    \        largest_negative = max(negatives)\n    else:\n        largest_negative\
    \ = None\n    if positives:\n        smallest_positive = min(positives)\n    else:\n\
    \        smallest_positive = None\n    return (largest_negative, smallest_positive)",
  "    pass\n", "    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None or\
    \ num > largest_negative:\n                largest_negative = num\n        elif\
    \ num > 0:\n            if smallest_positive is None or num < smallest_positive:\n\
    \                smallest_positive = num\n    return (largest_negative, smallest_positive)\n",
  "    pass\n", "    smallest_positive_int = None\n    largest_negative_int = None\n\
    \    for num in lst:\n        if num > 0:\n            if smallest_positive_int\
    \ is None or num < smallest_positive_int:\n                smallest_positive_int\
    \ = num\n        elif num < 0:\n            if largest_negative_int is None or\
    \ num > largest_negative_int:\n                largest_negative_int = num\n  \
    \  return (largest_negative_int, smallest_positive_int)\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

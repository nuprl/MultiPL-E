name: HumanEval_157_right_angle_triangle
language: py
prompt: "def right_angle_triangle(a: int, b: int, c: int) -> bool:\n    \"\"\"\n \
  \   Given the lengths of the three sides of a triangle. Return True if the three\n\
  \    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
  \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
  \    >>> right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1,\
  \ 2, 3)\n    False\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
  \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
  \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
  \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
  \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
  \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
  \    check(right_angle_triangle)\n\ntest_check()\n"
completions: ["    pass\n\n", "    return a ** 2 + b ** 2 == c ** 2\n\n", "    pass\n\
    \n", "    # TODO: implement the function\n    pass\n\n", "    if a > b and a >\
    \ c:\n        return a ** 2 == b ** 2 + c ** 2\n    elif b > a and b > c:\n  \
    \      return b ** 2 == a ** 2 + c ** 2\n    elif c > a and c > b:\n        return\
    \ c ** 2 == a ** 2 + b ** 2\n    else:\n        return False\n\n", "    return\
    \ a ** 2 + b ** 2 == c ** 2\n\n", "    if a**2 + b**2 == c**2:\n        return\
    \ True\n    else:\n        return False\n", "    if a**2 + b**2 == c**2:\n   \
    \     return True\n    return False\n\n", "    return a ** 2 + b ** 2 == c **\
    \ 2\n\n", "    return a**2 + b**2 == c**2\n\n", "    if a ** 2 + b ** 2 == c **\
    \ 2:\n        return True\n    else:\n        return False\n\n", "    return a**2\
    \ + b**2 == c**2\n\n", "    return a**2 + b**2 == c**2\n\n", "    return a **\
    \ 2 + b ** 2 == c ** 2\n\n", "    return a**2 + b**2 == c**2\n\n", "    return\
    \ (a**2 + b**2 == c**2) or (a**2 + c**2 == b**2) or (b**2 + c**2 == a**2)\n",
  "    if a > b and a > c:\n        return a ** 2 == b ** 2 + c ** 2\n    elif b >\
    \ a and b > c:\n        return b ** 2 == a ** 2 + c ** 2\n    elif c > a and c\
    \ > b:\n        return c ** 2 == a ** 2 + b ** 2\n    else:\n        return False\n\
    \n", "    if a**2 + b**2 == c**2:\n        return True\n    else:\n        return\
    \ False\n", "    # TODO: Write your code here\n    pass\n\n", "    if a > b and\
    \ a > c:\n        return a ** 2 == b ** 2 + c ** 2\n    elif b > a and b > c:\n\
    \        return b ** 2 == a ** 2 + c ** 2\n    elif c > a and c > b:\n       \
    \ return c ** 2 == a ** 2 + b ** 2\n    else:\n        return False\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_57_monotonic
language: php
prompt: "<?php\n// Return True is list elements are monotonically increasing or decreasing.\n\
  function monotonic($l) {\n"
tests: "function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10))\
  \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
  \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test\
  \ failed!\"); }\n}\n\ntest();"
completions: ["    $increasing = true;\n    $decreasing = true;\n    for ($i = 0;\
    \ $i < count($l) - 1; $i++) {\n        if ($l[$i] < $l[$i + 1]) {\n          \
    \  $decreasing = false;\n        }\n        if ($l[$i] > $l[$i + 1]) {\n     \
    \       $increasing = false;\n        }\n    }\n    return $increasing || $decreasing;\n\
    }\n", "    $mono = true;\n    $inc = null;\n    $prev = null;\n    foreach ($l\
    \ as $e) {\n        if ($prev !== null) {\n            if ($inc === null) {\n\
    \                $inc = $e > $prev;\n            } else {\n                if\
    \ ($inc && $e < $prev) {\n                    $mono = false;\n               \
    \     break;\n                } else if (!$inc && $e > $prev) {\n            \
    \        $mono = false;\n                    break;\n                }\n     \
    \       }\n        }\n        $prev = $e;\n    }\n    return $mono;\n}\n", " \
    \   $monotonic = true;\n    $increasing = true;\n    $decreasing = true;\n   \
    \ $prev = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $prev) {\n            $decreasing = false;\n        } else if ($l[$i] < $prev)\
    \ {\n            $increasing = false;\n        }\n        $prev = $l[$i];\n  \
    \  }\n    if (!$increasing && !$decreasing) {\n        $monotonic = false;\n \
    \   }\n    return $monotonic;\n}\n", "    $increasing = true;\n    $decreasing\
    \ = true;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] <\
    \ $l[$i + 1]) {\n            $decreasing = false;\n        }\n        if ($l[$i]\
    \ > $l[$i + 1]) {\n            $increasing = false;\n        }\n    }\n    return\
    \ $increasing || $decreasing;\n}\n", "    $increasing = true;\n    $decreasing\
    \ = true;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] <\
    \ $l[$i + 1]) {\n            $decreasing = false;\n        }\n        if ($l[$i]\
    \ > $l[$i + 1]) {\n            $increasing = false;\n        }\n    }\n    return\
    \ $increasing || $decreasing;\n}\n", "    $increasing = true;\n    $decreasing\
    \ = true;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] <\
    \ $l[$i + 1]) {\n            $decreasing = false;\n        }\n        if ($l[$i]\
    \ > $l[$i + 1]) {\n            $increasing = false;\n        }\n    }\n    return\
    \ $increasing || $decreasing;\n}\n", "    $monotonic = true;\n    $increasing\
    \ = $l[0] < $l[1];\n    for ($i = 1; $i < count($l) - 1; $i++) {\n        if ($increasing)\
    \ {\n            if ($l[$i] > $l[$i + 1]) {\n                $monotonic = false;\n\
    \                break;\n            }\n        } else {\n            if ($l[$i]\
    \ < $l[$i + 1]) {\n                $monotonic = false;\n                break;\n\
    \            }\n        }\n    }\n    return $monotonic;\n}\n", "    $increasing\
    \ = true;\n    $decreasing = true;\n    for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n        if ($l[$i] < $l[$i + 1]) {\n            $decreasing = false;\n  \
    \      }\n        if ($l[$i] > $l[$i + 1]) {\n            $increasing = false;\n\
    \        }\n    }\n    return $increasing || $decreasing;\n}\n", "    $dec = true;\n\
    \    $inc = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ < $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n    return $dec\
    \ || $inc;\n}\n", "    $dec = true;\n    $inc = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $dec || $inc;\n}\n", "    $increasing = true;\n    $decreasing\
    \ = true;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] <\
    \ $l[$i + 1]) {\n            $decreasing = false;\n        }\n        if ($l[$i]\
    \ > $l[$i + 1]) {\n            $increasing = false;\n        }\n    }\n    return\
    \ $increasing || $decreasing;\n}\n\n$l = [1, 2, 3, 4, 5];\nvar_dump(monotonic($l));\n\
    $l = [5, 4, 3, 2, 1];\nvar_dump(monotonic($l));\n$l = [1, 2, 3, 4, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5, 5, 5, 5,", "    $increasing = true;\n    $decreasing = true;\n    for\
    \ ($i = 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] < $l[$i + 1]) {\n \
    \           $decreasing = false;\n        }\n        if ($l[$i] > $l[$i + 1])\
    \ {\n            $increasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n", "    $inc = $dec = True;\n    for ($i = 0; $i < count($l)\
    \ - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n            $inc = False;\n\
    \        }\n        if ($l[$i] < $l[$i + 1]) {\n            $dec = False;\n  \
    \      }\n    }\n    return $inc || $dec;\n}\n", "    $decreasing = true;\n  \
    \  $increasing = true;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n       \
    \ if ($l[$i] < $l[$i + 1]) {\n            $decreasing = false;\n        }\n  \
    \      if ($l[$i] > $l[$i + 1]) {\n            $increasing = false;\n        }\n\
    \    }\n    return $decreasing || $increasing;\n}\n", "    $increasing = true;\n\
    \    $decreasing = true;\n    $prev = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $prev) {\n            $increasing = false;\n \
    \       }\n        if ($l[$i] > $prev) {\n            $decreasing = false;\n \
    \       }\n        $prev = $l[$i];\n    }\n    return $increasing || $decreasing;\n\
    }\n", "  $increasing = true;\n  $decreasing = true;\n  for ($i = 0; $i < count($l)\
    \ - 1; $i++) {\n    if ($l[$i] < $l[$i + 1]) {\n      $decreasing = false;\n \
    \   }\n    if ($l[$i] > $l[$i + 1]) {\n      $increasing = false;\n    }\n  }\n\
    \  return $increasing || $decreasing;\n}\n", "    $mono = true;\n    $inc = $l[0]\
    \ < $l[1];\n    for ($i = 1; $i < count($l) - 1; $i++) {\n        if ($inc &&\
    \ $l[$i] > $l[$i + 1]) {\n            $mono = false;\n            break;\n   \
    \     }\n        if (!$inc && $l[$i] < $l[$i + 1]) {\n            $mono = false;\n\
    \            break;\n        }\n    }\n    return $mono;\n}\n", "    $monotonic\
    \ = true;\n    $increasing = ($l[0] < $l[1]);\n    $decreasing = ($l[0] > $l[1]);\n\
    \    for ($i = 1; $i < count($l) - 1; $i++) {\n        if ($increasing && $l[$i]\
    \ > $l[$i + 1]) {\n            $monotonic = false;\n            break;\n     \
    \   }\n        if ($decreasing && $l[$i] < $l[$i + 1]) {\n            $monotonic\
    \ = false;\n            break;\n        }\n    }\n    return $monotonic;\n}\n",
  "    $increasing = true;\n    $decreasing = true;\n    for ($i = 0; $i < count($l)\
    \ - 1; $i++) {\n        if ($l[$i] < $l[$i + 1]) {\n            $decreasing =\
    \ false;\n        }\n        if ($l[$i] > $l[$i + 1]) {\n            $increasing\
    \ = false;\n        }\n    }\n    return $increasing || $decreasing;\n}\n", " \
    \   $increasing = true;\n    $decreasing = true;\n    for ($i = 0; $i < count($l)\
    \ - 1; $i++) {\n        if ($l[$i] < $l[$i + 1]) {\n            $decreasing =\
    \ false;\n        }\n        if ($l[$i] > $l[$i + 1]) {\n            $increasing\
    \ = false;\n        }\n    }\n    return $increasing || $decreasing;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

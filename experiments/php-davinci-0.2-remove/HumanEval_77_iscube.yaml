name: HumanEval_77_iscube
language: php
prompt: "<?php\n// Write a function that takes an integer a and returns True \n//\
  \ if this ingeger is a cube of some integer number.\n// Note: you may assume the\
  \ input is always valid.\n// Examples:\nfunction iscube($a) {\n"
tests: "function candidate(...$args) {\n    return iscube(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(1) !== true) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(2) !== false) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(-1) !== true) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(64) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(180) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(1000) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(0) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1729)\
  \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $cube = round(pow($a, 1/3));\n    return $cube * $cube * $cube\
    \ == $a;\n}\n\necho iscube(27);\necho iscube(28);\necho iscube(1);\necho iscube(8);\n\
    echo iscube(125);\necho iscube(216);\necho iscube(729);\necho iscube(1000);\n\
    echo iscube(2197);\necho iscube(531441);\necho iscube(1000000);\necho iscube(238328);\n\
    echo iscube(16777216);\necho iscube(387420489);\necho iscube(1073741824);\necho\
    \ iscube(27);\necho iscube(28);\necho iscube(1);\necho iscube(8);\necho iscube(125);\n\
    echo iscube(216);\necho iscube(729);\necho iscube(1000);\necho iscube(2197);\n\
    echo iscube(531441);\necho iscube(1000000);\necho iscube(238328);\necho iscube(16777216);\n\
    echo iscube(387420489);\necho iscube(1073741824);\necho iscube(27);\necho iscube(28);\n\
    echo iscube(1);\necho iscube(8);\necho iscube(125);\necho iscube(216);\necho iscube(729);\n\
    echo iscube(1000);\necho iscube(2197);\necho iscube(531441);\necho iscube(1000000);\n\
    echo iscube(238328);\necho iscube(16777216);\necho iscube(387420489);\necho iscube(1073741824);\n\
    echo iscube(27);\necho iscube(28);\necho iscube(1);\necho iscube(8);\necho iscube(125);\n\
    echo iscube(216);\necho iscube(729);\necho iscube(1000);\necho iscube(2197);\n\
    echo iscube(531441);\necho iscube(1000000);\necho iscube(238328);\necho iscube(16777216);\n\
    echo iscube(387420489);\necho iscube(10737418", "\t$i = 1;\n\twhile ($i * $i *\
    \ $i <= $a) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t\t\
    $i++;\n\t}\n\treturn false;\n}\n\necho iscube(27) . \"\\n\";\necho iscube(28)\
    \ . \"\\n\";\necho iscube(125) . \"\\n\";\necho iscube(216) . \"\\n\";\necho iscube(729)\
    \ . \"\\n\";\necho iscube(1) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(-27) . \"\\n\";\necho iscube(-64) . \"\\n\";\necho iscube(-125)\
    \ . \"\\n\";\necho iscube(-216) . \"\\n\";\necho iscube(-729) . \"\\n\";", " \
    \   $x = pow($a, 1/3);\n    if (is_int($x)) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n\necho iscube(8);\necho iscube(27);\necho\
    \ iscube(64);\necho iscube(125);\necho iscube(216);\necho iscube(343);\necho iscube(512);\n\
    echo iscube(729);\necho iscube(1000);\necho iscube(1331);\necho iscube(1728);\n\
    echo iscube(2197);\necho iscube(2744);\necho iscube(3375);\necho iscube(4096);\n\
    echo iscube(4913);\necho iscube(5832);\necho iscube(6859);\necho iscube(8000);\n\
    echo iscube(9261);\n", "    $c = round(pow($a, 1/3));\n    return $c * $c * $c\
    \ == $a;\n}\n\necho iscube(27); // true\necho iscube(28); // false\necho iscube(125);\
    \ // true\necho iscube(126); // false", "    $a = sqrt($a);\n    return $a ==\
    \ round($a);\n}\n\necho iscube(27);\necho iscube(28);\necho iscube(125);\necho\
    \ iscube(126);", "  return is_numeric(pow($a, 1/3));\n}\n", "    $b = sqrt($a);\n\
    \    $c = $b * $b * $b;\n    if ($c == $a) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n\necho iscube(27);\necho iscube(28);\n",
  "    $b = sqrt($a);\n    if ($b == round($b)) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n\necho iscube(8);\necho iscube(27);\necho\
    \ iscube(64);\necho iscube(125);\necho iscube(216);\necho iscube(1000);\necho\
    \ iscube(1);\necho iscube(0);\necho iscube(3);\necho iscube(9);\necho iscube(1728);\n\
    echo iscube(16);\necho iscube(10000);\necho iscube(1729);\necho iscube(5000);\n\
    echo iscube(343);\necho iscube(125);\necho iscube(1331);\necho iscube(1000000);\n\
    echo iscube(4096);\necho iscube(24389);\necho iscube(16777216);\necho iscube(1953125);\n\
    echo iscube(704969);\necho iscube(40353607);\necho iscube(36);\necho iscube(551368189);\n\
    echo iscube(43046721);\necho iscube(13824);\necho iscube(2097152);\necho iscube(1594323);\n\
    echo iscube(4100625);\necho iscube(104976);\necho iscube(9765625);\necho iscube(25937424601);\n\
    echo iscube(704969);\necho iscube(282475249);\necho iscube(43046721);\necho iscube(4100625);\n\
    echo iscube(13824);\necho iscube(104976);\necho iscube(9765625);\necho iscube(25937424601);\n\
    echo iscube(282475249);\necho iscube(43046721);\necho iscube(4100625);\necho iscube(13824);\n\
    echo iscube(104976);\necho iscube(9765625);\necho iscube(25937424601);\necho iscube(282475249);\n\
    echo iscube(43046721);\necho iscube(4100625);\necho iscube(13824);\necho iscube(104976);\n\
    echo iscube", "    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i *\
    \ $i * $i == $a) {\n            return true;\n        }\n        $i++;\n    }\n\
    \    return false;\n}\n\necho iscube(27) . \"\\n\";\necho iscube(28) . \"\\n\"\
    ;\necho iscube(29) . \"\\n\";\necho iscube(30) . \"\\n\";\necho iscube(31) . \"\
    \\n\";\necho iscube(32) . \"\\n\";\necho iscube(33) . \"\\n\";\necho iscube(34)\
    \ . \"\\n\";\necho iscube(35) . \"\\n\";\necho iscube(36) . \"\\n\";\necho iscube(37)\
    \ . \"\\n\";\necho iscube(38) . \"\\n\";\necho iscube(39) . \"\\n\";\necho iscube(40)\
    \ . \"\\n\";\necho iscube(41) . \"\\n\";\necho iscube(42) . \"\\n\";\necho iscube(43)\
    \ . \"\\n\";\necho iscube(44) . \"\\n\";\necho iscube(45) . \"\\n\";\necho iscube(46)\
    \ . \"\\n\";\necho iscube(47) . \"\\n\";\necho iscube(48) . \"\\n\";\necho iscube(49)\
    \ . \"\\n\";\necho iscube(50) . \"\\n\";\necho iscube(51) . \"\\n\";\necho iscube(52)\
    \ . \"\\n\";\necho iscube(53) . \"\\n\";\necho iscube(54) . \"\\n\";\necho iscube(55)\
    \ . \"\\n\";\necho iscube(56) . \"\\n\";\necho iscube(57) . \"\\n\";\necho iscube(58)\
    \ . \"\\n\";\necho iscube(59) . \"\\n\";\necho iscube(60) . \"\\n\";\necho iscube(61)\
    \ . \"\\n\";\necho iscube(62) . \"\\n\";\necho iscube(63) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(65) . \"\\n\";\necho iscube(66) . \"\\n\";\necho iscube(67)\
    \ . \"\\", "  $i = 1;\n  while ($i * $i * $i <= $a) {\n    if ($i * $i * $i ==\
    \ $a) {\n      return true;\n    }\n    $i++;\n  }\n  return false;\n}\n\necho\
    \ iscube(27);\necho iscube(28);\necho iscube(1);\necho iscube(8);\necho iscube(125);\n\
    echo iscube(216);\necho iscube(729);\necho iscube(1000);\necho iscube(2197);\n\
    echo iscube(3375);\necho iscube(4913);\necho iscube(5832);\necho iscube(6859);\n\
    echo iscube(8000);\necho iscube(9261);\necho iscube(10648);\necho iscube(12167);\n\
    echo iscube(13824);\necho iscube(15625);\necho iscube(17576);\necho iscube(19683);\n\
    echo iscube(21952);\necho iscube(24389);\necho iscube(27000);\necho iscube(29791);\n\
    echo iscube(32768);\necho iscube(35937);\necho iscube(39304);\necho iscube(42875);\n\
    echo iscube(46656);\necho iscube(50653);\necho iscube(54872);\necho iscube(59319);\n\
    echo iscube(64000);\necho iscube(68921);\necho iscube(74088);\necho iscube(79507);\n\
    echo iscube(85184);\necho iscube(91125);\necho iscube(97336);\necho iscube(103823);\n\
    echo iscube(110592);\necho iscube(117649);\necho iscube(125000);\necho iscube(132651);\n\
    echo iscube(140608);\necho iscube(148877);\necho iscube(157464);\necho iscube(166375);\n\
    echo iscube(175616);\necho iscube(185193);\necho iscube(195112);\necho iscube(205379);\n\
    echo iscube(216000);\necho iscube(226981);\necho iscube(238328);", "    $c = pow($a,\
    \ 1/3);\n    if (is_int($c)) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n", "  $i = 1;\n  while ($i * $i * $i <= $a) {\n    if ($i\
    \ * $i * $i == $a) {\n      return true;\n    }\n    $i++;\n  }\n  return false;\n\
    }\n\necho iscube(27) . \"\\n\";\necho iscube(28) . \"\\n\";\necho iscube(1) .\
    \ \"\\n\";\necho iscube(8) . \"\\n\";\necho iscube(125) . \"\\n\";\necho iscube(216)\
    \ . \"\\n\";\necho iscube(729) . \"\\n\";\necho iscube(1000) . \"\\n\";\necho\
    \ iscube(2197) . \"\\n\";\necho iscube(3375) . \"\\n\";\necho iscube(4913) . \"\
    \\n\";\necho iscube(5832) . \"\\n\";\necho iscube(6859) . \"\\n\";\necho iscube(8000)\
    \ . \"\\n\";\necho iscube(9261) . \"\\n\";\necho iscube(10648) . \"\\n\";\necho\
    \ iscube(12167) . \"\\n\";\necho iscube(13824) . \"\\n\";\necho iscube(15625)\
    \ . \"\\n\";\necho iscube(17576) . \"\\n\";\necho iscube(19683) . \"\\n\";\necho\
    \ iscube(21952) . \"\\n\";\necho iscube(24389) . \"\\n\";\necho iscube(27000)\
    \ . \"\\n\";\necho iscube(29791) . \"\\n\";\necho iscube(32768) . \"\\n\";\necho\
    \ iscube(35937) . \"\\n\";\necho iscube(39304) . \"\\n\";\necho iscube(42875)\
    \ . \"\\n\";\necho iscube(46656) . \"\\n\";\necho iscube(50653) . \"\\n\";\necho\
    \ iscube(54872) . \"\\n\";\necho iscube(59319) . \"\\n\";\necho iscube(64000)\
    \ . \"\\n\";\necho iscube(68921) . \"\\n\";\necho iscube(74088) . \"\\n\";\necho\
    \ iscube(79507) . \"\\n\";\necho iscube(85184) . \"\\n\";\n", "    $b = sqrt($a);\n\
    \    if ($b == round($b)) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n\necho iscube(27);\necho iscube(28);\necho iscube(64);\necho\
    \ iscube(65);\necho iscube(125);\necho iscube(126);\necho iscube(216);\necho iscube(217);\n\
    echo iscube(343);\necho iscube(344);\necho iscube(512);\necho iscube(513);\necho\
    \ iscube(729);\necho iscube(730);\necho iscube(1000);\necho iscube(1001);\necho\
    \ iscube(1331);\necho iscube(1332);\necho iscube(1728);\necho iscube(1729);\n\
    echo iscube(2197);\necho iscube(2198);\necho iscube(2744);\necho iscube(2745);\n\
    echo iscube(3375);\necho iscube(3376);\necho iscube(4096);\necho iscube(4097);\n\
    echo iscube(4913);\necho iscube(4914);\necho iscube(5832);\necho iscube(5833);\n\
    echo iscube(6859);\necho iscube(6860);\necho iscube(8000);\necho iscube(8001);\n\
    echo iscube(9261);\necho iscube(9262);\necho iscube(10648);\necho iscube(10649);\n\
    echo iscube(12167);\necho iscube(12168);\necho iscube(13824);\necho iscube(13825);\n\
    echo iscube(15625);\necho iscube(15626);\necho iscube(17576);\necho iscube(17577);\n\
    echo iscube(19683);\necho iscube(19684);\necho iscube(21952);\necho iscube(21953);\n\
    echo iscube(24389);\necho iscube(24390);\necho iscube(27000);\necho iscube(27001);\n\
    echo iscube(29791);\necho iscube(29792);\necho iscube(32768);\necho iscube(32769);\n\
    echo iscube(359", "    $cube = round(pow($a, 1/3));\n    return pow($cube, 3)\
    \ == $a;\n}\n\necho iscube(27);\necho iscube(28);\necho iscube(64);\necho iscube(125);\n\
    echo iscube(216);\necho iscube(1000);\necho iscube(1000000);\necho iscube(1000000000);\n\
    echo iscube(1000000000000);\necho iscube(1000000000000000);\necho iscube(1000000000000000000);\n\
    echo iscube(1000000000000000000000);\necho iscube(1000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000);\necho iscube(1000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000);\necho iscube(1000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000);\necho iscube(1000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000);\necho iscube(1000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000);\necho iscube(1000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000);\necho\
    \ iscube(1000000000000000000000000000000000000000000000000000000000000);\necho\
    \ iscube(1000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);\n\
    echo iscube", "    $x = sqrt($a);\n    return $x == round($x);\n}\n\necho iscube(8)\
    \ . PHP_EOL; // True\necho iscube(27) . PHP_EOL; // True\necho iscube(64) . PHP_EOL;\
    \ // True\necho iscube(125) . PHP_EOL; // True\necho iscube(216) . PHP_EOL; //\
    \ True\necho iscube(1000) . PHP_EOL; // False\necho iscube(2) . PHP_EOL; // False\n\
    echo iscube(9) . PHP_EOL; // False\necho iscube(121) . PHP_EOL; // False\necho\
    \ iscube(225) . PHP_EOL; // False\necho iscube(500) . PHP_EOL; // False\necho\
    \ iscube(1) . PHP_EOL; // True\necho iscube(0) . PHP_EOL; // True\necho iscube(-1)\
    \ . PHP_EOL; // True\necho iscube(-8) . PHP_EOL; // True\necho iscube(-27) . PHP_EOL;\
    \ // True\necho iscube(-64) . PHP_EOL; // True\necho iscube(-125) . PHP_EOL; //\
    \ True\necho iscube(-216) . PHP_EOL; // True\necho iscube(-1000) . PHP_EOL; //\
    \ False\necho iscube(-2) . PHP_EOL; // False\necho iscube(-9) . PHP_EOL; // False\n\
    echo iscube(-121) . PHP_EOL; // False\necho iscube(-225) . PHP_EOL; // False\n\
    echo iscube(-500) . PHP_EOL; // False\n", "    $c = sqrt($a);\n    $d = round($c);\n\
    \    if ($c == $d) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\necho iscube(8);\necho iscube(27);\necho iscube(64);\necho iscube(125);\n\
    echo iscube(216);\necho iscube(1000);\necho iscube(1);\necho iscube(0);\necho\
    \ iscube(3);\necho iscube(9);\necho iscube(1728);\necho iscube(16);\necho iscube(10000);\n\
    echo iscube(17);\necho iscube(22);\necho iscube(125);\necho iscube(1000);\necho\
    \ iscube(1);\necho iscube(27);\necho iscube(64);\necho iscube(216);\necho iscube(729);\n\
    echo iscube(1000);\necho iscube(1);\necho iscube(0);\necho iscube(3);\necho iscube(9);\n\
    echo iscube(1728);\necho iscube(16);\necho iscube(10000);\necho iscube(17);\n\
    echo iscube(22);\necho iscube(125);\necho iscube(1000);\necho iscube(1);\necho\
    \ iscube(27);\necho iscube(64);\necho iscube(216);\necho iscube(729);\necho iscube(1000);\n\
    echo iscube(1);\necho iscube(0);\necho iscube(3);\necho iscube(9);\necho iscube(1728);\n\
    echo iscube(16);\necho iscube(10000);\necho iscube(17);\necho iscube(22);\necho\
    \ iscube(125);\necho iscube(1000);\necho iscube(1);\necho iscube(27);\necho iscube(64);\n\
    echo iscube(216);\necho iscube(729);\necho iscube(1000);\necho iscube(1);\necho\
    \ iscube(0);\necho iscube(3);\necho iscube(9);\necho iscube(1728);\necho iscube(16);\n\
    echo iscube(10000);\necho iscube(17);\necho is", "    $result = sqrt($a);\n  \
    \  if (is_int($result)) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n\necho iscube(27);\necho iscube(28);\necho iscube(8);\necho\
    \ iscube(9);\necho iscube(10);\necho iscube(11);\necho iscube(12);\necho iscube(13);\n\
    echo iscube(14);\necho iscube(15);\necho iscube(16);\necho iscube(17);\necho iscube(18);\n\
    echo iscube(19);\necho iscube(20);\necho iscube(21);\necho iscube(22);\necho iscube(23);\n\
    echo iscube(24);\necho iscube(25);\necho iscube(26);\necho iscube(27);\necho iscube(28);\n\
    echo iscube(29);\necho iscube(30);\necho iscube(31);\necho iscube(32);\necho iscube(33);\n\
    echo iscube(34);\necho iscube(35);\necho iscube(36);\necho iscube(37);\necho iscube(38);\n\
    echo iscube(39);\necho iscube(40);\necho iscube(41);\necho iscube(42);\necho iscube(43);\n\
    echo iscube(44);\necho iscube(45);\necho iscube(46);\necho iscube(47);\necho iscube(48);\n\
    echo iscube(49);\necho iscube(50);\necho iscube(51);\necho iscube(52);\necho iscube(53);\n\
    echo iscube(54);\necho iscube(55);\necho iscube(56);\necho iscube(57);\necho iscube(58);\n\
    echo iscube(59);\necho iscube(60);\necho iscube(61);\necho iscube(62);\necho iscube(63);\n\
    echo iscube(64);\necho iscube(65);\necho iscube(66);\necho iscube(67);\necho iscube(68);\n\
    echo iscube(69);\necho iscube(70);\necho iscube(71);\necho iscube(72);\n", " \
    \ $i = 1;\n  while ($i * $i * $i <= $a) {\n    if ($i * $i * $i == $a) {\n   \
    \   return true;\n    }\n    $i++;\n  }\n  return false;\n}\n", "  $i = 1;\n \
    \ while ($i * $i * $i <= $a) {\n    if ($i * $i * $i == $a) {\n      return true;\n\
    \    }\n    $i++;\n  }\n  return false;\n}\n\necho iscube(8) . \"\\n\"; // false\n\
    echo iscube(27) . \"\\n\"; // true\necho iscube(64) . \"\\n\"; // true\necho iscube(125)\
    \ . \"\\n\"; // true\necho iscube(216) . \"\\n\"; // false\necho iscube(729) .\
    \ \"\\n\"; // true\necho iscube(1000) . \"\\n\"; // false", "    $b = sqrt($a);\n\
    \    if (is_int($b)) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\necho iscube(27);\necho iscube(28);\necho iscube(29);\necho iscube(30);\n\
    echo iscube(31);\necho iscube(32);\necho iscube(33);\necho iscube(34);\necho iscube(35);\n\
    echo iscube(36);\necho iscube(37);\necho iscube(38);\necho iscube(39);\necho iscube(40);\n\
    echo iscube(41);\necho iscube(42);\necho iscube(43);\necho iscube(44);\necho iscube(45);\n\
    echo iscube(46);\necho iscube(47);\necho iscube(48);\necho iscube(49);\necho iscube(50);\n\
    echo iscube(51);\necho iscube(52);\necho iscube(53);\necho iscube(54);\necho iscube(55);\n\
    echo iscube(56);\necho iscube(57);\necho iscube(58);\necho iscube(59);\necho iscube(60);\n\
    echo iscube(61);\necho iscube(62);\necho iscube(63);\necho iscube(64);\necho iscube(65);\n\
    echo iscube(66);\necho iscube(67);\necho iscube(68);\necho iscube(69);\necho iscube(70);\n\
    echo iscube(71);\necho iscube(72);\necho iscube(73);\necho iscube(74);\necho iscube(75);\n\
    echo iscube(76);\necho iscube(77);\necho iscube(78);\necho iscube(79);\necho iscube(80);\n\
    echo iscube(81);\necho iscube(82);\necho iscube(83);\necho iscube(84);\necho iscube(85);\n\
    echo iscube(86);\necho iscube(87);\necho iscube(88);\necho iscube(89);\necho iscube(90);\n\
    echo iscube(91);\necho iscube(92);\necho iscube(93);\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_4_mean_absolute_deviation
results:
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $absolute_deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n\
    \    }\n    return mean($absolute_deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpff7cxusb.php:8\n\
    Stack trace:\n#0 /tmp/tmpff7cxusb.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpff7cxusb.php(21): candidate(Array)\n#2 /tmp/tmpff7cxusb.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpff7cxusb.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\
    \tforeach ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\
    \t}\n\treturn array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\
    \tforeach ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\
    \t}\n\treturn array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\
    \tforeach ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\
    \t}\n\treturn array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\
    \tforeach ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\
    \t}\n\treturn array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\
    \tforeach ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\
    \t}\n\treturn array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return\
    \ mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpg72jaabu.php:8\n\
    Stack trace:\n#0 /tmp/tmpg72jaabu.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpg72jaabu.php(21): candidate(Array)\n#2 /tmp/tmpg72jaabu.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg72jaabu.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    // Calculate mean\n    $mean = array_sum($numbers) / count($numbers);\n\
    \    // Calculate absolute differences\n    $absolute_differences = array();\n\
    \    foreach ($numbers as $number) {\n        $absolute_differences[] = abs($number\
    \ - $mean);\n    }\n    // Calculate mean absolute difference\n    return array_sum($absolute_differences)\
    \ / count($absolute_differences);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $absolute_deviations\
    \ = array();\n  foreach ($numbers as $number) {\n    $absolute_deviations[] =\
    \ abs($number - $mean);\n  }\n  return array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $absolute_deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n\
    \    }\n    return mean($absolute_deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpff7cxusb.php:8\n\
    Stack trace:\n#0 /tmp/tmpff7cxusb.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpff7cxusb.php(21): candidate(Array)\n#2 /tmp/tmpff7cxusb.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpff7cxusb.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\
    \tforeach ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\
    \t}\n\treturn array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    // Calculate the mean of the input dataset\n    $mean = array_sum($numbers)\
    \ / count($numbers);\n    // Initialize the MAD variable\n    $mad = 0;\n    //\
    \ For each number in the dataset,\n    // calculate the absolute difference between\
    \ it and the mean\n    // and add it to the MAD variable\n    foreach ($numbers\
    \ as $number) {\n        $mad += abs($number - $mean);\n    }\n    // Divide the\
    \ MAD by the number of elements in the dataset\n    // to get the Mean Absolute\
    \ Deviation\n    $mad /= count($numbers);\n    // Return the result\n    return\
    \ $mad;\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $absolute_deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n\
    \    }\n    return mean($absolute_deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpff7cxusb.php:8\n\
    Stack trace:\n#0 /tmp/tmpff7cxusb.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpff7cxusb.php(21): candidate(Array)\n#2 /tmp/tmpff7cxusb.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpff7cxusb.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $sum = 0;\n    $mean = mean($numbers);\n    foreach ($numbers as $number)\
    \ {\n        $sum += abs($number - $mean);\n    }\n    return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp3shlpg2u.php:9\n\
    Stack trace:\n#0 /tmp/tmp3shlpg2u.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp3shlpg2u.php(21): candidate(Array)\n#2 /tmp/tmp3shlpg2u.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3shlpg2u.php on line 9\n"
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = mean($numbers);\n  $absolute_deviations = array();\n  foreach ($numbers\
    \ as $number) {\n    $absolute_deviations[] = abs($number - $mean);\n  }\n  return\
    \ mean($absolute_deviations);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmprz0cusu5.php:8\n\
    Stack trace:\n#0 /tmp/tmprz0cusu5.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmprz0cusu5.php(21): candidate(Array)\n#2 /tmp/tmprz0cusu5.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmprz0cusu5.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $absolute_deviations\
    \ = array();\n  foreach ($numbers as $number) {\n    $absolute_deviations[] =\
    \ abs($number - $mean);\n  }\n  return array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $absolute_deviations\
    \ = array();\n    foreach ($numbers as $number) {\n        $absolute_deviations[]\
    \ = abs($number - $mean);\n    }\n    return array_sum($absolute_deviations) /\
    \ count($absolute_deviations);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $n = count($numbers);\n    $mean = array_sum($numbers) / $n;\n    $deviations\
    \ = array();\n    foreach ($numbers as $number) {\n        $deviations[] = abs($number\
    \ - $mean);\n    }\n    return array_sum($deviations) / $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    // Calculate the mean of the dataset\n    $mean = array_sum($numbers)\
    \ / count($numbers);\n    // Calculate the absolute difference between each element\
    \ and the mean\n    $absolute_differences = array_map(function($number) use ($mean)\
    \ {\n        return abs($number - $mean);\n    }, $numbers);\n    // Calculate\
    \ the mean of the absolute differences\n    return array_sum($absolute_differences)\
    \ / count($absolute_differences);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $absolute_deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n\
    \    }\n    return mean($absolute_deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpff7cxusb.php:8\n\
    Stack trace:\n#0 /tmp/tmpff7cxusb.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpff7cxusb.php(21): candidate(Array)\n#2 /tmp/tmpff7cxusb.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpff7cxusb.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    // Calculate the mean of the dataset\n    $mean = array_sum($numbers)\
    \ / count($numbers);\n    // Calculate the absolute difference between each element\
    \ and the mean\n    $absolute_differences = array_map(function($number) use ($mean)\
    \ {\n        return abs($number - $mean);\n    }, $numbers);\n    // Calculate\
    \ the mean of the absolute differences\n    return array_sum($absolute_differences)\
    \ / count($absolute_differences);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $absolute_deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n\
    \    }\n    return mean($absolute_deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpff7cxusb.php:8\n\
    Stack trace:\n#0 /tmp/tmpff7cxusb.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpff7cxusb.php(21): candidate(Array)\n#2 /tmp/tmpff7cxusb.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpff7cxusb.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $absolute_deviations\
    \ = array();\n    foreach ($numbers as $number) {\n        $absolute_deviations[]\
    \ = abs($number - $mean);\n    }\n    return array_sum($absolute_deviations) /\
    \ count($absolute_deviations);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $absolute_deviations\
    \ = array();\n  foreach ($numbers as $number) {\n    $absolute_deviations[] =\
    \ abs($number - $mean);\n  }\n  return array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $absolute_deviations\
    \ = array();\n    foreach ($numbers as $number) {\n        $absolute_deviations[]\
    \ = abs($number - $mean);\n    }\n    return array_sum($absolute_deviations) /\
    \ count($absolute_deviations);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\
    \tforeach ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\
    \t}\n\treturn array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $absolute_deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n\
    \    }\n    return mean($absolute_deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpff7cxusb.php:8\n\
    Stack trace:\n#0 /tmp/tmpff7cxusb.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpff7cxusb.php(21): candidate(Array)\n#2 /tmp/tmpff7cxusb.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpff7cxusb.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $absolute_deviations\
    \ = array();\n  foreach ($numbers as $number) {\n    $absolute_deviations[] =\
    \ abs($number - $mean);\n  }\n  return array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $absolute_deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n\
    \    }\n    return mean($absolute_deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpff7cxusb.php:8\n\
    Stack trace:\n#0 /tmp/tmpff7cxusb.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpff7cxusb.php(21): candidate(Array)\n#2 /tmp/tmpff7cxusb.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpff7cxusb.php on line 8\n"
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return\
    \ mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpg72jaabu.php:8\n\
    Stack trace:\n#0 /tmp/tmpg72jaabu.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpg72jaabu.php(21): candidate(Array)\n#2 /tmp/tmpg72jaabu.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg72jaabu.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$absolute_deviations\
    \ = array();\n\tforeach ($numbers as $number) {\n\t\t$absolute_deviations[] =\
    \ abs($number - $mean);\n\t}\n\treturn array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\
    \tforeach ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\
    \t}\n\treturn array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $absolute_deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n\
    \    }\n    return mean($absolute_deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpff7cxusb.php:8\n\
    Stack trace:\n#0 /tmp/tmpff7cxusb.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpff7cxusb.php(21): candidate(Array)\n#2 /tmp/tmpff7cxusb.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpff7cxusb.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $absolute_deviations\
    \ = array();\n    foreach ($numbers as $number) {\n        $absolute_deviations[]\
    \ = abs($number - $mean);\n    }\n    return array_sum($absolute_deviations) /\
    \ count($absolute_deviations);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    // Calculate mean of the dataset\n    $mean = array_sum($numbers) / count($numbers);\n\
    \    // Calculate absolute difference between each element and the mean\n    $absolute_differences\
    \ = array_map(function($number) use ($mean) {\n        return abs($number - $mean);\n\
    \    }, $numbers);\n    // Calculate the mean of the absolute differences\n  \
    \  return array_sum($absolute_differences) / count($absolute_differences);\n}\n\
    \nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $n = count($numbers);\n    $mean = array_sum($numbers) / $n;\n    $deviations\
    \ = array();\n    foreach ($numbers as $number) {\n        $deviations[] = abs($number\
    \ - $mean);\n    }\n    return array_sum($deviations) / $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return\
    \ mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpg72jaabu.php:8\n\
    Stack trace:\n#0 /tmp/tmpg72jaabu.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpg72jaabu.php(21): candidate(Array)\n#2 /tmp/tmpg72jaabu.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg72jaabu.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $absolute_deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n\
    \    }\n    return mean($absolute_deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpff7cxusb.php:8\n\
    Stack trace:\n#0 /tmp/tmpff7cxusb.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpff7cxusb.php(21): candidate(Array)\n#2 /tmp/tmpff7cxusb.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpff7cxusb.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return\
    \ mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpg72jaabu.php:8\n\
    Stack trace:\n#0 /tmp/tmpg72jaabu.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpg72jaabu.php(21): candidate(Array)\n#2 /tmp/tmpg72jaabu.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg72jaabu.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\
    \tforeach ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\
    \t}\n\treturn array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return\
    \ mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpg72jaabu.php:8\n\
    Stack trace:\n#0 /tmp/tmpg72jaabu.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpg72jaabu.php(21): candidate(Array)\n#2 /tmp/tmpg72jaabu.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg72jaabu.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $absolute_deviations\
    \ = array();\n  foreach ($numbers as $number) {\n    $absolute_deviations[] =\
    \ abs($number - $mean);\n  }\n  return array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $n = count($numbers);\n    $mean = array_sum($numbers) / $n;\n    $deviations\
    \ = array();\n    foreach ($numbers as $number) {\n        $deviations[] = abs($number\
    \ - $mean);\n    }\n    return array_sum($deviations) / $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $sum = 0;\n    $mean = mean($numbers);\n    foreach ($numbers as $number)\
    \ {\n        $sum += abs($number - $mean);\n    }\n    return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp3shlpg2u.php:9\n\
    Stack trace:\n#0 /tmp/tmp3shlpg2u.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp3shlpg2u.php(21): candidate(Array)\n#2 /tmp/tmp3shlpg2u.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3shlpg2u.php on line 9\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $absolute_deviations\
    \ = array();\n    foreach ($numbers as $number) {\n        $absolute_deviations[]\
    \ = abs($number - $mean);\n    }\n    return array_sum($absolute_deviations) /\
    \ count($absolute_deviations);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = mean($numbers);\n\t$absolute_deviations = array();\n\tforeach ($numbers\
    \ as $number) {\n\t\t$absolute_deviations[] = abs($number - $mean);\n\t}\n\treturn\
    \ mean($absolute_deviations);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpagkz6ua4.php:8\n\
    Stack trace:\n#0 /tmp/tmpagkz6ua4.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpagkz6ua4.php(21): candidate(Array)\n#2 /tmp/tmpagkz6ua4.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpagkz6ua4.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\
    \tforeach ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\
    \t}\n\treturn array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = mean($numbers);\n\t$absolute_deviations = array();\n\tforeach ($numbers\
    \ as $number) {\n\t\t$absolute_deviations[] = abs($number - $mean);\n\t}\n\treturn\
    \ mean($absolute_deviations);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpagkz6ua4.php:8\n\
    Stack trace:\n#0 /tmp/tmpagkz6ua4.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpagkz6ua4.php(21): candidate(Array)\n#2 /tmp/tmpagkz6ua4.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpagkz6ua4.php on line 8\n"
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = mean($numbers);\n  $absolute_deviations = array();\n  foreach ($numbers\
    \ as $number) {\n    $absolute_deviations[] = abs($number - $mean);\n  }\n  return\
    \ mean($absolute_deviations);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmprz0cusu5.php:8\n\
    Stack trace:\n#0 /tmp/tmprz0cusu5.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmprz0cusu5.php(21): candidate(Array)\n#2 /tmp/tmprz0cusu5.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmprz0cusu5.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return\
    \ mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpg72jaabu.php:8\n\
    Stack trace:\n#0 /tmp/tmpg72jaabu.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpg72jaabu.php(21): candidate(Array)\n#2 /tmp/tmpg72jaabu.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg72jaabu.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\
    \tforeach ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\
    \t}\n\treturn array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $absolute_deviations\
    \ = array();\n  foreach ($numbers as $number) {\n    $absolute_deviations[] =\
    \ abs($number - $mean);\n  }\n  return array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $n = count($numbers);\n    $sum = 0;\n    $mean = mean($numbers);\n \
    \   for ($i = 0; $i < $n; $i++) {\n        $sum += abs($numbers[$i] - $mean);\n\
    \    }\n    return $sum / $n;\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpalfijdh8.php:10\n\
    Stack trace:\n#0 /tmp/tmpalfijdh8.php(18): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpalfijdh8.php(22): candidate(Array)\n#2 /tmp/tmpalfijdh8.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmpalfijdh8.php on line 10\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $sum = 0;\n    foreach ($numbers as $number)\
    \ {\n        $sum += abs($number - $mean);\n    }\n    return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp2rypogk7.php:8\n\
    Stack trace:\n#0 /tmp/tmp2rypogk7.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp2rypogk7.php(21): candidate(Array)\n#2 /tmp/tmp2rypogk7.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2rypogk7.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $absolute_deviations\
    \ = array();\n    foreach ($numbers as $number) {\n        $absolute_deviations[]\
    \ = abs($number - $mean);\n    }\n    return array_sum($absolute_deviations) /\
    \ count($absolute_deviations);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n\t$mean = array_sum($numbers) / count($numbers);\n\t$deviations = array();\n\
    \tforeach ($numbers as $number) {\n\t\t$deviations[] = abs($number - $mean);\n\
    \t}\n\treturn array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $absolute_deviations\
    \ = array();\n  foreach ($numbers as $number) {\n    $absolute_deviations[] =\
    \ abs($number - $mean);\n  }\n  return array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = mean($numbers);\n  $deviations = array();\n  foreach ($numbers\
    \ as $number) {\n    $deviations[] = abs($number - $mean);\n  }\n  return mean($deviations);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp3asl2d17.php:8\n\
    Stack trace:\n#0 /tmp/tmp3asl2d17.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp3asl2d17.php(21): candidate(Array)\n#2 /tmp/tmp3asl2d17.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3asl2d17.php on line 8\n"
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $sum = 0;\n    $mean = mean($numbers);\n    foreach ($numbers as $number)\
    \ {\n        $sum += abs($number - $mean);\n    }\n    return $sum / count($numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp3shlpg2u.php:9\n\
    Stack trace:\n#0 /tmp/tmp3shlpg2u.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp3shlpg2u.php(21): candidate(Array)\n#2 /tmp/tmp3shlpg2u.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3shlpg2u.php on line 9\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n\
    \    }\n    return array_sum($deviations) / count($deviations);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664
- exit_code: 255
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n    $mean = mean($numbers);\n    $deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return\
    \ mean($deviations);\n}\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpg72jaabu.php:8\n\
    Stack trace:\n#0 /tmp/tmpg72jaabu.php(17): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpg72jaabu.php(21): candidate(Array)\n#2 /tmp/tmpg72jaabu.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg72jaabu.php on line 8\n"
  timestamp: 1659730664
- exit_code: 0
  program: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    // around the mean of this dataset.\n// Mean Absolute Deviation is the average\
    \ absolute difference between each\n// element and a centerpoint (mean in this\
    \ case):\n// MAD = average | x - x_mean |\nfunction mean_absolute_deviation($numbers)\
    \ {\n  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730664

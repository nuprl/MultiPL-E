language: php
name: HumanEval_130_tri
results:
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nprint_r(tri(2));\nprint_r(tri(4));\nprint_r(tri(3));\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmp8od9izo2.php on line 22\nArray\n(\n    [0] => 3\n   \
    \ [1] => 2\n    [2] => 8\n    [3] => 10\n    [4] => 3\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmp8od9izo2.php on line 22\nArray\n(\n    [0] => 3\n   \
    \ [1] => 2\n    [2] => 8\n    [3] => 10\n)\n\nWarning: Undefined array key 4 in\
    \ /tmp/tmp8od9izo2.php on line 22\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp8od9izo2.php:37\nStack trace:\n#0 /tmp/tmp8od9izo2.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8od9izo2.php on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $tri = [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  $tri[$i] = $i % 2 == 0 ? 1 + $i / 2 : $tri[$i - 1] + $tri[$i - 2] + $tri[$i\
    \ + 1];\n  }\n  return $tri;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp9hoilvgr.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp9hoilvgr.php:29\nStack\
    \ trace:\n#0 /tmp/tmp9hoilvgr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9hoilvgr.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp79bq_2ey.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp79bq_2ey.php:33\nStack\
    \ trace:\n#0 /tmp/tmp79bq_2ey.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp79bq_2ey.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  } else if ($n == 2) {\n\
    \    return [3, 2];\n  } else if ($n == 3) {\n    return [3, 2, 8];\n  } else\
    \ {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n      if ($i %\
    \ 2 == 0) {\n        $arr[] = 1 + ($i / 2);\n      } else {\n        $arr[] =\
    \ $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      }\n    }\n    return $arr;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplfgnbqrg.php:41\n\
    Stack trace:\n#0 /tmp/tmplfgnbqrg.php(53): test()\n#1 {main}\n  thrown in /tmp/tmplfgnbqrg.php\
    \ on line 41\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 1;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i - 3];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34s3bdt2.php:37\n\
    Stack trace:\n#0 /tmp/tmp34s3bdt2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp34s3bdt2.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $tri[$i] = $i % 2 == 0 ? 1 + $i / 2 : $tri[$i - 1] + $tri[$i - 2] + $tri[$i\
    \ + 1];\n    }\n    return $tri;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp1uus8npq.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp1uus8npq.php:29\nStack\
    \ trace:\n#0 /tmp/tmp1uus8npq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1uus8npq.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i === 0) {\n      $result[] = 0;\n    } elseif ($i === 1) {\n      $result[]\
    \ = 1;\n    } elseif ($i === 2) {\n      $result[] = 1;\n    } else {\n      $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7__hqbm.php:37\n\
    Stack trace:\n#0 /tmp/tmpf7__hqbm.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpf7__hqbm.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i == 0) {\n            $arr[] = 0;\n        } elseif ($i == 1) {\n  \
    \          $arr[] = 1;\n        } elseif ($i == 2) {\n            $arr[] = 1;\n\
    \        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ - 3];\n        }\n    }\n    return $arr;\n}\nprint_r(tri(4));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4]\
    \ => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtzpz3tq.php:37\n\
    Stack trace:\n#0 /tmp/tmpxtzpz3tq.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpxtzpz3tq.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  } else if ($n == 2) {\n\
    \    return [3, 2];\n  } else if ($n == 3) {\n    return [3, 2, 8];\n  } else\
    \ {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n      $arr[] =\
    \ $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n    return $arr;\n  }\n\
    }\nprint_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\nprint_r(tri(4));\nprint_r(tri(5));\n\
    print_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\n\
    print_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\n\
    print_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\n\
    print_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\n\
    print_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\n\
    print_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\n\
    print_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\nprint_r(tri(39));\nprint_r(tri(40));\n\
    print_r(tri(41));\nprint_r(tri(\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpe96om6nx.php on line 73

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $result = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n        } else\
    \ {\n            $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i +\
    \ 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjsvuh_sr.php:42\n\
    Stack trace:\n#0 /tmp/tmpjsvuh_sr.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpjsvuh_sr.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ == 0) {\n      $arr[] = 0;\n    } else if ($i == 1) {\n      $arr[] = 3;\n \
    \   } else if ($i == 2) {\n      $arr[] = 1;\n    } else if ($i % 2 == 0) {\n\
    \      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nprint_r(tri(0)); // [0]\n\
    print_r(tri(1)); // [0, 3]\nprint_r(tri(2)); // [0, 3, 1]\nprint_r(tri(3)); //\
    \ [0, 3, 1, 8]\nprint_r(tri(4)); // [0, 3, 1, 8, 3]\nprint_r(tri(5)); // [0, 3,\
    \ 1, 8, 3, 13]\nprint_r(tri(6)); // [0, 3, 1, 8, 3, 13, 21]\nprint_r(tri(7));\
    \ // [0, 3, 1, 8, 3, 13, 21, 34]\nprint_r(tri(8)); // [0, 3, 1, 8, 3, 13, 21,\
    \ 34, 55]\nprint_r(tri(9)); // [0, 3, 1, 8, 3, 13, 21, 34, 55, 89]\nprint_r(tri(10));\
    \ // [0, 3, 1, 8, 3, 13, 21, 34, 55, 89, 144]\nprint_r(tri(11)); // [0, 3, 1,\
    \ 8, 3, 13, 21, 34, 55, 89, 144, 233]\nprint_r(tri(12)); // [0, 3, 1, 8, 3, 13,\
    \ 21, 34, 55, 89, 144, 233, 377]\nprint_r(tri(13)); // [0, 3, 1, 8, 3, 13, 21,\
    \ 34, 55, 89\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n)\nArray\n(\n    [0] => 0\n    [1] => 3\n)\nArray\n\
    (\n    [0] => 0\n    [1] => 3\n    [2] => 1\n)\n\nWarning: Undefined array key\
    \ 4 in /tmp/tmp2fmcflvw.php on line 28\nArray\n(\n    [0] => 0\n    [1] => 3\n\
    \    [2] => 1\n    [3] => 4\n)\n\nWarning: Undefined array key 4 in /tmp/tmp2fmcflvw.php\
    \ on line 28\nArray\n(\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n\
    \    [4] => 3\n)\n\nWarning: Undefined array key 4 in /tmp/tmp2fmcflvw.php on\
    \ line 28\n\nWarning: Undefined array key 6 in /tmp/tmp2fmcflvw.php on line 28\n\
    Array\n(\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n    [4] => 3\n\
    \    [5] => 7\n)\n\nWarning: Undefined array key 4 in /tmp/tmp2fmcflvw.php on\
    \ line 28\n\nWarning: Undefined array key 6 in /tmp/tmp2fmcflvw.php on line 28\n\
    Array\n(\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n    [4] => 3\n\
    \    [5] => 7\n    [6] => 4\n)\n\nWarning: Undefined array key 4 in /tmp/tmp2fmcflvw.php\
    \ on line 28\n\nWarning: Undefined array key 6 in /tmp/tmp2fmcflvw.php on line\
    \ 28\n\nWarning: Undefined array key 8 in /tmp/tmp2fmcflvw.php on line 28\nArray\n\
    (\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n    [4] => 3\n    [5]\
    \ => 7\n    [6] => 4\n    [7] => 11\n)\n\nWarning: Undefined array key 4 in /tmp/tmp2fmcflvw.php\
    \ on line 28\n\nWarning: Undefined array key 6 in /tmp/tmp2fmcflvw.php on line\
    \ 28\n\nWarning: Undefined array key 8 in /tmp/tmp2fmcflvw.php on line 28\nArray\n\
    (\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n    [4] => 3\n    [5]\
    \ => 7\n    [6] => 4\n    [7] => 11\n    [8] => 5\n)\n\nWarning: Undefined array\
    \ key 4 in /tmp/tmp2fmcflvw.php on line 28\n\nWarning: Undefined array key 6 in\
    \ /tmp/tmp2fmcflvw.php on line 28\n\nWarning: Undefined array key 8 in /tmp/tmp2fmcflvw.php\
    \ on line 28\n\nWarning: Undefined array key 10 in /tmp/tmp2fmcflvw.php on line\
    \ 28\nArray\n(\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n    [4]\
    \ => 3\n    [5] => 7\n    [6] => 4\n    [7] => 11\n    [8] => 5\n    [9] => 16\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmp2fmcflvw.php on line 28\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmp2fmcflvw.php on line 28\n\nWarning: Undefined\
    \ ar"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 4; $i <= $n; $i++) {\n \
    \       if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n\
    \            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4x67bi35.php:42\n\
    Stack trace:\n#0 /tmp/tmp4x67bi35.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp4x67bi35.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ == 0) {\n      $arr[] = 0;\n    } else if ($i == 1) {\n      $arr[] = 3;\n \
    \   } else if ($i == 2) {\n      $arr[] = 1;\n    } else if ($i % 2 == 0) {\n\
    \      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nprint_r(tri(0));\nprint_r(tri(1));\n\
    print_r(tri(2));\nprint_r(tri(3));\nprint_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\n\
    print_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\n\
    print_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\n\
    print_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\n\
    print_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\n\
    print_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\n\
    print_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\n\
    print_r(tri(37));\nprint_r(tri(38));\nprint_r\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpmn5ysret.php
    on line 74

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $result = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n        } else\
    \ {\n            $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i +\
    \ 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjsvuh_sr.php:42\n\
    Stack trace:\n#0 /tmp/tmpjsvuh_sr.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpjsvuh_sr.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    $result\
    \ = [3];\n    for ($i = 2; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 2] + $result[$i - 1] + $result[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpk1b_t8ls.php on line 25\n\n\
    Warning: Undefined array key 3 in /tmp/tmpk1b_t8ls.php on line 25\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpk1b_t8ls.php:36\nStack trace:\n\
    #0 /tmp/tmpk1b_t8ls.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpk1b_t8ls.php\
    \ on line 36\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 8];\n  if ($n == 1) {\n    return [3];\n \
    \ } else if ($n == 2) {\n    return [3, 2];\n  } else if ($n == 3) {\n    return\
    \ [3, 2, 8];\n  } else {\n    for ($i = 3; $i < $n; $i++) {\n      if ($i % 2\
    \ == 0) {\n        $arr[] = 1 + ($i / 2);\n      } else {\n        $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i + 1];\n      }\n    }\n  }\n  return $arr;\n}\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpplo1j67n.php:41\n\
    Stack trace:\n#0 /tmp/tmpplo1j67n.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpplo1j67n.php\
    \ on line 41\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i == 0) {\n            $arr[] = 0;\n        } elseif ($i == 1) {\n  \
    \          $arr[] = 3;\n        } elseif ($i == 2) {\n            $arr[] = 1;\n\
    \        } elseif ($i % 2 == 0) {\n            $arr[] = 1 + ($i / 2);\n      \
    \  } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\
    \        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpnvefvqsy.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpnvefvqsy.php:39\nStack\
    \ trace:\n#0 /tmp/tmpnvefvqsy.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnvefvqsy.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp79bq_2ey.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp79bq_2ey.php:33\nStack\
    \ trace:\n#0 /tmp/tmp79bq_2ey.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp79bq_2ey.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    $result\
    \ = [3];\n    for ($i = 2; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 2] + $result[$i - 1] + $result[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpk1b_t8ls.php on line 25\n\n\
    Warning: Undefined array key 3 in /tmp/tmpk1b_t8ls.php on line 25\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpk1b_t8ls.php:36\nStack trace:\n\
    #0 /tmp/tmpk1b_t8ls.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpk1b_t8ls.php\
    \ on line 36\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\nprint_r(tri(4));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmplvzmdp45.php on line 22\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 10\n    [4] => 3\n)\n\n\
    Warning: Undefined array key 4 in /tmp/tmplvzmdp45.php on line 22\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmplvzmdp45.php:33\nStack trace:\n\
    #0 /tmp/tmplvzmdp45.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplvzmdp45.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 0; $i < $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpycv7cjyh.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpycv7cjyh.php:33\nStack\
    \ trace:\n#0 /tmp/tmpycv7cjyh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpycv7cjyh.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 3;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } elseif ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 1] + $result[$i - 2] +\
    \ $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpm5nlacks.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpm5nlacks.php:39\nStack\
    \ trace:\n#0 /tmp/tmpm5nlacks.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpm5nlacks.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp_rkbj_bh.php on line 22\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 10\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmp_rkbj_bh.php on line 22\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp_rkbj_bh.php:34\nStack trace:\n#0 /tmp/tmp_rkbj_bh.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_rkbj_bh.php on line 34\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 3;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } elseif ($i == 3) {\n            $result[] = 8;\n        } elseif\
    \ ($i % 2 == 0) {\n            $result[] = 1 + ($i / 2);\n        } else {\n \
    \           $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12lpsi_g.php:41\n\
    Stack trace:\n#0 /tmp/tmp12lpsi_g.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp12lpsi_g.php\
    \ on line 41\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    if ($n == 1) {\n        return\
    \ [3];\n    } else if ($n == 2) {\n        return [3, 2];\n    } else if ($n ==\
    \ 3) {\n        return [3, 2, 8];\n    } else {\n        for ($i = 3; $i < $n;\
    \ $i++) {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n\
    \        }\n        return $arr;\n    }\n}\n\nprint_r(tri(1));\nprint_r(tri(2));\n\
    print_r(tri(3));\nprint_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\n\
    print_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\n\
    print_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\n\
    print_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\n\
    print_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\n\
    print_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\n\
    print_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\n\
    print_r(tri(38));\nprint_r(tri(39));\nprint_r(tri(40));\nprint_r(tri(41));\nprint_r(tri\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpr613kgwo.php
    on line 74

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if($n == 1) {\n        return 3;\n    } else if($n ==\
    \ 2) {\n        return 2;\n    } else if($n == 3) {\n        return 8;\n    }\
    \ else if($n % 2 == 0) {\n        return 1 + ($n / 2);\n    } else {\n       \
    \ return tri($n - 1) + tri($n - 2) + tri($n + 1);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkfrx5h5p.php:35\n\
    Stack trace:\n#0 /tmp/tmpkfrx5h5p.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpkfrx5h5p.php\
    \ on line 35\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyw7zjlv0.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyw7zjlv0.php:33\nStack\
    \ trace:\n#0 /tmp/tmpyw7zjlv0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyw7zjlv0.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    if ($n == 1) {\n        return\
    \ [3];\n    }\n    if ($n == 2) {\n        return [3, 2];\n    }\n    if ($n ==\
    \ 3) {\n        return [3, 2, 8];\n    }\n    for ($i = 3; $i < $n; $i++) {\n\
    \        $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n    return\
    \ $arr;\n}\nprint_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\n\
    print_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\n\
    print_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\n\
    print_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\n\
    print_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\n\
    print_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\n\
    print_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\n\
    print_r(tri(38));\nprint_r(tri(39));\nprint_r(tri(40));\nprint_r(tri(41));\nprint_r(tri(42));\n\
    print_r(tri(43));\nprint_r(tri(44));\nprint_r(tri(45));\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n)\n\
    Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n    [4] =>\
    \ 23\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n \
    \   [4] => 23\n    [5] => 44\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2]\
    \ => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] => 80\n)\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n  \
    \  [5] => 44\n    [6] => 80\n    [7] => 147\n)\nArray\n(\n    [0] => 3\n    [1]\
    \ => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] =>\
    \ 80\n    [7] => 147\n    [8] => 271\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n\
    \    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] => 80\n  \
    \  [7] => 147\n    [8] => 271\n    [9] => 498\n)\nArray\n(\n    [0] => 3\n   \
    \ [1] => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6]\
    \ => 80\n    [7] => 147\n    [8] => 271\n    [9] => 498\n    [10] => 916\n)\n\
    Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n    [4] =>\
    \ 23\n    [5] => 44\n    [6] => 80\n    [7] => 147\n    [8] => 271\n    [9] =>\
    \ 498\n    [10] => 916\n    [11] => 1685\n)\nArray\n(\n    [0] => 3\n    [1] =>\
    \ 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] => 80\n\
    \    [7] => 147\n    [8] => 271\n    [9] => 498\n    [10] => 916\n    [11] =>\
    \ 1685\n    [12] => 3099\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] =>\
    \ 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] => 80\n    [7] => 147\n\
    \    [8] => 271\n    [9] => 498\n    [10] => 916\n    [11] => 1685\n    [12] =>\
    \ 3099\n    [13] => 5700\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] =>\
    \ 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] => 80\n    [7] => 147\n\
    \    [8] => 271\n    [9] => 498\n    [10] => 916\n    [11] => 1685\n    [12] =>\
    \ 3099\n    [13] => 5700\n    [14] => 10484\n)\nArray\n(\n    [0] => 3\n    [1]\
    \ => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] =>\
    \ 80\n    [7] => 147\n    [8] => 271\n    [9] => 498\n    [10] => 916\n    [11]\
    \ => 1685\n    [12] => 3099\n    [13] => 5700\n    [14] => 10484\n    [15] =>\
    \ 19283\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 3;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } elseif ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 1] + $result[$i - 2] +\
    \ $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpm5nlacks.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpm5nlacks.php:39\nStack\
    \ trace:\n#0 /tmp/tmpm5nlacks.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpm5nlacks.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 0; $i < $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i] + $arr[$i - 1] + $arr[$i + 1];\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_5zhxdoc.php:33\n\
    Stack trace:\n#0 /tmp/tmp_5zhxdoc.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_5zhxdoc.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 === 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpaxm8a125.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpaxm8a125.php:29\nStack\
    \ trace:\n#0 /tmp/tmpaxm8a125.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpaxm8a125.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ == 0) {\n      $arr[] = 0;\n    } else if ($i == 1) {\n      $arr[] = 3;\n \
    \   } else if ($i == 2) {\n      $arr[] = 2;\n    } else if ($i % 2 == 0) {\n\
    \      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\nprint_r(tri(0));\nprint_r(tri(1));\n\
    print_r(tri(2));\nprint_r(tri(3));\nprint_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\n\
    print_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\n\
    print_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\n\
    print_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\n\
    print_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\n\
    print_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\n\
    print_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\n\
    print_r(tri(37));\nprint_r(tri(38));\nprint_r(\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp8t6dhx39.php on line 73

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i == 0) {\n            $arr[] = 0;\n        } elseif ($i == 1) {\n  \
    \          $arr[] = 1;\n        } elseif ($i == 2) {\n            $arr[] = 1;\n\
    \        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ - 3];\n        }\n    }\n    return $arr;\n}\nprint_r(tri(4));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4]\
    \ => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtzpz3tq.php:37\n\
    Stack trace:\n#0 /tmp/tmpxtzpz3tq.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpxtzpz3tq.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $arr\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i -\
    \ 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzymitf9.php:42\n\
    Stack trace:\n#0 /tmp/tmpdzymitf9.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpdzymitf9.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i === 0) {\n            $result[] = 0;\n        } elseif ($i === 1)\
    \ {\n            $result[] = 3;\n        } elseif ($i === 2) {\n            $result[]\
    \ = 1;\n        } elseif ($i % 2 === 0) {\n            $result[] = 1 + ($i / 2);\n\
    \        } else {\n            $result[] = $result[$i - 1] + $result[$i - 2] +\
    \ $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp7l5qxyu2.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp7l5qxyu2.php:39\nStack\
    \ trace:\n#0 /tmp/tmp7l5qxyu2.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp7l5qxyu2.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  if ($n == 1) {\n    return [3];\n \
    \ }\n  if ($n == 2) {\n    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3,\
    \ 2, 1];\n  }\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n     \
    \ $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i -\
    \ 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphl7p9m_u.php:42\n\
    Stack trace:\n#0 /tmp/tmphl7p9m_u.php(54): test()\n#1 {main}\n  thrown in /tmp/tmphl7p9m_u.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 1;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i - 3];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34s3bdt2.php:37\n\
    Stack trace:\n#0 /tmp/tmp34s3bdt2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp34s3bdt2.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyw7zjlv0.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyw7zjlv0.php:33\nStack\
    \ trace:\n#0 /tmp/tmpyw7zjlv0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyw7zjlv0.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i == 0) {\n            $arr[] = 0;\n        } elseif ($i == 1) {\n  \
    \          $arr[] = 3;\n        } elseif ($i == 2) {\n            $arr[] = 1;\n\
    \        } elseif ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        }\
    \ else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n \
    \       }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpl1ztuv95.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpl1ztuv95.php:39\nStack\
    \ trace:\n#0 /tmp/tmpl1ztuv95.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpl1ztuv95.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i == 0) {\n      $result[] = 0;\n    } elseif ($i == 1) {\n      $result[]\
    \ = 1;\n    } elseif ($i == 2) {\n      $result[] = 1;\n    } else {\n      $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmsrl7_nt.php:37\n\
    Stack trace:\n#0 /tmp/tmpmsrl7_nt.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpmsrl7_nt.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ == 0) {\n      $arr[] = 0;\n    } else if ($i == 1) {\n      $arr[] = 3;\n \
    \   } else if ($i == 2) {\n      $arr[] = 1;\n    } else if ($i % 2 == 0) {\n\
    \      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\necho \"<pre>\";\nprint_r(tri(0));\
    \ // [0]\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(tri(1)); // [0, 3]\necho\
    \ \"</pre>\";\n\necho \"<pre>\";\nprint_r(tri(2)); // [0, 3, 2]\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(tri(3)); // [0, 3, 2, 8]\necho \"</pre>\";\n\necho\
    \ \"<pre>\";\nprint_r(tri(4)); // [0, 3, 2, 8, 3]\necho \"</pre>\";\n\necho \"\
    <pre>\";\nprint_r(tri(5)); // [0, 3, 2, 8, 3, 11]\necho \"</pre>\";\n\necho \"\
    <pre>\";\nprint_r(tri(6)); // [0, 3, 2, 8, 3, 11, 13]\necho \"</pre>\";\n\necho\
    \ \"<pre>\";\nprint_r(tri(7)); // [0, 3, 2, 8, 3, 11, 13, 21]\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(tri(8)); // [0, 3, 2, 8, 3, 11, 13, 21, 34]\necho\
    \ \"</pre>\";\n\necho \"<pre>\";\nprint_r(tri(9)); // [0, 3, 2, 8, 3, 11, 13,\
    \ 21, 34, 55]\necho \"\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test", expecting "," or ";"
    in /tmp/tmpewwqb41b.php on line 78

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    $arr =\
    \ [3];\n    for ($i = 2; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n     \
    \       $arr[] = 1 + $i / 2;\n        } else {\n            $arr[] = $arr[$i -\
    \ 2] + $arr[$i - 3] + $arr[$i - 1];\n        }\n    }\n    return $arr;\n}\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpzvx3mze4.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpzvx3mze4.php:36\nStack\
    \ trace:\n#0 /tmp/tmpzvx3mze4.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzvx3mze4.php\
    \ on line 36\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i == 0) {\n      $result[] = 0;\n    } elseif ($i == 1) {\n      $result[]\
    \ = 3;\n    } elseif ($i == 2) {\n      $result[] = 1;\n    } elseif ($i % 2 ==\
    \ 0) {\n      $result[] = 1 + ($i / 2);\n    } else {\n      $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpd6duhpjk.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpd6duhpjk.php:39\nStack\
    \ trace:\n#0 /tmp/tmpd6duhpjk.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpd6duhpjk.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n === 0) {\n    return [];\n  }\n  if ($n === 1) {\n\
    \    return [3];\n  }\n  if ($n === 2) {\n    return [3, 2];\n  }\n  $result =\
    \ [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    $result[] = $result[$i - 1]\
    \ + $result[$i - 2] + $result[$i - 3];\n  }\n  return $result;\n}\n\necho implode(',\
    \ ', tri(5));\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "3, 2, 8, 13, 23\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpunnx_a.php:39\n\
    Stack trace:\n#0 /tmp/tmpbpunnx_a.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpbpunnx_a.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ == 0) {\n      $arr[] = 0;\n    } else if ($i == 1) {\n      $arr[] = 3;\n \
    \   } else if ($i == 2) {\n      $arr[] = 2;\n    } else if ($i % 2 == 0) {\n\
    \      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nprint_r(tri(0)); // [0]\n\
    print_r(tri(1)); // [0, 3]\nprint_r(tri(2)); // [0, 3, 2]\nprint_r(tri(3)); //\
    \ [0, 3, 2, 8]\nprint_r(tri(4)); // [0, 3, 2, 8, 3]\nprint_r(tri(5)); // [0, 3,\
    \ 2, 8, 3, 11]\nprint_r(tri(6)); // [0, 3, 2, 8, 3, 11, 13]\nprint_r(tri(7));\
    \ // [0, 3, 2, 8, 3, 11, 13, 21]\nprint_r(tri(8)); // [0, 3, 2, 8, 3, 11, 13,\
    \ 21, 34]\nprint_r(tri(9)); // [0, 3, 2, 8, 3, 11, 13, 21, 34, 55]\nprint_r(tri(10));\
    \ // [0, 3, 2, 8, 3, 11, 13, 21, 34, 55, 89]\nprint_r(tri(11)); // [0, 3, 2, 8,\
    \ 3, 11, 13, 21, 34, 55, 89, 144]\nprint_r(tri(12)); // [0, 3, 2, 8, 3, 11, 13,\
    \ 21, 34, 55, 89, 144, 233]\nprint_r(tri(13)); // [0, 3, 2, 8, 3, 11, 13, 21,\
    \ 34, 55\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n)\nArray\n(\n    [0] => 0\n    [1] => 3\n)\nArray\n\
    (\n    [0] => 0\n    [1] => 3\n    [2] => 2\n)\n\nWarning: Undefined array key\
    \ 4 in /tmp/tmp8wb8x5w1.php on line 28\nArray\n(\n    [0] => 0\n    [1] => 3\n\
    \    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined array key 4 in /tmp/tmp8wb8x5w1.php\
    \ on line 28\nArray\n(\n    [0] => 0\n    [1] => 3\n    [2] => 2\n    [3] => 5\n\
    \    [4] => 3\n)\n\nWarning: Undefined array key 4 in /tmp/tmp8wb8x5w1.php on\
    \ line 28\n\nWarning: Undefined array key 6 in /tmp/tmp8wb8x5w1.php on line 28\n\
    Array\n(\n    [0] => 0\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n\
    \    [5] => 8\n)\n\nWarning: Undefined array key 4 in /tmp/tmp8wb8x5w1.php on\
    \ line 28\n\nWarning: Undefined array key 6 in /tmp/tmp8wb8x5w1.php on line 28\n\
    Array\n(\n    [0] => 0\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n\
    \    [5] => 8\n    [6] => 4\n)\n\nWarning: Undefined array key 4 in /tmp/tmp8wb8x5w1.php\
    \ on line 28\n\nWarning: Undefined array key 6 in /tmp/tmp8wb8x5w1.php on line\
    \ 28\n\nWarning: Undefined array key 8 in /tmp/tmp8wb8x5w1.php on line 28\nArray\n\
    (\n    [0] => 0\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n    [5]\
    \ => 8\n    [6] => 4\n    [7] => 12\n)\n\nWarning: Undefined array key 4 in /tmp/tmp8wb8x5w1.php\
    \ on line 28\n\nWarning: Undefined array key 6 in /tmp/tmp8wb8x5w1.php on line\
    \ 28\n\nWarning: Undefined array key 8 in /tmp/tmp8wb8x5w1.php on line 28\nArray\n\
    (\n    [0] => 0\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n    [5]\
    \ => 8\n    [6] => 4\n    [7] => 12\n    [8] => 5\n)\n\nWarning: Undefined array\
    \ key 4 in /tmp/tmp8wb8x5w1.php on line 28\n\nWarning: Undefined array key 6 in\
    \ /tmp/tmp8wb8x5w1.php on line 28\n\nWarning: Undefined array key 8 in /tmp/tmp8wb8x5w1.php\
    \ on line 28\n\nWarning: Undefined array key 10 in /tmp/tmp8wb8x5w1.php on line\
    \ 28\nArray\n(\n    [0] => 0\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4]\
    \ => 3\n    [5] => 8\n    [6] => 4\n    [7] => 12\n    [8] => 5\n    [9] => 17\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmp8wb8x5w1.php on line 28\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmp8wb8x5w1.php on line 28\n\nWarning: Undefined\
    \ ar"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $arr\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i -\
    \ 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzymitf9.php:42\n\
    Stack trace:\n#0 /tmp/tmpdzymitf9.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpdzymitf9.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 3;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } elseif ($i % 2 == 0) {\n            $result[] = 1 + ($i / 2);\n\
    \        } else {\n            $result[] = $result[$i - 1] + $result[$i - 2] +\
    \ $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpl1eekec_.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eekec_.php:39\nStack\
    \ trace:\n#0 /tmp/tmpl1eekec_.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpl1eekec_.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 8];\n  if ($n < 3) {\n    return $arr[$n];\n\
    \  }\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] =\
    \ 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpf9ccvaen.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpf9ccvaen.php:36\nStack\
    \ trace:\n#0 /tmp/tmpf9ccvaen.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpf9ccvaen.php\
    \ on line 36\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return 3;\n  } else if ($n == 2) {\n\
    \    return 2;\n  } else if ($n == 3) {\n    return 8;\n  } else if ($n % 2 ==\
    \ 0) {\n    return 1 + $n / 2;\n  } else {\n    return tri($n - 1) + tri($n -\
    \ 2) + tri($n + 1);\n  }\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcb24cran.php:35\n\
    Stack trace:\n#0 /tmp/tmpcb24cran.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpcb24cran.php\
    \ on line 35\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  $arr[] = $i % 2 === 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpf0vpbwvq.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpf0vpbwvq.php:29\nStack\
    \ trace:\n#0 /tmp/tmpf0vpbwvq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf0vpbwvq.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyw7zjlv0.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyw7zjlv0.php:33\nStack\
    \ trace:\n#0 /tmp/tmpyw7zjlv0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyw7zjlv0.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i === 0) {\n            $result[] = 0;\n        } elseif ($i === 1)\
    \ {\n            $result[] = 1;\n        } elseif ($i === 2) {\n            $result[]\
    \ = 1;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i - 3];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcumqls47.php:37\n\
    Stack trace:\n#0 /tmp/tmpcumqls47.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpcumqls47.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n <= 1) {\n        return 3;\n    }\n    if ($n %\
    \ 2 == 0) {\n        return 1 + $n / 2;\n    }\n    return tri($n - 1) + tri($n\
    \ - 2) + tri($n + 1);\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18bb37o3.php:30\n\
    Stack trace:\n#0 /tmp/tmp18bb37o3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp18bb37o3.php\
    \ on line 30\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i === 0) {\n            $arr[] = 0;\n        } elseif ($i === 1) {\n\
    \            $arr[] = 1;\n        } elseif ($i === 2) {\n            $arr[] =\
    \ 1;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ - 3];\n        }\n    }\n    return $arr;\n}\n\nprint_r(tri(0)); // [0]\nprint_r(tri(1));\
    \ // [0, 1]\nprint_r(tri(2)); // [0, 1, 1]\nprint_r(tri(3)); // [0, 1, 1, 2]\n\
    print_r(tri(4)); // [0, 1, 1, 2, 4]\nprint_r(tri(5)); // [0, 1, 1, 2, 4, 7]\n\
    print_r(tri(6)); // [0, 1, 1, 2, 4, 7, 13]\nprint_r(tri(7)); // [0, 1, 1, 2, 4,\
    \ 7, 13, 24]\nprint_r(tri(8)); // [0, 1, 1, 2, 4, 7, 13, 24, 44]\nprint_r(tri(9));\
    \ // [0, 1, 1, 2, 4, 7, 13, 24, 44, 81]\nprint_r(tri(10)); // [0, 1, 1, 2, 4,\
    \ 7, 13, 24, 44, 81, 149]\nprint_r(tri(11)); // [0, 1, 1, 2, 4, 7, 13, 24, 44,\
    \ 81, 149, 274]\nprint_r(tri(12)); // [0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149,\
    \ 274, 504]\nprint_r(tri(13)); // [0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274,\
    \ 504, 927]\nprint_r(tri(14)); // [0, 1, 1\nfunction candidate(...$args) {\n \
    \   return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n)\nArray\n\
    (\n    [0] => 0\n    [1] => 1\n    [2] => 1\n)\nArray\n(\n    [0] => 0\n    [1]\
    \ => 1\n    [2] => 1\n    [3] => 2\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n\
    \    [2] => 1\n    [3] => 2\n    [4] => 4\n)\nArray\n(\n    [0] => 0\n    [1]\
    \ => 1\n    [2] => 1\n    [3] => 2\n    [4] => 4\n    [5] => 7\n)\nArray\n(\n\
    \    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] => 4\n    [5]\
    \ => 7\n    [6] => 13\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 1\n\
    \    [3] => 2\n    [4] => 4\n    [5] => 7\n    [6] => 13\n    [7] => 24\n)\nArray\n\
    (\n    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] => 4\n    [5]\
    \ => 7\n    [6] => 13\n    [7] => 24\n    [8] => 44\n)\nArray\n(\n    [0] => 0\n\
    \    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] => 4\n    [5] => 7\n    [6]\
    \ => 13\n    [7] => 24\n    [8] => 44\n    [9] => 81\n)\nArray\n(\n    [0] =>\
    \ 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] => 4\n    [5] => 7\n  \
    \  [6] => 13\n    [7] => 24\n    [8] => 44\n    [9] => 81\n    [10] => 149\n)\n\
    Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] => 4\n\
    \    [5] => 7\n    [6] => 13\n    [7] => 24\n    [8] => 44\n    [9] => 81\n  \
    \  [10] => 149\n    [11] => 274\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n   \
    \ [2] => 1\n    [3] => 2\n    [4] => 4\n    [5] => 7\n    [6] => 13\n    [7] =>\
    \ 24\n    [8] => 44\n    [9] => 81\n    [10] => 149\n    [11] => 274\n    [12]\
    \ => 504\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n\
    \    [4] => 4\n    [5] => 7\n    [6] => 13\n    [7] => 24\n    [8] => 44\n   \
    \ [9] => 81\n    [10] => 149\n    [11] => 274\n    [12] => 504\n    [13] => 927\n\
    )\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] =>\
    \ 4\n    [5] => 7\n    [6] => 13\n    [7] => 24\n    [8] => 44\n    [9] => 81\n\
    \    [10] => 149\n    [11] => 274\n    [12] => 504\n    [13] => 927\n    [14]\
    \ => 1705\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmgp4tk1y.php:52\n\
    Stack trace:\n#0 /tmp/tmpmgp4tk1y.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpmgp4tk1y.php\
    \ on line 52\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  } else if ($n == 2) {\n\
    \    return [3, 2];\n  } else if ($n == 3) {\n    return [3, 2, 8];\n  } else\
    \ {\n    $arr = [3, 2, 8];\n    for ($i = 4; $i <= $n; $i++) {\n      if ($i %\
    \ 2 == 0) {\n        $arr[] = 1 + $i / 2;\n      } else {\n        $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i - 3];\n      }\n    }\n    return $arr;\n  }\n\
    }\n\nprint_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\nprint_r(tri(4));\n\
    print_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\n\
    print_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\n\
    print_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\n\
    print_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\n\
    print_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\n\
    print_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\n\
    print_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n)\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 8\n)\nArray\n(\n    [0] => 3\n    [1]\
    \ => 2\n    [2] => 8\n    [3] => 3\n)\n\nWarning: Undefined array key 4 in /tmp/tmp8iase7by.php\
    \ on line 29\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 3\n\
    \    [4] => 11\n)\n\nWarning: Undefined array key 4 in /tmp/tmp8iase7by.php on\
    \ line 29\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 3\n\
    \    [4] => 11\n    [5] => 4\n)\n\nWarning: Undefined array key 4 in /tmp/tmp8iase7by.php\
    \ on line 29\n\nWarning: Undefined array key 6 in /tmp/tmp8iase7by.php on line\
    \ 29\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 3\n    [4]\
    \ => 11\n    [5] => 4\n    [6] => 15\n)\n\nWarning: Undefined array key 4 in /tmp/tmp8iase7by.php\
    \ on line 29\n\nWarning: Undefined array key 6 in /tmp/tmp8iase7by.php on line\
    \ 29\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 3\n    [4]\
    \ => 11\n    [5] => 4\n    [6] => 15\n    [7] => 5\n)\n\nWarning: Undefined array\
    \ key 4 in /tmp/tmp8iase7by.php on line 29\n\nWarning: Undefined array key 6 in\
    \ /tmp/tmp8iase7by.php on line 29\n\nWarning: Undefined array key 8 in /tmp/tmp8iase7by.php\
    \ on line 29\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 3\n\
    \    [4] => 11\n    [5] => 4\n    [6] => 15\n    [7] => 5\n    [8] => 20\n)\n\n\
    Warning: Undefined array key 4 in /tmp/tmp8iase7by.php on line 29\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmp8iase7by.php on line 29\n\nWarning: Undefined\
    \ array key 8 in /tmp/tmp8iase7by.php on line 29\nArray\n(\n    [0] => 3\n   \
    \ [1] => 2\n    [2] => 8\n    [3] => 3\n    [4] => 11\n    [5] => 4\n    [6] =>\
    \ 15\n    [7] => 5\n    [8] => 20\n    [9] => 6\n)\n\nWarning: Undefined array\
    \ key 4 in /tmp/tmp8iase7by.php on line 29\n\nWarning: Undefined array key 6 in\
    \ /tmp/tmp8iase7by.php on line 29\n\nWarning: Undefined array key 8 in /tmp/tmp8iase7by.php\
    \ on line 29\n\nWarning: Undefined array key 10 in /tmp/tmp8iase7by.php on line\
    \ 29\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 3\n    [4]\
    \ => 11\n    [5] => 4\n    [6] => 15\n    [7] => 5\n    [8] => 20\n    [9] =>\
    \ 6\n    [10"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 1;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i - 3];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34s3bdt2.php:37\n\
    Stack trace:\n#0 /tmp/tmp34s3bdt2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp34s3bdt2.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  if ($n == 1) {\n    return [3];\n \
    \ } else if ($n == 2) {\n    return [3, 2];\n  } else if ($n == 3) {\n    return\
    \ [3, 2, 1];\n  } else {\n    for ($i = 3; $i < $n; $i++) {\n      if ($i % 2\
    \ == 0) {\n        $arr[] = 1 + $i / 2;\n      } else {\n        $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i + 1];\n      }\n    }\n  }\n  return $arr;\n}\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyz43gbi9.php:41\n\
    Stack trace:\n#0 /tmp/tmpyz43gbi9.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpyz43gbi9.php\
    \ on line 41\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyw7zjlv0.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyw7zjlv0.php:33\nStack\
    \ trace:\n#0 /tmp/tmpyw7zjlv0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyw7zjlv0.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 4; $i <= $n; $i++) {\n \
    \       if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n\
    \            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n        }\n\
    \    }\n    return $arr;\n}\n\n$n = 5;\nprint_r(tri($n));\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpjq1czh5n.php on line 31\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 3\n    [4] => 11\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpjq1czh5n.php:45\nStack\
    \ trace:\n#0 /tmp/tmpjq1czh5n.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpjq1czh5n.php\
    \ on line 45\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $result\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $result[] = 1 + $i / 2;\n    } else {\n      $result[] = $result[$i - 1] +\
    \ $result[$i - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu8f27s1.php:42\n\
    Stack trace:\n#0 /tmp/tmplu8f27s1.php(54): test()\n#1 {main}\n  thrown in /tmp/tmplu8f27s1.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 3;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } elseif ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 1] + $result[$i - 2] +\
    \ $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nprint_r(tri(0));\n\
    print_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\nprint_r(tri(4));\nprint_r(tri(5));\n\
    print_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\n\
    print_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\n\
    print_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\n\
    print_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\n\
    print_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\n\
    print_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\n\
    print_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\nprint_r\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp6_7qblj9.php
    on line 74

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $result\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $result[] = 1 + $i / 2;\n    } else {\n      $result[] = $result[$i - 1] +\
    \ $result[$i - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu8f27s1.php:42\n\
    Stack trace:\n#0 /tmp/tmplu8f27s1.php(54): test()\n#1 {main}\n  thrown in /tmp/tmplu8f27s1.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if($n == 1) return [3];\n    if($n == 2) return [3, 2];\n\
    \    if($n == 3) return [3, 2, 8];\n    $arr = [3, 2, 8];\n    for($i = 3; $i\
    \ < $n; $i++) {\n        if($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n\
    \        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjjzrw4he.php:36\n\
    Stack trace:\n#0 /tmp/tmpjjzrw4he.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpjjzrw4he.php\
    \ on line 36\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 4; $i <= $n; $i++) {\n \
    \       if ($i % 2 == 0) {\n            $arr[] = 1 + ($i / 2);\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nprint_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\n\
    print_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\n\
    print_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\n\
    print_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\n\
    print_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\n\
    print_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\n\
    print_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\n\
    print_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\n\
    print_r\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpugubsrax.php
    on line 76

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) return [3];\n    if ($n == 2) return [3,\
    \ 2];\n    if ($n == 3) return [3, 2, 8];\n    $arr = [3, 2, 8];\n    for ($i\
    \ = 4; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i - 3];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_zyqybg.php:36\n\
    Stack trace:\n#0 /tmp/tmps_zyqybg.php(48): test()\n#1 {main}\n  thrown in /tmp/tmps_zyqybg.php\
    \ on line 36\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $arr\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxwnc572.php:42\n\
    Stack trace:\n#0 /tmp/tmpsxwnc572.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpsxwnc572.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $tri = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            $tri[] = $i / 2 + 1;\n        } else {\n\
    \            $tri[] = $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n\
    \    }\n    return $tri;\n}\nprint_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\n\
    print_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\n\
    print_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\n\
    print_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\n\
    print_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\n\
    print_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\n\
    print_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\n\
    print_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\n\
    print_r(\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpiefxc29n.php on line 75

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  if ($n <= 2) {\n    return $arr[$n];\n\
    \  }\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] =\
    \ 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmph7cerd4h.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmph7cerd4h.php:36\nStack\
    \ trace:\n#0 /tmp/tmph7cerd4h.php(48): test()\n#1 {main}\n  thrown in /tmp/tmph7cerd4h.php\
    \ on line 36\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ == 0) {\n      $arr[] = 0;\n    } else if ($i == 1) {\n      $arr[] = 3;\n \
    \   } else if ($i == 2) {\n      $arr[] = 1;\n    } else if ($i % 2 == 0) {\n\
    \      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpmg9d05mu.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpmg9d05mu.php:39\nStack\
    \ trace:\n#0 /tmp/tmpmg9d05mu.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpmg9d05mu.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $tri[$i] = $i % 2 == 0 ? 1 + $i / 2 : $tri[$i - 1] + $tri[$i - 2] + $tri[$i\
    \ + 1];\n    }\n    return $tri;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp1uus8npq.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp1uus8npq.php:29\nStack\
    \ trace:\n#0 /tmp/tmp1uus8npq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1uus8npq.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 == 0) {\n      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nprint_r(tri(2));\nprint_r(tri(4));\nprint_r(tri(3));\nprint_r(tri(6));\n\
    print_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\n\
    print_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\n\
    print_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\n\
    print_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\n\
    print_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\n\
    print_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\n\
    print_r(tri(37));\nprint_r(tri(38));\nprint_r(tri(39));\nprint_r(tri(40));\nprint_r(tri(41));\n\
    print_r(tri(42));\nprint_r(tri(43));\nprint_r(tri(44));\nprint_r(tri(45));\nprint_r(tri(46));\n\
    print_r(tri(47));\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpqy4qubmm.php on line 22\nArray\n(\n    [0] => 3\n   \
    \ [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpqy4qubmm.php on line 22\nArray\n(\n    [0] => 3\n   \
    \ [1] => 2\n    [2] => 1\n    [3] => 3\n)\n\nWarning: Undefined array key 4 in\
    \ /tmp/tmpqy4qubmm.php on line 22\n\nWarning: Undefined array key 6 in /tmp/tmpqy4qubmm.php\
    \ on line 22\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n\
    \    [4] => 3\n    [5] => 6\n    [6] => 4\n)\n\nWarning: Undefined array key 4\
    \ in /tmp/tmpqy4qubmm.php on line 22\n\nWarning: Undefined array key 6 in /tmp/tmpqy4qubmm.php\
    \ on line 22\n\nWarning: Undefined array key 8 in /tmp/tmpqy4qubmm.php on line\
    \ 22\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 6\n    [6] => 4\n    [7] => 10\n)\n\nWarning: Undefined array\
    \ key 4 in /tmp/tmpqy4qubmm.php on line 22\n\nWarning: Undefined array key 6 in\
    \ /tmp/tmpqy4qubmm.php on line 22\n\nWarning: Undefined array key 8 in /tmp/tmpqy4qubmm.php\
    \ on line 22\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n\
    \    [4] => 3\n    [5] => 6\n    [6] => 4\n    [7] => 10\n    [8] => 5\n)\n\n\
    Warning: Undefined array key 4 in /tmp/tmpqy4qubmm.php on line 22\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmpqy4qubmm.php on line 22\n\nWarning: Undefined\
    \ array key 8 in /tmp/tmpqy4qubmm.php on line 22\n\nWarning: Undefined array key\
    \ 10 in /tmp/tmpqy4qubmm.php on line 22\nArray\n(\n    [0] => 3\n    [1] => 2\n\
    \    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5] => 6\n    [6] => 4\n    [7]\
    \ => 10\n    [8] => 5\n    [9] => 15\n)\n\nWarning: Undefined array key 4 in /tmp/tmpqy4qubmm.php\
    \ on line 22\n\nWarning: Undefined array key 6 in /tmp/tmpqy4qubmm.php on line\
    \ 22\n\nWarning: Undefined array key 8 in /tmp/tmpqy4qubmm.php on line 22\n\n\
    Warning: Undefined array key 10 in /tmp/tmpqy4qubmm.php on line 22\nArray\n(\n\
    \    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5]\
    \ => 6\n    [6] => 4\n    [7] => 10\n    [8] => 5\n    [9] => 15\n    [10] =>\
    \ 6\n)\n\nWarning: Un"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $result\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $result[] = 1 + $i / 2;\n    } else {\n      $result[] = $result[$i - 1] +\
    \ $result[$i - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu8f27s1.php:42\n\
    Stack trace:\n#0 /tmp/tmplu8f27s1.php(54): test()\n#1 {main}\n  thrown in /tmp/tmplu8f27s1.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n <= 0) {\n        return [];\n    }\n    if ($n\
    \ == 1) {\n        return [3];\n    }\n    $result = [3, 2, 8];\n    for ($i =\
    \ 3; $i < $n; $i++) {\n        $result[] = $result[$i - 1] + $result[$i - 2] +\
    \ $result[$i - 3];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdld9hnp8.php:35\n\
    Stack trace:\n#0 /tmp/tmpdld9hnp8.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdld9hnp8.php\
    \ on line 35\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $result\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $result[] = 1 + $i / 2;\n    } else {\n      $result[] = $result[$i - 1] +\
    \ $result[$i - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu8f27s1.php:42\n\
    Stack trace:\n#0 /tmp/tmplu8f27s1.php(54): test()\n#1 {main}\n  thrown in /tmp/tmplu8f27s1.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 1;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 2;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i - 3];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnyomvgm5.php:37\n\
    Stack trace:\n#0 /tmp/tmpnyomvgm5.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpnyomvgm5.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $arr\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i -\
    \ 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzymitf9.php:42\n\
    Stack trace:\n#0 /tmp/tmpdzymitf9.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpdzymitf9.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp79bq_2ey.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp79bq_2ey.php:33\nStack\
    \ trace:\n#0 /tmp/tmp79bq_2ey.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp79bq_2ey.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 0; $i < $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nprint_r(tri(4));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpl9uufrti.php on line 22\n\
    Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 1\n    [4] => 4\n\
    \    [5] => 2\n    [6] => 7\n)\n\nWarning: Undefined array key -1 in /tmp/tmpl9uufrti.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9uufrti.php:34\n\
    Stack trace:\n#0 /tmp/tmpl9uufrti.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpl9uufrti.php\
    \ on line 34\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i == 0) {\n      $result[] = 0;\n    } elseif ($i == 1) {\n      $result[]\
    \ = 3;\n    } elseif ($i == 2) {\n      $result[] = 1;\n    } elseif ($i % 2 ==\
    \ 0) {\n      $result[] = 1 + ($i / 2);\n    } else {\n      $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpd6duhpjk.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpd6duhpjk.php:39\nStack\
    \ trace:\n#0 /tmp/tmpd6duhpjk.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpd6duhpjk.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    if ($n == 1) {\n        return\
    \ [3];\n    }\n    if ($n == 2) {\n        return [3, 2];\n    }\n    if ($n ==\
    \ 3) {\n        return [3, 2, 1];\n    }\n    for ($i = 3; $i < $n; $i++) {\n\
    \        $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n    return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuhvbmypg.php:38\n\
    Stack trace:\n#0 /tmp/tmpuhvbmypg.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpuhvbmypg.php\
    \ on line 38\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i === 0) {\n      $result[] = 0;\n    } elseif ($i === 1) {\n      $result[]\
    \ = 1;\n    } elseif ($i === 2) {\n      $result[] = 1;\n    } else {\n      $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n  }\n  return\
    \ $result;\n}\n\nprint_r(tri(0)); // [0]\nprint_r(tri(1)); // [0, 1]\nprint_r(tri(2));\
    \ // [0, 1, 1]\nprint_r(tri(3)); // [0, 1, 1, 2]\nprint_r(tri(4)); // [0, 1, 1,\
    \ 2, 4]\nprint_r(tri(5)); // [0, 1, 1, 2, 4, 7]\nprint_r(tri(6)); // [0, 1, 1,\
    \ 2, 4, 7, 13]\nprint_r(tri(7)); // [0, 1, 1, 2, 4, 7, 13, 24]\nprint_r(tri(8));\
    \ // [0, 1, 1, 2, 4, 7, 13, 24, 44]\nprint_r(tri(9)); // [0, 1, 1, 2, 4, 7, 13,\
    \ 24, 44, 81]\nprint_r(tri(10)); // [0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149]\n\
    print_r(tri(11)); // [0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274]\nprint_r(tri(12));\
    \ // [0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274, 504]\nprint_r(tri(13)); // [0,\
    \ 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274, 504, 927]\nprint_r(tri(14)); // [0,\
    \ 1, 1\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n)\nArray\n\
    (\n    [0] => 0\n    [1] => 1\n    [2] => 1\n)\nArray\n(\n    [0] => 0\n    [1]\
    \ => 1\n    [2] => 1\n    [3] => 2\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n\
    \    [2] => 1\n    [3] => 2\n    [4] => 4\n)\nArray\n(\n    [0] => 0\n    [1]\
    \ => 1\n    [2] => 1\n    [3] => 2\n    [4] => 4\n    [5] => 7\n)\nArray\n(\n\
    \    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] => 4\n    [5]\
    \ => 7\n    [6] => 13\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 1\n\
    \    [3] => 2\n    [4] => 4\n    [5] => 7\n    [6] => 13\n    [7] => 24\n)\nArray\n\
    (\n    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] => 4\n    [5]\
    \ => 7\n    [6] => 13\n    [7] => 24\n    [8] => 44\n)\nArray\n(\n    [0] => 0\n\
    \    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] => 4\n    [5] => 7\n    [6]\
    \ => 13\n    [7] => 24\n    [8] => 44\n    [9] => 81\n)\nArray\n(\n    [0] =>\
    \ 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] => 4\n    [5] => 7\n  \
    \  [6] => 13\n    [7] => 24\n    [8] => 44\n    [9] => 81\n    [10] => 149\n)\n\
    Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] => 4\n\
    \    [5] => 7\n    [6] => 13\n    [7] => 24\n    [8] => 44\n    [9] => 81\n  \
    \  [10] => 149\n    [11] => 274\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n   \
    \ [2] => 1\n    [3] => 2\n    [4] => 4\n    [5] => 7\n    [6] => 13\n    [7] =>\
    \ 24\n    [8] => 44\n    [9] => 81\n    [10] => 149\n    [11] => 274\n    [12]\
    \ => 504\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n\
    \    [4] => 4\n    [5] => 7\n    [6] => 13\n    [7] => 24\n    [8] => 44\n   \
    \ [9] => 81\n    [10] => 149\n    [11] => 274\n    [12] => 504\n    [13] => 927\n\
    )\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4] =>\
    \ 4\n    [5] => 7\n    [6] => 13\n    [7] => 24\n    [8] => 44\n    [9] => 81\n\
    \    [10] => 149\n    [11] => 274\n    [12] => 504\n    [13] => 927\n    [14]\
    \ => 1705\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchh_f7sb.php:52\n\
    Stack trace:\n#0 /tmp/tmpchh_f7sb.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpchh_f7sb.php\
    \ on line 52\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyw7zjlv0.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyw7zjlv0.php:33\nStack\
    \ trace:\n#0 /tmp/tmpyw7zjlv0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyw7zjlv0.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    if ($n == 1) {\n        return\
    \ [3];\n    } elseif ($n == 2) {\n        return [3, 2];\n    } elseif ($n ==\
    \ 3) {\n        return [3, 2, 8];\n    } else {\n        for ($i = 3; $i < $n;\
    \ $i++) {\n            if ($i % 2 == 0) {\n                $arr[] = 1 + $i / 2;\n\
    \            } else {\n                $arr[] = $arr[$i - 1] + $arr[$i - 2] +\
    \ $arr[$i + 1];\n            }\n        }\n        return $arr;\n    }\n}\nprint_r(tri(1));\n\
    print_r(tri(2));\nprint_r(tri(3));\nprint_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\n\
    print_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\n\
    print_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\n\
    print_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\n\
    print_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\n\
    print_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\n\
    print_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\n\
    print_r(tri(37));\nprint_r(tri(38));\nprint\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpmgdboyt6.php on line 74

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    if ($n == 1) {\n        return\
    \ [3];\n    }\n    if ($n == 2) {\n        return [3, 2];\n    }\n    if ($n ==\
    \ 3) {\n        return [3, 2, 8];\n    }\n    for ($i = 3; $i < $n; $i++) {\n\
    \        $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n    return\
    \ $arr;\n}\nprint_r(tri(10));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n   \
    \ [4] => 23\n    [5] => 44\n    [6] => 80\n    [7] => 147\n    [8] => 271\n  \
    \  [9] => 498\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptsknxkeo.php:38\n\
    Stack trace:\n#0 /tmp/tmptsknxkeo.php(50): test()\n#1 {main}\n  thrown in /tmp/tmptsknxkeo.php\
    \ on line 38\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $result = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n        } else\
    \ {\n            $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i +\
    \ 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjsvuh_sr.php:42\n\
    Stack trace:\n#0 /tmp/tmpjsvuh_sr.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpjsvuh_sr.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i === 0) {\n      $result[] = 0;\n    } elseif ($i === 1) {\n      $result[]\
    \ = 1;\n    } elseif ($i === 2) {\n      $result[] = 1;\n    } else {\n      $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7__hqbm.php:37\n\
    Stack trace:\n#0 /tmp/tmpf7__hqbm.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpf7__hqbm.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $arr\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i -\
    \ 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzymitf9.php:42\n\
    Stack trace:\n#0 /tmp/tmpdzymitf9.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpdzymitf9.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i === 0) {\n      $result[] = 0;\n    } elseif ($i === 1) {\n      $result[]\
    \ = 1;\n    } elseif ($i === 2) {\n      $result[] = 1;\n    } else {\n      $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7__hqbm.php:37\n\
    Stack trace:\n#0 /tmp/tmpf7__hqbm.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpf7__hqbm.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if($n == 1) return 3;\n  if($n == 2) return 2;\n  if($n\
    \ == 3) return 8;\n  if($n % 2 == 0) return 1 + $n / 2;\n  return tri($n - 1)\
    \ + tri($n - 2) + tri($n + 1);\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc75g2smf.php:29\n\
    Stack trace:\n#0 /tmp/tmpc75g2smf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpc75g2smf.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    if ($n == 1) {\n        return\
    \ [3];\n    }\n    if ($n == 2) {\n        return [3, 2];\n    }\n    if ($n ==\
    \ 3) {\n        return [3, 2, 8];\n    }\n    for ($i = 3; $i < $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpusi752si.php:42\n\
    Stack trace:\n#0 /tmp/tmpusi752si.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpusi752si.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  if ($n == 1) {\n    return [3];\n \
    \ } else if ($n == 2) {\n    return [3, 2];\n  } else if ($n == 3) {\n    return\
    \ [3, 2, 1];\n  } else {\n    for ($i = 3; $i < $n; $i++) {\n      if ($i % 2\
    \ == 0) {\n        $arr[] = 1 + ($i / 2);\n      } else {\n        $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i + 1];\n      }\n    }\n  }\n  return $arr;\n}\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppqek_ek6.php:41\n\
    Stack trace:\n#0 /tmp/tmppqek_ek6.php(53): test()\n#1 {main}\n  thrown in /tmp/tmppqek_ek6.php\
    \ on line 41\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    if ($n == 1) {\n        return\
    \ [3];\n    }\n    if ($n == 2) {\n        return [3, 2];\n    }\n    if ($n ==\
    \ 3) {\n        return [3, 2, 1];\n    }\n    for ($i = 3; $i < $n; $i++) {\n\
    \        $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n    return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuhvbmypg.php:38\n\
    Stack trace:\n#0 /tmp/tmpuhvbmypg.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpuhvbmypg.php\
    \ on line 38\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  for ($i = 0; $i < $n; $i++) {\n   \
    \ if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] =\
    \ $arr[$i] + $arr[$i - 1] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2utj5_c.php:33\n\
    Stack trace:\n#0 /tmp/tmpf2utj5_c.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpf2utj5_c.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i === 0) {\n            $result[] = 0;\n        } elseif ($i === 1)\
    \ {\n            $result[] = 1;\n        } elseif ($i === 2) {\n            $result[]\
    \ = 1;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i - 3];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcumqls47.php:37\n\
    Stack trace:\n#0 /tmp/tmpcumqls47.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpcumqls47.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyw7zjlv0.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyw7zjlv0.php:33\nStack\
    \ trace:\n#0 /tmp/tmpyw7zjlv0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyw7zjlv0.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i == 0) {\n            $arr[] = 0;\n        } elseif ($i == 1) {\n  \
    \          $arr[] = 3;\n        } elseif ($i == 2) {\n            $arr[] = 1;\n\
    \        } elseif ($i % 2 == 0) {\n            $arr[] = 1 + ($i / 2);\n      \
    \  } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\
    \        }\n    }\n    return $arr;\n}\nprint_r(tri(4));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpwo_f8cgg.php on line 28\nArray\n\
    (\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n    [4] => 3\n)\n\n\
    Warning: Undefined array key 4 in /tmp/tmpwo_f8cgg.php on line 28\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpwo_f8cgg.php:39\nStack trace:\n\
    #0 /tmp/tmpwo_f8cgg.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpwo_f8cgg.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 === 0) {\n      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp0hxcm9p_.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp0hxcm9p_.php:33\nStack\
    \ trace:\n#0 /tmp/tmp0hxcm9p_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0hxcm9p_.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i == 0) {\n            $arr[] = 0;\n        } elseif ($i == 1) {\n  \
    \          $arr[] = 3;\n        } elseif ($i == 2) {\n            $arr[] = 1;\n\
    \        } elseif ($i % 2 == 0) {\n            $arr[] = 1 + ($i / 2);\n      \
    \  } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\
    \        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpnvefvqsy.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpnvefvqsy.php:39\nStack\
    \ trace:\n#0 /tmp/tmpnvefvqsy.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnvefvqsy.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i == 0) {\n            $arr[] = 0;\n        } elseif ($i == 1) {\n  \
    \          $arr[] = 1;\n        } elseif ($i == 2) {\n            $arr[] = 1;\n\
    \        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ - 3];\n        }\n    }\n    return $arr;\n}\nprint_r(tri(4));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 1\n    [3] => 2\n    [4]\
    \ => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtzpz3tq.php:37\n\
    Stack trace:\n#0 /tmp/tmpxtzpz3tq.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpxtzpz3tq.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $tri = [3, 2, 8];\n  if ($n <= 2) {\n    return $tri[$n];\n\
    \  }\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $tri[$i]\
    \ = 1 + ($i / 2);\n    } else {\n      $tri[$i] = $tri[$i - 1] + $tri[$i - 2]\
    \ + $tri[$i + 1];\n    }\n  }\n  return $tri[$n];\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpi15j_zyi.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpi15j_zyi.php:36\nStack\
    \ trace:\n#0 /tmp/tmpi15j_zyi.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpi15j_zyi.php\
    \ on line 36\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyw7zjlv0.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyw7zjlv0.php:33\nStack\
    \ trace:\n#0 /tmp/tmpyw7zjlv0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyw7zjlv0.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 3;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } elseif ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 1] + $result[$i - 2] +\
    \ $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpm5nlacks.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpm5nlacks.php:39\nStack\
    \ trace:\n#0 /tmp/tmpm5nlacks.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpm5nlacks.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 3;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } elseif ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 1] + $result[$i - 2] +\
    \ $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nprint_r(tri(0));\
    \ // [0]\nprint_r(tri(1)); // [0, 3]\nprint_r(tri(2)); // [0, 3, 1]\nprint_r(tri(3));\
    \ // [0, 3, 1, 8]\nprint_r(tri(4)); // [0, 3, 1, 8, 3]\nprint_r(tri(5)); // [0,\
    \ 3, 1, 8, 3, 13]\nprint_r(tri(6)); // [0, 3, 1, 8, 3, 13, 21]\nprint_r(tri(7));\
    \ // [0, 3, 1, 8, 3, 13, 21, 34]\nprint_r(tri(8)); // [0, 3, 1, 8, 3, 13, 21,\
    \ 34, 55]\nprint_r(tri(9)); // [0, 3, 1, 8, 3, 13, 21, 34, 55, 89]\nprint_r(tri(10));\
    \ // [0, 3, 1, 8, 3, 13, 21, 34, 55, 89, 144]\nprint_r(tri(11)); // [0, 3, 1,\
    \ 8, 3, 13, 21, 34, 55, 89, 144, 233]\nprint_r(tri(12)); // [0, 3, 1, 8, 3, 13,\
    \ 21, 34, 55, 89, 144, 233, 377]\nprint_r(tri(13)); // [0, 3, 1, 8, 3, 13, 21,\
    \ 34, 55, 89\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n)\nArray\n(\n    [0] => 0\n    [1] => 3\n)\nArray\n\
    (\n    [0] => 0\n    [1] => 3\n    [2] => 1\n)\n\nWarning: Undefined array key\
    \ 4 in /tmp/tmprr5nm8z7.php on line 28\nArray\n(\n    [0] => 0\n    [1] => 3\n\
    \    [2] => 1\n    [3] => 4\n)\n\nWarning: Undefined array key 4 in /tmp/tmprr5nm8z7.php\
    \ on line 28\nArray\n(\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n\
    \    [4] => 3\n)\n\nWarning: Undefined array key 4 in /tmp/tmprr5nm8z7.php on\
    \ line 28\n\nWarning: Undefined array key 6 in /tmp/tmprr5nm8z7.php on line 28\n\
    Array\n(\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n    [4] => 3\n\
    \    [5] => 7\n)\n\nWarning: Undefined array key 4 in /tmp/tmprr5nm8z7.php on\
    \ line 28\n\nWarning: Undefined array key 6 in /tmp/tmprr5nm8z7.php on line 28\n\
    Array\n(\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n    [4] => 3\n\
    \    [5] => 7\n    [6] => 4\n)\n\nWarning: Undefined array key 4 in /tmp/tmprr5nm8z7.php\
    \ on line 28\n\nWarning: Undefined array key 6 in /tmp/tmprr5nm8z7.php on line\
    \ 28\n\nWarning: Undefined array key 8 in /tmp/tmprr5nm8z7.php on line 28\nArray\n\
    (\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n    [4] => 3\n    [5]\
    \ => 7\n    [6] => 4\n    [7] => 11\n)\n\nWarning: Undefined array key 4 in /tmp/tmprr5nm8z7.php\
    \ on line 28\n\nWarning: Undefined array key 6 in /tmp/tmprr5nm8z7.php on line\
    \ 28\n\nWarning: Undefined array key 8 in /tmp/tmprr5nm8z7.php on line 28\nArray\n\
    (\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n    [4] => 3\n    [5]\
    \ => 7\n    [6] => 4\n    [7] => 11\n    [8] => 5\n)\n\nWarning: Undefined array\
    \ key 4 in /tmp/tmprr5nm8z7.php on line 28\n\nWarning: Undefined array key 6 in\
    \ /tmp/tmprr5nm8z7.php on line 28\n\nWarning: Undefined array key 8 in /tmp/tmprr5nm8z7.php\
    \ on line 28\n\nWarning: Undefined array key 10 in /tmp/tmprr5nm8z7.php on line\
    \ 28\nArray\n(\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n    [4]\
    \ => 3\n    [5] => 7\n    [6] => 4\n    [7] => 11\n    [8] => 5\n    [9] => 16\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmprr5nm8z7.php on line 28\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmprr5nm8z7.php on line 28\n\nWarning: Undefined\
    \ ar"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $arr[] = $arr[$i] + $arr[$i + 1] + $arr[$i + 2];\n    }\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kv5gy58.php:29\n\
    Stack trace:\n#0 /tmp/tmp1kv5gy58.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1kv5gy58.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if($n == 1) {\n        return [3];\n    }\n    if($n ==\
    \ 2) {\n        return [3, 2];\n    }\n    if($n == 3) {\n        return [3, 2,\
    \ 8];\n    }\n    $result = [3, 2, 8];\n    for($i = 4; $i <= $n; $i++) {\n  \
    \      if($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n        } else\
    \ {\n            $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i -\
    \ 3];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknld5krv.php:42\n\
    Stack trace:\n#0 /tmp/tmpknld5krv.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpknld5krv.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n\
    \            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n\
    \    }\n    return $arr;\n}\nprint_r(tri(3));\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpdoy2k_xv.php:42\nStack trace:\n#0 /tmp/tmpdoy2k_xv.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdoy2k_xv.php on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n\
    \            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvespdow.php:42\n\
    Stack trace:\n#0 /tmp/tmpvvespdow.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvvespdow.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    if ($n == 1) {\n        return\
    \ [3];\n    } else if ($n == 2) {\n        return [3, 2];\n    } else if ($n ==\
    \ 3) {\n        return [3, 2, 1];\n    } else {\n        for ($i = 3; $i < $n;\
    \ $i++) {\n            if ($i % 2 == 0) {\n                $arr[] = 1 + $i / 2;\n\
    \            } else {\n                $arr[] = $arr[$i - 1] + $arr[$i - 2] +\
    \ $arr[$i + 1];\n            }\n        }\n        return $arr;\n    }\n}\nprint_r(tri(1));\n\
    print_r(tri(2));\nprint_r(tri(3));\nprint_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\n\
    print_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\n\
    print_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\n\
    print_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\n\
    print_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\n\
    print_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\n\
    print_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\n\
    print_r(tri(37));\nprint_r(tri(38));\nprint\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpubcmhak5.php on line 74

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $arr\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i -\
    \ 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzymitf9.php:42\n\
    Stack trace:\n#0 /tmp/tmpdzymitf9.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpdzymitf9.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    if ($n == 1) {\n        return\
    \ [3];\n    } elseif ($n == 2) {\n        return [3, 2];\n    } elseif ($n ==\
    \ 3) {\n        return [3, 2, 1];\n    } else {\n        for ($i = 3; $i < $n;\
    \ $i++) {\n            if ($i % 2 == 0) {\n                $arr[] = 1 + $i / 2;\n\
    \            } else {\n                $arr[] = $arr[$i - 1] + $arr[$i - 2] +\
    \ $arr[$i + 1];\n            }\n        }\n        return $arr;\n    }\n}\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5su87oa.php:41\n\
    Stack trace:\n#0 /tmp/tmpx5su87oa.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpx5su87oa.php\
    \ on line 41\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $result\
    \ = [3, 2, 8];\n  for ($i = 4; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n   \
    \   $result[] = 1 + $i / 2;\n    } else {\n      $result[] = $result[$i - 1] +\
    \ $result[$i - 2] + $result[$i - 3];\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn5x2yevi.php:42\n\
    Stack trace:\n#0 /tmp/tmpn5x2yevi.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpn5x2yevi.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $arr\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\necho tri(4);\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpy3wkkgza.php on line 31\n\n\
    Warning: Array to string conversion in /tmp/tmpy3wkkgza.php on line 37\nArray\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpy3wkkgza.php:43\nStack\
    \ trace:\n#0 /tmp/tmpy3wkkgza.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpy3wkkgza.php\
    \ on line 43\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 3;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } elseif ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 1] + $result[$i - 2] +\
    \ $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpm5nlacks.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpm5nlacks.php:39\nStack\
    \ trace:\n#0 /tmp/tmpm5nlacks.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpm5nlacks.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ === 0) {\n      $arr[] = 0;\n    } else if ($i === 1) {\n      $arr[] = 1;\n\
    \    } else if ($i === 2) {\n      $arr[] = 1;\n    } else {\n      $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n  }\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp75nw0r8g.php:37\n\
    Stack trace:\n#0 /tmp/tmp75nw0r8g.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp75nw0r8g.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return 3;\n  } else if ($n == 2) {\n\
    \    return 2;\n  } else if ($n == 3) {\n    return 8;\n  } else if ($n % 2 ==\
    \ 0) {\n    return 1 + ($n / 2);\n  } else {\n    return tri($n - 1) + tri($n\
    \ - 2) + tri($n + 1);\n  }\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2gsnuzw.php:35\n\
    Stack trace:\n#0 /tmp/tmpy2gsnuzw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpy2gsnuzw.php\
    \ on line 35\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i === 0) {\n      $result[] = 0;\n    } elseif ($i === 1) {\n      $result[]\
    \ = 1;\n    } elseif ($i === 2) {\n      $result[] = 1;\n    } else {\n      $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7__hqbm.php:37\n\
    Stack trace:\n#0 /tmp/tmpf7__hqbm.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpf7__hqbm.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpkc0e0jkb.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpkc0e0jkb.php:33\nStack\
    \ trace:\n#0 /tmp/tmpkc0e0jkb.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkc0e0jkb.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp79bq_2ey.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp79bq_2ey.php:33\nStack\
    \ trace:\n#0 /tmp/tmp79bq_2ey.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp79bq_2ey.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ == 0) {\n      $arr[] = 0;\n    } else if ($i == 1) {\n      $arr[] = 1;\n \
    \   } else if ($i == 2) {\n      $arr[] = 1;\n    } else {\n      $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n  }\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp04ozd_nl.php:37\n\
    Stack trace:\n#0 /tmp/tmp04ozd_nl.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp04ozd_nl.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i == 0) {\n            $arr[] = 0;\n        } elseif ($i == 1) {\n  \
    \          $arr[] = 1;\n        } elseif ($i == 2) {\n            $arr[] = 2;\n\
    \        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ - 3];\n        }\n    }\n    return $arr;\n}\n\nprint_r(tri(0));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpg06trrbh.php:38\nStack trace:\n#0 /tmp/tmpg06trrbh.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpg06trrbh.php on line 38\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $arr\
    \ = [3, 2, 8];\n  for ($i = 4; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n   \
    \   $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i - 3];\n    }\n  }\n  return $arr;\n}\nprint_r(tri(10));\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpbz2_sw7d.php on line 31\n\n\
    Warning: Undefined array key 6 in /tmp/tmpbz2_sw7d.php on line 31\n\nWarning:\
    \ Undefined array key 8 in /tmp/tmpbz2_sw7d.php on line 31\nArray\n(\n    [0]\
    \ => 3\n    [1] => 2\n    [2] => 8\n    [3] => 3\n    [4] => 11\n    [5] => 4\n\
    \    [6] => 15\n    [7] => 5\n    [8] => 20\n    [9] => 6\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpbz2_sw7d.php:42\nStack trace:\n#0 /tmp/tmpbz2_sw7d.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbz2_sw7d.php on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i == 0) {\n            $arr[] = 0;\n        } elseif ($i == 1) {\n  \
    \          $arr[] = 3;\n        } elseif ($i == 2) {\n            $arr[] = 1;\n\
    \        } elseif ($i % 2 == 0) {\n            $arr[] = 1 + ($i / 2);\n      \
    \  } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\
    \        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpnvefvqsy.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpnvefvqsy.php:39\nStack\
    \ trace:\n#0 /tmp/tmpnvefvqsy.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnvefvqsy.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpkc0e0jkb.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpkc0e0jkb.php:33\nStack\
    \ trace:\n#0 /tmp/tmpkc0e0jkb.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkc0e0jkb.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    if ($n == 1) {\n        return\
    \ [3];\n    }\n    if ($n == 2) {\n        return [3, 2];\n    }\n    if ($n ==\
    \ 3) {\n        return [3, 2, 1];\n    }\n    for ($i = 3; $i < $n; $i++) {\n\
    \        $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n    return\
    \ $arr;\n}\nprint_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\nprint_r(tri(4));\n\
    print_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\n\
    print_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\n\
    print_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\n\
    print_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\n\
    print_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\n\
    print_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\n\
    print_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\nprint_r(tri(39));\n\
    print_r(tri(40));\nprint_r(tri(41));\nprint_r(tri(42));\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n)\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 1\n)\nArray\n(\n    [0] => 3\n    [1]\
    \ => 2\n    [2] => 1\n    [3] => 6\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n\
    \    [2] => 1\n    [3] => 6\n    [4] => 9\n)\nArray\n(\n    [0] => 3\n    [1]\
    \ => 2\n    [2] => 1\n    [3] => 6\n    [4] => 9\n    [5] => 16\n)\nArray\n(\n\
    \    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 6\n    [4] => 9\n    [5]\
    \ => 16\n    [6] => 31\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n\
    \    [3] => 6\n    [4] => 9\n    [5] => 16\n    [6] => 31\n    [7] => 56\n)\n\
    Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 6\n    [4] => 9\n\
    \    [5] => 16\n    [6] => 31\n    [7] => 56\n    [8] => 103\n)\nArray\n(\n  \
    \  [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 6\n    [4] => 9\n    [5] =>\
    \ 16\n    [6] => 31\n    [7] => 56\n    [8] => 103\n    [9] => 190\n)\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 6\n    [4] => 9\n    [5]\
    \ => 16\n    [6] => 31\n    [7] => 56\n    [8] => 103\n    [9] => 190\n    [10]\
    \ => 349\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 6\n\
    \    [4] => 9\n    [5] => 16\n    [6] => 31\n    [7] => 56\n    [8] => 103\n \
    \   [9] => 190\n    [10] => 349\n    [11] => 642\n)\nArray\n(\n    [0] => 3\n\
    \    [1] => 2\n    [2] => 1\n    [3] => 6\n    [4] => 9\n    [5] => 16\n    [6]\
    \ => 31\n    [7] => 56\n    [8] => 103\n    [9] => 190\n    [10] => 349\n    [11]\
    \ => 642\n    [12] => 1181\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] =>\
    \ 1\n    [3] => 6\n    [4] => 9\n    [5] => 16\n    [6] => 31\n    [7] => 56\n\
    \    [8] => 103\n    [9] => 190\n    [10] => 349\n    [11] => 642\n    [12] =>\
    \ 1181\n    [13] => 2172\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] =>\
    \ 1\n    [3] => 6\n    [4] => 9\n    [5] => 16\n    [6] => 31\n    [7] => 56\n\
    \    [8] => 103\n    [9] => 190\n    [10] => 349\n    [11] => 642\n    [12] =>\
    \ 1181\n    [13] => 2172\n    [14] => 3995\n)\nArray\n(\n    [0] => 3\n    [1]\
    \ => 2\n    [2] => 1\n    [3] => 6\n    [4] => 9\n    [5] => 16\n    [6] => 31\n\
    \    [7] => 56\n    [8] => 103\n    [9] => 190\n    [10] => 349\n    [11] => 642\n\
    \    [12] => 1181\n    [13] => 2172\n    [14] => 3995\n    [1"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i +\
    \ 1];\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpygl9spah.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpygl9spah.php:29\nStack\
    \ trace:\n#0 /tmp/tmpygl9spah.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpygl9spah.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i == 0) {\n            $arr[] = 0;\n        } elseif ($i == 1) {\n  \
    \          $arr[] = 1;\n        } elseif ($i == 2) {\n            $arr[] = 1;\n\
    \        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ - 3];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_yab0rq.php:37\n\
    Stack trace:\n#0 /tmp/tmpq_yab0rq.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpq_yab0rq.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i === 0) {\n      $result[] = 0;\n    } elseif ($i === 1) {\n      $result[]\
    \ = 3;\n    } elseif ($i === 2) {\n      $result[] = 1;\n    } elseif ($i % 2\
    \ === 0) {\n      $result[] = 1 + ($i / 2);\n    } else {\n      $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsm65ctmo.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsm65ctmo.php:39\nStack\
    \ trace:\n#0 /tmp/tmpsm65ctmo.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpsm65ctmo.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? $arr[$i - 1] + 1 + $i / 2 : $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i - 3];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwb0bvqwb.php:29\n\
    Stack trace:\n#0 /tmp/tmpwb0bvqwb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwb0bvqwb.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ == 0) {\n      $arr[] = 0;\n    } else if ($i == 1) {\n      $arr[] = 1;\n \
    \   } else if ($i == 2) {\n      $arr[] = 1;\n    } else {\n      $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n  }\n  return $arr;\n}\n\nprint_r(tri(0));\n\
    print_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\nprint_r(tri(4));\nprint_r(tri(5));\n\
    print_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\n\
    print_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\n\
    print_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\n\
    print_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\n\
    print_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\n\
    print_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\n\
    print_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\nprint_r(tri(39));\nprint_r(tri(40));\n\
    print_r(tri(41));\nprint_\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpfmlryis0.php
    on line 75

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 1;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i - 3];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34s3bdt2.php:37\n\
    Stack trace:\n#0 /tmp/tmp34s3bdt2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp34s3bdt2.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) return [3];\n    if ($n == 2) return [3,\
    \ 2];\n    if ($n == 3) return [3, 2, 8];\n    $arr = [3, 2, 8];\n    for ($i\
    \ = 3; $i < $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhuqcxx6.php:36\n\
    Stack trace:\n#0 /tmp/tmpyhuqcxx6.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpyhuqcxx6.php\
    \ on line 36\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ === 0) {\n      $arr[] = 0;\n    } else if ($i === 1) {\n      $arr[] = 3;\n\
    \    } else if ($i === 2) {\n      $arr[] = 1;\n    } else if ($i % 2 === 0) {\n\
    \      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp1ny4vh0r.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp1ny4vh0r.php:39\nStack\
    \ trace:\n#0 /tmp/tmp1ny4vh0r.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp1ny4vh0r.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i === 0) {\n      $result[] = 0;\n    } elseif ($i === 1) {\n      $result[]\
    \ = 1;\n    } elseif ($i === 2) {\n      $result[] = 1;\n    } elseif ($i % 2\
    \ === 0) {\n      $result[] = 1 + $i / 2;\n    } else {\n      $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmphei64zei.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmphei64zei.php:39\nStack\
    \ trace:\n#0 /tmp/tmphei64zei.php(51): test()\n#1 {main}\n  thrown in /tmp/tmphei64zei.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ === 0) {\n      $arr[] = 0;\n    } else if ($i === 1) {\n      $arr[] = 1;\n\
    \    } else if ($i === 2) {\n      $arr[] = 1;\n    } else {\n      $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n  }\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp75nw0r8g.php:37\n\
    Stack trace:\n#0 /tmp/tmp75nw0r8g.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp75nw0r8g.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n\
    \            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvespdow.php:42\n\
    Stack trace:\n#0 /tmp/tmpvvespdow.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvvespdow.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 === 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpjew0a6yt.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpjew0a6yt.php:33\nStack\
    \ trace:\n#0 /tmp/tmpjew0a6yt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjew0a6yt.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i +\
    \ 1];\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpygl9spah.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpygl9spah.php:29\nStack\
    \ trace:\n#0 /tmp/tmpygl9spah.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpygl9spah.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp79bq_2ey.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp79bq_2ey.php:33\nStack\
    \ trace:\n#0 /tmp/tmp79bq_2ey.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp79bq_2ey.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i +\
    \ 1];\n  }\n  return $arr;\n}\n\nprint_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\n\
    print_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\n\
    print_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\n\
    print_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\n\
    print_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\n\
    print_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\n\
    print_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\n\
    print_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\n\
    print_r(tri(39));\nprint_r(tri(40));\nprint_r(tri(41));\nprint_r(tri(42));\nprint_r(tri(43));\n\
    print_r(tri(44));\nprint_r(tri(45));\nprint_r(tri(46));\nprint_r(tri(47));\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n)\nArray\n(\n    [0]\
    \ => 3\n    [1] => 2\n    [2] => 1\n)\n\nWarning: Undefined array key 4 in /tmp/tmp7zf6da9v.php\
    \ on line 19\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmp7zf6da9v.php on line 19\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n)\n\n\
    Warning: Undefined array key 4 in /tmp/tmp7zf6da9v.php on line 19\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmp7zf6da9v.php on line 19\nArray\n(\n    [0]\
    \ => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5] => 6\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmp7zf6da9v.php on line 19\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmp7zf6da9v.php on line 19\nArray\n(\n    [0]\
    \ => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5] => 6\n\
    \    [6] => 4\n)\n\nWarning: Undefined array key 4 in /tmp/tmp7zf6da9v.php on\
    \ line 19\n\nWarning: Undefined array key 6 in /tmp/tmp7zf6da9v.php on line 19\n\
    \nWarning: Undefined array key 8 in /tmp/tmp7zf6da9v.php on line 19\nArray\n(\n\
    \    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5]\
    \ => 6\n    [6] => 4\n    [7] => 10\n)\n\nWarning: Undefined array key 4 in /tmp/tmp7zf6da9v.php\
    \ on line 19\n\nWarning: Undefined array key 6 in /tmp/tmp7zf6da9v.php on line\
    \ 19\n\nWarning: Undefined array key 8 in /tmp/tmp7zf6da9v.php on line 19\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5]\
    \ => 6\n    [6] => 4\n    [7] => 10\n    [8] => 5\n)\n\nWarning: Undefined array\
    \ key 4 in /tmp/tmp7zf6da9v.php on line 19\n\nWarning: Undefined array key 6 in\
    \ /tmp/tmp7zf6da9v.php on line 19\n\nWarning: Undefined array key 8 in /tmp/tmp7zf6da9v.php\
    \ on line 19\n\nWarning: Undefined array key 10 in /tmp/tmp7zf6da9v.php on line\
    \ 19\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 6\n    [6] => 4\n    [7] => 10\n    [8] => 5\n    [9] => 15\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmp7zf6da9v.php on line 19\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmp7zf6da9v.php on line 19\n\nWarning: Undefined\
    \ array key 8 "
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $arr\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i -\
    \ 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzymitf9.php:42\n\
    Stack trace:\n#0 /tmp/tmpdzymitf9.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpdzymitf9.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ === 0) {\n      $arr[] = 0;\n    } else if ($i === 1) {\n      $arr[] = 1;\n\
    \    } else if ($i === 2) {\n      $arr[] = 1;\n    } else {\n      $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n  }\n  return $arr;\n}\n\nprint_r(tri(0));\n\
    print_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\nprint_r(tri(4));\nprint_r(tri(5));\n\
    print_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\n\
    print_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\n\
    print_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\n\
    print_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\n\
    print_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\n\
    print_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\n\
    print_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\nprint_r(tri(39));\nprint_r(tri(40));\n\
    print_r(tri(41));\nprint_\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpmh2hca2p.php
    on line 75

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    if ($n == 1) {\n        return\
    \ [3];\n    } else if ($n == 2) {\n        return [3, 2];\n    } else if ($n ==\
    \ 3) {\n        return [3, 2, 1];\n    } else {\n        for ($i = 3; $i < $n;\
    \ $i++) {\n            if ($i % 2 == 0) {\n                $arr[] = 1 + $i / 2;\n\
    \            } else {\n                $arr[] = $arr[$i - 1] + $arr[$i - 2] +\
    \ $arr[$i + 1];\n            }\n        }\n        return $arr;\n    }\n}\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjg4gp2ix.php:41\n\
    Stack trace:\n#0 /tmp/tmpjg4gp2ix.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpjg4gp2ix.php\
    \ on line 41\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $arr\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i -\
    \ 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzymitf9.php:42\n\
    Stack trace:\n#0 /tmp/tmpdzymitf9.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpdzymitf9.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $result\
    \ = [3, 2, 8];\n  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n    \
    \  $result[] = 1 + $i / 2;\n    } else {\n      $result[] = $result[$i - 1] +\
    \ $result[$i - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu8f27s1.php:42\n\
    Stack trace:\n#0 /tmp/tmplu8f27s1.php(54): test()\n#1 {main}\n  thrown in /tmp/tmplu8f27s1.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyw7zjlv0.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyw7zjlv0.php:33\nStack\
    \ trace:\n#0 /tmp/tmpyw7zjlv0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyw7zjlv0.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ == 0) {\n      $arr[] = 0;\n    } else if ($i == 1) {\n      $arr[] = 3;\n \
    \   } else if ($i == 2) {\n      $arr[] = 1;\n    } else if ($i % 2 == 0) {\n\
    \      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpmg9d05mu.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpmg9d05mu.php:39\nStack\
    \ trace:\n#0 /tmp/tmpmg9d05mu.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpmg9d05mu.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 1;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i - 3];\n        }\n    }\n    return $result;\n}\n\nprint_r(tri(0));\n\
    print_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\nprint_r(tri(4));\nprint_r(tri(5));\n\
    print_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\n\
    print_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\n\
    print_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\n\
    print_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\n\
    print_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\n\
    print_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\n\
    print_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\nprint_r(tri(39));\nprint_r(tri(40));\n\
    print_r(tri(41));\nprint_\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpf9nqt44v.php
    on line 75

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i === 0) {\n      $result[] = 0;\n    } elseif ($i === 1) {\n      $result[]\
    \ = 1;\n    } elseif ($i === 2) {\n      $result[] = 1;\n    } else {\n      $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7__hqbm.php:37\n\
    Stack trace:\n#0 /tmp/tmpf7__hqbm.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpf7__hqbm.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    if ($n == 1) {\n        return\
    \ [3];\n    }\n    if ($n == 2) {\n        return [3, 2];\n    }\n    if ($n ==\
    \ 3) {\n        return [3, 2, 8];\n    }\n    for ($i = 3; $i < $n; $i++) {\n\
    \        $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n    return\
    \ $arr;\n}\nprint_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\n\
    print_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\n\
    print_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\n\
    print_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\n\
    print_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\n\
    print_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\n\
    print_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\n\
    print_r(tri(38));\nprint_r(tri(39));\nprint_r(tri(40));\nprint_r(tri(41));\nprint_r(tri(42));\n\
    print_r(tri(43));\nprint_r(tri(44));\nprint_r(tri(45));\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n)\n\
    Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n    [4] =>\
    \ 23\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n \
    \   [4] => 23\n    [5] => 44\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2]\
    \ => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] => 80\n)\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n  \
    \  [5] => 44\n    [6] => 80\n    [7] => 147\n)\nArray\n(\n    [0] => 3\n    [1]\
    \ => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] =>\
    \ 80\n    [7] => 147\n    [8] => 271\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n\
    \    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] => 80\n  \
    \  [7] => 147\n    [8] => 271\n    [9] => 498\n)\nArray\n(\n    [0] => 3\n   \
    \ [1] => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6]\
    \ => 80\n    [7] => 147\n    [8] => 271\n    [9] => 498\n    [10] => 916\n)\n\
    Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n    [4] =>\
    \ 23\n    [5] => 44\n    [6] => 80\n    [7] => 147\n    [8] => 271\n    [9] =>\
    \ 498\n    [10] => 916\n    [11] => 1685\n)\nArray\n(\n    [0] => 3\n    [1] =>\
    \ 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] => 80\n\
    \    [7] => 147\n    [8] => 271\n    [9] => 498\n    [10] => 916\n    [11] =>\
    \ 1685\n    [12] => 3099\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] =>\
    \ 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] => 80\n    [7] => 147\n\
    \    [8] => 271\n    [9] => 498\n    [10] => 916\n    [11] => 1685\n    [12] =>\
    \ 3099\n    [13] => 5700\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] =>\
    \ 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] => 80\n    [7] => 147\n\
    \    [8] => 271\n    [9] => 498\n    [10] => 916\n    [11] => 1685\n    [12] =>\
    \ 3099\n    [13] => 5700\n    [14] => 10484\n)\nArray\n(\n    [0] => 3\n    [1]\
    \ => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] =>\
    \ 80\n    [7] => 147\n    [8] => 271\n    [9] => 498\n    [10] => 916\n    [11]\
    \ => 1685\n    [12] => 3099\n    [13] => 5700\n    [14] => 10484\n    [15] =>\
    \ 19283\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 1;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i - 3];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34s3bdt2.php:37\n\
    Stack trace:\n#0 /tmp/tmp34s3bdt2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp34s3bdt2.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n\
    \            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvespdow.php:42\n\
    Stack trace:\n#0 /tmp/tmpvvespdow.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvvespdow.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyw7zjlv0.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyw7zjlv0.php:33\nStack\
    \ trace:\n#0 /tmp/tmpyw7zjlv0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyw7zjlv0.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $tri = [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  $tri[$i] = $i % 2 == 0 ? 1 + $i / 2 : $tri[$i - 1] + $tri[$i - 2] + $tri[$i\
    \ + 1];\n  }\n  return $tri;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp9hoilvgr.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp9hoilvgr.php:29\nStack\
    \ trace:\n#0 /tmp/tmp9hoilvgr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9hoilvgr.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ == 0) {\n      $arr[] = 0;\n    } else if ($i == 1) {\n      $arr[] = 1;\n \
    \   } else if ($i == 2) {\n      $arr[] = 1;\n    } else {\n      $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n  }\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp04ozd_nl.php:37\n\
    Stack trace:\n#0 /tmp/tmp04ozd_nl.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp04ozd_nl.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n\
    \            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvespdow.php:42\n\
    Stack trace:\n#0 /tmp/tmpvvespdow.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvvespdow.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    if ($n == 1) {\n        return\
    \ [3];\n    }\n    if ($n == 2) {\n        return [3, 2];\n    }\n    if ($n ==\
    \ 3) {\n        return [3, 2, 8];\n    }\n    for ($i = 4; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabmfn2qy.php:42\n\
    Stack trace:\n#0 /tmp/tmpabmfn2qy.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpabmfn2qy.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $result = [3, 2, 8];\n    for ($i = 4; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n        } else\
    \ {\n            $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i -\
    \ 3];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwx5dvf8d.php:42\n\
    Stack trace:\n#0 /tmp/tmpwx5dvf8d.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpwx5dvf8d.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) return [3];\n  if ($n == 2) return [3, 2];\n\
    \  if ($n == 3) return [3, 2, 8];\n  $tri = [3, 2, 8];\n  for ($i = 3; $i < $n;\
    \ $i++) {\n    $tri[] = $i % 2 == 0 ? 1 + $i / 2 : $tri[$i - 1] + $tri[$i - 2]\
    \ + $tri[$i + 1];\n  }\n  return $tri;\n}\n\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwm_4aypj.php:32\n\
    Stack trace:\n#0 /tmp/tmpwm_4aypj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpwm_4aypj.php\
    \ on line 32\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 4; $i <= $n; $i++) {\n \
    \       if ($i % 2 == 0) {\n            $arr[] = 1 + ($i / 2);\n        } else\
    \ {\n            $arr[] = $arr[$i - 2] + $arr[$i - 1] + $arr[$i - 4];\n      \
    \  }\n    }\n    return $arr;\n}\nprint_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\n\
    print_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\n\
    print_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\n\
    print_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\n\
    print_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\n\
    print_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\n\
    print_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\n\
    print_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\n\
    print_r(\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpz2xv08li.php on line 75

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 ? $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3] : 1 + $i\
    \ / 2;\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp230so_o3.php:29\n\
    Stack trace:\n#0 /tmp/tmp230so_o3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp230so_o3.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n\
    \            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvespdow.php:42\n\
    Stack trace:\n#0 /tmp/tmpvvespdow.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvvespdow.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyw7zjlv0.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyw7zjlv0.php:33\nStack\
    \ trace:\n#0 /tmp/tmpyw7zjlv0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyw7zjlv0.php\
    \ on line 33\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 4; $i <= $n; $i++) {\n \
    \       if ($i % 2 == 0) {\n            $arr[] = 1 + ($i / 2);\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n      \
    \  }\n    }\n    return $arr;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplfrw5pz8.php:41\n\
    Stack trace:\n#0 /tmp/tmplfrw5pz8.php(53): test()\n#1 {main}\n  thrown in /tmp/tmplfrw5pz8.php\
    \ on line 41\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            $arr[] = 1 + ($i / 2);\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\nprint_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\n\
    print_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\n\
    print_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\n\
    print_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\n\
    print_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\n\
    print_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\n\
    print_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\n\
    print_r(tri(37));\nprint_r(tri(38));\nprint_r(tri(39));\nprint_r(tri(40));\nprint_r(tri(41));\n\
    print_r(\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpdmhn1cyk.php on line 75

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n\
    \            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvespdow.php:42\n\
    Stack trace:\n#0 /tmp/tmpvvespdow.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvvespdow.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ == 0) {\n      $arr[] = 0;\n    } else if ($i == 1) {\n      $arr[] = 1;\n \
    \   } else if ($i == 2) {\n      $arr[] = 1;\n    } else {\n      $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n  }\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp04ozd_nl.php:37\n\
    Stack trace:\n#0 /tmp/tmp04ozd_nl.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp04ozd_nl.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    if ($n == 1) {\n        return\
    \ [3];\n    }\n    if ($n == 2) {\n        return [3, 2];\n    }\n    if ($n ==\
    \ 3) {\n        return [3, 2, 8];\n    }\n    for ($i = 3; $i < $n; $i++) {\n\
    \        $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n    return\
    \ $arr;\n}\nprint_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\nprint_r(tri(4));\n\
    print_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\n\
    print_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\n\
    print_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\n\
    print_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\n\
    print_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\n\
    print_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\n\
    print_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\nprint_r(tri(39));\n\
    print_r(tri(40));\nprint_r(tri(41));\nprint_r(tri(42));\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n)\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 8\n)\nArray\n(\n    [0] => 3\n    [1]\
    \ => 2\n    [2] => 8\n    [3] => 13\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n\
    \    [2] => 8\n    [3] => 13\n    [4] => 23\n)\nArray\n(\n    [0] => 3\n    [1]\
    \ => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n)\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n  \
    \  [5] => 44\n    [6] => 80\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2]\
    \ => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] => 80\n    [7] =>\
    \ 147\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n\
    \    [4] => 23\n    [5] => 44\n    [6] => 80\n    [7] => 147\n    [8] => 271\n\
    )\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n    [4]\
    \ => 23\n    [5] => 44\n    [6] => 80\n    [7] => 147\n    [8] => 271\n    [9]\
    \ => 498\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n\
    \    [4] => 23\n    [5] => 44\n    [6] => 80\n    [7] => 147\n    [8] => 271\n\
    \    [9] => 498\n    [10] => 916\n)\nArray\n(\n    [0] => 3\n    [1] => 2\n  \
    \  [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] => 80\n    [7]\
    \ => 147\n    [8] => 271\n    [9] => 498\n    [10] => 916\n    [11] => 1685\n\
    )\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n    [4]\
    \ => 23\n    [5] => 44\n    [6] => 80\n    [7] => 147\n    [8] => 271\n    [9]\
    \ => 498\n    [10] => 916\n    [11] => 1685\n    [12] => 3099\n)\nArray\n(\n \
    \   [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5]\
    \ => 44\n    [6] => 80\n    [7] => 147\n    [8] => 271\n    [9] => 498\n    [10]\
    \ => 916\n    [11] => 1685\n    [12] => 3099\n    [13] => 5700\n)\nArray\n(\n\
    \    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5]\
    \ => 44\n    [6] => 80\n    [7] => 147\n    [8] => 271\n    [9] => 498\n    [10]\
    \ => 916\n    [11] => 1685\n    [12] => 3099\n    [13] => 5700\n    [14] => 10484\n\
    )\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n    [4]\
    \ => 23\n    [5] => 44\n    [6] => 80\n    [7] => 147\n    [8] => 271\n    [9]\
    \ => 498\n    [10] => 916\n    [11] => 1685\n    [12] => 3099\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $result = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n        } else\
    \ {\n            $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i +\
    \ 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjsvuh_sr.php:42\n\
    Stack trace:\n#0 /tmp/tmpjsvuh_sr.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpjsvuh_sr.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n\
    \            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvespdow.php:42\n\
    Stack trace:\n#0 /tmp/tmpvvespdow.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvvespdow.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i === 0) {\n      $result[] = 0;\n    } elseif ($i === 1) {\n      $result[]\
    \ = 1;\n    } elseif ($i === 2) {\n      $result[] = 1;\n    } elseif ($i % 2\
    \ === 0) {\n      $result[] = 1 + ($i / 2);\n    } else {\n      $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpg0j97isi.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpg0j97isi.php:39\nStack\
    \ trace:\n#0 /tmp/tmpg0j97isi.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpg0j97isi.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    $result\
    \ = [3];\n    for ($i = 2; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 2] + $result[$i - 1] + $result[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpk1b_t8ls.php on line 25\n\n\
    Warning: Undefined array key 3 in /tmp/tmpk1b_t8ls.php on line 25\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpk1b_t8ls.php:36\nStack trace:\n\
    #0 /tmp/tmpk1b_t8ls.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpk1b_t8ls.php\
    \ on line 36\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i == 0) {\n            $arr[] = 0;\n        } elseif ($i == 1) {\n  \
    \          $arr[] = 3;\n        } elseif ($i == 2) {\n            $arr[] = 1;\n\
    \        } elseif ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        }\
    \ else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n \
    \       }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpl1ztuv95.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpl1ztuv95.php:39\nStack\
    \ trace:\n#0 /tmp/tmpl1ztuv95.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpl1ztuv95.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i\
    \ === 0) {\n      $arr[] = 0;\n    } else if ($i === 1) {\n      $arr[] = 1;\n\
    \    } else if ($i === 2) {\n      $arr[] = 1;\n    } else {\n      $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i - 3];\n    }\n  }\n  return $arr;\n}\n\nprint_r(tri(4));\n\
    print_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\n\
    print_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\n\
    print_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\n\
    print_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\n\
    print_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\n\
    print_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\n\
    print_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\nprint_r(tri(39));\n\
    print_r(tri(40));\nprint_r(tri(41));\nprint_r(tri(42));\nprint_r(tri(43));\nprint_r(tri(44));\n\
    print_r(tri(45));\nprint_\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp4m67gfei.php
    on line 75

    '
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $result = [];\n    for ($i = 0; $i <= $n; $i++) {\n  \
    \      if ($i == 0) {\n            $result[] = 0;\n        } elseif ($i == 1)\
    \ {\n            $result[] = 1;\n        } elseif ($i == 2) {\n            $result[]\
    \ = 1;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i - 3];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34s3bdt2.php:37\n\
    Stack trace:\n#0 /tmp/tmp34s3bdt2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp34s3bdt2.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nprint_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\n\
    print_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\n\
    print_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\n\
    print_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\n\
    print_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\n\
    print_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\n\
    print_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\n\
    print_r(tri(38));\nprint_r(tri(39));\nprint_r(tri(40));\nprint_r(tri(41));\nprint_r(tri(42));\n\
    print_r(tri(43));\nprint_r(tri(44));\nprint_r(tri(45));\nprint_r(tri(46));\nprint_r(tri(47));\n\
    print_r(tri(48));\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp2ko260nl.php on line 22\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n)\n\n\
    Warning: Undefined array key 4 in /tmp/tmp2ko260nl.php on line 22\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmp2ko260nl.php on line 22\nArray\n(\n    [0]\
    \ => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5] => 6\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmp2ko260nl.php on line 22\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmp2ko260nl.php on line 22\nArray\n(\n    [0]\
    \ => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5] => 6\n\
    \    [6] => 4\n)\n\nWarning: Undefined array key 4 in /tmp/tmp2ko260nl.php on\
    \ line 22\n\nWarning: Undefined array key 6 in /tmp/tmp2ko260nl.php on line 22\n\
    \nWarning: Undefined array key 8 in /tmp/tmp2ko260nl.php on line 22\nArray\n(\n\
    \    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5]\
    \ => 6\n    [6] => 4\n    [7] => 10\n)\n\nWarning: Undefined array key 4 in /tmp/tmp2ko260nl.php\
    \ on line 22\n\nWarning: Undefined array key 6 in /tmp/tmp2ko260nl.php on line\
    \ 22\n\nWarning: Undefined array key 8 in /tmp/tmp2ko260nl.php on line 22\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5]\
    \ => 6\n    [6] => 4\n    [7] => 10\n    [8] => 5\n)\n\nWarning: Undefined array\
    \ key 4 in /tmp/tmp2ko260nl.php on line 22\n\nWarning: Undefined array key 6 in\
    \ /tmp/tmp2ko260nl.php on line 22\n\nWarning: Undefined array key 8 in /tmp/tmp2ko260nl.php\
    \ on line 22\n\nWarning: Undefined array key 10 in /tmp/tmp2ko260nl.php on line\
    \ 22\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 6\n    [6] => 4\n    [7] => 10\n    [8] => 5\n    [9] => 15\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmp2ko260nl.php on line 22\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmp2ko260nl.php on line 22\n\nWarning: Undefined\
    \ array key 8 in /tmp/tmp2ko260nl.php on line 22\n\nWarning: Undefined array key\
    \ 10 in /tmp/tmp2ko260nl.php on line 22\nArray\n(\n    [0] => 3\n    [1] => 2\n\
    \    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5] => 6\n    [6] => 4\n    [7]\
    \ => 10\n    [8] => "
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n == 1) {\n        return [3];\n    }\n    if ($n\
    \ == 2) {\n        return [3, 2];\n    }\n    if ($n == 3) {\n        return [3,\
    \ 2, 8];\n    }\n    $arr = [3, 2, 8];\n    for ($i = 3; $i < $n; $i++) {\n  \
    \      if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n\
    \            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvespdow.php:42\n\
    Stack trace:\n#0 /tmp/tmpvvespdow.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvvespdow.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp_rkbj_bh.php on line 22\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 10\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmp_rkbj_bh.php on line 22\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp_rkbj_bh.php:34\nStack trace:\n#0 /tmp/tmp_rkbj_bh.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_rkbj_bh.php on line 34\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i === 0) {\n      $result[] = 0;\n    } elseif ($i === 1) {\n      $result[]\
    \ = 1;\n    } elseif ($i === 2) {\n      $result[] = 1;\n    } else {\n      $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7__hqbm.php:37\n\
    Stack trace:\n#0 /tmp/tmpf7__hqbm.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpf7__hqbm.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $result = [];\n  for ($i = 0; $i <= $n; $i++) {\n    if\
    \ ($i === 0) {\n      $result[] = 0;\n    } elseif ($i === 1) {\n      $result[]\
    \ = 1;\n    } elseif ($i === 2) {\n      $result[] = 1;\n    } else {\n      $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7__hqbm.php:37\n\
    Stack trace:\n#0 /tmp/tmpf7__hqbm.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpf7__hqbm.php\
    \ on line 37\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  } else if ($n == 2) {\n\
    \    return [3, 2];\n  } else if ($n == 3) {\n    return [3, 2, 8];\n  } else\
    \ {\n    $arr = [3, 2, 8];\n    for ($i = 4; $i <= $n; $i++) {\n      if ($i %\
    \ 2 == 0) {\n        $arr[] = 1 + $i / 2;\n      } else {\n        $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i - 3];\n      }\n    }\n    return $arr;\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9tfkilwq.php:41\n\
    Stack trace:\n#0 /tmp/tmp9tfkilwq.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp9tfkilwq.php\
    \ on line 41\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nprint_r(tri(1));\nprint_r(tri(2));\nprint_r(tri(3));\n\
    print_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\n\
    print_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\n\
    print_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\n\
    print_r(tri(19));\nprint_r(tri(20));\nprint_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\n\
    print_r(tri(24));\nprint_r(tri(25));\nprint_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\n\
    print_r(tri(29));\nprint_r(tri(30));\nprint_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\n\
    print_r(tri(34));\nprint_r(tri(35));\nprint_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\n\
    print_r(tri(39));\nprint_r(tri(40));\nprint_r(tri(41));\nprint_r(tri(42));\nprint_r(tri(43));\n\
    print_r(tri(44));\nprint_r(tri(45));\nprint_r(tri(46));\nprint_r(tri(47));\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n)\nArray\n(\n    [0]\
    \ => 3\n    [1] => 2\n    [2] => 1\n)\n\nWarning: Undefined array key 4 in /tmp/tmp1j28jld6.php\
    \ on line 19\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmp1j28jld6.php on line 19\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n)\n\n\
    Warning: Undefined array key 4 in /tmp/tmp1j28jld6.php on line 19\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmp1j28jld6.php on line 19\nArray\n(\n    [0]\
    \ => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5] => 6\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmp1j28jld6.php on line 19\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmp1j28jld6.php on line 19\nArray\n(\n    [0]\
    \ => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5] => 6\n\
    \    [6] => 4\n)\n\nWarning: Undefined array key 4 in /tmp/tmp1j28jld6.php on\
    \ line 19\n\nWarning: Undefined array key 6 in /tmp/tmp1j28jld6.php on line 19\n\
    \nWarning: Undefined array key 8 in /tmp/tmp1j28jld6.php on line 19\nArray\n(\n\
    \    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5]\
    \ => 6\n    [6] => 4\n    [7] => 10\n)\n\nWarning: Undefined array key 4 in /tmp/tmp1j28jld6.php\
    \ on line 19\n\nWarning: Undefined array key 6 in /tmp/tmp1j28jld6.php on line\
    \ 19\n\nWarning: Undefined array key 8 in /tmp/tmp1j28jld6.php on line 19\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4] => 3\n    [5]\
    \ => 6\n    [6] => 4\n    [7] => 10\n    [8] => 5\n)\n\nWarning: Undefined array\
    \ key 4 in /tmp/tmp1j28jld6.php on line 19\n\nWarning: Undefined array key 6 in\
    \ /tmp/tmp1j28jld6.php on line 19\n\nWarning: Undefined array key 8 in /tmp/tmp1j28jld6.php\
    \ on line 19\n\nWarning: Undefined array key 10 in /tmp/tmp1j28jld6.php on line\
    \ 19\nArray\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n    [4]\
    \ => 3\n    [5] => 6\n    [6] => 4\n    [7] => 10\n    [8] => 5\n    [9] => 15\n\
    )\n\nWarning: Undefined array key 4 in /tmp/tmp1j28jld6.php on line 19\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmp1j28jld6.php on line 19\n\nWarning: Undefined\
    \ array key 8 "
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  if ($n == 3) {\n    return [3, 2, 8];\n  }\n  $result\
    \ = [3, 2, 8];\n  for ($i = 4; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n   \
    \   $result[] = 1 + ($i / 2);\n    } else {\n      $result[] = $result[$i - 1]\
    \ + $result[$i - 2] + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdvvnb_c.php:42\n\
    Stack trace:\n#0 /tmp/tmpzdvvnb_c.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpzdvvnb_c.php\
    \ on line 42\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [];\n    for ($i = 0; $i <= $n; $i++) {\n     \
    \   if ($i == 0) {\n            $arr[] = 0;\n        } elseif ($i == 1) {\n  \
    \          $arr[] = 3;\n        } elseif ($i == 2) {\n            $arr[] = 1;\n\
    \        } elseif ($i % 2 == 0) {\n            $arr[] = 1 + ($i / 2);\n      \
    \  } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\
    \        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpnvefvqsy.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpnvefvqsy.php:39\nStack\
    \ trace:\n#0 /tmp/tmpnvefvqsy.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnvefvqsy.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $tri = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $tri[$i] = $i % 2 === 0 ? $tri[$i - 1] + $tri[$i - 2] + 1 + $i / 2 :\
    \ $tri[$i - 1] + $tri[$i - 2] + $tri[$i - 3];\n    }\n    return $tri;\n}\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg_qcifil.php:29\n\
    Stack trace:\n#0 /tmp/tmpg_qcifil.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpg_qcifil.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        $arr[] = $i % 2 == 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsr6d_arc.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsr6d_arc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpsr6d_arc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr6d_arc.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n  $arr = [3, 2, 1];\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  $arr[] = $i % 2 === 0 ? 1 + $i / 2 : $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpf0vpbwvq.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpf0vpbwvq.php:29\nStack\
    \ trace:\n#0 /tmp/tmpf0vpbwvq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf0vpbwvq.php\
    \ on line 29\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    if ($n === 0) {\n        return [];\n    }\n    if ($n\
    \ === 1) {\n        return [3];\n    }\n    $result = [3, 2, 8];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 === 0) {\n            $result[] =\
    \ 1 + $i / 2;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpogm2ks5z.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpogm2ks5z.php:39\nStack\
    \ trace:\n#0 /tmp/tmpogm2ks5z.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpogm2ks5z.php\
    \ on line 39\n"
  timestamp: 1659979104
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    function tri($n) {\n    $arr = [3, 2, 8];\n    for ($i = 3; $i <= $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else\
    \ {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      \
    \  }\n    }\n    return $arr;\n}\n\nprint_r(tri(5));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpp5eaz1h4.php on line 22\n\n\
    Warning: Undefined array key 6 in /tmp/tmpp5eaz1h4.php on line 22\nArray\n(\n\
    \    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 10\n    [4] => 3\n    [5]\
    \ => 13\n)\n\nWarning: Undefined array key 4 in /tmp/tmpp5eaz1h4.php on line 22\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5eaz1h4.php:34\nStack\
    \ trace:\n#0 /tmp/tmpp5eaz1h4.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpp5eaz1h4.php\
    \ on line 34\n"
  timestamp: 1659979104

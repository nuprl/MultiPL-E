name: HumanEval_129_minPath
language: php
prompt: "<?php\n// Given a grid with N rows and N columns (N >= 2) and a positive\
  \ integer k, \n// each cell of the grid contains a value. Every integer in the range\
  \ [1, N * N]\n// inclusive appears exactly once on the cells of the grid.\n// You\
  \ have to find the minimum path of length k in the grid. You can start\n// from\
  \ any cell, and in each step you can move to any of the neighbor cells,\n// in other\
  \ words, you can go to cells which share an edge with you current\n// cell.\n//\
  \ Please note that a path of length k means visiting exactly k cells (not\n// necessarily\
  \ distinct).\n// You CANNOT go off the grid.\n// A path A (of length k) is considered\
  \ less than a path B (of length k) if\n// after making the ordered lists of the\
  \ values on the cells that A and B go\n// through (let's call them lst_A and lst_B),\
  \ lst_A is lexicographically less\n// than lst_B, in other words, there exist an\
  \ integer index i (1 <= i <= k)\n// such that lst_A[i] < lst_B[i] and for any j\
  \ (1 <= j < i) we have\n// lst_A[j] = lst_B[j].\n// It is guaranteed that the answer\
  \ is unique.\n// Return an ordered list of the values on the cells that the minimum\
  \ path go through.\nfunction minPath($grid, $k) {\n"
tests: "function candidate(...$args) {\n    return minPath(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6), array(7,\
  \ 8, 9)), 3) !== array(1, 2, 1)) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(array(array(5, 9, 3), array(4, 1, 6), array(7, 8, 2)), 1) !== array(1))\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2,\
  \ 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12), array(13, 14, 15, 16)), 4) !==\
  \ array(1, 2, 1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(6,\
  \ 4, 13, 10), array(5, 7, 12, 1), array(3, 16, 11, 15), array(8, 14, 9, 2)), 7)\
  \ !== array(1, 10, 1, 10, 1, 10, 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(array(8, 14, 9, 2), array(6, 4, 13, 15), array(5, 7, 1,\
  \ 12), array(3, 10, 11, 16)), 5) !== array(1, 7, 1, 7, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(array(11, 8, 7, 2), array(5, 16, 14,\
  \ 4), array(9, 3, 15, 6), array(12, 13, 10, 1)), 9) !== array(1, 6, 1, 6, 1, 6,\
  \ 1, 6, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(12,\
  \ 13, 10, 1), array(9, 3, 15, 6), array(5, 16, 14, 4), array(11, 8, 7, 2)), 12)\
  \ !== array(1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(array(2, 7, 4), array(3, 1, 5), array(6, 8, 9)), 8)\
  \ !== array(1, 3, 1, 3, 1, 3, 1, 3)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(array(6, 1, 5), array(3, 8, 9), array(2, 7, 4)), 8) !==\
  \ array(1, 5, 1, 5, 1, 5, 1, 5)) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(array(array(1, 2), array(3, 4)), 10) !== array(1, 2, 1, 2, 1, 2,\
  \ 1, 2, 1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1,\
  \ 3), array(3, 2)), 10) !== array(1, 3, 1, 3, 1, 3, 1, 3, 1, 3)) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n  \
    \          $minPath = [];\n            $minPathSum = PHP_INT_MAX;\n          \
    \  dfs($grid, $i, $j, $k, $visited, $minPath, $minPathSum);\n        }\n    }\n\
    \    return $minPath;\n}\n", "    $n = count($grid);\n    $visited = [];\n   \
    \ $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathValue = [];\n    $minPathValueSum\
    \ = PHP_INT_MAX;\n    $minPathValueIndex = 0;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum = PHP_INT_MAX;\n    $minPathValueIndexSum = PHP_INT_MAX;\n\
    \    $minPathValueIndexSum", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathValue = PHP_INT_MAX;\n    $minPathIndex\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $path = [];\n            $sum = 0;\n            $pathSum\
    \ = 0;\n            $pathValue = 0;\n            $pathIndex = 0;\n           \
    \ $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n           \
    \ $sum += $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n           \
    \ $pathValue = $grid[$i][$j];\n            $pathIndex = $grid[$i][$j];\n     \
    \       $result = dfs($grid, $n, $i, $j, $k - 1, $visited, $path, $sum, $pathSum,\
    \ $pathValue, $pathIndex);\n            if ($result[0] < $minSum) {\n        \
    \        $minSum = $result[0];\n                $minPath = $result[1];\n     \
    \           $minPathSum = $result[2];\n                $minPathValue = $result[3];\n\
    \                $minPathIndex = $result[4];\n            } else if ($result[0]\
    \ == $minSum) {\n                if ($result[2] < $minPathSum) {\n           \
    \         $minPath = $result[1];\n                    $minPathSum = $result[2];\n\
    \                    $minPathValue = $result[3];\n                    $minPathIndex\
    \ = $result[4];\n                } else if ($result[2] == $minPathSum) {\n   \
    \                 if ($result[3] < $minPathValue) {\n                        $minPath\
    \ = $result[1];\n                        $minPathSum = $result[2];\n         \
    \               $minPathValue", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = [];\n    $queue = new SplQueue();\n    $queue->enqueue([0, 0,\
    \ $grid[0][0]]);\n    $visited[0][0] = true;\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    while (!$queue->isEmpty()) {\n        list($i, $j, $sum)\
    \ = $queue->dequeue();\n        if ($sum > $minSum) {\n            continue;\n\
    \        }\n        if ($i == $n - 1 && $j == $m - 1) {\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = [];\n\
    \            }\n            $minPath[] = $grid[$i][$j];\n            continue;\n\
    \        }\n        if ($i + 1 < $n && !$visited[$i + 1][$j]) {\n            $visited[$i\
    \ + 1][$j] = true;\n            $queue->enqueue([$i + 1, $j, $sum + $grid[$i +\
    \ 1][$j]]);\n        }\n        if ($j + 1 < $m && !$visited[$i][$j + 1]) {\n\
    \            $visited[$i][$j + 1] = true;\n            $queue->enqueue([$i, $j\
    \ + 1, $sum + $grid[$i][$j + 1]]);\n        }\n    }\n    return $minPath;\n}\n\
    \n$grid = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9],\n];\n$k = 5;\nprint_r(minPath($grid,\
    \ $k));", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $minPath[$i][$j]\
    \ = [];\n            $minPathSum[$i][$j] = PHP_INT_MAX;\n        }\n    }\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n    \
    \        $visited[$i][$j] = true;\n            $minPath[$i][$j][] = $grid[$i][$j];\n\
    \            $minPathSum[$i][$j] = $grid[$i][$j];\n            $minSum = min($minSum,\
    \ $grid[$i][$j]);\n            dfs($grid, $i, $j, $visited, $minPath, $minPathSum,\
    \ $minSum, $k, 1);\n            $visited[$i][$j] = false;\n        }\n    }\n\
    \    return $minPath[$i][$j];\n}", "    $n = count($grid);\n    $visited = [];\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            $path = [];\n            $sum = 0;\n            dfs($grid,\
    \ $i, $j, $k, $visited, $path, $sum);\n            if ($sum < $minSum) {\n   \
    \             $minSum = $sum;\n                $minPath = $path;\n           \
    \ }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n   \
    \ $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $visited, $path, $sum, $k, $minPath, $minSum);\n \
    \       }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathVal\
    \ = PHP_INT_MAX;\n    $minPathLen = PHP_INT_MAX;\n    $minPathVisited = [];\n\
    \    $minPathVisitedVal = PHP_INT_MAX;\n    $minPathVisitedLen = PHP_INT_MAX;\n\
    \    $dirs = [[-1, 0], [1, 0], [0, -1], [0, 1]];\n    $dfs = function($grid, $n,\
    \ $visited, $path, $pathVal, $pathLen, $k, &$minPath, &$minPathVal, &$minPathLen,\
    \ &$minPathVisited, &$minPathVisitedVal, &$minPathVisitedLen) use ($dirs, &$dfs)\
    \ {\n        if ($pathLen > $k) {\n            return;\n        }\n        if\
    \ ($pathLen == $k) {\n            if ($pathVal < $minPathVal) {\n            \
    \    $minPath = $path;\n                $minPathVal = $pathVal;\n            \
    \    $minPathLen = $pathLen;\n            } else if ($pathVal == $minPathVal &&\
    \ $pathLen < $minPathLen) {\n                $minPath = $path;\n             \
    \   $minPathVal = $pathVal;\n                $minPathLen = $pathLen;\n       \
    \     }\n            return;\n        }\n        if ($pathLen == $k - 1) {\n \
    \           if ($pathVal < $minPathVisitedVal) {\n                $minPathVisited\
    \ = $path;\n                $minPathVisitedVal = $pathVal;\n                $minPathVisitedLen\
    \ = $pathLen;\n            } else if ($pathVal == $minPathVisitedVal && $pathLen\
    \ < $minPathVisitedLen) {\n                $minPathVisited = $path;\n        \
    \        $minPathVisitedVal = $pathVal;\n                $minPathVisitedLen =\
    \ $pathLen;\n            }\n        }\n        $x = end($path)[0];\n        $y\
    \ = end($path)[", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = dfs($grid, $visited, 0, 0, $k, 0, $minPathSum, $minPath);\n    return $minPath;\n\
    }\n", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPathValues = [];\n    $minPathValuesSum = PHP_INT_MAX;\n\
    \    $minPathValuesIndex = 0;\n    $minPathValuesIndexSum = PHP_INT_MAX;\n   \
    \ $minPathValuesIndexValues = [];\n    $minPathValuesIndexValuesSum = PHP_INT_MAX;\n\
    \    $minPathValuesIndexValuesIndex = 0;\n    $minPathValuesIndexValuesIndexSum\
    \ = PHP_INT_MAX;\n    $minPathValuesIndexValuesIndexValues = [];\n    $minPathValuesIndexValuesIndexValuesSum\
    \ = PHP_INT_MAX;\n    $minPathValuesIndexValuesIndexValuesIndex = 0;\n    $minPathValuesIndexValuesIndexValuesIndexSum\
    \ = PHP_INT_MAX;\n    $minPathValuesIndexValuesIndexValuesIndexValues = [];\n\
    \    $minPathValuesIndexValuesIndexValuesIndexValuesSum = PHP_INT_MAX;\n    $minPathValuesIndexValuesIndexValuesIndexValuesIndex\
    \ = 0;\n    $minPathValuesIndexValuesIndexValuesIndexValuesIndexSum = PHP_INT_MAX;\n\
    \    $minPathValuesIndexValuesIndexValuesIndexValuesIndexValues = [];\n    $minPathValuesIndexValuesIndexValuesIndexValuesIndexValuesSum\
    \ = PHP_INT_MAX;\n    $minPathValuesIndexValuesIndexValuesIndexValuesIndexValuesIndex\
    \ = 0;\n    $minPathValuesIndexValuesIndexValuesIndexValuesIndexValuesIndexSum\
    \ = PHP_INT_MAX;\n    $minPathValuesIndexValuesIndexValuesIndexValuesIndexValuesIndexValues\
    \ = [];\n    $minPathValuesIndexValuesIndexValuesIndexValuesIndexValuesIndexValuesSum\
    \ = PHP_INT_MAX;\n    $minPathValuesIndexValuesIndexValuesIndexValuesIndexValuesIndexValuesIndex\
    \ = 0;\n    $minPathValuesIndexValuesIndexValuesIndexValuesIndexValuesIndexValuesIndexSum\
    \ = PHP_INT_MAX;\n    $minPathValuesIndexValuesIndexValuesIndexValuesIndexValuesIndexValuesIndexValues\
    \ = [];\n    $minPathValuesIndexValuesIndexValuesIndexValues", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n            $path\
    \ = [$grid[$i][$j]];\n            $sum = $grid[$i][$j];\n            dfs($grid,\
    \ $visited, $i, $j, $path, $sum, $minPath, $minSum, $k);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $path\
    \ = [];\n            $pathSum = 0;\n            $visited[$i][$j] = true;\n   \
    \         $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n \
    \           dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            dfs($grid, $i, $j, $k, $visited,\
    \ $path, $sum);\n            if ($sum < $minSum) {\n                $minSum =\
    \ $sum;\n                $minPath = $path;\n            }\n        }\n    }\n\
    \    return $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n    \
    \        $sum += $grid[$i][$j];\n            dfs($grid, $i, $j, $k, $visited,\
    \ $path, $sum, $minPath, $minSum);\n            $visited[$i][$j] = false;\n  \
    \      }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $min", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited =\
    \ [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++)\
    \ {\n            $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $curPath = [];\n            $curSum = 0;\n\
    \            $curPath[] = $grid[$i][$j];\n            $curSum += $grid[$i][$j];\n\
    \            $visited[$i][$j] = true;\n            dfs($grid, $visited, $i, $j,\
    \ $curPath, $curSum, $minPath, $minSum, $k);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $m =\
    \ count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathValues = [];\n    $minPathValuesSum\
    \ = PHP_INT_MAX;\n    $minPathValuesSumIndex = 0;\n    $minPathValuesSumIndexes\
    \ = [];\n    $minPathValuesSumIndexesIndex = 0;\n    $minPathValuesSumIndexesIndexes\
    \ = [];\n    $minPathValuesSumIndexesIndexesIndex = 0;\n    $minPathValuesSumIndexesIndexesIndexes\
    \ = [];\n    $minPathValuesSumIndexesIndexesIndexesIndex = 0;\n    $minPathValuesSumIndexesIndexesIndexesIndexes\
    \ = [];\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndex = 0;\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexes\
    \ = [];\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndex = 0;\n\
    \    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexes = [];\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndex\
    \ = 0;\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexes\
    \ = [];\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndex\
    \ = 0;\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexes\
    \ = [];\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndex\
    \ = 0;\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexes\
    \ = [];\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndex\
    \ = 0;\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexes\
    \ = [];\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexes",
  "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n         \
    \   $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            $path = [];\n            $sum = 0;\n            dfs($grid,\
    \ $i, $j, $k, $visited, $path, $sum);\n            if ($sum < $minSum) {\n   \
    \             $minSum = $sum;\n                $minPath = $path;\n           \
    \ }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n   \
    \ $m = count($grid[0]);\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPaths\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++)\
    \ {\n            $path = [];\n            $sum = 0;\n            $paths = [];\n\
    \            dfs($grid, $i, $j, $k, $path, $sum, $paths);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \                $minPaths = $paths;\n            }\n        }\n    }\n    return\
    \ $minPaths;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $path = [];\n        \
    \    $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n            dfs($grid,\
    \ $i, $j, $k - 1, $path, $pathSum, $visited, $minPath, $minPathSum);\n       \
    \     $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}\n",
  "    $n = count($grid);\n    $visited = [];\n    $queue = new SplQueue();\n    $queue->enqueue([$grid[0][0],\
    \ [0, 0]]);\n    $visited[0][0] = true;\n    $minPath = [];\n    while (!$queue->isEmpty())\
    \ {\n        list($val, $pos) = $queue->dequeue();\n        $minPath[] = $val;\n\
    \        if (count($minPath) == $k) {\n            break;\n        }\n       \
    \ $x = $pos[0];\n        $y = $pos[1];\n        if ($x > 0 && !$visited[$x - 1][$y])\
    \ {\n            $visited[$x - 1][$y] = true;\n            $queue->enqueue([$grid[$x\
    \ - 1][$y], [$x - 1, $y]]);\n        }\n        if ($x < $n - 1 && !$visited[$x\
    \ + 1][$y]) {\n            $visited[$x + 1][$y] = true;\n            $queue->enqueue([$grid[$x\
    \ + 1][$y], [$x + 1, $y]]);\n        }\n        if ($y > 0 && !$visited[$x][$y\
    \ - 1]) {\n            $visited[$x][$y - 1] = true;\n            $queue->enqueue([$grid[$x][$y\
    \ - 1], [$x, $y - 1]]);\n        }\n        if ($y < $n - 1 && !$visited[$x][$y\
    \ + 1]) {\n            $visited[$x][$y + 1] = true;\n            $queue->enqueue([$grid[$x][$y\
    \ + 1], [$x, $y + 1]]);\n        }\n    }\n    return $minPath;\n}\n\n$grid =\
    \ [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n];\n$k = 5;\n$result = minPath($grid,\
    \ $k);\nprint_r($result);", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $min = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            if ($grid[$i][$j] == 1) {\n                $min[] =\
    \ [$i, $j];\n                break 2;\n            }\n        }\n    }\n    $min\
    \ = dfs($grid, $min, $k, $n, $m);\n    return $min;\n}\n", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n            dfs($grid,\
    \ $i, $j, $visited, $k, $grid[$i][$j], [$grid[$i][$j]], $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPaths = [];\n    $minPathsSum = [];\n    $minPaths[$minPathSum]\
    \ = [$minPath];\n    $minPathsSum[$minPathSum] = $minPathSum;\n    $queue = [[0,\
    \ 0, 0, $grid[0][0]]];\n    while (!empty($queue)) {\n        [$i, $j, $l, $sum]\
    \ = array_shift($queue);\n        if ($l === $k) {\n            if ($sum < $minSum)\
    \ {\n                $minSum = $sum;\n                $minPath = [$grid[$i][$j]];\n\
    \                $minPathSum = $sum;\n                $minPaths = [$minPathSum\
    \ => [$minPath]];\n                $minPathsSum = [$minPathSum => $minPathSum];\n\
    \            } elseif ($sum === $minSum) {\n                $minPath = [$grid[$i][$j]];\n\
    \                $minPathSum = $sum;\n                if (!isset($minPaths[$minPathSum]))\
    \ {\n                    $minPaths[$minPathSum] = [];\n                    $minPathsSum[$minPathSum]\
    \ = $minPathSum;\n                }\n                $minPaths[$minPathSum][]\
    \ = $minPath;\n            }\n            continue;\n        }\n        if ($visited[$i][$j])\
    \ {\n            continue;\n        }\n        $visited[$i][$j] = true;\n    \
    \    if ($i > 0) {\n            $queue[] = [$i - 1, $j, $l + 1, $sum + $grid[$i\
    \ - 1][$j]];\n        }\n        if ($i < $n - 1) {\n            $queue[] = [$i\
    \ + 1, $j, $l + 1, $sum + $grid[$i", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++)\
    \ {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $i, $j, $visited,\
    \ $path, $pathSum, $minPath, $minPathSum, $k);\n            $visited[$i][$j] =\
    \ false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathValues\
    \ = [];\n    $minPathValuesSum = PHP_INT_MAX;\n    $minPathValuesSumIndex = 0;\n\
    \    $minPathValuesSumIndexes = [];\n    $minPathValuesSumIndexesIndex = 0;\n\
    \    $minPathValuesSumIndexesIndexes = [];\n    $minPathValuesSumIndexesIndexesIndex\
    \ = 0;\n    $minPathValuesSumIndexesIndexesIndexes = [];\n    $minPathValuesSumIndexesIndexesIndexesIndex\
    \ = 0;\n    $minPathValuesSumIndexesIndexesIndexesIndexes = [];\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndex\
    \ = 0;\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexes = [];\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndex\
    \ = 0;\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexes = [];\n\
    \    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndex = 0;\n \
    \   $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexes = [];\n\
    \    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndex =\
    \ 0;\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexes\
    \ = [];\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndex\
    \ = 0;\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexes\
    \ = [];\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndex\
    \ = 0;\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexes\
    \ = [];\n    $minPathValuesSumIndexesIndexesIndexesIndexesIndexesIndexesIndexesIndexes",
  "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid,\
    \ $visited, 0, 0, $k, 0, $minPathSum, $minPath);\n    return $minPath;\n}\n",
  "    $n = count($grid);\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n  \
    \  $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $visited = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $visited[$i][$j] = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $pathSum = 0;\n            dfs($grid, $i, $j, $n, $k, $visited, $path, $pathSum,\
    \ $minPath, $minPathSum);\n        }\n    }\n    return $minPath;\n}", "    $n\
    \ = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n  \
    \          $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n            dfs($grid,\
    \ $visited, $path, $pathSum, $minPath, $minPathSum, $i, $j, $k, $n);\n       \
    \     $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}", " \
    \   $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid,\
    \ $visited, 0, 0, $k, 0, $minPathSum, $minPath);\n    return $minPath;\n}\n",
  "    $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $visited[$i] = array_fill(0, $n, false);\n    }\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n    \
    \        $sum += $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1, $visited,\
    \ $path, $sum, $minPath, $minSum);\n            $visited[$i][$j] = false;\n  \
    \      }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $visited, $i, $j,\
    \ $path, $pathSum, $minPath, $minPathSum, $k);\n            $visited[$i][$j] =\
    \ false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $dp = [];\n    $dp[0][0] = [$grid[0][0]];\n    for ($i = 1; $i < $n; $i++)\
    \ {\n        $dp[0][$i] = [$grid[0][$i]];\n        if ($grid[0][$i] < $grid[0][$i\
    \ - 1]) {\n            $dp[0][$i] = array_merge($dp[0][$i], $dp[0][$i - 1]);\n\
    \        } else {\n            $dp[0][$i] = array_merge($dp[0][$i - 1], $dp[0][$i]);\n\
    \        }\n    }\n    for ($i = 1; $i < $n; $i++) {\n        $dp[$i][0] = [$grid[$i][0]];\n\
    \        if ($grid[$i][0] < $grid[$i - 1][0]) {\n            $dp[$i][0] = array_merge($dp[$i][0],\
    \ $dp[$i - 1][0]);\n        } else {\n            $dp[$i][0] = array_merge($dp[$i\
    \ - 1][0], $dp[$i][0]);\n        }\n    }\n    for ($i = 1; $i < $n; $i++) {\n\
    \        for ($j = 1; $j < $n; $j++) {\n            $dp[$i][$j] = [$grid[$i][$j]];\n\
    \            if ($grid[$i][$j] < $grid[$i - 1][$j]) {\n                $dp[$i][$j]\
    \ = array_merge($dp[$i][$j], $dp[$i - 1][$j]);\n            } else {\n       \
    \         $dp[$i][$j] = array_merge($dp[$i - 1][$j], $dp[$i][$j]);\n         \
    \   }\n            if ($grid[$i][$j] < $grid[$i][$j - 1]) {\n                $dp[$i][$j]",
  "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n  \
    \          $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n            dfs($grid,\
    \ $k, $i, $j, $visited, $path, $pathSum, $minPath, $minPathSum);\n           \
    \ $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}", "   \
    \ $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n   ", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathValues = [];\n    $dfs = function($grid,\
    \ $visited, $i, $j, $k, $path, $pathSum, $pathValues) use (&$dfs, &$minPath, &$minPathSum,\
    \ &$minPathValues) {\n        if ($k == 0) {\n            if ($pathSum < $minPathSum)\
    \ {\n                $minPath = $path;\n                $minPathSum = $pathSum;\n\
    \                $minPathValues = $pathValues;\n            } else if ($pathSum\
    \ == $minPathSum) {\n                for ($i = 0; $i < count($pathValues); $i++)\
    \ {\n                    if ($pathValues[$i] < $minPathValues[$i]) {\n       \
    \                 $minPath = $path;\n                        $minPathSum = $pathSum;\n\
    \                        $minPathValues = $pathValues;\n                     \
    \   break;\n                    } else if ($pathValues[$i] > $minPathValues[$i])\
    \ {\n                        break;\n                    }\n                }\n\
    \            }\n            return;\n        }\n        $n = count($grid);\n \
    \       $visited[$i][$j] = true;\n        $path[] = [$i, $j];\n        $pathSum\
    \ += $grid[$i][$j];\n        $pathValues[] = $grid[$i][$j];\n        if ($i >\
    \ 0 && !$visited[$i - 1][$j]) {\n            $dfs($grid, $visited, $i - 1, $j,\
    \ $k - 1, $path, $pathSum, $pathValues);\n        }\n        if ($i < $n - 1 &&\
    \ !$visited[$i + 1][$j]) {\n            $dfs($grid, $visited, $i + 1, $j, $k -\
    \ 1, $path, $pathSum, $pathValues);\n        }\n        if ($j > 0 && !$visited[",
  "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n         \
    \   $currPath = [];\n            $currSum = 0;\n            $visited[$i][$j] =\
    \ true;\n            $currPath[] = $grid[$i][$j];\n            $currSum += $grid[$i][$j];\n\
    \            if (dfs($grid, $i, $j, $k - 1, $visited, $currPath, $currSum, $minPath,\
    \ $minSum)) {\n                return $minPath;\n            }\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPathVal = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = true;\n\
    \            $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n\
    \            $pathVal = $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1,\
    \ $visited, $path, $pathSum, $pathVal, $minPath, $minSum, $minPathSum, $minPathVal);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $min = [];\n    $min_sum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            $visited[$i][$j] =\
    \ true;\n            dfs($grid, $i, $j, $k, $visited, $path, $sum, $min, $min_sum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $min;\n}",
  "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathValue = PHP_INT_MAX;\n    $minPathIndex\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++)\
    \ {\n            $path = [];\n            $sum = 0;\n            $pathSum = 0;\n\
    \            $pathValue = 0;\n            $pathIndex = 0;\n            $visited[$i][$j]\
    \ = true;\n            dfs($grid, $i, $j, $visited, $path, $sum, $pathSum, $pathValue,\
    \ $pathIndex, $k);\n            $visited[$i][$j] = false;\n            if ($pathSum\
    \ < $minPathSum) {\n                $minPath = $path;\n                $minSum\
    \ = $sum;\n                $minPathSum = $pathSum;\n                $minPathValue\
    \ = $pathValue;\n                $minPathIndex = $pathIndex;\n            } else\
    \ if ($pathSum == $minPathSum) {\n                if ($pathValue < $minPathValue)\
    \ {\n                    $minPath = $path;\n                    $minSum = $sum;\n\
    \                    $minPathSum = $pathSum;\n                    $minPathValue\
    \ = $pathValue;\n                    $minPathIndex = $pathIndex;\n           \
    \     } else if ($pathValue == $minPathValue) {\n                    if ($pathIndex\
    \ < $minPathIndex) {\n                        $minPath = $path;\n            \
    \            $minSum = $sum;\n                        $minPathSum = $pathSum;\n\
    \                        $minPathValue = $pathValue;\n                       \
    \ $minPathIndex = $pathIndex;\n                    }\n                }\n    \
    \        }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPathValue = PHP_INT_MAX;\n    $minPathValueIndex = PHP_INT_MAX;\n\
    \    $minPathValueIndex2 = PHP_INT_MAX;\n    $minPathValueIndex3 = PHP_INT_MAX;\n\
    \    $minPathValueIndex4 = PHP_INT_MAX;\n    $minPathValueIndex5 = PHP_INT_MAX;\n\
    \    $minPathValueIndex6 = PHP_INT_MAX;\n    $minPathValueIndex7 = PHP_INT_MAX;\n\
    \    $minPathValueIndex8 = PHP_INT_MAX;\n    $minPathValueIndex9 = PHP_INT_MAX;\n\
    \    $minPathValueIndex10 = PHP_INT_MAX;\n    $minPathValueIndex11 = PHP_INT_MAX;\n\
    \    $minPathValueIndex12 = PHP_INT_MAX;\n    $minPathValueIndex13 = PHP_INT_MAX;\n\
    \    $minPathValueIndex14 = PHP_INT_MAX;\n    $minPathValueIndex15 = PHP_INT_MAX;\n\
    \    $minPathValueIndex16 = PHP_INT_MAX;\n    $minPathValueIndex17 = PHP_INT_MAX;\n\
    \    $minPathValueIndex18 = PHP_INT_MAX;\n    $minPathValueIndex19 = PHP_INT_MAX;\n\
    \    $minPathValueIndex20 = PHP_INT_MAX;\n    $minPathValueIndex21 = PHP_INT_MAX;\n\
    \    $minPathValueIndex22 = PHP_INT_MAX;\n    $minPathValueIndex23 = PHP_INT_MAX;\n\
    \    $minPathValueIndex24 = PHP_INT_MAX;\n    $minPathValueIndex25 = PHP_INT_MAX;\n\
    \    $minPathValueIndex26 = PHP_INT_MAX;\n    $minPathValueIndex27 = PHP_INT_MAX;\n\
    \    $minPathValueIndex28 = PHP_INT_MAX;\n   ", "    $n = count($grid);\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $visited = [];\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $pathSum = 0;\n\
    \            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $pathSum += $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1,\
    \ $visited, $path, $pathSum, $minPath, $minPathSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPaths = [];\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = true;\n    \
    \        dfs($grid, $visited, $i, $j, $k, $minPath, $minSum, $minPathSum, $minPaths);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPaths[0];\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = dfs($grid, $visited, 0, 0, 0, $k, $minPath, $minPathSum);\n    return $minPath;\n\
    }\n", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = [];\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $m; $j++) {\n            $path = [];\n            $sum = 0;\n            dfs($grid,\
    \ $i, $j, $k, $visited, $path, $sum);\n            if ($sum < $minSum) {\n   \
    \             $minSum = $sum;\n                $minPath = $path;\n           \
    \ }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n   \
    \ $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] = array_fill(0,\
    \ $n, false);\n    }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          dfs($grid, $visited, $i, $j, $k - 1, $path, $sum, $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPaths = [];\n    $minPathsSum = [];\n    $minPaths[0]\
    \ = [];\n    $minPathsSum[0] = 0;\n    $minPaths[1] = [];\n    $minPathsSum[1]\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++)\
    \ {\n            $visited[$i][$j] = true;\n            $path = [];\n         \
    \   $path[] = $grid[$i][$j];\n            $sum = $grid[$i][$j];\n            $paths\
    \ = [];\n            $pathsSum = [];\n            $paths[0] = [];\n          \
    \  $pathsSum[0] = 0;\n            $paths[1] = [];\n            $pathsSum[1] =\
    \ 0;\n            $paths[0][] = $grid[$i][$j];\n            $pathsSum[0] += $grid[$i][$j];\n\
    \            $paths[1][] = $grid[$i][$j];\n            $pathsSum[1] += $grid[$i][$j];\n\
    \            $paths[0][] = $grid[$i][$j];\n            $pathsSum[0] += $grid[$i][$j];\n\
    \            $paths[1][] = $grid[$i][$j];\n            $pathsSum[1] += $grid[$i][$j];\n\
    \            $paths[0][] = $grid[$i][$j];\n            $pathsSum[0] += $grid[$i][$j];\n\
    \            $paths[1][] = $grid[$i][$j];\n            $pathsSum[1] += $grid[$i][$j];\n\
    \            $paths[0", "    $n = count($grid);\n    $visited = [];\n    $minPath\
    \ = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n   \
    \     }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n;\
    \ $j++) {\n            $path = [];\n            $sum = 0;\n            dfs($grid,\
    \ $i, $j, $k, $visited, $path, $sum);\n            if ($sum < $minSum) {\n   \
    \             $minSum = $sum;\n                $minPath = $path;\n           \
    \ }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n   \
    \ $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid, $k, 0, 0, $visited,\
    \ $minPath, $minPathSum);\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $k, $visited, $path, $sum);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            $path = [];\n            $pathSum = 0;\n          \
    \  $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n          \
    \  $pathSum += $grid[$i][$j];\n            if ($pathSum < $minPathSum) {\n   \
    \             $minPath = $path;\n                $minPathSum = $pathSum;\n   \
    \         }\n            dfs($grid, $i, $j, $k, $visited, $path, $pathSum, $minPath,\
    \ $minPathSum);\n            $visited[$i][$j] = false;\n        }\n    }\n   \
    \ return $minPath;\n}\n", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $", "    $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        $visited[$i] = array_fill(0, $n, false);\n    }\n    $minPath\
    \ = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = 0; $j < $n; $j++) {\n            $path = [];\n            $sum =\
    \ 0;\n            dfs($grid, $visited, $i, $j, $k, $path, $sum);\n           \
    \ if ($sum < $minSum) {\n                $minSum = $sum;\n                $minPath\
    \ = $path;\n            }\n        }\n    }\n    return $minPath;\n}", "    $n\
    \ = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, 0));\n \
    \   $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid,\
    \ $visited, $minPath, $minPathSum, 0, 0, $k, 0);\n    return $minPath;\n}\n",
  "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            dfs($grid, $i, $j,\
    \ $k, $visited, $path, $sum, $minPath, $minSum);\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++)\
    \ {\n            $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPaths = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            $pathSum = 0;\n   \
    \         $paths = [];\n            dfs($grid, $i, $j, $visited, $path, $sum,\
    \ $pathSum, $paths, $k);\n            if ($pathSum < $minPathSum) {\n        \
    \        $minPathSum = $pathSum;\n                $minPaths = $paths;\n      \
    \      }\n        }\n    }\n    foreach ($minPaths as $path) {\n        if ($path[0]\
    \ < $minSum) {\n            $minSum = $path[0];\n            $minPath = $path[1];\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $min", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            dfs($grid, $i, $j,\
    \ $k, $visited, $path, $sum, $minPath, $minSum);\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $visited = [];\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        $visited[$i] = array_fill(0, $n, false);\n    }\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $sum = 0;\n            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $sum += $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1, $visited,\
    \ $path, $sum, $minPath, $minSum);\n            $visited[$i][$j] = false;\n  \
    \      }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $minPath\
    \ = [];\n    $minPathValues = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSumValues\
    \ = [];\n    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n  \
    \  }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n\
    \            $path = [];\n            $pathValues = [];\n            $pathSum\
    \ = 0;\n            $pathSumValues = [];\n            $visited[$i][$j] = true;\n\
    \            $path[] = [$i, $j];\n            $pathValues[] = $grid[$i][$j];\n\
    \            $pathSum += $grid[$i][$j];\n            $pathSumValues[] = $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $n, $k, $visited, $path, $pathValues, $pathSum,\
    \ $pathSumValues, $minPath, $minPathValues, $minPathSum, $minPathSumValues);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPathValues;\n\
    }", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $path = [];\n  \
    \          $sum = 0;\n            $pathSum = 0;\n            $path[] = $grid[$i][$j];\n\
    \            $sum += $grid[$i][$j];\n            $pathSum += $grid[$i][$j] * $grid[$i][$j];\n\
    \            $visited[$i][$j] = true;\n            dfs($grid, $i, $j, $visited,\
    \ $path, $sum, $pathSum, $minPath, $minSum, $minPathSum, $k);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}\n", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = INF;\n    $minPathSum = INF;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n            dfs($grid,\
    \ $visited, $i, $j, $path, $pathSum, $minPath, $minPathSum, $k);\n           \
    \ $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}", "   \
    \ $n = count($grid);\n    $m = count($grid[0]);\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n    \
    \    for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n  \
    \      }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            $path = [];\n            $pathSum = 0;\n          \
    \  $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n          \
    \  $pathSum += $grid[$i][$j];\n            if (dfs($grid, $i, $j, $k - 1, $path,\
    \ $pathSum, $visited, $minPath, $minPathSum)) {\n                return $minPath;\n\
    \            }\n            $visited[$i][$j] = false;\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n    $dp =\
    \ array_fill(0, $n, array_fill(0, $m, array_fill(0, $k, PHP_INT_MAX)));\n    $dp[0][0][0]\
    \ = $grid[0][0];\n    $dirs = [[0, 1], [0, -1], [1, 0], [-1, 0]];\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            for\
    \ ($l = 0; $l < $k; $l++) {\n                for ($d = 0; $d < 4; $d++) {\n  \
    \                  $x = $i + $dirs[$d][0];\n                    $y = $j + $dirs[$d][1];\n\
    \                    if ($x < 0 || $x >= $n || $y < 0 || $y >= $m) {\n       \
    \                 continue;\n                    }\n                    $dp[$x][$y][$l\
    \ + 1] = min($dp[$x][$y][$l + 1], $dp[$i][$j][$l] * $grid[$x][$y]);\n        \
    \        }\n            }\n        }\n    }\n    $res = PHP_INT_MAX;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n         \
    \   $res = min($res, $dp[$i][$j][$k - 1]);\n        }\n    }\n    $res = str_split($res);\n\
    \    return $res;\n}\n\n$grid = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$k = 2;\n\
    print_r(minPath($grid, $k));", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $m; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n   \
    \ $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            $pathSum = 0;\n   \
    \         $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n   \
    \         $sum += $grid[$i][$j];\n            $pathSum += $grid[$i][$j] * $grid[$i][$j];\n\
    \            if ($dfs($grid, $visited, $i, $j, $path, $sum, $pathSum, $k, $minPath,\
    \ $minSum, $minPathSum)) {\n                return $minPath;\n            }\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }\n", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $path = [];\n            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $visited, $path, $minPath, $minSum, $k);\n   \
    \         $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}",
  "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $sum = 0;\n            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $sum += $grid[$i][$j];\n            $visited = dfs($grid, $visited,\
    \ $i, $j, $path, $sum, $k, $minPath, $minSum);\n            $visited[$i][$j] =\
    \ false;\n        }\n    }\n    return $minPath;\n}\n", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          dfs($grid, $i, $j, $k - 1, $visited, $path, $sum, $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = true;\n            $path = [$grid[$i][$j]];\n            $sum = $grid[$i][$j];\n\
    \            dfs($grid, $visited, $i, $j, $path, $sum, $k, $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPaths = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            $visited[$i][$j] =\
    \ true;\n            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $k - 1, $visited, $path, $sum, $minPath, $minSum,\
    \ $minPaths);\n            $visited[$i][$j] = false;\n        }\n    }\n    return\
    \ $minPaths;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++)\
    \ {\n            $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $visited, $i, $j, $k, $path, $sum);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++)\
    \ {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1,\
    \ $path, $pathSum, $minPath, $minPathSum, $visited);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $path\
    \ = [];\n            $sum = 0;\n            dfs($grid, $n, $m, $i, $j, $k, $visited,\
    \ $path, $sum);\n            if ($sum < $minSum) {\n                $minSum =\
    \ $sum;\n                $minPath = $path;\n            }\n        }\n    }\n\
    \    return $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $visited[$i][$j] = true;\n            $path\
    \ = [$grid[$i][$j]];\n            $sum = $grid[$i][$j];\n            dfs($grid,\
    \ $i, $j, $k - 1, $visited, $path, $sum, $minPath, $minSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n            $path\
    \ = [$grid[$i][$j]];\n            $sum = $grid[$i][$j];\n            dfs($grid,\
    \ $visited, $i, $j, $path, $sum, $minPath, $minSum, $k);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $k, $visited, $path, $sum);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n   ", "    $n = count($grid);\n    $visited =\
    \ [];\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPaths = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n         \
    \   $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n         \
    \   $sum += $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1, $visited, $path,\
    \ $sum, $minPath, $minSum, $minPaths);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPaths;\n}", "    $n = count($grid);\n    $m\
    \ = count($grid[0]);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n\
    \        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $path\
    \ = [];\n            $sum = 0;\n            dfs($grid, $visited, $i, $j, $k, $path,\
    \ $sum);\n            if ($sum < $minSum) {\n                $minSum = $sum;\n\
    \                $minPath = $path;\n            }\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            $path = [];\n            $sum = 0;\n            $visited[$i][$j]\
    \ = true;\n            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $visited, $path, $sum, $k, $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = dfs($grid, $n, 0, 0, $k, $visited, $minPath, $minPathSum);\n    return $minPath;\n\
    }\n", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $min = PHP_INT_MAX;\n    $minPath = [];\n\
    \    $minPaths = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[]\
    \ = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n\
    \    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[]\
    \ = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n\
    \    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[]\
    \ = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n\
    \    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[]\
    \ = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n\
    \    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[]\
    \ = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n\
    \    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[]\
    \ = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n\
    \    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[]\
    \ = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n    $minPaths[] = [];\n\
    \    $minPaths[] =", "    $n = count($grid);\n    $visited = [];\n    $minPath\
    \ = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n   \
    \     }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n;\
    \ $j++) {\n            $path = [];\n            $sum = 0;\n            dfs($grid,\
    \ $i, $j, $k, $visited, $path, $sum);\n            if ($sum < $minSum) {\n   \
    \             $minSum = $sum;\n                $minPath = $path;\n           \
    \ }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n   \
    \ $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] = array_fill(0,\
    \ $n, false);\n    }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          dfs($grid, $visited, $i, $j, $k - 1, $path, $sum, $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $dp = [];\n    for ($i = 0; $i < $n; $i++) {\n\
    \        for ($j = 0; $j < $n; $j++) {\n            $dp[$i][$j] = [];\n      \
    \  }\n    }\n    $dp[0][0][0] = $grid[0][0];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            for ($l = 0; $l < $k;\
    \ $l++) {\n                if ($i - 1 >= 0 && $j - 1 >= 0) {\n               \
    \     if (isset($dp[$i - 1][$j][$l]) && isset($dp[$i][$j - 1][$l])) {\n      \
    \                  $dp[$i][$j][$l + 1] = min($dp[$i - 1][$j][$l] . $grid[$i][$j],\
    \ $dp[$i][$j - 1][$l] . $grid[$i][$j]);\n                    } elseif (isset($dp[$i\
    \ - 1][$j][$l])) {\n                        $dp[$i][$j][$l + 1] = $dp[$i - 1][$j][$l]\
    \ . $grid[$i][$j];\n                    } elseif (isset($dp[$i][$j - 1][$l]))\
    \ {\n                        $dp[$i][$j][$l + 1] = $dp[$i][$j - 1][$l] . $grid[$i][$j];\n\
    \                    }\n                } elseif ($i - 1 >= 0) {\n           \
    \         if (isset($dp[$i - 1][$j][$l])) {\n                        $dp[$i][$j][$l\
    \ + 1] = $dp[$i - 1][$j][$l] . $grid[$i][$j];\n                    }\n       \
    \         } elseif ($j - 1 >= 0) {\n                    if (isset($dp[$i][$j -\
    \ 1][$l]))", "    $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        $visited[$i] = array_fill(0, $n, false);\n    }\n   \
    \ $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPaths = [];\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path\
    \ = [];\n            $sum = 0;\n            $visited[$i][$j] = true;\n       \
    \     $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n         \
    \   dfs($grid, $i, $j, $k - 1, $visited, $path, $sum, $minPath, $minSum, $minPaths);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPaths;\n\
    }", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $path = [];\n    $pathSum = 0;\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = true;\n    \
    \        $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n  \
    \          dfs($grid, $n, $m, $i, $j, $k, $visited, $path, $pathSum, $minPath,\
    \ $minPathSum);\n            $visited[$i][$j] = false;\n            array_pop($path);\n\
    \            $pathSum -= $grid[$i][$j];\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $visited = [];\n            $path = [];\n            $sum = 0;\n  \
    \          $pathSum = 0;\n            dfs($grid, $i, $j, $visited, $path, $sum,\
    \ $pathSum, $k, $minPath, $minSum, $minPathSum);\n        }\n    }\n    return\
    \ $minPath;\n}\n", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPaths = [];\n    $minPathsSum = [];\n    $minPaths[0]\
    \ = [];\n    $minPathsSum[0] = 0;\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ for ($j = 0; $j < $n; $j++) {\n            if ($grid[$i][$j] < $minSum) {\n\
    \                $minSum = $grid[$i][$j];\n                $minPath[0] = [$i,\
    \ $j];\n                $minPathSum = $minSum;\n            }\n        }\n   \
    \ }\n    $visited[$minPath[0][0]][$minPath[0][1]] = true;\n    $minPaths[0][0]\
    \ = $minPath;\n    $minPathsSum[0][0] = $minPathSum;\n    for ($i = 1; $i < $k;\
    \ $i++) {\n        $minPaths[$i] = [];\n        $minPathsSum[$i] = [];\n     \
    \   $minPathSum = PHP_INT_MAX;\n        $minPath = [];\n        $minPaths[$i -\
    \ 1][0][$i] = [$minPaths[$i - 1][0][$i - 1][0], $minPaths[$i - 1][0][$i - 1][1]];\n\
    \        for ($j = 0; $j < count($minPaths[$i - 1]); $j++) {\n            $path\
    \ = $minPaths[$i - 1][$j];\n            $pathSum = $minPathsSum[$i - 1][$j];\n\
    \            $x = $path[$i - 1][0];\n            $y = $path[$i - 1][1];\n    \
    \        if ($x > 0 && !$visited[$x - 1][$y]) {\n               ", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $path = [];\n\
    \            $sum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n            dfs($grid,\
    \ $i, $j, $visited, $path, $sum, $k, $minPath, $minSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid, $visited, 0, 0,\
    \ 0, $minPath, $minPathSum, $k);\n    return $minPath;\n}\n", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPathValue = PHP_INT_MAX;\n    $minPathVisited = [];\n\
    \    $minPathVisitedSum = PHP_INT_MAX;\n    $minPathVisitedValue = PHP_INT_MAX;\n\
    \    $minPathVisited[0] = $grid[0][0];\n    $minPathVisitedSum = $grid[0][0];\n\
    \    $minPathVisitedValue = $grid[0][0];\n    $minPath[0] = $grid[0][0];\n   \
    \ $minSum = $grid[0][0];\n    $minPathValue = $grid[0][0];\n    $visited[0][0]\
    \ = true;\n    $queue = [[0, 0, 0]];\n    while (!empty($queue)) {\n        $node\
    \ = array_shift($queue);\n        $i = $node[0];\n        $j = $node[1];\n   \
    \     $depth = $node[2];\n        if ($depth == $k - 1) {\n            if ($minPathVisitedSum\
    \ > $minPathSum) {\n                $minPathVisitedSum = $minPathSum;\n      \
    \          $minPathVisitedValue = $minPathValue;\n                $minPathVisited\
    \ = $minPath;\n            } else if ($minPathVisitedSum == $minPathSum) {\n \
    \               if ($minPathVisitedValue > $minPathValue) {\n                \
    \    $minPathVisitedValue = $minPathValue;\n                    $minPathVisited\
    \ = $minPath;\n                }\n            }\n            continue;\n     \
    \   }\n        if ($i > 0 && !$visited[$i - 1][$j]) {\n            $visited[$i\
    \ - 1][$j] = true;\n            $queue[] = [$i - 1, $j, $depth + 1];\n       \
    \     $minPath[$depth + 1] = $", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $m; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n   \
    \ $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $path = [];\n        \
    \    $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n            if (dfs($grid,\
    \ $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum)) {\n     \
    \           return $minPath;\n            }\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPath;\n}", "    $m = count($grid);\n    $n =\
    \ count($grid[0]);\n    $visited = array_fill(0, $m, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $m; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $sum = 0;\n            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $sum += $grid[$i][$j];\n            dfs($grid, $i, $j, $visited,\
    \ $path, $sum, $k, $minPath, $minSum);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $visited = [];\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n            $path\
    \ = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n            dfs($grid,\
    \ $i, $j, $k, $visited, $path, $pathSum, $minPath, $minPathSum);\n           \
    \ $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}", "   \
    \ $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathValues = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSumValues = [];\n    $minPathSumValues[0] = PHP_INT_MAX;\n    $minPathSumValues[1]\
    \ = PHP_INT_MAX;\n    $minPathSumValues[2] = PHP_INT_MAX;\n    $minPathSumValues[3]\
    \ = PHP_INT_MAX;\n    $minPathSumValues[4] = PHP_INT_MAX;\n    $minPathSumValues[5]\
    \ = PHP_INT_MAX;\n    $minPathSumValues[6] = PHP_INT_MAX;\n    $minPathSumValues[7]\
    \ = PHP_INT_MAX;\n    $minPathSumValues[8] = PHP_INT_MAX;\n    $minPathSumValues[9]\
    \ = PHP_INT_MAX;\n    $minPathSumValues[10] = PHP_INT_MAX;\n    $minPathSumValues[11]\
    \ = PHP_INT_MAX;\n    $minPathSumValues[12] = PHP_INT_MAX;\n    $minPathSumValues[13]\
    \ = PHP_INT_MAX;\n    $minPathSumValues[14] = PHP_INT_MAX;\n    $minPathSumValues[15]\
    \ = PHP_INT_MAX;\n    $minPathSumValues[16] = PHP_INT_MAX;\n    $minPathSumValues[17]\
    \ = PHP_INT_MAX;\n    $minPathSumValues[18] = PHP_INT_MAX;\n    $minPathSumValues[19]\
    \ = PHP_INT_MAX;\n    $minPathSumValues[20] = PHP_INT_MAX;\n    $minPathSumValues[21]\
    \ = PHP_INT_MAX;\n    $minPathSumValues[22] = PHP_INT_MAX;\n    $minPathSumValues[23]\
    \ = PHP_INT_MAX;\n    $minPathSumValues[24] = PHP_INT_MAX;\n    $minPathSumValues[25]\
    \ = PHP_INT_", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n   ", "    $n\
    \ = count($grid);\n    $dp = [];\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = 0; $j < $n; $j++) {\n            $dp[$i][$j] = [];\n        }\n    }\n\
    \    $dp[0][0][$grid[0][0]] = true;\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = 0; $j < $n; $j++) {\n            if ($i > 0) {\n               \
    \ $dp[$i][$j] = array_merge($dp[$i][$j], $dp[$i - 1][$j]);\n            }\n  \
    \          if ($j > 0) {\n                $dp[$i][$j] = array_merge($dp[$i][$j],\
    \ $dp[$i][$j - 1]);\n            }\n            $dp[$i][$j][$grid[$i][$j]] = true;\n\
    \        }\n    }\n    $res = [];\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ for ($j = 0; $j < $n; $j++) {\n            if (count($dp[$i][$j]) == $k) {\n\
    \                $res[] = [$i, $j];\n            }\n        }\n    }\n    usort($res,\
    \ function ($a, $b) use ($grid) {\n        $i = $a[0];\n        $j = $a[1];\n\
    \        $x = $b[0];\n        $y = $b[1];\n        for ($k = 0; $k < $k; $k++)\
    \ {\n            if ($grid[$i][$j] < $grid[$x][$y]) {\n                return\
    \ -1;\n            } else if ($grid[$i][$j] > $grid[$x][$y]) {\n             \
    \   return 1;\n            }\n            $i++;\n            $j++;\n         \
    \   $x++;\n            $y++;\n        }\n        return 0;\n    });\n    $res\
    \ = $res[0", "    $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        $visited[$i] = array_fill(0, $n, false);\n    }\n   \
    \ $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $sum = 0;\n            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $sum += $grid[$i][$j];\n            dfs($grid, $i, $j, $visited,\
    \ $path, $sum, $k, $minPath, $minSum);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $m =\
    \ count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m, false));\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $path = [];\n        \
    \    $sum = 0;\n            $visited[$i][$j] = true;\n            dfs($grid, $i,\
    \ $j, $k, $path, $sum, $visited, $minPath, $minSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid, $visited, 0, 0,\
    \ $k, $minPath, $minPathSum);\n    return $minPath;\n}\n", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathValue = PHP_INT_MAX;\n    $minPathIndex = 0;\n    $minPaths = [];\n\
    \    $minPaths[$minPathIndex] = [];\n    $minPaths[$minPathIndex][] = $grid[0][0];\n\
    \    $visited[0][0] = true;\n    $queue = new SplQueue();\n    $queue->enqueue([0,\
    \ 0]);\n    while (!$queue->isEmpty()) {\n        $size = $queue->count();\n \
    \       for ($i = 0; $i < $size; $i++) {\n            $node = $queue->dequeue();\n\
    \            $row = $node[0];\n            $col = $node[1];\n            $minPath\
    \ = $minPaths[$minPathIndex];\n            if (count($minPath) === $k) {\n   \
    \             $minPathValue = array_sum($minPath);\n                $minPathIndex++;\n\
    \                $minPaths[$minPathIndex] = [];\n                $minPaths[$minPathIndex][]\
    \ = $grid[$row][$col];\n            } else {\n                $minPaths[$minPathIndex][]\
    \ = $grid[$row][$col];\n            }\n            if ($row > 0 && !$visited[$row\
    \ - 1][$col]) {\n                $queue->enqueue([$row - 1, $col]);\n        \
    \        $visited[$row - 1][$col] = true;\n            }\n            if ($row\
    \ < $n - 1 && !$visited[$row + 1][$col]) {\n                $queue->enqueue([$row\
    \ + 1, $col]);\n                $visited[$row + 1][$col] = true;\n           \
    \ }\n            if ($col > 0 && !$visited[$row][$col - 1]) {\n              \
    \  $queue->enqueue([$row, $col - 1]);\n                $visited[$row][$col - 1]\
    \ = true;\n            }\n            if ($col", "    $n = count($grid);\n   \
    \ $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            $pathSum = 0;\n          \
    \  $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n          \
    \  $sum += $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n          \
    \  dfs($grid, $i, $j, $k - 1, $visited, $path, $sum, $pathSum, $minPath, $minSum,\
    \ $minPathSum);\n            $visited[$i][$j] = false;\n        }\n    }\n   \
    \ return $minPath;\n}", "    $m = count($grid);\n    $n = count($grid[0]);\n \
    \   $min = [];\n    $visited = [];\n    for ($i = 0; $i < $m; $i++) {\n      \
    \  for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n    \
    \    }\n    }\n    for ($i = 0; $i < $m; $i++) {\n        for ($j = 0; $j < $n;\
    \ $j++) {\n            $path = [];\n            $visited[$i][$j] = true;\n   \
    \         $path[] = $grid[$i][$j];\n            $result = dfs($grid, $i, $j, $k\
    \ - 1, $visited, $path);\n            if (empty($min)) {\n                $min\
    \ = $result;\n            } else {\n                if (compare($result, $min)\
    \ < 0) {\n                    $min = $result;\n                }\n           \
    \ }\n            $visited[$i][$j] = false;\n        }\n    }\n    return $min;\n\
    }", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = [];\n \
    \   $queue = new SplQueue();\n    $queue->enqueue([0, 0, $grid[0][0]]);\n    $visited[0][0]\
    \ = true;\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    while (!$queue->isEmpty())\
    \ {\n        list($i, $j, $sum) = $queue->dequeue();\n        if ($i == $n - 1\
    \ && $j == $m - 1) {\n            if ($sum < $minSum) {\n                $minSum\
    \ = $sum;\n                $minPath = [$grid[$i][$j]];\n            }\n      \
    \      continue;\n        }\n        if ($sum > $minSum) {\n            continue;\n\
    \        }\n        if ($i > 0 && !$visited[$i - 1][$j]) {\n            $queue->enqueue([$i\
    \ - 1, $j, $sum + $grid[$i - 1][$j]]);\n            $visited[$i - 1][$j] = true;\n\
    \        }\n        if ($i < $n - 1 && !$visited[$i + 1][$j]) {\n            $queue->enqueue([$i\
    \ + 1, $j, $sum + $grid[$i + 1][$j]]);\n            $visited[$i + 1][$j] = true;\n\
    \        }\n        if ($j > 0 && !$visited[$i][$j - 1]) {\n            $queue->enqueue([$i,\
    \ $j - 1, $sum + $grid[$i][$j - 1]]);\n            $visited[$i][$j - 1] = true;\n\
    \        }\n        if ($j < $m - 1 && !$visited[$i][$j + 1]) {\n            $queue->enqueue([$i,\
    \ $j + 1, $sum + $grid[$i][$j + 1]]);\n            $visited[$i][$j + 1] = true;\n\
    \        }\n    }\n    return $minPath;\n", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $path = [];\n            $sum = 0;\n            $visited[$i][$j]\
    \ = true;\n            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n\
    \            $visited = dfs($grid, $visited, $i, $j, $path, $sum, $k, $minPath,\
    \ $minSum);\n            $visited[$i][$j] = false;\n        }\n    }\n    return\
    \ $minPath;\n}\n", "    $n = count($grid);\n    $visited = [];\n    $minPath =\
    \ [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n     \
    \   }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n;\
    \ $j++) {\n            $path = [];\n            $sum = 0;\n            dfs($grid,\
    \ $i, $j, $k, $n, $visited, $path, $sum);\n            if ($sum < $minSum) {\n\
    \                $minSum = $sum;\n                $minPath = $path;\n        \
    \    }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathValue = [];\n    $minPathValue[0] = PHP_INT_MAX;\n    $minPathValue[1]\
    \ = PHP_INT_MAX;\n    $minPathValue[2] = PHP_INT_MAX;\n    $minPathValue[3] =\
    \ PHP_INT_MAX;\n    $minPathValue[4] = PHP_INT_MAX;\n    $minPathValue[5] = PHP_INT_MAX;\n\
    \    $minPathValue[6] = PHP_INT_MAX;\n    $minPathValue[7] = PHP_INT_MAX;\n  \
    \  $minPathValue[8] = PHP_INT_MAX;\n    $minPathValue[9] = PHP_INT_MAX;\n    $minPathValue[10]\
    \ = PHP_INT_MAX;\n    $minPathValue[11] = PHP_INT_MAX;\n    $minPathValue[12]\
    \ = PHP_INT_MAX;\n    $minPathValue[13] = PHP_INT_MAX;\n    $minPathValue[14]\
    \ = PHP_INT_MAX;\n    $minPathValue[15] = PHP_INT_MAX;\n    $minPathValue[16]\
    \ = PHP_INT_MAX;\n    $minPathValue[17] = PHP_INT_MAX;\n    $minPathValue[18]\
    \ = PHP_INT_MAX;\n    $minPathValue[19] = PHP_INT_MAX;\n    $minPathValue[20]\
    \ = PHP_INT_MAX;\n    $minPathValue[21] = PHP_INT_MAX;\n    $minPathValue[22]\
    \ = PHP_INT_MAX;\n    $minPathValue[23] = PHP_INT_MAX;\n    $minPathValue[24]\
    \ = PHP_INT_MAX;\n    $minPathValue[25] = PHP_INT_MAX;\n    $minPathValue[26]\
    \ = PHP_INT_MAX;\n    $minPathValue[27] = PHP_INT_MAX;\n    $minPathValue[28]\
    \ = PHP_INT_", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = true;\n            $path = [$grid[$i][$j]];\n            $sum = $grid[$i][$j];\n\
    \            dfs($grid, $visited, $i, $j, $k, $path, $sum, $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n\
    \            $sum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n            dfs($grid,\
    \ $visited, $i, $j, $path, $sum, $k, $minPath, $minSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPaths = [];\n\
    \    $minPathsSum = [];\n    $minPaths[0] = [];\n    $minPathsSum[0] = 0;\n  \
    \  $minPaths[1] = [];\n    $minPathsSum[1] = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n\
    \            $path = [];\n            $pathSum = 0;\n            $path[] = $grid[$i][$j];\n\
    \            $pathSum += $grid[$i][$j];\n            $minPaths[1][] = $path;\n\
    \            $minPathsSum[1][] = $pathSum;\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    for ($i = 2; $i <= $k; $i++) {\n        $minPaths[$i] =\
    \ [];\n        $minPathsSum[$i] = [];\n        for ($j = 0; $j < count($minPaths[$i\
    \ - 1]); $j++) {\n            $path = $minPaths[$i - 1][$j];\n            $pathSum\
    \ = $minPathsSum[$i - 1][$j];\n            $last = $path[count($path) - 1];\n\
    \            $lastI = ($last - 1) / $n;\n            $lastJ = ($last - 1) % $n;\n\
    \            if ($lastI > 0 && !$visited[$lastI - 1][$lastJ]) {\n            \
    \    $path[] = $grid[$lastI - 1][$lastJ];\n                $pathSum += $grid[$lastI\
    \ - 1][$lastJ];\n                $minPaths[$i][] = $path;\n                $min",
  "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathValue = PHP_INT_MAX;\n    $minPathValueIndex\
    \ = 0;\n    $minPathValueIndexes = [];\n    $minPathValueIndexes[0] = [];\n  \
    \  $minPathValueIndexes[1] = [];\n    $minPathValueIndexes[2] = [];\n    $minPathValueIndexes[3]\
    \ = [];\n    $minPathValueIndexes[4] = [];\n    $minPathValueIndexes[5] = [];\n\
    \    $minPathValueIndexes[6] = [];\n    $minPathValueIndexes[7] = [];\n    $minPathValueIndexes[8]\
    \ = [];\n    $minPathValueIndexes[9] = [];\n    $minPathValueIndexes[10] = [];\n\
    \    $minPathValueIndexes[11] = [];\n    $minPathValueIndexes[12] = [];\n    $minPathValueIndexes[13]\
    \ = [];\n    $minPathValueIndexes[14] = [];\n    $minPathValueIndexes[15] = [];\n\
    \    $minPathValueIndexes[16] = [];\n    $minPathValueIndexes[17] = [];\n    $minPathValueIndexes[18]\
    \ = [];\n    $minPathValueIndexes[19] = [];\n    $minPathValueIndexes[20] = [];\n\
    \    $minPathValueIndexes[21] = [];\n    $minPathValueIndexes[22] = [];\n    $minPathValueIndexes[23]\
    \ = [];\n    $minPathValueIndexes[24] = [];\n    $minPathValueIndexes[25] = [];\n\
    \    $minPathValueIndexes[26] = [];\n    $minPathValueIndexes[27] = [];\n    $minPathValueIndexes[28]\
    \ = [];\n    $minPathValueIndexes[29] = [];\n    $minPathValueIndexes[30] = [];\n\
    \    $minPathValueIndexes[31] = [];\n    $minPathValueIndexes[32] = [];\n    $minPathValueIndexes",
  "    $n = count($grid);\n    $m = count($grid[0]);\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPaths = [];\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     for ($j = 0; $j < $m; $j++) {\n            $path = [];\n            $sum\
    \ = 0;\n            $paths = [];\n            dfs($grid, $i, $j, $k, $path, $sum,\
    \ $paths);\n            if ($sum < $minSum) {\n                $minSum = $sum;\n\
    \                $minPath = $path;\n                $minPaths = $paths;\n    \
    \        }\n        }\n    }\n    return $minPaths;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = 0; $j < $n; $j++) {\n            $path = [];\n            $pathSum = 0;\n\
    \            dfs($grid, $i, $j, $k, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = dfs($grid, $visited, 0, 0, $k, 0, $minPath,\
    \ $minPathSum);\n    return $minPath;\n}\n", "    $n = count($grid);\n    $m =\
    \ count($grid[0]);\n    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPaths = [];\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n            $pathSum +=\
    \ $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1, $visited, $path, $sum,\
    \ $pathSum, $minPath, $minSum, $minPathSum, $minPaths);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPaths;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = 0; $j < $n; $j++) {\n            $path = [];\n            $pathSum = 0;\n\
    \            dfs($grid, $i, $j, $k, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = findMinPath($grid, $n, 0, 0, $k, $visited,\
    \ $minPath, $minPathSum);\n    return $minPath;\n}\n", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n    \
    \        $sum += $grid[$i][$j];\n            dfs($grid, $n, $i, $j, $k - 1, $visited,\
    \ $path, $sum, $minPath, $minSum);\n            $visited[$i][$j] = false;\n  \
    \      }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $min", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $path = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathLength = PHP_INT_MAX;\n\
    \    $minPathIndex = PHP_INT_MAX;\n    $minPathIndexes = [];\n    $minPathIndexes[0]\
    \ = 0;\n    $minPathIndexes[1] = 0;\n    $minPathIndexes[2] = 0;\n    $minPathIndexes[3]\
    \ = 0;\n    $minPathIndexes[4] = 0;\n    $minPathIndexes[5] = 0;\n    $minPathIndexes[6]\
    \ = 0;\n    $minPathIndexes[7] = 0;\n    $minPathIndexes[8] = 0;\n    $minPathIndexes[9]\
    \ = 0;\n    $minPathIndexes[10] = 0;\n    $minPathIndexes[11] = 0;\n    $minPathIndexes[12]\
    \ = 0;\n    $minPathIndexes[13] = 0;\n    $minPathIndexes[14] = 0;\n    $minPathIndexes[15]\
    \ = 0;\n    $minPathIndexes[16] = 0;\n    $minPathIndexes[17] = 0;\n    $minPathIndexes[18]\
    \ = 0;\n    $minPathIndexes[19] = 0;\n    $minPathIndexes[20] = 0;\n    $minPathIndexes[21]\
    \ = 0;\n    $minPathIndexes[22] = 0;\n    $minPathIndexes[23] = 0;\n    $minPathIndexes[24]\
    \ = 0;\n    $minPathIndexes[25] = 0;\n    $minPathIndexes[26] = 0;\n    $minPathIndexes[27]\
    \ = 0;\n    $minPathIndexes[28] = 0;\n    $minPathIndexes[29] = 0;\n    $minPathIndexes[30]\
    \ = 0;\n", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = dfs($grid, $visited, 0, 0, $k, $minPath, $minPathSum);\n    return $minPath;\n\
    }\n", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = [];\n\
    \    $min = [];\n    $min_path = [];\n    for ($i = 0; $i < $n; $i++) {\n    \
    \    for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n  \
    \      }\n    }\n    $min[0] = $grid[0][0];\n    $min_path[0] = [$grid[0][0]];\n\
    \    $visited[0][0] = true;\n    $q = [[0, 0, 1]];\n    while (!empty($q)) {\n\
    \        $cur = array_shift($q);\n        $i = $cur[0];\n        $j = $cur[1];\n\
    \        $l = $cur[2];\n        if ($l == $k) {\n            break;\n        }\n\
    \        if ($i > 0 && !$visited[$i - 1][$j]) {\n            $visited[$i - 1][$j]\
    \ = true;\n            $min[$l] = $grid[$i - 1][$j];\n            $min_path[$l]\
    \ = [$grid[$i - 1][$j]];\n            $q[] = [$i - 1, $j, $l + 1];\n        }\n\
    \        if ($i < $n - 1 && !$visited[$i + 1][$j]) {\n            $visited[$i\
    \ + 1][$j] = true;\n            if ($grid[$i + 1][$j] < $min[$l]) {\n        \
    \        $min[$l] = $grid[$i + 1][$j];\n                $min_path[$l] = [$grid[$i\
    \ + 1][$j]];\n            } else if ($grid[$i + 1][$j] == $min[$l]) {\n      \
    \          $min_path[$l][] = $grid[$i + 1][$j];\n            }\n            $q[]\
    \ = [$i + 1, $j, $l + 1];\n        }", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $k, $visited, $path, $sum, $minPath, $minSum);\n \
    \       }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $visited = [];\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $pathSum = 0;\n\
    \            dfs($grid, $n, $i, $j, $k, $path, $pathSum, $visited, $minPath, $minPathSum);\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = dfs($grid, $k, 0, 0, $visited, $minPath, $minPathSum);\n\
    \    return $minPath;\n}\n", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \   ", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0; $i < $n; $i++) {\n    \
    \    for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n   \
    \         $path = [$grid[$i][$j]];\n            $sum = $grid[$i][$j];\n      \
    \      $pathSum = $grid[$i][$j];\n            dfs($grid, $visited, $i, $j, $k,\
    \ $path, $sum, $pathSum, $minPath, $minSum, $minPathSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}\n", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPaths = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n\
    \            $path = [$grid[$i][$j]];\n            $sum = $grid[$i][$j];\n   \
    \         dfs($grid, $visited, $i, $j, $path, $sum, $minPath, $minSum, $minPaths,\
    \ $k);\n            $visited[$i][$j] = false;\n        }\n    }\n    return $minPaths;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n\
    \            $sum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n            if (dfs($grid,\
    \ $i, $j, $k - 1, $visited, $path, $sum)) {\n                if ($sum < $minSum)\
    \ {\n                    $minSum = $sum;\n                    $minPath = $path;\n\
    \                }\n            }\n            $visited[$i][$j] = false;\n   \
    \     }\n    }\n    return $minPath;\n}\n", "    $n = count($grid);\n    $m =\
    \ count($grid[0]);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n  \
    \      for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $path\
    \ = [];\n            $sum = 0;\n            $visited[$i][$j] = true;\n       \
    \     $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n         \
    \   dfs($grid, $i, $j, $visited, $path, $sum, $minPath, $minSum, $k);\n      \
    \      $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}",
  "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $visited[$i][$j] = false;\n        }\n    }\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n\
    \            $sum = 0;\n            dfs($grid, $i, $j, $k, $visited, $path, $sum);\n\
    \            if ($sum < $minSum) {\n                $minSum = $sum;\n        \
    \        $minPath = $path;\n            }\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPaths = [];\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n    \
    \        $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n   \
    \         $paths = [];\n            dfs($grid, $visited, $i, $j, $path, $pathSum,\
    \ $paths, $k);\n            $visited[$i][$j] = false;\n            if ($pathSum\
    \ < $minPathSum) {\n                $minPathSum = $pathSum;\n                $minPaths\
    \ = $paths;\n            }\n        }\n    }\n    foreach ($minPaths as $path)\
    \ {\n        if (count($path) === $k) {\n            $minPath = $path;\n     \
    \       break;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPaths = [];\n\
    \    dfs(0, 0, 0, 0, $minPath, $minPaths, $visited, $grid, $k);\n    return $minPaths[0];\n\
    }\n", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPaths = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $visited[$i][$j] = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $sum = 0;\n            $pathSum = 0;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          $pathSum += $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1,\
    \ $visited, $path, $sum, $pathSum, $minPath, $minSum, $minPathSum, $minPaths);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPaths;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path\
    \ = [];\n            $pathSum = 0;\n            $visited[$i][$j] = true;\n   \
    \         $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n \
    \           dfs($grid, $n, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath,\
    \ $minPathSum);\n            $visited[$i][$j] = false;\n        }\n    }\n   \
    \ return $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n \
    \   $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $k, $visited, $path, $sum, $minPath, $minSum);\n \
    \       }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $path = [];\n            $pathSum = 0;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPaths = [];\n    $minPathsSum = [];\n    $minPaths[0]\
    \ = [];\n    $minPathsSum[0] = 0;\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n      \
    \      $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n     \
    \       $paths = [[$i, $j]];\n            $pathsSum = [$pathSum];\n          \
    \  $minPaths[1] = $paths;\n            $minPathsSum[1] = $pathSum;\n         \
    \   for ($l = 1; $l < $k; $l++) {\n                $minPaths[$l + 1] = [];\n \
    \               $minPathsSum[$l + 1] = PHP_INT_MAX;\n                foreach ($minPaths[$l]\
    \ as $path) {\n                    $i = $path[0];\n                    $j = $path[1];\n\
    \                    if ($i > 0 && !$visited[$i - 1][$j]) {\n                \
    \        $paths = $minPaths[$l];\n                        $paths[] = [$i - 1,\
    \ $j];\n                        $pathsSum = $minPathsSum[$l] + $grid[$i - 1][$j];\n\
    \                        if ($pathsSum < $minPathsSum[$l + 1]) {\n           \
    \                 $minPaths[$l + 1] = $paths;\n                            $minPathsSum[$l\
    \ + 1] = $pathsSum;\n                        }\n                    }\n      \
    \              if ($i < $n - 1 && !$visited[$i + 1][$j]) {\n                 \
    \       $paths = $minPath", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n    \
    \        $sum += $grid[$i][$j];\n            dfs($grid, $n, $m, $i, $j, $k - 1,\
    \ $visited, $path, $sum, $minPath, $minSum);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $visited = [];\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $pathSum = 0;\n\
    \            dfs($grid, $i, $j, $k, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPaths = [];\n    $minPathsSum\
    \ = [];\n    $minPaths[0] = [];\n    $minPathsSum[0] = 0;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = true;\n            $path = [];\n            $path[] = $grid[$i][$j];\n   \
    \         $pathSum = $grid[$i][$j];\n            $paths = [];\n            $pathsSum\
    \ = [];\n            $paths[0] = [];\n            $pathsSum[0] = 0;\n        \
    \    $paths[1] = [];\n            $pathsSum[1] = 0;\n            $paths[1][] =\
    \ $grid[$i][$j];\n            $pathsSum[1] += $grid[$i][$j];\n            $paths[2]\
    \ = [];\n            $pathsSum[2] = 0;\n            $paths[2][] = $grid[$i][$j];\n\
    \            $pathsSum[2] += $grid[$i][$j];\n            $paths[3] = [];\n   \
    \         $pathsSum[3] = 0;\n            $paths[3][] = $grid[$i][$j];\n      \
    \      $pathsSum[3] += $grid[$i][$j];\n            $paths[4] = [];\n         \
    \   $pathsSum[4] = 0;\n            $paths[4][] = $grid[$i][$j];\n            $pathsSum[4]\
    \ += $grid[$i][$j];\n            if ($i - 1 >= 0 && !$visited[$i - 1][$j]) {\n\
    \                $paths[1][] = $grid[$i -", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $min", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPaths = [];\n    $minPathsSum = [];\n\
    \    $minPaths[0] = [];\n    $minPathsSum[0] = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n\
    \            $path = [];\n            $path[0] = $grid[$i][$j];\n            $pathSum\
    \ = $grid[$i][$j];\n            $paths = [];\n            $paths[0] = [];\n  \
    \          $paths[0][0] = $grid[$i][$j];\n            $pathsSum = [];\n      \
    \      $pathsSum[0] = $grid[$i][$j];\n            dfs($grid, $i, $j, $visited,\
    \ $path, $pathSum, $paths, $pathsSum, $k, $minPath, $minSum, $minPathSum, $minPaths,\
    \ $minPathsSum);\n            $visited[$i][$j] = false;\n        }\n    }\n  \
    \  return $minPath;\n}", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = dfs($grid, $visited, 0, 0, $k, $minPath, $minPathSum);\n  \
    \  return $minPath;\n}\n", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $m; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n   \
    \ $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $path = [];\n        \
    \    $sum = 0;\n            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $sum += $grid[$i][$j];\n            dfs($grid, $visited, $i, $j,\
    \ $k - 1, $path, $sum, $minPath, $minSum);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n            dfs($grid,\
    \ $visited, $path, $pathSum, $minPath, $minPathSum, $i, $j, $k, $n);\n       \
    \     $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}\n",
  "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n  \
    \          $pathSum = 0;\n            dfs($grid, $visited, $i, $j, $k, $path,\
    \ $pathSum, $minPath, $minPathSum);\n        }\n    }\n    return $minPath;\n}",
  "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n  \
    \          $path = [];\n            $pathSum = 0;\n            $visited[$i][$j]\
    \ = true;\n            $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = [];\n \
    \   for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n   \
    \         $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n  \
    \  $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n    \
    \        $sum += $grid[$i][$j];\n            $visited = dfs($grid, $i, $j, $k\
    \ - 1, $visited, $path, $sum, $minPath, $minSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n            $path\
    \ = [$grid[$i][$j]];\n            $sum = $grid[$i][$j];\n            dfs($grid,\
    \ $visited, $path, $sum, $minPath, $minSum, $i, $j, $k, $n);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = 0; $j < $n; $j++) {\n            $path = [];\n            $pathSum = 0;\n\
    \            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $pathSum += $grid[$i][$j];\n            dfs($grid, $i, $j, $visited,\
    \ $path, $pathSum, $minPath, $minPathSum, $k);\n            $visited[$i][$j] =\
    \ false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathIndex\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++)\
    \ {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $sum = $grid[$i][$j];\n            $pathSum = $grid[$i][$j];\n  \
    \          $pathIndex = $i * $n + $j;\n            $paths = [$path];\n       \
    \     $sums = [$sum];\n            $pathSums = [$pathSum];\n            $pathIndexes\
    \ = [$pathIndex];\n            $minPaths = [];\n            $minSums = [];\n \
    \           $minPathSums = [];\n            $minPathIndexes = [];\n          \
    \  $queue = [[$i, $j]];\n            while (!empty($queue)) {\n              \
    \  $cur = array_shift($queue);\n                $x = $cur[0];\n              \
    \  $y = $cur[1];\n                $visited[$x][$y] = true;\n                $paths\
    \ = [];\n                $sums = [];\n                $pathSums = [];\n      \
    \          $pathIndexes = [];\n                foreach ($minPaths as $i => $minPath)\
    \ {\n                    $minSum = $minSums[$i];\n                    $minPathSum\
    \ = $minPathSums[$i];\n                    $minPathIndex = $minPathIndexes[$i];\n\
    \                    if ($minSum + $grid[$x][$y] <= $minPathSum) {\n         \
    \               $paths[] = $minPath;\n                        $sums[] = $minSum;\n\
    \                        $pathSums[] = $minPathSum;\n                        $pathIndexes[]\
    \ = $minPathIndex;\n                    }\n                }\n               \
    \ $minPaths = [];\n", "    $n = count($grid);\n    $visited = [];\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $visited[$i] = array_fill(0, $n, false);\n  \
    \  }\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n\
    \            $pathSum = 0;\n            $visited[$i][$j] = true;\n           \
    \ $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n         \
    \   $result = dfs($grid, $visited, $path, $pathSum, $i, $j, $k);\n           \
    \ if ($result['pathSum'] < $minPathSum) {\n                $minPathSum = $result['pathSum'];\n\
    \                $minPath = $result['path'];\n            }\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] =\
    \ array_fill(0, $n, false);\n    }\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $pathSum = 0;\n            $visited[$i][$j]\
    \ = true;\n            $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n\
    \            $sum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n            dfs($grid,\
    \ $i, $j, $k - 1, $visited, $path, $sum, $minPath, $minSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] =\
    \ array_fill(0, $n, false);\n    }\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $pathSum = 0;\n            $visited[$i][$j]\
    \ = true;\n            $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            dfs($grid, $visited, $i, $j, $path, $pathSum, $minPath, $minPathSum,\
    \ $k);\n            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = [];\n \
    \   for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n   \
    \         $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n  \
    \  $minSum = PHP_INT_MAX;\n    $minSumPath = [];\n    $minSumPaths = [];\n   \
    \ $minSumPaths[] = [];\n    $minSumPaths[] = [];\n    $minSumPaths[] = [];\n \
    \   $minSumPaths[] = [];\n    $minSumPaths[] = [];\n    $minSumPaths[] = [];\n\
    \    $minSumPaths[] = [];\n    $minSumPaths[] = [];\n    $minSumPaths[] = [];\n\
    \    $minSumPaths[] = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $minSumPath = [];\n            $minSumPath[]\
    \ = $grid[$i][$j];\n            $visited[$i][$j] = true;\n            $minSumPaths[0]\
    \ = $minSumPath;\n            $minSumPaths[1] = $minSumPath;\n            $minSumPaths[2]\
    \ = $minSumPath;\n            $minSumPaths[3] = $minSumPath;\n            $minSumPaths[4]\
    \ = $minSumPath;\n            $minSumPaths[5] = $minSumPath;\n            $minSumPaths[6]\
    \ = $minSumPath;\n            $minSumPaths[7] = $minSumPath;\n            $minSumPaths[8]\
    \ = $minSumPath;\n            $minSumPaths[9] = $minSumPath;\n            $minSum\
    \ = PHP_INT_MAX;\n            $minSumPath = [];\n            $minSumPaths[0] =\
    \ $minSumPath;\n            $minSumPaths[1] = $minSumPath;\n            $min",
  "    $n = count($grid);\n    $visited = [];\n    $queue = new SplQueue();\n    $queue->enqueue([0,\
    \ 0, $grid[0][0]]);\n    $visited[0][0] = true;\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    while (!$queue->isEmpty()) {\n        list($x, $y, $sum)\
    \ = $queue->dequeue();\n        if ($sum > $minSum) {\n            continue;\n\
    \        }\n        if ($x == $n - 1 && $y == $n - 1) {\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = [];\n\
    \            }\n            $minPath[] = $grid[$x][$y];\n            continue;\n\
    \        }\n        if ($x > 0 && !$visited[$x - 1][$y]) {\n            $visited[$x\
    \ - 1][$y] = true;\n            $queue->enqueue([$x - 1, $y, $sum + $grid[$x -\
    \ 1][$y]]);\n        }\n        if ($x < $n - 1 && !$visited[$x + 1][$y]) {\n\
    \            $visited[$x + 1][$y] = true;\n            $queue->enqueue([$x + 1,\
    \ $y, $sum + $grid[$x + 1][$y]]);\n        }\n        if ($y > 0 && !$visited[$x][$y\
    \ - 1]) {\n            $visited[$x][$y - 1] = true;\n            $queue->enqueue([$x,\
    \ $y - 1, $sum + $grid[$x][$y - 1]]);\n        }\n        if ($y < $n - 1 && !$visited[$x][$y\
    \ + 1]) {\n            $visited[$x][$y + 1] = true;\n            $queue->enqueue([$x,\
    \ $y + 1, $sum + $grid[$x][$y + 1]]);\n        }\n    }\n    return $minPath;\n\
    }\n\n$grid", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPaths\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++)\
    \ {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $sum = $grid[$i][$j];\n            dfs($grid, $visited, $i, $j, $path,\
    \ $sum, $k, $minPath, $minSum, $minPaths);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPaths;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathIndex = 0;\n   \
    \ for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n     \
    \       $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n     \
    \       $sum = $grid[$i][$j];\n            $pathSum = $grid[$i][$j];\n       \
    \     $pathIndex = $i * $n + $j;\n            dfs($grid, $visited, $i, $j, $path,\
    \ $sum, $pathSum, $pathIndex, $minPath, $minSum, $minPathSum, $minPathIndex, $k);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = dfs($grid, $visited, 0, 0, $k, 0, $minPath, $minPathSum);\n    return $minPath;\n\
    }\n", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathValues = [];\n    $minPathValuesSum\
    \ = PHP_INT_MAX;\n    $dfs = function($grid, $i, $j, $k, $sum, $pathValues, $pathValuesSum,\
    \ &$minSum, &$minPath, &$minPathSum, &$minPathValues, &$minPathValuesSum) use\
    \ (&$dfs, &$visited) {\n        if ($k == 0) {\n            if ($sum < $minSum)\
    \ {\n                $minSum = $sum;\n                $minPath = [];\n       \
    \         $minPathSum = $pathValuesSum;\n                $minPathValues = $pathValues;\n\
    \                $minPathValuesSum = $pathValuesSum;\n            } else if ($sum\
    \ == $minSum) {\n                if ($pathValuesSum < $minPathSum) {\n       \
    \             $minPathSum = $pathValuesSum;\n                    $minPathValues\
    \ = $pathValues;\n                    $minPathValuesSum = $pathValuesSum;\n  \
    \              } else if ($pathValuesSum == $minPathSum) {\n                 \
    \   if ($pathValuesSum < $minPathValuesSum) {\n                        $minPathValues\
    \ = $pathValues;\n                        $minPathValuesSum = $pathValuesSum;\n\
    \                    } else if ($pathValuesSum == $minPathValuesSum) {\n     \
    \                   for ($i = 0; $i < count($pathValues); $i++) {\n          \
    \                  if ($pathValues[$i] < $minPathValues[$i]) {\n             \
    \                   $minPathValues = $pathValues;\n                          \
    \      break;\n                            } else if ($pathValues[$i] > $minPathValues[$i])\
    \ {\n                                break;\n                            }\n \
    \                       }\n                    }\n                }\n        \
    \    }\n            return;\n        }\n        if ($i < 0 || $i >= count($grid)\
    \ || $j < 0 || $j >=", "    $n = count($grid);\n    $visited = [];\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $visited[$i] = array_fill(0, $n, false);\n  \
    \  }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $currPath = [];\n\
    \            $currSum = 0;\n            $visited[$i][$j] = true;\n           \
    \ dfs($grid, $visited, $i, $j, $k, $currPath, $currSum, $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n  \
    \          $minPath[$i][$j] = [];\n            $minSum = min($minSum, dfs($grid,\
    \ $i, $j, $k, $visited, $minPath));\n        }\n    }\n    return $minPath[0][0];\n\
    }\n", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $min",
  "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n         \
    \   $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            $path = [];\n            $sum = 0;\n            dfs($grid,\
    \ $i, $j, $k, $visited, $path, $sum);\n            if ($sum < $minSum) {\n   \
    \             $minSum = $sum;\n                $minPath = $path;\n           \
    \ }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n   \
    \ $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $k, $visited, $path, $sum);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid, $k, 0, 0, $visited,\
    \ $minPath, $minPathSum);\n    return $minPath;\n}\n", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = 0; $j < $n; $j++) {\n            $path = [];\n            $pathSum = 0;\n\
    \            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $pathSum += $grid[$i][$j];\n            dfs($grid, $i, $j, $visited,\
    \ $path, $pathSum, $minPath, $minPathSum, $k);\n            $visited[$i][$j] =\
    \ false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $dp = array_fill(0, $n, array_fill(0, $n, []));\n    $dp[0][0][] = $grid[0][0];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          if ($i > 0) {\n                $dp[$i][$j] = minPathHelper($dp[$i][$j],\
    \ $dp[$i - 1][$j], $grid[$i][$j]);\n            }\n            if ($j > 0) {\n\
    \                $dp[$i][$j] = minPathHelper($dp[$i][$j], $dp[$i][$j - 1], $grid[$i][$j]);\n\
    \            }\n        }\n    }\n    return $dp[$n - 1][$n - 1][$k - 1];\n}",
  "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n  \
    \          $pathSum = 0;\n            dfs($grid, $i, $j, $k, $visited, $path,\
    \ $pathSum, $minPath, $minPathSum);\n        }\n    }\n    return $minPath;\n}",
  "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid,\
    \ $n, 0, 0, $visited, $k, 0, $minPath, $minPathSum);\n    return $minPath;\n}",
  "    $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $visited[$i] = array_fill(0, $n, false);\n    }\n    $minPath = [];\n\
    \    $minPathValue = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n      \
    \      $path = [$grid[$i][$j]];\n            $pathValue = $grid[$i][$j];\n   \
    \         dfs($grid, $visited, $i, $j, $path, $pathValue, $k, $minPath, $minPathValue);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            dfs($grid, $i, $j,\
    \ $k, $visited, $path, $sum, $minPath, $minSum);\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n   ", "    $n\
    \ = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPath = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $visited, $i, $j,\
    \ $path, $pathSum, $minPath, $minPathSum, $k);\n            $visited[$i][$j] =\
    \ false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++)\
    \ {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $visited, $i, $j,\
    \ $path, $pathSum, $minPath, $minPathSum, $k);\n            $visited[$i][$j] =\
    \ false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPaths = [];\n\
    \    $minPathsSum = [];\n    $minPaths[0] = [];\n    $minPathsSum[0] = 0;\n  \
    \  $minPaths[1] = [];\n    $minPathsSum[1] = 0;\n    $minPaths[2] = [];\n    $minPathsSum[2]\
    \ = 0;\n    $minPaths[3] = [];\n    $minPathsSum[3] = 0;\n    $minPaths[4] = [];\n\
    \    $minPathsSum[4] = 0;\n    $minPaths[5] = [];\n    $minPathsSum[5] = 0;\n\
    \    $minPaths[6] = [];\n    $minPathsSum[6] = 0;\n    $minPaths[7] = [];\n  \
    \  $minPathsSum[7] = 0;\n    $minPaths[8] = [];\n    $minPathsSum[8] = 0;\n  \
    \  $minPaths[9] = [];\n    $minPathsSum[9] = 0;\n    $minPaths[10] = [];\n   \
    \ $minPathsSum[10] = 0;\n    $minPaths[11] = [];\n    $minPathsSum[11] = 0;\n\
    \    $minPaths[12] = [];\n    $minPathsSum[12] = 0;\n    $minPaths[13] = [];\n\
    \    $minPathsSum[13] = 0;\n    $minPaths[14] = [];\n    $minPathsSum[14] = 0;\n\
    \    $minPaths[15] = [];\n    $minPathsSum[15] = 0;\n    $minPaths[16] = [];\n\
    \    $minPathsSum[16] = 0;\n    $minPaths[17] = [];\n    $minPathsSum[17", " \
    \   $n = count($grid);\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n \
    \   $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n   ", "    $n\
    \ = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid,\
    \ $visited, 0, 0, $k, $minPath, $minPathSum);\n    return $minPath;\n}\n", " \
    \   $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $visited[$i] = array_fill(0, $n, false);\n    }\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $visited, $i, $j, $k, $path, $sum);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPaths = [];\n\
    \    $minPathsSum = [];\n    $minPaths[0] = [];\n    $minPathsSum[0] = 0;\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n    \
    \        $visited[$i][$j] = true;\n            $path = [];\n            $path[]\
    \ = $grid[$i][$j];\n            $sum = $grid[$i][$j];\n            $paths = [];\n\
    \            $pathsSum = [];\n            $paths[0] = [];\n            $pathsSum[0]\
    \ = 0;\n            $paths[1] = [];\n            $pathsSum[1] = 0;\n         \
    \   $paths[1][] = $grid[$i][$j];\n            $pathsSum[1] += $grid[$i][$j];\n\
    \            $paths[2] = [];\n            $pathsSum[2] = 0;\n            $paths[2][]\
    \ = $grid[$i][$j];\n            $pathsSum[2] += $grid[$i][$j];\n            $paths[3]\
    \ = [];\n            $pathsSum[3] = 0;\n            $paths[3][] = $grid[$i][$j];\n\
    \            $pathsSum[3] += $grid[$i][$j];\n            $paths[4] = [];\n   \
    \         $pathsSum[4] = 0;\n            $paths[4][] = $grid[$i][$j];\n      \
    \      $pathsSum[4] += $grid[$i][$j];\n            $paths[5] = [];\n         \
    \   $pathsSum[5] = 0;\n            $paths[5][] = $grid[$i][$j];", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $min_path = [];\n    $min_sum = PHP_INT_MAX;\n\
    \    $min_path_sum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ for ($j = 0; $j < $m; $j++) {\n            $path = [];\n            $path_sum\
    \ = 0;\n            $visited = [];\n            dfs($grid, $i, $j, $k, $path,\
    \ $path_sum, $visited, $min_path, $min_sum, $min_path_sum);\n        }\n    }\n\
    \    return $min_path;\n}", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPaths = [];\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = true;\n            $path = [$grid[$i][$j]];\n            $sum = $grid[$i][$j];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $visited, $i, $j,\
    \ $path, $sum, $pathSum, $k, $minPath, $minSum, $minPathSum, $minPaths);\n   \
    \         $visited[$i][$j] = false;\n        }\n    }\n    return $minPaths[0];\n\
    }", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j]\
    \ = true;\n            $path = [];\n            $pathSum = $grid[$i][$j];\n  \
    \          $path[] = $grid[$i][$j];\n            $minPathSum = PHP_INT_MAX;\n\
    \            $minPath = [];\n            dfs($grid, $i, $j, $visited, $path, $pathSum,\
    \ $minPath, $minPathSum, $k);\n            $visited[$i][$j] = false;\n       \
    \ }\n    }\n    return $minPath;\n}\n", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPaths = [];\n    $minPaths[] = [];\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = true;\n            $path = [];\n            $path[] = $grid[$i][$j];\n   \
    \         $sum = $grid[$i][$j];\n            dfs($grid, $visited, $i, $j, $path,\
    \ $sum, $minPath, $minSum, $minPaths, $k);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPaths[0];\n}", "    $n = count($grid);\n   \
    \ $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m, false));\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $path\
    \ = [];\n            $sum = 0;\n            $pathSum = 0;\n            $visited[$i][$j]\
    \ = true;\n            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n\
    \            $pathSum += $grid[$i][$j];\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          $pathSum += $grid[$i][$j];\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          $pathSum += $grid[$i][$j];\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          $pathSum += $grid[$i][$j];\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          $pathSum += $grid[$i][$j];\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          $pathSum += $grid[$i][", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = dfs($grid, $visited, 0, 0, $k, $minPath, $minPathSum);\n  \
    \  return $minPath;\n}\n", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n    \
    \        $sum += $grid[$i][$j];\n            $visited[$i][$j] = false;\n     \
    \       dfs($grid, $i, $j, $k - 1, $visited, $path, $sum, $minPath, $minSum);\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathIndex = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            $pathSum = 0;\n   \
    \         $pathIndex = 0;\n            dfs($grid, $visited, $i, $j, $k, $path,\
    \ $sum, $pathSum, $pathIndex);\n            if ($sum < $minSum) {\n          \
    \      $minSum = $sum;\n                $minPath = $path;\n                $minPathSum\
    \ = $pathSum;\n                $minPathIndex = $pathIndex;\n            } else\
    \ if ($sum == $minSum) {\n                if ($pathSum < $minPathSum) {\n    \
    \                $minPath = $path;\n                    $minPathSum = $pathSum;\n\
    \                    $minPathIndex = $pathIndex;\n                } else if ($pathSum\
    \ == $minPathSum) {\n                    if ($pathIndex < $minPathIndex) {\n \
    \                       $minPath = $path;\n                        $minPathIndex\
    \ = $pathIndex;\n                    }\n                }\n            }\n   \
    \     }\n    }\n    return $minPath;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_129_minPath
language: php
prompt: "<?php\n// Given a grid with N rows and N columns (N >= 2) and a positive\
  \ integer k, \n// each cell of the grid contains a value. Every integer in the range\
  \ [1, N * N]\n// inclusive appears exactly once on the cells of the grid.\n// You\
  \ have to find the minimum path of length k in the grid. You can start\n// from\
  \ any cell, and in each step you can move to any of the neighbor cells,\n// in other\
  \ words, you can go to cells which share an edge with you current\n// cell.\n//\
  \ Please note that a path of length k means visiting exactly k cells (not\n// necessarily\
  \ distinct).\n// You CANNOT go off the grid.\n// A path A (of length k) is considered\
  \ less than a path B (of length k) if\n// after making the ordered lists of the\
  \ values on the cells that A and B go\n// through (let's call them lst_A and lst_B),\
  \ lst_A is lexicographically less\n// than lst_B, in other words, there exist an\
  \ integer index i (1 <= i <= k)\n// such that lst_A[i] < lst_B[i] and for any j\
  \ (1 <= j < i) we have\n// lst_A[j] = lst_B[j].\n// It is guaranteed that the answer\
  \ is unique.\n// Return an ordered list of the values on the cells that the minimum\
  \ path go through.\n// Examples:\nfunction minPath($grid, $k) {\n"
tests: "function candidate(...$args) {\n    return minPath(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6), array(7,\
  \ 8, 9)), 3) !== array(1, 2, 1)) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(array(array(5, 9, 3), array(4, 1, 6), array(7, 8, 2)), 1) !== array(1))\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2,\
  \ 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12), array(13, 14, 15, 16)), 4) !==\
  \ array(1, 2, 1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(6,\
  \ 4, 13, 10), array(5, 7, 12, 1), array(3, 16, 11, 15), array(8, 14, 9, 2)), 7)\
  \ !== array(1, 10, 1, 10, 1, 10, 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(array(8, 14, 9, 2), array(6, 4, 13, 15), array(5, 7, 1,\
  \ 12), array(3, 10, 11, 16)), 5) !== array(1, 7, 1, 7, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(array(11, 8, 7, 2), array(5, 16, 14,\
  \ 4), array(9, 3, 15, 6), array(12, 13, 10, 1)), 9) !== array(1, 6, 1, 6, 1, 6,\
  \ 1, 6, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(12,\
  \ 13, 10, 1), array(9, 3, 15, 6), array(5, 16, 14, 4), array(11, 8, 7, 2)), 12)\
  \ !== array(1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(array(2, 7, 4), array(3, 1, 5), array(6, 8, 9)), 8)\
  \ !== array(1, 3, 1, 3, 1, 3, 1, 3)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(array(6, 1, 5), array(3, 8, 9), array(2, 7, 4)), 8) !==\
  \ array(1, 5, 1, 5, 1, 5, 1, 5)) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(array(array(1, 2), array(3, 4)), 10) !== array(1, 2, 1, 2, 1, 2,\
  \ 1, 2, 1, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1,\
  \ 3), array(3, 2)), 10) !== array(1, 3, 1, 3, 1, 3, 1, 3, 1, 3)) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0; $i < $n; $i++) {\n    \
    \    for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n   \
    \         $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n  \
    \          $pathSum = $grid[$i][$j];\n            $path = [$grid[$i][$j]];\n \
    \           dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path\
    \ = [];\n            $pathSum = 0;\n            $visited[$i][$j] = true;\n   \
    \         $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n \
    \           if ($pathSum < $minPathSum) {\n                $minPath = $path;\n\
    \                $minPathSum = $pathSum;\n            }\n            $visited[$i][$j]\
    \ = false;\n            dfs($grid, $i, $j, $k, $visited, $path, $pathSum, $minPath,\
    \ $minPathSum);\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    $minPath = [];\n    $minPathValue = PHP_INT_MAX;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n         \
    \   $path = [];\n            $pathValue = 0;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $pathValue += $grid[$i][$j];\n\
    \            $path = dfs($grid, $i, $j, $k - 1, $visited, $path, $pathValue);\n\
    \            if ($pathValue < $minPathValue) {\n                $minPath = $path;\n\
    \                $minPathValue = $pathValue;\n            }\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $path = [];\n            $sum = 0;\n            $visited[$i][$j]\
    \ = true;\n            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n\
    \            dfs($grid, $visited, $i, $j, $path, $sum, $minPath, $minSum, $k);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = [];\n \
    \   for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n   \
    \         $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n  \
    \  $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $currPath = [];\n            $currSum = 0;\n\
    \            $visited[$i][$j] = true;\n            $currPath[] = $grid[$i][$j];\n\
    \            $currSum += $grid[$i][$j];\n            $res = dfs($grid, $k - 1,\
    \ $i, $j, $visited, $currPath, $currSum);\n            if ($res[1] < $minSum)\
    \ {\n                $minPath = $res[0];\n                $minSum = $res[1];\n\
    \            }\n            $visited[$i][$j] = false;\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0; $i < $n; $i++) {\n    \
    \    for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n   \
    \         $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n  \
    \          dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            dfs($grid, $i, $j, $k, $visited,\
    \ $path, $sum);\n            if ($sum < $minSum) {\n                $minSum =\
    \ $sum;\n                $minPath = $path;\n            }\n        }\n    }\n\
    \    return $minPath;\n}", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = 0; $j < $n; $j++) {\n            $path = [];\n            $pathSum = 0;\n\
    \            dfs($grid, $visited, $i, $j, $path, $pathSum, $k, $minPath, $minPathSum);\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $m =\
    \ count($grid[0]);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n  \
    \      for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $path\
    \ = [];\n            $sum = 0;\n            $visited[$i][$j] = true;\n       \
    \     $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n         \
    \   dfs($grid, $i, $j, $k - 1, $visited, $path, $sum, $minPath, $minSum);\n  \
    \          $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            dfs($grid, $i, $j, $k, $visited,\
    \ $path, $sum);\n            if ($sum < $minSum) {\n                $minSum =\
    \ $sum;\n                $minPath = $path;\n            }\n        }\n    }\n\
    \    return $minPath;\n}", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n  \
    \          $sum = $grid[$i][$j];\n            dfs($grid, $visited, $path, $sum,\
    \ $minPath, $minSum, $i, $j, $k);\n            $visited[$i][$j] = false;\n   \
    \     }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] = array_fill(0,\
    \ $n, false);\n    }\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n   \
    \ for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n     \
    \       $path = [];\n            $pathSum = 0;\n            $visited[$i][$j] =\
    \ true;\n            $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            helper($grid, $visited, $i, $j, $path, $pathSum, $minPath, $minPathSum,\
    \ $k);\n            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $visited, $i, $j,\
    \ $path, $pathSum, $minPath, $minPathSum, $k, $n);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = true;\n            $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n\
    \            $minPathSum = PHP_INT_MAX;\n            $minPath = [];\n        \
    \    dfs($grid, $visited, $i, $j, $path, $pathSum, $minPath, $minPathSum, $k);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n   ", "    $n\
    \ = count($grid);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     $visited[$i] = array_fill(0, $n, false);\n    }\n    $minPath = [];\n  \
    \  $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n    \
    \        $sum += $grid[$i][$j];\n            $visited = dfs($grid, $i, $j, $k\
    \ - 1, $visited, $path, $sum, $minPath, $minSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $path = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT", "    // $grid = [\n    //     [1,\
    \ 2, 3],\n    //     [4, 5, 6],\n    //     [7, 8, 9]\n    // ];\n    // $k =\
    \ 4;\n    // $grid = [\n    //     [1, 2, 3],\n    //     [4, 5, 6],\n    // \
    \    [7, 8, 9]\n    // ];\n    // $k = 5;\n    // $grid = [\n    //     [1, 2,\
    \ 3],\n    //     [4, 5, 6],\n    //     [7, 8, 9]\n    // ];\n    // $k = 6;\n\
    \    // $grid = [\n    //     [1, 2, 3],\n    //     [4, 5, 6],\n    //     [7,\
    \ 8, 9]\n    // ];\n    // $k = 7;\n    // $grid = [\n    //     [1, 2, 3],\n\
    \    //     [4, 5, 6],\n    //     [7, 8, 9]\n    // ];\n    // $k = 8;\n    //\
    \ $grid = [\n    //     [1, 2, 3],\n    //     [4, 5, 6],\n    //     [7, 8, 9]\n\
    \    // ];\n    // $k = 9;\n    // $grid = [\n    //     [1, 2, 3],\n    //  \
    \   [4, 5, 6],\n    //     [7, 8, 9]\n    // ];\n    // $k = 10;\n    // $grid\
    \ = [\n    //     [1, 2, 3],\n    //     [4, 5, 6],\n    //     [7, 8, 9]\n  \
    \  // ];\n    // $k = 11;\n    // $grid = [\n    //     [1, 2, 3],\n    //   \
    \  [4, 5, 6],\n    //     [7, 8, 9]\n    // ];\n    // $k = 12;\n    // $grid\
    \ = [\n    //     [1, 2, 3],\n    //     [4, 5, 6],\n    //     [7, 8, 9]\n  \
    \  // ];", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n \
    \   $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n  \
    \  }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n\
    \            $path = [];\n            $sum = 0;\n            dfs($grid, $i, $j,\
    \ $k, $visited, $path, $sum);\n            if ($sum < $minSum) {\n           \
    \     $minSum = $sum;\n                $minPath = $path;\n            }\n    \
    \    }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n            dfs($grid,\
    \ $i, $j, $visited, $path, $pathSum, $minPath, $minPathSum, $k);\n           \
    \ $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}", "   \
    \ $rows = count($grid);\n    $cols = count($grid[0]);\n    $visited = [];\n  \
    \  for ($i = 0; $i < $rows; $i++) {\n        for ($j = 0; $j < $cols; $j++) {\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $rows; $i++) {\n      \
    \  for ($j = 0; $j < $cols; $j++) {\n            $path = [];\n            $pathSum\
    \ = 0;\n            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $pathSum += $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1,\
    \ $visited, $path, $pathSum, $minPath, $minPathSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    $path = [];\n    $minPath\
    \ = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++)\
    \ {\n            $visited = [];\n            $path = [];\n            $sum = 0;\n\
    \            dfs($grid, $i, $j, $visited, $path, $sum, $k, $minPath, $minPathSum);\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPaths = [];\n    $minPaths[] = [];\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $minPaths[0][]\
    \ = $grid[$i][$j];\n        }\n    }\n    $minPaths = [$minPaths];\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = true;\n            $path = [];\n            $path[] = $grid[$i][$j];\n   \
    \         $sum = $grid[$i][$j];\n            $paths = [];\n            $paths[]\
    \ = [$path];\n            dfs($grid, $visited, $i, $j, $paths, $sum, $k, $n);\n\
    \            $visited[$i][$j] = false;\n            if ($sum < $minSum) {\n  \
    \              $minSum = $sum;\n                $minPaths = $paths;\n        \
    \    } else if ($sum == $minSum) {\n                $minPaths = array_merge($minPaths,\
    \ $paths);\n            }\n        }\n    }\n    $minPath = $minPaths[0][0];\n\
    \    for ($i = 0; $i < count($minPaths); $i++) {\n        for ($j = 0; $j < count($minPaths[$i]);\
    \ $j++) {\n            if ($minPaths[$i][$j] < $minPath) {\n                $minPath\
    \ = $minPaths[$i][$j];\n            }\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $visited[$i] = [];\n        for ($j = 0; $j < $n; $j++) {\n     \
    \       $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = dfs($grid, $visited, $minPath, $minPathSum,\
    \ 0, 0, $k, $n);\n    return $minPath;\n}\n", "    $n = count($grid);\n    $m\
    \ = count($grid[0]);\n    $visited = [];\n    $queue = new SplQueue();\n    $queue->enqueue([0,\
    \ 0, 0, [$grid[0][0]]]);\n    while (!$queue->isEmpty()) {\n        list($i, $j,\
    \ $len, $path) = $queue->dequeue();\n        if ($len === $k) {\n            return\
    \ $path;\n        }\n        if ($i > 0 && !isset($visited[$i - 1][$j])) {\n \
    \           $visited[$i - 1][$j] = true;\n            $queue->enqueue([$i - 1,\
    \ $j, $len + 1, array_merge($path, [$grid[$i - 1][$j]])]);\n        }\n      \
    \  if ($i < $n - 1 && !isset($visited[$i + 1][$j])) {\n            $visited[$i\
    \ + 1][$j] = true;\n            $queue->enqueue([$i + 1, $j, $len + 1, array_merge($path,\
    \ [$grid[$i + 1][$j]])]);\n        }\n        if ($j > 0 && !isset($visited[$i][$j\
    \ - 1])) {\n            $visited[$i][$j - 1] = true;\n            $queue->enqueue([$i,\
    \ $j - 1, $len + 1, array_merge($path, [$grid[$i][$j - 1]])]);\n        }\n  \
    \      if ($j < $m - 1 && !isset($visited[$i][$j + 1])) {\n            $visited[$i][$j\
    \ + 1] = true;\n            $queue->enqueue([$i, $j + 1, $len + 1, array_merge($path,\
    \ [$grid[$i][$j + 1]])]);\n        }\n    }\n}\n$grid = [\n    [1, 2, 3],\n  \
    \  [4, 5, 6],\n    [7, 8, 9]\n];\n$k = 5;\nprint", "    $n = count($grid);\n \
    \   $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $queue = new SplQueue();\n    $queue->enqueue([0, 0, $grid[0][0],\
    \ [$grid[0][0]]]);\n    $visited[0][0] = true;\n    $minPath = [];\n    while\
    \ (!$queue->isEmpty()) {\n        list($i, $j, $sum, $path) = $queue->dequeue();\n\
    \        if ($sum > $k) {\n            continue;\n        }\n        if ($sum\
    \ === $k) {\n            if (empty($minPath) || $path < $minPath) {\n        \
    \        $minPath = $path;\n            }\n            continue;\n        }\n\
    \        if ($i + 1 < $n && !$visited[$i + 1][$j]) {\n            $visited[$i\
    \ + 1][$j] = true;\n            $queue->enqueue([$i + 1, $j, $sum + $grid[$i +\
    \ 1][$j], array_merge($path, [$grid[$i + 1][$j]])]);\n        }\n        if ($j\
    \ + 1 < $m && !$visited[$i][$j + 1]) {\n            $visited[$i][$j + 1] = true;\n\
    \            $queue->enqueue([$i, $j + 1, $sum + $grid[$i][$j + 1], array_merge($path,\
    \ [$grid[$i][$j + 1]])]);\n        }\n    }\n    return $minPath;\n}\n$grid =\
    \ [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n];\n$k = 12;\nprint_r(minPath($grid,\
    \ $k));\necho PHP_EOL;\n$grid = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8,\
    \ 9]\n];\n$k = 15;\nprint_r(minPath($", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = dfs($grid, $visited, $minPath, $minPathSum,\
    \ 0, 0, $k, 0);\n    return $minPath;\n}\n", "    $n = count($grid);\n    $visited\
    \ = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n    \
    \        $sum += $grid[$i][$j];\n            dfs($grid, $i, $j, $visited, $path,\
    \ $sum, $k, $minPath, $minSum);\n            $visited[$i][$j] = false;\n     \
    \   }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $visited[$i][$j] = true;\n            $currPath = [$grid[$i][$j]];\n     \
    \       $currPathSum = $grid[$i][$j];\n            dfs($grid, $visited, $currPath,\
    \ $currPathSum, $minPath, $minPathSum, $i, $j, $k, $n);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = 0; $j < $n; $j++) {\n            $path = [];\n            $pathSum = 0;\n\
    \            dfs($grid, $visited, $i, $j, $k, $path, $pathSum, $minPath, $minPathSum);\n\
    \        }\n    }\n    return $minPath;\n}\n", "    $n = count($grid);\n    $visited\
    \ = [];\n    $queue = new SplQueue();\n    $queue->enqueue([0, 0, 0, [$grid[0][0]]]);\n\
    \    $visited[0][0] = true;\n    while (!$queue->isEmpty()) {\n        [$x, $y,\
    \ $steps, $path] = $queue->dequeue();\n        if ($steps === $k) {\n        \
    \    return $path;\n        }\n        if ($x > 0 && !$visited[$x - 1][$y]) {\n\
    \            $visited[$x - 1][$y] = true;\n            $queue->enqueue([$x - 1,\
    \ $y, $steps + 1, array_merge($path, [$grid[$x - 1][$y]])]);\n        }\n    \
    \    if ($x < $n - 1 && !$visited[$x + 1][$y]) {\n            $visited[$x + 1][$y]\
    \ = true;\n            $queue->enqueue([$x + 1, $y, $steps + 1, array_merge($path,\
    \ [$grid[$x + 1][$y]])]);\n        }\n        if ($y > 0 && !$visited[$x][$y -\
    \ 1]) {\n            $visited[$x][$y - 1] = true;\n            $queue->enqueue([$x,\
    \ $y - 1, $steps + 1, array_merge($path, [$grid[$x][$y - 1]])]);\n        }\n\
    \        if ($y < $n - 1 && !$visited[$x][$y + 1]) {\n            $visited[$x][$y\
    \ + 1] = true;\n            $queue->enqueue([$x, $y + 1, $steps + 1, array_merge($path,\
    \ [$grid[$x][$y + 1]])]);\n        }\n    }\n}\n$grid = [\n    [1, 2, 3],\n  \
    \  [4, 5, 6],\n    [7, 8, 9]\n];\n$k = 5;\nprint_r(minPath($grid, $k", "    $n\
    \ = count($grid);\n    $m = count($grid[0]);\n    $visited = [];\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = dfs($grid, $visited, $k, 0, 0, 0, $minPathSum, $minPath);\n\
    \    return $minPath;\n}\n", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \   ", "    $n = count($grid);\n    $visited = [];\n    $queue = new SplQueue();\n\
    \    $queue->enqueue([0, 0, $grid[0][0]]);\n    $visited[0][0] = true;\n    $minPath\
    \ = [];\n    $minSum = PHP_INT_MAX;\n    while (!$queue->isEmpty()) {\n      \
    \  list($x, $y, $sum) = $queue->dequeue();\n        if ($sum > $minSum) {\n  \
    \          continue;\n        }\n        if ($x == $n - 1 && $y == $n - 1) {\n\
    \            if ($sum < $minSum) {\n                $minSum = $sum;\n        \
    \        $minPath = [];\n            }\n            $minPath[] = $grid[$x][$y];\n\
    \            continue;\n        }\n        if ($x > 0 && !$visited[$x - 1][$y])\
    \ {\n            $visited[$x - 1][$y] = true;\n            $queue->enqueue([$x\
    \ - 1, $y, $sum + $grid[$x - 1][$y]]);\n        }\n        if ($x < $n - 1 &&\
    \ !$visited[$x + 1][$y]) {\n            $visited[$x + 1][$y] = true;\n       \
    \     $queue->enqueue([$x + 1, $y, $sum + $grid[$x + 1][$y]]);\n        }\n  \
    \      if ($y > 0 && !$visited[$x][$y - 1]) {\n            $visited[$x][$y - 1]\
    \ = true;\n            $queue->enqueue([$x, $y - 1, $sum + $grid[$x][$y - 1]]);\n\
    \        }\n        if ($y < $n - 1 && !$visited[$x][$y + 1]) {\n            $visited[$x][$y\
    \ + 1] = true;\n            $queue->enqueue([$x, $y + 1, $sum + $grid[$x][$y +\
    \ 1]]);\n        }\n    }\n    return $minPath;\n}\n$grid =", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n\
    \    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $visited, $path, $sum, $k, $minPath, $minSum);\n \
    \       }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n   ", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \   ", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          if (dfs($grid, $i, $j, $k - 1, $visited, $path, $sum)) {\n        \
    \        if ($sum < $minSum) {\n                    $minSum = $sum;\n        \
    \            $minPath = $path;\n                }\n            }\n           \
    \ $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}", "   \
    \ $m = count($grid);\n    $n = count($grid[0]);\n    $visited = array_fill(0,\
    \ $m, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $m; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            $visited[$i][$j] =\
    \ true;\n            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $k - 1, $visited, $path, $sum, $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          dfs($grid, $i, $j, $k - 1, $visited, $path, $sum, $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = dfs($grid, $visited, $minPath, $minPathSum, 0, 0, $k, 0);\n    return $minPath;\n\
    }\n", "    $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $visited[$i] = array_fill(0, $n, false);\n    }\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum", "    $n =\
    \ count($grid);\n    $m = count($grid[0]);\n    $minPath = [];\n    $minPathValues\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSumValues = [];\n    $minPathSumValues[0]\
    \ = [];\n    $minPathSumValues[1] = [];\n    $minPathSumValues[2] = [];\n    $minPathSumValues[3]\
    \ = [];\n    $minPathSumValues[4] = [];\n    $minPathSumValues[5] = [];\n    $minPathSumValues[6]\
    \ = [];\n    $minPathSumValues[7] = [];\n    $minPathSumValues[8] = [];\n    $minPathSumValues[9]\
    \ = [];\n    $minPathSumValues[10] = [];\n    $minPathSumValues[11] = [];\n  \
    \  $minPathSumValues[12] = [];\n    $minPathSumValues[13] = [];\n    $minPathSumValues[14]\
    \ = [];\n    $minPathSumValues[15] = [];\n    $minPathSumValues[16] = [];\n  \
    \  $minPathSumValues[17] = [];\n    $minPathSumValues[18] = [];\n    $minPathSumValues[19]\
    \ = [];\n    $minPathSumValues[20] = [];\n    $minPathSumValues[21] = [];\n  \
    \  $minPathSumValues[22] = [];\n    $minPathSumValues[23] = [];\n    $minPathSumValues[24]\
    \ = [];\n    $minPathSumValues[25] = [];\n    $minPathSumValues[26] = [];\n  \
    \  $minPathSumValues[27] = [];\n    $minPathSumValues[28] = [];\n    $minPathSumValues[29]\
    \ = [];\n    $minPathSumValues[30] = [];\n    $minPathSumValues[31] = [];\n  \
    \  $minPathSumValues[32] = [];\n    $minPathSumValues[33] = [];\n    $minPathSumValues[34]\
    \ = [];\n    $minPathSumValues[35] = [];\n    $minPathSumValues[36] = [];\n  \
    \  $minPathSumValues[37] =", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $m; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n   \
    \ $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $path = [];\n        \
    \    $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n            dfs($grid,\
    \ $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n       \
    \     $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}", " \
    \   $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $visited[$i] = array_fill(0, $n, false);\n    }\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n    \
    \        $sum += $grid[$i][$j];\n            dfs($grid, $i, $j, $visited, $path,\
    \ $sum, $minPath, $minSum, $k);\n            $visited[$i][$j] = false;\n     \
    \   }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] = array_fill(0,\
    \ $n, false);\n    }\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n   \
    \ $minPathSum = dfs($grid, $visited, $k, 0, 0, $minPath, $minPathSum);\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathIndex = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum\
    \ = 0;\n    $minPathIndexSum = 0;\n    $minPathIndexSum = 0;\n    $minPathIndex",
  "    $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $visited[$i] = array_fill(0, $n, false);\n    }\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            dfs($grid, $i, $j, $visited, $path,\
    \ $sum, $k, $minPath, $minSum);\n            $visited[$i][$j] = false;\n     \
    \   }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n \
    \       for ($j = 0; $j < $n; $j++) {\n            $path = [];\n            $pathSum\
    \ = 0;\n            $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            $visited = [];\n            $visited[$i][$j] = true;\n          \
    \  $minPath = dfs($grid, $i, $j, $k - 1, $path, $pathSum, $minPath, $minPathSum,\
    \ $visited);\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $path = [];\n\
    \    $pathSum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $m; $j++) {\n            dfs($grid, $i, $j, $k, $visited, $path, $pathSum,\
    \ $minPath, $minPathSum);\n        }\n    }\n    return $minPath;\n}", "    $n\
    \ = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid,\
    \ $k, 0, 0, $visited, $minPath, $minPathSum);\n    return $minPath;\n}\n", " \
    \   $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n   ", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++)\
    \ {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $visited, $i, $j,\
    \ $path, $pathSum, $minPath, $minPathSum, $k);\n            $visited[$i][$j] =\
    \ false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $visited = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $visited[$i][$j] = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $pathSum = 0;\n            dfs($grid, $i, $j, $k, $visited, $path, $pathSum,\
    \ $minPath, $minPathSum);\n        }\n    }\n    return $minPath;\n}", "    $n\
    \ = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    $queue = new SplQueue();\n\
    \    $queue->enqueue([0, 0, 0, []]);\n    while (!$queue->isEmpty()) {\n     \
    \   list($i, $j, $len, $path) = $queue->dequeue();\n        if ($i < 0 || $i >=\
    \ $n || $j < 0 || $j >= $m || $len > $k || isset($visited[$i][$j][$len])) {\n\
    \            continue;\n        }\n        $visited[$i][$j][$len] = true;\n  \
    \      $path[] = $grid[$i][$j];\n        if ($len == $k - 1) {\n            return\
    \ $path;\n        }\n        $queue->enqueue([$i + 1, $j, $len + 1, $path]);\n\
    \        $queue->enqueue([$i - 1, $j, $len + 1, $path]);\n        $queue->enqueue([$i,\
    \ $j + 1, $len + 1, $path]);\n        $queue->enqueue([$i, $j - 1, $len + 1, $path]);\n\
    \    }\n}\n\n$grid = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n];\n$k\
    \ = 3;\nprint_r(minPath($grid, $k));", "    $n = count($grid);\n    $visited =\
    \ [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $k, $visited, $path, $sum);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSumIndex = 0;\n    $minPathSumIndexes\
    \ = [];\n    $minPathSumIndexes[0] = [0, 0];\n    $minPathSumIndexes[1] = [0,\
    \ 0];\n    $minPathSumIndexes[2] = [0, 0];\n    $minPathSumIndexes[3] = [0, 0];\n\
    \    $minPathSumIndexes[4] = [0, 0];\n    $minPathSumIndexes[5] = [0, 0];\n  \
    \  $minPathSumIndexes[6] = [0, 0];\n    $minPathSumIndexes[7] = [0, 0];\n    $minPathSumIndexes[8]\
    \ = [0, 0];\n    $minPathSumIndexes[9] = [0, 0];\n    $minPathSumIndexes[10] =\
    \ [0, 0];\n    $minPathSumIndexes[11] = [0, 0];\n    $minPathSumIndexes[12] =\
    \ [0, 0];\n    $minPathSumIndexes[13] = [0, 0];\n    $minPathSumIndexes[14] =\
    \ [0, 0];\n    $minPathSumIndexes[15] = [0, 0];\n    $minPathSumIndexes[16] =\
    \ [0, 0];\n    $minPathSumIndexes[17] = [0, 0];\n    $minPathSumIndexes[18] =\
    \ [0, 0];\n    $minPathSumIndexes[19] = [0, 0];\n    $minPathSumIndexes[20] =\
    \ [0, 0];\n    $minPathSumIndexes[21] = [0, 0];\n    $minPathSumIndexes[22] =\
    \ [0, 0];\n    $minPathSumIndexes[23] = [0, 0];\n    $minPathSumIndexes[24] =\
    \ [0, 0];\n    $minPathSumIndexes[25] =", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n         \
    \   $pathSum = $grid[$i][$j];\n            dfs($grid, $i, $j, $visited, $path,\
    \ $pathSum, $minPath, $minPathSum, $k, $n);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $k, $visited, $path, $sum);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] =\
    \ array_fill(0, $n, false);\n    }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            $visited[$i][$j] =\
    \ true;\n            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $visited, $path, $sum, $k, $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = [];\n \
    \   for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n   \
    \         $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n  \
    \  $minPathVal = [];\n    $minPathVal[0] = PHP_INT_MAX;\n    $minPathVal[1] =\
    \ PHP_INT_MAX;\n    $minPathVal[2] = PHP_INT_MAX;\n    $minPathVal[3] = PHP_INT_MAX;\n\
    \    $minPathVal[4] = PHP_INT_MAX;\n    $minPathVal[5] = PHP_INT_MAX;\n    $minPathVal[6]\
    \ = PHP_INT_MAX;\n    $minPathVal[7] = PHP_INT_MAX;\n    $minPathVal[8] = PHP_INT_MAX;\n\
    \    $minPathVal[9] = PHP_INT_MAX;\n    $minPathVal[10] = PHP_INT_MAX;\n    $minPathVal[11]\
    \ = PHP_INT_MAX;\n    $minPathVal[12] = PHP_INT_MAX;\n    $minPathVal[13] = PHP_INT_MAX;\n\
    \    $minPathVal[14] = PHP_INT_MAX;\n    $minPathVal[15] = PHP_INT_MAX;\n    $minPathVal[16]\
    \ = PHP_INT_MAX;\n    $minPathVal[17] = PHP_INT_MAX;\n    $minPathVal[18] = PHP_INT_MAX;\n\
    \    $minPathVal[19] = PHP_INT_MAX;\n    $minPathVal[20] = PHP_INT_MAX;\n    $minPathVal[21]\
    \ = PHP_INT_MAX;\n    $minPathVal[22] = PHP_INT_MAX;\n    $minPathVal[23] = PHP_INT_MAX;\n\
    \    $minPathVal[24] = PHP_INT_MAX;\n    $minPathVal[25] = PHP_INT", "    $n =\
    \ count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPath = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $i, $j, $visited,\
    \ $path, $pathSum, $minPath, $minPathSum, $k);\n            $visited[$i][$j] =\
    \ false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          $visited = dfs($grid, $i, $j, $k - 1, $visited, $path, $sum, $minPath,\
    \ $minSum);\n            $visited[$i][$j] = false;\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    dfs($grid, $visited, 0, 0, $k, 0, $minPathSum,\
    \ $minPath);\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathLen\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $pathLen = 0;\n            $pathSum = 0;\n            $visited[$i][$j] =\
    \ true;\n            $path[] = $grid[$i][$j];\n            $pathLen++;\n     \
    \       $pathSum += $grid[$i][$j];\n            dfs($grid, $i, $j, $visited, $path,\
    \ $pathLen, $pathSum, $minPath, $minPathLen, $minPathSum, $k);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] =\
    \ array_fill(0, $n, false);\n    }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            $visited[$i][$j] =\
    \ true;\n            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $visited, $path, $sum, $k, $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0; $i < $n; $i++) {\n    \
    \    for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n   \
    \         $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n  \
    \          dfs($grid, $visited, $i, $j, $path, $pathSum, $minPath, $minPathSum,\
    \ $k);\n            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n   ", "    $n\
    \ = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $visited[$i][$j] = false;\n        }\n    }\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n\
    \            $sum = 0;\n            dfs($grid, $i, $j, $k, $visited, $path, $sum);\n\
    \            if ($sum < $minSum) {\n                $minSum = $sum;\n        \
    \        $minPath = $path;\n            }\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $min",
  "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $sum = 0;\n            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $sum += $grid[$i][$j];\n            dfs($grid, $visited, $i, $j,\
    \ $path, $sum, $minPath, $minSum, $k);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_", "    $n = count($grid);\n    $visited = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $visited[$i] = [];\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid,\
    \ $visited, $minPath, $minPathSum, 0, 0, 0, $k);\n    return $minPath;\n}", " \
    \   $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $currPath = [];\n\
    \            $currPathSum = 0;\n            $visited[$i][$j] = true;\n       \
    \     $currPath[] = $grid[$i][$j];\n            $currPathSum += $grid[$i][$j];\n\
    \            dfs($grid, $visited, $currPath, $currPathSum, $minPath, $minPathSum,\
    \ $i, $j, $k);\n            $visited[$i][$j] = false;\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $visited = [];\n    $queue = new\
    \ SplQueue();\n    $queue->enqueue([0, 0, $grid[0][0]]);\n    $visited[0][0] =\
    \ true;\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    while (!$queue->isEmpty())\
    \ {\n        list($i, $j, $sum) = $queue->dequeue();\n        if ($sum > $minSum)\
    \ {\n            continue;\n        }\n        if ($i == $n - 1 && $j == $n -\
    \ 1) {\n            if ($sum < $minSum) {\n                $minSum = $sum;\n \
    \               $minPath = [$grid[$i][$j]];\n            } else if ($sum == $minSum)\
    \ {\n                $minPath[] = $grid[$i][$j];\n            }\n            continue;\n\
    \        }\n        if ($i < $n - 1 && !$visited[$i + 1][$j]) {\n            $visited[$i\
    \ + 1][$j] = true;\n            $queue->enqueue([$i + 1, $j, $sum + $grid[$i +\
    \ 1][$j]]);\n        }\n        if ($j < $n - 1 && !$visited[$i][$j + 1]) {\n\
    \            $visited[$i][$j + 1] = true;\n            $queue->enqueue([$i, $j\
    \ + 1, $sum + $grid[$i][$j + 1]]);\n        }\n    }\n    return $minPath;\n}\n\
    \n$grid = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n];\n$k = 5;\nprint_r(minPath($grid,\
    \ $k));", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n  \
    \  $minSum = PHP_INT_MAX;\n    $minSumPath = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            $path = [];\n            $sum = 0;\n            $visited[$i][$j]\
    \ = true;\n            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $k - 1, $n, $visited, $path, $sum, $minPath, $minSum,\
    \ $minSumPath);\n            $visited[$i][$j] = false;\n        }\n    }\n   \
    \ return $minSumPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPaths = [];\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n \
    \       }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            $path = [];\n            $sum = 0;\n            $pathSum\
    \ = 0;\n            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $sum += $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            $paths = [];\n            $paths[] = [$i, $j];\n            dfs($grid,\
    \ $i, $j, $visited, $path, $sum, $pathSum, $paths, $k, $minPath, $minSum, $minPathSum,\
    \ $minPaths);\n            $visited[$i][$j] = false;\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n   ", "    $n\
    \ = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathVal = PHP_INT_MAX;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n  \
    \          $pathVal = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathVal += $grid[$i][$j];\n            dfs($grid,\
    \ $i, $j, $visited, $path, $pathVal, $k, $minPath, $minPathVal);\n           \
    \ $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}", "   \
    \ $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n  \
    \          $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n            $minPath\
    \ = dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            dfs($grid, $i, $j, $k, $visited,\
    \ $path, $sum);\n            if ($sum < $minSum) {\n                $minSum =\
    \ $sum;\n                $minPath = $path;\n            }\n        }\n    }\n\
    \    return $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $m; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n   \
    \ $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $path = [];\n        \
    \    $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n            $minPath\
    \ = dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath", "    $m = count($grid);\n\
    \    $n = count($grid[0]);\n    $visited = array_fill(0, $m, array_fill(0, $n,\
    \ false));\n    $queue = new SplPriorityQueue();\n    $queue->insert([0, 0], -$grid[0][0]);\n\
    \    $visited[0][0] = true;\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    while (!$queue->isEmpty()) {\n        $curr = $queue->extract();\n      \
    \  $currSum = -$curr[1];\n        $currPath = $curr[0];\n        if (count($currPath)\
    \ == $k) {\n            if ($currSum < $minSum) {\n                $minSum = $currSum;\n\
    \                $minPath = $currPath;\n            }\n            continue;\n\
    \        }\n        $currRow = $currPath[count($currPath) - 1][0];\n        $currCol\
    \ = $currPath[count($currPath) - 1][1];\n        $neighbors = [[$currRow + 1,\
    \ $currCol], [$currRow - 1, $currCol], [$currRow, $currCol + 1], [$currRow, $currCol\
    \ - 1]];\n        foreach ($neighbors as $neighbor) {\n            $row = $neighbor[0];\n\
    \            $col = $neighbor[1];\n            if ($row < 0 || $row >= $m || $col\
    \ < 0 || $col >= $n || $visited[$row][$col]) {\n                continue;\n  \
    \          }\n            $visited[$row][$col] = true;\n            $queue->insert([array_merge($currPath,\
    \ [[$row, $col]]), $currSum + $grid[$row][$col]], -($currSum + $grid[$row][$col]));\n\
    \        }\n    }\n    return $minPath;\n}\n$grid = [\n    [1, 2, 3],\n    [4,\
    \ 5,", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = [];\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPath = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $m; $j++) {\n            $visited = [];\n            $path = [];\n       \
    \     $sum = 0;\n            $pathSum = 0;\n            dfs($grid, $i, $j, $visited,\
    \ $path, $sum, $pathSum, $k, $minPath, $minSum, $minPathSum);\n        }\n   \
    \ }\n    return $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        minPathHelper($grid, $i, $j, $k, $visited, $path, $sum, $minPath, $minSum);\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $m =\
    \ count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m, false));\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $path = [];\n        \
    \    $sum = 0;\n            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $sum += $grid[$i][$j];\n            dfs($grid, $i, $j, $visited,\
    \ $path, $sum, $k, $minPath, $minSum);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $min", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = true;\n            $path = [$grid[$i][$j]];\n            $sum = $grid[$i][$j];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $n, $i, $j, $k,\
    \ $visited, $path, $sum, $pathSum, $minPath, $minSum, $minPathSum);\n        \
    \    $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}", " \
    \   $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPaths = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n         \
    \   $sum = $grid[$i][$j];\n            dfs($grid, $i, $j, $visited, $path, $sum,\
    \ $k, $minPath, $minSum, $minPaths);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPaths;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n   ", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = 0; $j < $n; $j++) {\n            $path = [];\n            $pathSum = 0;\n\
    \            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $pathSum += $grid[$i][$j];\n            dfs($grid, $i, $j, $visited,\
    \ $path, $pathSum, $minPath, $minPathSum, $k);\n            $visited[$i][$j] =\
    \ false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n   ", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n          \
    \  $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n         \
    \   dfs($grid, $i, $j, $visited, $path, $pathSum, $k, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    // $grid = [\n    //     [1, 2, 3],\n    //     [4, 5, 6],\n    //  \
    \   [7, 8, 9]\n    // ];\n    // $k = 3;\n    // $grid = [\n    //     [1, 2,\
    \ 3],\n    //     [4, 5, 6],\n    //     [7, 8, 9]\n    // ];\n    // $k = 4;\n\
    \    // $grid = [\n    //     [1, 2, 3],\n    //     [4, 5, 6],\n    //     [7,\
    \ 8, 9]\n    // ];\n    // $k = 5;\n    // $grid = [\n    //     [1, 2, 3],\n\
    \    //     [4, 5, 6],\n    //     [7, 8, 9]\n    // ];\n    // $k = 6;\n    //\
    \ $grid = [\n    //     [1, 2, 3],\n    //     [4, 5, 6],\n    //     [7, 8, 9]\n\
    \    // ];\n    // $k = 7;\n    // $grid = [\n    //     [1, 2, 3],\n    //  \
    \   [4, 5, 6],\n    //     [7, 8, 9]\n    // ];\n    // $k = 8;\n    // $grid\
    \ = [\n    //     [1, 2, 3],\n    //     [4, 5, 6],\n    //     [7, 8, 9]\n  \
    \  // ];\n    // $k = 9;\n    // $grid = [\n    //     [1, 2, 3],\n    //    \
    \ [4, 5, 6],\n    //     [7, 8, 9]\n    // ];\n    // $k = 10;\n    // $grid =\
    \ [\n    //     [1, 2, 3],\n    //     [4, 5, 6],\n    //     [7, 8, 9]\n    //\
    \ ];\n    // $k = 11;\n    // $grid = [\n    //     [1, 2, 3],\n    //     [4,\
    \ 5, 6],\n    //     [7, 8, 9]\n    // ];", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n   ", "    $n = count($grid);\n    $visited = [];\n    $minPath\
    \ = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n   \
    \     }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n;\
    \ $j++) {\n            $path = [];\n            $sum = 0;\n            dfs($grid,\
    \ $visited, $i, $j, $k, $path, $sum);\n            if ($sum < $minSum) {\n   \
    \             $minSum = $sum;\n                $minPath = $path;\n           \
    \ }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n   \
    \ $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $visited, $n, $i, $j, $k, $path, $sum);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $pathSum = 0;\n            $visited[$i][$j]\
    \ = true;\n            $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            $minPath = dfs($grid, $i, $j, $visited, $path, $pathSum, $minPath,\
    \ $minPathSum, $k, $n);\n            $visited[$i][$j] = false;\n        }\n  \
    \  }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            $visited[$i][$j] =\
    \ true;\n            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $k - 1, $visited, $path, $sum, $minPath, $minSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            dfs($grid, $i, $j, $k, $visited,\
    \ $path, $sum);\n            if ($sum < $minSum) {\n                $minSum =\
    \ $sum;\n                $minPath = $path;\n            }\n        }\n    }\n\
    \    return $minPath;\n}", "    $n = count($grid);\n    $visited = [];\n    $minPath\
    \ = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n   \
    \     }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n;\
    \ $j++) {\n            $path = [];\n            $sum = 0;\n            dfs($grid,\
    \ $i, $j, $k, $visited, $path, $sum);\n            if ($sum < $minSum) {\n   \
    \             $minSum = $sum;\n                $minPath = $path;\n           \
    \ }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n   \
    \ $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $visited = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $visited[$i][$j] = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n            dfs($grid,\
    \ $i, $j, $path, $pathSum, $visited, $minPath, $minPathSum, $k);\n           \
    \ $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}", "   \
    \ $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $visited[$i] = array_fill(0, $n, false);\n    }\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $k, $visited, $path, $sum, $minPath, $minSum);\n \
    \       }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $path = [];\n            $sum = 0;\n            $visited[$i][$j]\
    \ = true;\n            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n\
    \            $visited = dfs($grid, $visited, $i, $j, $k - 1, $path, $sum, $minPath,\
    \ $minSum);\n            $visited[$i][$j] = false;\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited\
    \ = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n    \
    \        $sum += $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1, $visited,\
    \ $path, $sum, $minPath, $minSum);\n            $visited[$i][$j] = false;\n  \
    \      }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSumIndex = 0;\n    $minPathSumIndexes\
    \ = [];\n    $minPathSumIndexes[0] = [];\n    $minPathSumIndexes[1] = [];\n  \
    \  $minPathSumIndexes[2] = [];\n    $minPathSumIndexes[3] = [];\n    $minPathSumIndexes[4]\
    \ = [];\n    $minPathSumIndexes[5] = [];\n    $minPathSumIndexes[6] = [];\n  \
    \  $minPathSumIndexes[7] = [];\n    $minPathSumIndexes[8] = [];\n    $minPathSumIndexes[9]\
    \ = [];\n    $minPathSumIndexes[10] = [];\n    $minPathSumIndexes[11] = [];\n\
    \    $minPathSumIndexes[12] = [];\n    $minPathSumIndexes[13] = [];\n    $minPathSumIndexes[14]\
    \ = [];\n    $minPathSumIndexes[15] = [];\n    $minPathSumIndexes[16] = [];\n\
    \    $minPathSumIndexes[17] = [];\n    $minPathSumIndexes[18] = [];\n    $minPathSumIndexes[19]\
    \ = [];\n    $minPathSumIndexes[20] = [];\n    $minPathSumIndexes[21] = [];\n\
    \    $minPathSumIndexes[22] = [];\n    $minPathSumIndexes[23] = [];\n    $minPathSumIndexes[24]\
    \ = [];\n    $minPathSumIndexes[25] = [];\n    $minPathSumIndexes[26] = [];\n\
    \    $minPathSumIndexes[27] = [];\n    $minPathSumIndexes[28] = [];\n    $minPathSumIndexes[29]\
    \ = [];\n    $minPathSumIndexes[30] = [];\n    $minPathSumIndexes[31] = [];\n\
    \    $minPathSumIndexes[32", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \   ", "    $N = count($grid);\n    $visited = array_fill(0, $N, array_fill(0,\
    \ $N, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0; $i < $N; $i++) {\n    \
    \    for ($j = 0; $j < $N; $j++) {\n            $visited[$i][$j] = true;\n   \
    \         $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n  \
    \          dfs($grid, $visited, $i, $j, $k, $path, $pathSum, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $visited[$i] = [];\n        for ($j = 0; $j < $n; $j++) {\n     \
    \       $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = dfs($grid, $visited, $minPath, $minPathSum,\
    \ $k, 0, 0, 0);\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPaths = [];\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n  \
    \          $minPath = [$grid[$i][$j]];\n            $minSum = $grid[$i][$j];\n\
    \            dfs($grid, $visited, $minPath, $minSum, $minPaths, $i, $j, $k, $n);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    usort($minPaths,\
    \ function($a, $b) {\n        $len = min(count($a), count($b));\n        for ($i\
    \ = 0; $i < $len; $i++) {\n            if ($a[$i] < $b[$i]) {\n              \
    \  return -1;\n            } else if ($a[$i] > $b[$i]) {\n                return\
    \ 1;\n            }\n        }\n        return 0;\n    });\n    return $minPaths[0];\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n\
    \            $sum = 0;\n            dfs($grid, $i, $j, $k, $visited, $path, $sum,\
    \ $minPath, $minSum);\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $pathSum = 0;\n            $pathSum = 0;\n\
    \            $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            $visited = [];\n            $visited = [];\n            $visited[$i][$j]\
    \ = true;\n            $visited[$i][$j] = true;\n            $queue = [];\n  \
    \          $queue = [];\n            $queue[] = [$i, $j];\n            $queue[]\
    \ = [$i, $j];\n            while ($queue) {\n                $curr = array_shift($queue);\n\
    \                $curr = array_shift($queue);\n                $x = $curr[0];\n\
    \                $x = $curr[0];\n                $y = $curr[1];\n            \
    \    $y = $curr[1];\n                $path[] = $grid[$x][$y];\n              \
    \  $path[] = $grid[$x][$y];\n                $pathSum += $grid[$x][$y];\n    \
    \            $pathSum += $grid[$x][$y];\n                if (count($path) == $k)\
    \ {\n                    if ($pathSum < $minPathSum) {\n                     \
    \   $minPathSum = $pathSum;\n                        $minPathSum = $pathSum;\n\
    \                        $minPath = $path;\n                        $minPath =\
    \ $path;\n                    }\n                    break;\n                }\n\
    \                if ($x > 0 && !$visited[$x - 1][$y]) {\n                    $visited[$x\
    \ - 1][$y] = true;\n                    $visited[$x - 1][$y] = true;\n       \
    \             $", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path\
    \ = [];\n            $sum = 0;\n            $visited[$i][$j] = true;\n       \
    \     dfs($grid, $i, $j, $k, $path, $sum, $minPath, $minSum, $visited);\n    \
    \        $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}",
  "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid,\
    \ $visited, $minPath, $minPathSum, 0, 0, $k, 0);\n    return $minPath;\n}\n",
  "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPath = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            $path = [];\n            $pathSum = 0;\n        \
    \    $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n        \
    \    $pathSum += $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1, $visited,\
    \ $path, $pathSum, $minPath, $minPathSum);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n\
    \    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum\
    \ = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n\
    \    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum\
    \ = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n\
    \    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum\
    \ = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n\
    \    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum\
    \ = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n\
    \    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum\
    \ = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n\
    \    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum\
    \ = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n\
    \    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n    $minPathSum\
    \ = INF;\n    $minPathSum = INF;\n    $minPathSum = INF;\n   ", "    $n = count($grid);\n\
    \    $path = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            $pathSum = 0;\n   \
    \         $visited = array_fill(0, $n, array_fill(0, $n, false));\n          \
    \  $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n          \
    \  $sum += $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n          \
    \  $visited[$i][$j] = true;\n            dfs($grid, $i, $j, $visited, $path, $sum,\
    \ $pathSum, $minPath, $minSum, $minPathSum, $k);\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $queue = new SplQueue();\n    $queue->enqueue([0, 0, $grid[0][0]]);\n\
    \    $visited[0][0] = true;\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    while (!$queue->isEmpty()) {\n        list($i, $j, $sum) = $queue->dequeue();\n\
    \        if ($i == $n - 1 && $j == $n - 1) {\n            if ($sum < $minSum)\
    \ {\n                $minSum = $sum;\n                $minPath = [$grid[$i][$j]];\n\
    \            } else if ($sum == $minSum) {\n                $minPath[] = $grid[$i][$j];\n\
    \            }\n        }\n        if ($i > 0 && !$visited[$i - 1][$j]) {\n  \
    \          $queue->enqueue([$i - 1, $j, $sum + $grid[$i - 1][$j]]);\n        \
    \    $visited[$i - 1][$j] = true;\n        }\n        if ($i < $n - 1 && !$visited[$i\
    \ + 1][$j]) {\n            $queue->enqueue([$i + 1, $j, $sum + $grid[$i + 1][$j]]);\n\
    \            $visited[$i + 1][$j] = true;\n        }\n        if ($j > 0 && !$visited[$i][$j\
    \ - 1]) {\n            $queue->enqueue([$i, $j - 1, $sum + $grid[$i][$j - 1]]);\n\
    \            $visited[$i][$j - 1] = true;\n        }\n        if ($j < $n - 1\
    \ && !$visited[$i][$j + 1]) {\n            $queue->enqueue([$i, $j + 1, $sum +\
    \ $grid[$i][$j + 1]]);\n            $visited[$i][$j + 1] = true", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            $visited[$i][$j] = false;\n        }\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n         \
    \   $path = [];\n            $sum = 0;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          $res = dfs($grid, $i, $j, $k - 1, $visited, $path, $sum);\n       \
    \     if ($res[1] < $minSum) {\n                $minSum = $res[1];\n         \
    \       $minPath = $res[0];\n            }\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $m =\
    \ count($grid[0]);\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n         \
    \   $path = [];\n            $pathSum = 0;\n            $visited = [];\n     \
    \       $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n     \
    \       $pathSum += $grid[$i][$j];\n            $minPath = dfs($grid, $i, $j,\
    \ $k, $path, $pathSum, $minPath, $minPathSum, $visited);\n        }\n    }\n \
    \   return $minPath;\n}", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $pathSum = 0;\n            $visited[$i][$j]\
    \ = true;\n            $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited = [];\n            $path = [];\n         \
    \   $sum = 0;\n            dfs($grid, $i, $j, $visited, $path, $sum, $k, $minPath,\
    \ $minSum);\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $visited, $i, $j, $k, $path, $sum);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPathSumHelper = function ($i, $j, $sum, $path) use ($grid,\
    \ $k, $n, $m, &$visited, &$minPath, &$minSum, &$minPathSum) {\n        if ($sum\
    \ > $minSum) {\n            return;\n        }\n        if ($sum == $k) {\n  \
    \          if ($sum < $minSum) {\n                $minSum = $sum;\n          \
    \      $minPath = $path;\n            } else if ($sum == $minSum) {\n        \
    \        $pathSum = 0;\n                for ($i = 0; $i < $k; $i++) {\n      \
    \              $pathSum += $path[$i];\n                }\n                if ($pathSum\
    \ < $minPathSum) {\n                    $minPathSum = $pathSum;\n            \
    \        $minPath = $path;\n                }\n            }\n            return;\n\
    \        }\n        if ($i < 0 || $i >= $n || $j < 0 || $j >= $m || $visited[$i][$j])\
    \ {\n            return;\n        }\n        $visited[$i][$j] = true;\n      \
    \  $path[] = $grid[$i][$j];\n        $minPathSumHelper($i + 1, $j, $sum + 1, $path);\n\
    \        $minPathSumHelper($i - 1, $j, $sum + 1, $path);\n        $minPathSumHelper($i,\
    \ $j + 1, $sum + 1, $path);\n        $minPathSumHelper($i, $j - 1, $sum + 1, $path);\n\
    \        $visited[$i][$j] = false;\n    };\n    for ($i = 0; $i < $n; $i++) {\n\
    \        for ($j = 0; $j < $m; $j++) {\n           ", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n         \
    \   $path = [];\n            $pathSum = 0;\n            dfs($grid, $i, $j, $k,\
    \ $visited, $path, $pathSum, $minPath, $minPathSum);\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n  \
    \  }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n\
    \            $path = [];\n            $sum = 0;\n            dfs($grid, $visited,\
    \ $i, $j, $k, $path, $sum);\n            if ($sum < $minSum) {\n             \
    \   $minSum = $sum;\n                $minPath = $path;\n            }\n      \
    \  }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited =\
    \ [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $visited, $i, $j, $k, $path, $sum);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] =\
    \ [];\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = dfs($grid, $visited, $minPath, $minSum, $minPathSum,\
    \ $k, 0, 0, 0, 0);\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] = [];\n     \
    \   for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n   \
    \     }\n    }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum", "    $n = count($grid);\n    $visited = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] = [];\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n        }\n  \
    \  }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n  \
    \          $sum = 0;\n            dfs($grid, $i, $j, $visited, $path, $sum, $minPath,\
    \ $minSum, $k);\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path\
    \ = [];\n            $pathSum = 0;\n            $visited[$i][$j] = true;\n   \
    \         $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n \
    \           $minPath = dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath,\
    \ $minPathSum);\n            $visited[$i][$j] = false;\n        }\n    }\n   \
    \ return $minPath;\n}", "    $n = count($grid);\n    $visited = [];\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $visited[$i] = array_fill(0, $n, false);\n  \
    \  }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n  \
    \          $sum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n            dfs($grid,\
    \ $i, $j, $k - 1, $visited, $path, $sum, $minPath, $minSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n   ", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =",
  "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n   ", "    $n = count($grid);\n    $visited =\
    \ array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $path = [];\n            $pathSum = 0;\n          \
    \  $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n          \
    \  $pathSum += $grid[$i][$j];\n            dfs($grid, $i, $j, $visited, $path,\
    \ $pathSum, $minPath, $minPathSum, $k);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n   ", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = true;\n            $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $n; $j++) {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $i, $j, $visited,\
    \ $path, $pathSum, $k, $minPath, $minPathSum);\n            $visited[$i][$j] =\
    \ false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n   ", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n    \
    \        $sum += $grid[$i][$j];\n            dfs($grid, $i, $j, $k, $visited,\
    \ $path, $sum, $minPath, $minSum);\n            $visited[$i][$j] = false;\n  \
    \      }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $queue = new\
    \ SplQueue();\n    $queue->enqueue([0, 0, $grid[0][0], [$grid[0][0]]]);\n    $visited[0][0]\
    \ = true;\n    $minPath = [];\n    while (!$queue->isEmpty()) {\n        list($i,\
    \ $j, $sum, $path) = $queue->dequeue();\n        if ($sum > $k) {\n          \
    \  continue;\n        }\n        if ($sum == $k) {\n            if (empty($minPath)\
    \ || $path < $minPath) {\n                $minPath = $path;\n            }\n \
    \           continue;\n        }\n        if ($i + 1 < $n && !$visited[$i + 1][$j])\
    \ {\n            $visited[$i + 1][$j] = true;\n            $queue->enqueue([$i\
    \ + 1, $j, $sum + $grid[$i + 1][$j], array_merge($path, [$grid[$i + 1][$j]])]);\n\
    \        }\n        if ($j + 1 < $m && !$visited[$i][$j + 1]) {\n            $visited[$i][$j\
    \ + 1] = true;\n            $queue->enqueue([$i, $j + 1, $sum + $grid[$i][$j +\
    \ 1], array_merge($path, [$grid[$i][$j + 1]])]);\n        }\n    }\n    return\
    \ $minPath;\n}\n$grid = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n];\n\
    $k = 12;\nprint_r(minPath($grid, $k));\necho PHP_EOL;\n$grid = [\n    [1, 2, 3],\n\
    \    [4, 5, 6],\n    [7, 8, 9]\n];\n$k = 13;\nprint_r(minPath($", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = true;\n            $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $queue = new SplQueue();\n    $queue->enqueue([0,\
    \ 0, 0, []]);\n    while (!$queue->isEmpty()) {\n        list($i, $j, $sum, $path)\
    \ = $queue->dequeue();\n        if ($i < 0 || $i >= $n || $j < 0 || $j >= $n ||\
    \ $visited[$i][$j]) {\n            continue;\n        }\n        $visited[$i][$j]\
    \ = true;\n        $sum += $grid[$i][$j];\n        $path[] = $grid[$i][$j];\n\
    \        if (count($path) === $k) {\n            if ($sum < $minPathSum) {\n \
    \               $minPathSum = $sum;\n                $minPath = $path;\n     \
    \       }\n            continue;\n        }\n        $queue->enqueue([$i - 1,\
    \ $j, $sum, $path]);\n        $queue->enqueue([$i + 1, $j, $sum, $path]);\n  \
    \      $queue->enqueue([$i, $j - 1, $sum, $path]);\n        $queue->enqueue([$i,\
    \ $j + 1, $sum, $path]);\n    }\n    return $minPath;\n}\n\n$grid = [\n    [1,\
    \ 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n];\n$k = 5;\nprint_r(minPath($grid, $k));\n\
    $grid = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n];\n$k = 6;\nprint_r(minPath($grid,\
    \ $k));\n$grid = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8,", "    $n = count($grid);\n\
    \    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] =\
    \ array_fill(0, $n, false);\n    }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          $path = [];\n            $sum = 0;\n            $visited[$i][$j] =\
    \ true;\n            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n\
    \            dfs($grid, $visited, $i, $j, $path, $sum, $minPath, $minSum, $k);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $m; $j++) {\n            $path = [];\n            $sum = 0;\n            dfs($grid,\
    \ $i, $j, $k, $visited, $path, $sum);\n            if ($sum < $minSum) {\n   \
    \             $minSum = $sum;\n                $minPath = $path;\n           \
    \ }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n   \
    \ $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m, false));\n\
    \    $queue = new SplQueue();\n    $queue->enqueue([0, 0, $grid[0][0], [$grid[0][0]]]);\n\
    \    $visited[0][0] = true;\n    $min = PHP_INT_MAX;\n    $result = [];\n    while\
    \ (!$queue->isEmpty()) {\n        list($x, $y, $sum, $path) = $queue->dequeue();\n\
    \        if ($sum > $min) {\n            continue;\n        }\n        if (count($path)\
    \ == $k) {\n            if ($sum < $min) {\n                $min = $sum;\n   \
    \             $result = $path;\n            } else if ($sum == $min) {\n     \
    \           $result = minPathHelper($result, $path);\n            }\n        \
    \    continue;\n        }\n        if ($x > 0 && !$visited[$x - 1][$y]) {\n  \
    \          $visited[$x - 1][$y] = true;\n            $queue->enqueue([$x - 1,\
    \ $y, $sum + $grid[$x - 1][$y], array_merge($path, [$grid[$x - 1][$y]])]);\n \
    \       }\n        if ($x < $n - 1 && !$visited[$x + 1][$y]) {\n            $visited[$x\
    \ + 1][$y] = true;\n            $queue->enqueue([$x + 1, $y, $sum + $grid[$x +\
    \ 1][$y], array_merge($path, [$grid[$x + 1][$y]])]);\n        }\n        if ($y\
    \ > 0 && !$visited[$x][$y - 1]) {\n            $visited[$x][$y - 1] = true;\n\
    \            $queue->enqueue([$x, $y - 1, $sum + $grid[$x][$y - 1], array_merge($path,\
    \ [$grid[$x][$y", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++)\
    \ {\n            $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = 0; $j < $m; $j++) {\n            $path = [];\n            $pathSum = 0;\n\
    \            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $pathSum += $grid[$i][$j];\n            $path = dfs($grid, $i, $j,\
    \ $k - 1, $visited, $path, $pathSum, $minPath, $minPathSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n         \
    \   $path = [];\n            $pathSum = 0;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            $path = findPath($grid, $i, $j, $k - 1, $visited, $path, $pathSum);\n\
    \            if ($pathSum < $minPathSum) {\n                $minPathSum = $pathSum;\n\
    \                $minPath = $path;\n            }\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $path\
    \ = [];\n            $sum = 0;\n            $visited[$i][$j] = true;\n       \
    \     $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n         \
    \   dfs($grid, $visited, $i, $j, $path, $sum, $k, $minPath, $minSum);\n      \
    \      $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}",
  "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $m, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $min", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $result = [];\n\
    \    $min = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n            $result[]\
    \ = $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1, $visited, $result,\
    \ $min);\n            $visited[$i][$j] = false;\n            array_pop($result);\n\
    \        }\n    }\n    return $min;\n}", "    $rows = count($grid);\n    $cols\
    \ = count($grid[0]);\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n   \
    \ for ($i = 0; $i < $rows; $i++) {\n        for ($j = 0; $j < $cols; $j++) {\n\
    \            $path = [];\n            $pathSum = 0;\n            $path[] = $grid[$i][$j];\n\
    \            $pathSum += $grid[$i][$j];\n            $visited = [];\n        \
    \    $visited[$i][$j] = true;\n            $path = findPath($grid, $i, $j, $k\
    \ - 1, $path, $pathSum, $visited);\n            if ($pathSum < $minPathSum) {\n\
    \                $minPathSum = $pathSum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPaths = [];\n    $path = [];\n    $sum =\
    \ 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n\
    \            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $sum += $grid[$i][$j];\n            dfs($grid, $visited, $i, $j,\
    \ $k, $path, $sum, $minPath, $minSum, $minPaths);\n            $visited[$i][$j]\
    \ = false;\n            array_pop($path);\n            $sum -= $grid[$i][$j];\n\
    \        }\n    }\n    return $minPaths;\n}", "    $n = count($grid);\n    $m\
    \ = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m, false));\n\
    \    $min = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $path = [];\n        \
    \    dfs($grid, $i, $j, $k, $visited, $path, $min, $minPath);\n        }\n   \
    \ }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = true;\n            $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n\
    \            dfs($grid, $visited, $i, $j, $path, $pathSum, $minPath, $minPathSum,\
    \ $k, $n);\n            $visited[$i][$j] = false;\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++)\
    \ {\n            $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n\
    \    $minPathValue = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ for ($j = 0; $j < $m; $j++) {\n            $path = [];\n            $pathValue\
    \ = 0;\n            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $pathValue += $grid[$i][$j];\n            $visited = dfs($grid, $visited,\
    \ $path, $pathValue, $minPath, $minPathValue, $i, $j, $k);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $k, $visited, $path, $sum);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $dfs = function($i, $j, $path, $pathSum)\
    \ use ($n, $k, &$minPath, &$minPathSum, &$visited, &$dfs) {\n        if ($pathSum\
    \ > $minPathSum) {\n            return;\n        }\n        if (count($path) ==\
    \ $k) {\n            if ($pathSum < $minPathSum) {\n                $minPathSum\
    \ = $pathSum;\n                $minPath = $path;\n            }\n            return;\n\
    \        }\n        $visited[$i][$j] = true;\n        if ($i > 0 && !$visited[$i\
    \ - 1][$j]) {\n            $dfs($i - 1, $j, array_merge($path, [$grid[$i - 1][$j]]),\
    \ $pathSum + $grid[$i - 1][$j]);\n        }\n        if ($i < $n - 1 && !$visited[$i\
    \ + 1][$j]) {\n            $dfs($i + 1, $j, array_merge($path, [$grid[$i + 1][$j]]),\
    \ $pathSum + $grid[$i + 1][$j]);\n        }\n        if ($j > 0 && !$visited[$i][$j\
    \ - 1]) {\n            $dfs($i, $j - 1, array_merge($path, [$grid[$i][$j - 1]]),\
    \ $pathSum + $grid[$i][$j - 1]);\n        }\n        if ($j < $n - 1 && !$visited[$i][$j\
    \ + 1]) {\n            $dfs($i, $j + 1, array_merge($path, [$grid[$i][$j + 1]]),\
    \ $pathSum + $grid[$i][$j + 1]);\n        }\n        $visited[$i][$j] = false;\n\
    \    };\n", "    $n = count($grid);\n    $visited = [];\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n            $pathSum +=\
    \ $grid[$i][$j];\n            $path = dfs($grid, $i, $j, $visited, $path, $sum,\
    \ $pathSum, $k, $minPath, $minSum, $minPathSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++)\
    \ {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $visited, $i, $j,\
    \ $path, $pathSum, $minPath, $minPathSum, $k);\n            $visited[$i][$j] =\
    \ false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n            $path\
    \ = [$grid[$i][$j]];\n            $sum = $grid[$i][$j];\n            dfs($grid,\
    \ $visited, $i, $j, $path, $sum, $minPath, $minSum, $k);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] =\
    \ [];\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = dfs($grid, $n, 0, 0, $k, $visited, $minPath, $minPathSum);\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n   ", "    $n\
    \ = count($grid);\n    $visited = [];\n    $minPath = [];\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    $minPath = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n\
    \            $path = [$grid[$i][$j]];\n            dfs($grid, $visited, $i, $j,\
    \ $k, $path, $minPath);\n            $visited[$i][$j] = false;\n        }\n  \
    \  }\n    return $minPath;\n}", "    $n = count($grid);\n    $path = [];\n   \
    \ $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n        \
    \    $sum = 0;\n            $visited = [];\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n  \
    \          $minPath = dfs($grid, $i, $j, $k, $path, $sum, $minPath, $visited);\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $min", "    $n = count($grid);\n    $visited = array_fill(0,\
    \ $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = dfs($grid, $visited, $minPath, $minPathSum, 0, 0, $k, 0);\n\
    \    return $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $m; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n    \
    \        $sum += $grid[$i][$j];\n            $visited[$i][$j] = false;\n     \
    \       dfs($grid, $i, $j, $k - 1, $path, $sum, $visited, $minPath, $minSum);\n\
    \        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $k, $visited, $path, $sum);\n            if ($sum\
    \ < $minSum) {\n                $minSum = $sum;\n                $minPath = $path;\n\
    \            }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = dfs($grid, $visited, $minPath,\
    \ $minPathSum, $k, 0, 0, 0);\n    return $minPath;\n}\n", "    $n = count($grid);\n\
    \    $visited = [];\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $path = [];\n            $sum = 0;\n    \
    \        dfs($grid, $i, $j, $visited, $path, $sum, $k, $minPath, $minSum);\n \
    \       }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n    $m =\
    \ count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m, false));\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $path = [];\n  \
    \          $pathSum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n            dfs($grid,\
    \ $i, $j, $visited, $path, $pathSum, $minPath, $minPathSum, $k);\n           \
    \ $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n}", "   \
    \ $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j <\
    \ $m; $j++) {\n            $visited = [];\n            $path = [];\n         \
    \   $sum = 0;\n            $pathSum = 0;\n            $path = [];\n          \
    \  $pathSum = 0;\n            dfs($grid, $i, $j, $k, $visited, $path, $sum, $pathSum,\
    \ $minPath, $minPathSum);\n        }\n    }\n    return $minPath;\n}", "    $n\
    \ = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPath = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            $path = [];\n            $sum = 0;\n            $pathSum\
    \ = 0;\n            $visited[$i][$j] = true;\n            $path[] = $grid[$i][$j];\n\
    \            $sum += $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            $path = dfs($grid, $i, $j, $k - 1, $visited, $path, $sum, $pathSum,\
    \ $minPath, $minSum, $minPathSum);\n            $visited[$i][$j] = false;\n  \
    \      }\n    }\n    return $minPath;\n}\n", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = true;\n\
    \            $path = [$grid[$i][$j]];\n            $pathSum = $grid[$i][$j];\n\
    \            dfs($grid, $i, $j, $k - 1, $path, $pathSum, $minPath, $minPathSum,\
    \ $visited);\n            $visited[$i][$j] = false;\n        }\n    }\n    return\
    \ $minPath;\n}", "    $n = count($grid);\n    $m = count($grid[0]);\n    $visited\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++)\
    \ {\n            $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n\
    \    $minPathValue = [];\n    $minPathValue[0] = PHP_INT_MAX;\n    $minPathValue[1]\
    \ = PHP_INT_MAX;\n    $minPathValue[2] = PHP_INT_MAX;\n    $minPathValue[3] =\
    \ PHP_INT_MAX;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m;\
    \ $j++) {\n            $path = [];\n            $pathValue = 0;\n            $visited[$i][$j]\
    \ = true;\n            $path[] = $grid[$i][$j];\n            $pathValue += $grid[$i][$j];\n\
    \            $result = findPath($grid, $i, $j, $k - 1, $visited, $path, $pathValue,\
    \ $minPathValue);\n            if ($result[0] < $minPathValue[0]) {\n        \
    \        $minPathValue = $result;\n                $minPath = $path;\n       \
    \     }\n            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $visited[$i] = [];\n        for ($j = 0; $j < $n; $j++) {\n     \
    \       $visited[$i][$j] = false;\n        }\n    }\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = dfs($grid, $visited, $n, 0, 0, $k, 0, $minPath,\
    \ $minPathSum);\n    return $minPath;\n}", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n   ", "    $n = count($grid);\n    $visited = [];\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $visited[$i] = array_fill(0, $n, false);\n  \
    \  }\n    $minPath = [];\n    $minPathValue = PHP_INT_MAX;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path = [];\n\
    \            $pathValue = PHP_INT_MAX;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $pathValue = $grid[$i][$j];\n\
    \            dfs($grid, $visited, $i, $j, $k, $path, $pathValue, $minPath, $minPathValue);\n\
    \            $visited[$i][$j] = false;\n        }\n    }\n    return $minPath;\n\
    }", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n,\
    \ false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $path\
    \ = [];\n            $pathSum = 0;\n            $visited[$i][$j] = true;\n   \
    \         $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n \
    \           $visited[$i][$j] = false;\n            $path = dfs($grid, $visited,\
    \ $i, $j, $path, $pathSum, $k);\n            if ($pathSum < $minPathSum) {\n \
    \               $minPathSum = $pathSum;\n                $minPath = $path;\n \
    \           }\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++)\
    \ {\n            $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n\
    \            $pathSum = $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1,\
    \ $visited, $path, $pathSum, $minPath, $minPathSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = array_fill(0, $n, array_fill(0, $m,\
    \ false));\n    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            $path = [];\n\
    \            $sum = 0;\n            $visited[$i][$j] = true;\n            $path[]\
    \ = $grid[$i][$j];\n            $sum += $grid[$i][$j];\n            dfs($grid,\
    \ $visited, $i, $j, $k - 1, $path, $sum, $minPath, $minSum);\n            $visited[$i][$j]\
    \ = false;\n        }\n    }\n    return $minPath;\n}", "    $n = count($grid);\n\
    \    $m = count($grid[0]);\n    $visited = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = 0; $j < $m; $j++) {\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n         \
    \   $path = [];\n            $pathSum = 0;\n            $visited[$i][$j] = true;\n\
    \            $path[] = $grid[$i][$j];\n            $pathSum += $grid[$i][$j];\n\
    \            $minPath = dfs($grid, $i, $j, $k - 1, $visited, $path, $pathSum,\
    \ $minPath, $minPathSum);\n            $visited[$i][$j] = false;\n        }\n\
    \    }\n    return $minPath;\n}", "    $n = count($grid);\n    $visited = [];\n\
    \    $queue = new SplQueue();\n    $queue->enqueue([0, 0, 0, []]);\n    while\
    \ (!$queue->isEmpty()) {\n        list($i, $j, $l, $path) = $queue->dequeue();\n\
    \        if ($i < 0 || $i >= $n || $j < 0 || $j >= $n || $l > $k || isset($visited[$i][$j][$l]))\
    \ {\n            continue;\n        }\n        $visited[$i][$j][$l] = true;\n\
    \        $path[] = $grid[$i][$j];\n        if ($l == $k) {\n            return\
    \ $path;\n        }\n        $queue->enqueue([$i - 1, $j, $l + 1, $path]);\n \
    \       $queue->enqueue([$i + 1, $j, $l + 1, $path]);\n        $queue->enqueue([$i,\
    \ $j - 1, $l + 1, $path]);\n        $queue->enqueue([$i, $j + 1, $l + 1, $path]);\n\
    \    }\n}\n\n$grid = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n];\n$k\
    \ = 5;\nprint_r(minPath($grid, $k));", "    $n = count($grid);\n    $visited =\
    \ array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPaths = [];\n    $minPathsSum\
    \ = [];\n    $minPathsSum[0] = 0;\n    $minPaths[0] = [];\n    $minPathsSum[1]\
    \ = $grid[0][0];\n    $minPaths[1] = [$grid[0][0]];\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            if ($i == 0 && $j\
    \ == 0) {\n                continue;\n            }\n            $minPathsSum[$i\
    \ * $n + $j + 1] = PHP_INT_MAX;\n            $minPaths[$i * $n + $j + 1] = [];\n\
    \            if ($i > 0) {\n                $sum = $minPathsSum[($i - 1) * $n\
    \ + $j + 1] + $grid[$i][$j];\n                if ($sum < $minPathsSum[$i * $n\
    \ + $j + 1]) {\n                    $minPathsSum[$i * $n + $j + 1] = $sum;\n \
    \                   $minPaths[$i * $n + $j + 1] = $minPaths[($i - 1) * $n + $j\
    \ + 1];\n                }\n            }\n            if ($j > 0) {\n       \
    \         $sum = $minPathsSum[$i * $n + $j + 1 - 1] + $grid[$i][$j];\n       \
    \         if ($sum < $minPathsSum[$i * $n + $j + 1]) {\n                    $minPathsSum[$i\
    \ * $n + $j + 1] = $sum;\n                    $minPaths[$i * $n + $j + 1] = $minPaths[$i\
    \ * $n + $j + 1 - 1];\n               ", "    $n = count($grid);\n    $visited\
    \ = array_fill(0, $n, array_fill(0, $n, false));\n    $minPath = [];\n    $minSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath\
    \ = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPath = [];\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPath", "    $n = count($grid);\n    $m = count($grid[0]);\n\
    \    $visited = array_fill(0, $n, array_fill(0, $m, false));\n    $minPath = [];\n\
    \    $minSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum =\
    \ PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPath", "    $n = count($grid);\n    $visited = array_fill(0, $n, array_fill(0,\
    \ $n, false));\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n\
    \    $minPathSum = PHP_INT_MAX;\n    $minPathSum = PHP_INT_MAX;\n   ", "    $n\
    \ = count($grid);\n    $visited = array_fill(0, $n, array_fill(0, $n, false));\n\
    \    $minPath = [];\n    $minSum = PHP_INT_MAX;\n    $minPaths = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n         \
    \   $visited[$i][$j] = true;\n            $path = [$grid[$i][$j]];\n         \
    \   $sum = $grid[$i][$j];\n            dfs($grid, $i, $j, $k - 1, $visited, $path,\
    \ $sum, $minPath, $minSum, $minPaths);\n            $visited[$i][$j] = false;\n\
    \        }\n    }\n    return $minPaths;\n}", "    $n = count($grid);\n    $visited\
    \ = [];\n    for ($i = 0; $i < $n; $i++) {\n        $visited[$i] = [];\n     \
    \   for ($j = 0; $j < $n; $j++) {\n            $visited[$i][$j] = false;\n   \
    \     }\n    }\n    $minPath = [];\n    $minPathSum = PHP_INT_MAX;\n    $minPathSum\
    \ = dfs($grid, $n, 0, 0, $visited, $k, $minPath, $minPathSum);\n    return $minPath;\n\
    }"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

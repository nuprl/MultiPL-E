name: HumanEval_3_below_zero
language: php
prompt: "<?php\n// You're given a list of deposit and withdrawal operations on a bank\
  \ account that starts with\n// zero balance. Your task is to detect if at any point\
  \ the balance of account fallls below zero, and\n// at that point function should\
  \ return True. Otherwise it should return False.\nfunction below_zero($operations)\
  \ {\n"
tests: "function candidate(...$args) {\n    return below_zero(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, -4, 5, 6)) !==\
  \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1,\
  \ 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true)\
  \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $balance = 0;\n    foreach ($operations as $operation) {\n    \
    \    $balance += $operation;\n        if ($balance < 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n", "    $balance = 0;\n    foreach\
    \ ($operations as $operation) {\n        $balance += $operation;\n        if ($balance\
    \ < 0) {\n            return true;\n        }\n    }\n    return false;\n}\n",
  "    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n", "    $balance = 0;\n    foreach ($operations\
    \ as $operation) {\n        $balance += $operation;\n        if ($balance < 0)\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n", "  \
    \  $balance = 0;\n    foreach ($operations as $operation) {\n        if ($operation[0]\
    \ == 'D') {\n            $balance += $operation[1];\n        } else {\n      \
    \      $balance -= $operation[1];\n        }\n        if ($balance < 0) {\n  \
    \          return true;\n        }\n    }\n    return false;\n}\n", "    $balance\
    \ = 0;\n    foreach ($operations as $operation) {\n        $balance += $operation;\n\
    \        if ($balance < 0) {\n            return true;\n        }\n    }\n   \
    \ return false;\n}\n", "    $balance = 0;\n    foreach ($operations as $operation)\
    \ {\n        if ($operation[0] == 'D') {\n            $balance += $operation[1];\n\
    \        } else {\n            $balance -= $operation[1];\n        }\n       \
    \ if ($balance < 0) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\n$operations = [['D', 100], ['W', 50], ['D', 100], ['W', 50], ['D',\
    \ 100], ['W', 50], ['D', 100], ['W', 50]];\nvar_dump(below_zero($operations));\n\
    \n$operations = [['D', 100], ['W', 50], ['D', 100], ['W', 50], ['D', 100], ['W',\
    \ 50], ['D', 100], ['W', 150]];\nvar_dump(below_zero($operations));", "    $balance\
    \ = 0;\n    foreach ($operations as $operation) {\n        $balance += $operation;\n\
    \        if ($balance < 0) {\n            return true;\n        }\n    }\n   \
    \ return false;\n}\n", "    $balance = 0;\n    foreach ($operations as $operation)\
    \ {\n        $balance += $operation;\n        if ($balance < 0) {\n          \
    \  return true;\n        }\n    }\n    return false;\n}\n", "  $balance = 0;\n\
    \  foreach ($operations as $operation) {\n    $balance += $operation;\n    if\
    \ ($balance < 0) {\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \   $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n", "    $balance = 0;\n    foreach ($operations\
    \ as $operation) {\n        $balance += $operation;\n        if ($balance < 0)\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n\n$operations\
    \ = [100, -50, -100, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50,\
    \ -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50,\
    \ -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50,\
    \ -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50,\
    \ -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50,\
    \ -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50,\
    \ -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50,\
    \ -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50,\
    \ -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50,\
    \ -50, -50, -50, -50, -50, -50, -50, -50", "    $balance = 0;\n    foreach ($operations\
    \ as $operation) {\n        $balance += $operation;\n        if ($balance < 0)\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n", "  \
    \  $balance = 0;\n    foreach ($operations as $operation) {\n        $balance\
    \ += $operation;\n        if ($balance < 0) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n", "  $balance = 0;\n  foreach ($operations\
    \ as $operation) {\n    if ($operation[0] == 'D') {\n      $balance += $operation[1];\n\
    \    } else {\n      $balance -= $operation[1];\n    }\n    if ($balance < 0)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n\necho below_zero([['D',\
    \ 100], ['W', 200], ['D', 50]]);\necho \"\\n\";\necho below_zero([['D', 100],\
    \ ['W', 200], ['D', 50], ['W', 100]]);\necho \"\\n\";\necho below_zero([['D',\
    \ 100], ['W', 200], ['D', 50], ['W', 100], ['D', 50]]);\necho \"\\n\";\necho below_zero([['D',\
    \ 100], ['W', 200], ['D', 50], ['W', 100], ['D', 50], ['W', 100]]);\necho \"\\\
    n\";\necho below_zero([['D', 100], ['W', 200], ['D', 50], ['W', 100], ['D', 50],\
    \ ['W', 100], ['D', 50]]);\necho \"\\n\";\necho below_zero([['D', 100], ['W',\
    \ 200], ['D', 50], ['W', 100], ['D', 50], ['W', 100], ['D', 50], ['W', 100]]);\n\
    echo \"\\n\";\necho below_zero([['D', 100], ['W', 200], ['D', 50], ['W', 100],\
    \ ['D', 50], ['W', 100], ['D', 50], ['W', 100], ['D', 50]]);\necho \"\\n\";\n\
    echo below_zero([['D', 100], ['W', 200], ['D', 50], ['W', 100], ['D', 50], ['W',\
    \ 100], ['D', 50], ['W', 100], ['D', 50], ['W', 100]]);\necho \"\\n\";\necho below_zero([['D',\
    \ 100], ['W', 200], ['D', 50], ['W', 100], ['D', 50], ['W', 100], ['D', 50], ['W',\
    \ 100], ['D', 50], ['W', 100], ['D', 50]]);\necho \"\\n\";\n", "    $balance =\
    \ 0;\n    foreach ($operations as $operation) {\n        $balance += $operation;\n\
    \        if ($balance < 0) {\n            return true;\n        }\n    }\n   \
    \ return false;\n}\n", "    $balance = 0;\n    foreach ($operations as $operation)\
    \ {\n        $balance += $operation;\n        if ($balance < 0) {\n          \
    \  return true;\n        }\n    }\n    return false;\n}\n", "    $balance = 0;\n\
    \    foreach ($operations as $operation) {\n        $balance += $operation;\n\
    \        if ($balance < 0) {\n            return true;\n        }\n    }\n   \
    \ return false;\n}\n", "    $balance = 0;\n    foreach ($operations as $operation)\
    \ {\n        $balance += $operation;\n        if ($balance < 0) {\n          \
    \  return true;\n        }\n    }\n    return false;\n}\n", "    $balance = 0;\n\
    \    foreach ($operations as $operation) {\n        if ($operation[0] == '+')\
    \ {\n            $balance += $operation[1];\n        } else {\n            $balance\
    \ -= $operation[1];\n        }\n        if ($balance < 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_111_histogram
results:
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\";\nprint_r(histogram($test));\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpm0nrgq60.php:24\nStack trace:\n#0 /tmp/tmpm0nrgq60.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpm0nrgq60.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcbv416d7.php:24\n\
    Stack trace:\n#0 /tmp/tmpcbv416d7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpcbv416d7.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuiun5zgp.php:23\nStack trace:\n#0 /tmp/tmpuiun5zgp.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuiun5zgp.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"aabbbccccdddddd\";\nprint_r(histogram($test));\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 6\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmphdotgz1e.php:23\nStack trace:\n#0 /tmp/tmphdotgz1e.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmphdotgz1e.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3oiu0_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpz3oiu0_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz3oiu0_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"aabbccdddd\";\nprint_r(histogram($test));\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpv2mp3l0w.php:24\nStack trace:\n#0 /tmp/tmpv2mp3l0w.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpv2mp3l0w.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\n$result = histogram($test);\nprint_r($result);\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpitrj5ytm.php:24\nStack trace:\n#0 /tmp/tmpitrj5ytm.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpitrj5ytm.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $test = str_split($test);\n\
    \    $result = [];\n    foreach ($test as $letter) {\n        if (!array_key_exists($letter,\
    \ $result)) {\n            $result[$letter] = 1;\n        } else {\n         \
    \   $result[$letter]++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1xa_efdh.php:24\n\
    Stack trace:\n#0 /tmp/tmp1xa_efdh.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1xa_efdh.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $result\
    \ = array_filter($counts, function($v) use ($max) {\n    return $v == $max;\n\
    \  });\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtgvtl_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpxtgvtl_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxtgvtl_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4dh62mi.php:21\n\
    Stack trace:\n#0 /tmp/tmpq4dh62mi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq4dh62mi.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $histogram = [];\n  foreach ($letters as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter] += 1;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf698qc29.php:24\n\
    Stack trace:\n#0 /tmp/tmpf698qc29.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf698qc29.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"aabbbccccdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqyfgvc5s.php on line 22

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $count = array_count_values($letters);\n  $max = max($count);\n  $result =\
    \ array();\n  foreach ($count as $key => $value) {\n    if ($value == $max) {\n\
    \      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n\n$test = \"\
    aabbbcccc\";\n$result = histogram($test);\nprint_r($result);\necho \"\\n\";\n\n\
    $test = \"aabbbccccdddd\";\n$result = histogram($test);\nprint_r($result);\necho\
    \ \"\\n\";\n\n$test = \"aabbbccccddddeeeee\";\n$result = histogram($test);\nprint_r($result);\n\
    echo \"\\n\";\n\n$test = \"aabbbccccddddeeeeefffff\";\n$result = histogram($test);\n\
    print_r($result);\necho \"\\n\";\n\n$test = \"aabbbccccddddeeeeefffffgggggg\"\
    ;\n$result = histogram($test);\nprint_r($result);\necho \"\\n\";\n\n$test = \"\
    aabbbccccddddeeeeefffffgggggghhhhhhhh\";\n$result = histogram($test);\nprint_r($result);\n\
    echo \"\\n\";\n\n$test = \"aabbbccccddddeeeeefffffgggggghhhhhhhhiiiiiiiiii\";\n\
    $result = histogram($test);\nprint_r($result);\necho \"\\n\";\n\n$test = \"aabbbccccddddeeeeefffffgggggghhhhhhhhiiiiiiiiiijjjjjjjjjjjj\"\
    ;\n$result = histogram($test);\nprint_r($result);\necho \"\\n\";\n\n$test = \"\
    aabbbccccddddeeeeefffffgggggghhhhhhhhiiiiiiiiiijjjjjjjjjjjjkkkkkkkkkkkkkkkkkkkk\"\
    ;\n$result = histogram($test);\nprint_r($result);\necho \"\\n\";\n\n$test = \"\
    aabbbccccddddeeeeefffffgggg\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp63pbrl7n.php on line 70

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"aabbccdddd\";\nprint_r(histogram($test));\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpv2mp3l0w.php:24\nStack trace:\n#0 /tmp/tmpv2mp3l0w.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpv2mp3l0w.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nprint_r(histogram(\"abcdefghijklmnopqrstuvwxyz\"\
    ));\nprint_r(histogram(\"abbcccddddeeeeeffffff\"));\nprint_r(histogram(\"abbcccddddeeeeeffffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4lol43w7.php on line 24

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $letters_count = array_count_values($letters);\n    $max_count = max($letters_count);\n\
    \    $max_letters = array_keys($letters_count, $max_count);\n    $result = array();\n\
    \    foreach ($max_letters as $letter) {\n        $result[$letter] = $max_count;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0t_iv2_o.php:23\n\
    Stack trace:\n#0 /tmp/tmp0t_iv2_o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0t_iv2_o.php\
    \ on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nprint_r(histogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e\
    \ f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q\
    \ r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b\
    \ c d e f g h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m\
    \ n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z a b c d e f g h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"\
    a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m\
    \ n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k\
    \ l m n o p q r s t u v w\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpq0kd23iq.php on line 26

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nprint_r(histogram(\"aabbbcccc\"));\nprint_r(histogram(\"\
    aabbbccccddddd\"));\nprint_r(histogram(\"aabbbccccdddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpm1y_1vfv.php on line 24

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpej6lnhch.php:23\nStack trace:\n#0 /tmp/tmpej6lnhch.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpej6lnhch.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl540cy3u.php:21\n\
    Stack trace:\n#0 /tmp/tmpl540cy3u.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpl540cy3u.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $histogram = [];\n  foreach ($letters as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter] += 1;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf698qc29.php:24\n\
    Stack trace:\n#0 /tmp/tmpf698qc29.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf698qc29.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $result\
    \ = array_filter($counts, function($value) use ($max) {\n    return $value ==\
    \ $max;\n  });\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdb93ch6z.php:21\n\
    Stack trace:\n#0 /tmp/tmpdb93ch6z.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdb93ch6z.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max_count = max($counts);\n\
    \    $result = array_filter($counts, function($value) use ($max_count) {\n   \
    \     return $value == $max_count;\n    });\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdm8kslr.php:21\n\
    Stack trace:\n#0 /tmp/tmpxdm8kslr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxdm8kslr.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $arr = explode(\"\
    \ \", $test);\n    $count = array_count_values($arr);\n    $max = max($count);\n\
    \    $result = array_keys($count, $max);\n    return array_combine($result, array_fill(0,\
    \ count($result), $max));\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzblzvi3y.php:25\n\
    Stack trace:\n#0 /tmp/tmpzblzvi3y.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzblzvi3y.php\
    \ on line 25\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  // Your code here\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpry5isuh1.php:15\n\
    Stack trace:\n#0 /tmp/tmpry5isuh1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpry5isuh1.php\
    \ on line 15\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4dh62mi.php:21\n\
    Stack trace:\n#0 /tmp/tmpq4dh62mi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq4dh62mi.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nprint_r(histogram(\"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j\
    \ k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g\
    \ h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d\
    \ e f g h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c\
    \ d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o\
    \ p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m\
    \ n o p q r s t u v w\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpuh8b1mxy.php on line 26

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $arr = str_split($test);\n\
    \    $hist = array_count_values($arr);\n    $max = max($hist);\n    $keys = array_keys($hist,\
    \ $max);\n    $result = array();\n    foreach ($keys as $key) {\n        $result[$key]\
    \ = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39t0x_im.php:23\n\
    Stack trace:\n#0 /tmp/tmp39t0x_im.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp39t0x_im.php\
    \ on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    arsort($counts);\n    $max =\
    \ max($counts);\n    $result = array_filter($counts, function($v) use ($max) {\n\
    \        return $v == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mz4vjk0.php:22\n\
    Stack trace:\n#0 /tmp/tmp8mz4vjk0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8mz4vjk0.php\
    \ on line 22\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3oiu0_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpz3oiu0_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz3oiu0_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\nprint_r(histogram($test));\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp2ivzjcpe.php:24\nStack trace:\n#0 /tmp/tmp2ivzjcpe.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2ivzjcpe.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $max_letters\
    \ = array_keys($counts, $max);\n    $result = array();\n    foreach ($max_letters\
    \ as $letter) {\n        $result[$letter] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6av7sx3u.php:23\n\
    Stack trace:\n#0 /tmp/tmp6av7sx3u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6av7sx3u.php\
    \ on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nprint_r(histogram(\"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j\
    \ k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g\
    \ h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d\
    \ e f g h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c\
    \ d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o\
    \ p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m\
    \ n o p q r s t u v w\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpuh8b1mxy.php on line 26

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpv74iuvg_.php:23\nStack trace:\n#0 /tmp/tmpv74iuvg_.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpv74iuvg_.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuiun5zgp.php:23\nStack trace:\n#0 /tmp/tmpuiun5zgp.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuiun5zgp.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n  \
    \          $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6ahio8.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6ahio8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvg6ahio8.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nprint_r(histogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e\
    \ f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q\
    \ r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b\
    \ c d e f g h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m\
    \ n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z a b c d e f g h i j k l m n o p q r s t u v w x y z\"));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\nArray\n(\n    [ ] => 51\n)\nArray\n(\n    [\
    \ ] => 77\n)\nArray\n(\n    [ ] => 103\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpuh9i4wwt.php:25\nStack trace:\n#0 /tmp/tmpuh9i4wwt.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpuh9i4wwt.php on line 25\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) { return $v == $max; });\n  \
    \  return $result;\n}\n\nprint_r(histogram(\"aabbccdddd\"));\nprint_r(histogram(\"\
    aabbccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4ffz9dn2.php on line 21

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) { return $v == $max; });\n \
    \   return $result;\n}\n\n$test = \"aabbbccccddddddd\";\nprint_r(histogram($test));\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 7\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp85emthhn.php:22\nStack trace:\n#0 /tmp/tmp85emthhn.php(32): test()\n\
    #1 {main}\n  thrown in /tmp/tmp85emthhn.php on line 22\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $result\
    \ = array_filter($counts, function($value) use ($max) {\n    return $value ==\
    \ $max;\n  });\n  return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n\
    \ o p q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9xkf_rry.php:23\nStack trace:\n#0 /tmp/tmp9xkf_rry.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9xkf_rry.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($val) use ($max) {\n        return $val ==\
    \ $max;\n    });\n    return $result;\n}\n\n$test = \"aaabbbcccddd\";\n$result\
    \ = histogram($test);\nprint_r($result);\nfunction candidate(...$args) {\n   \
    \ return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 3\n    [b] => 3\n    [c] => 3\n    [d] => 3\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp2_w65xqz.php:24\nStack\
    \ trace:\n#0 /tmp/tmp2_w65xqz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2_w65xqz.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (!isset($histogram[$letter]))\
    \ {\n            $histogram[$letter] = 0;\n        }\n        $histogram[$letter]++;\n\
    \    }\n    return $histogram;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppf65zed9.php:23\n\
    Stack trace:\n#0 /tmp/tmppf65zed9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppf65zed9.php\
    \ on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (!array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] = 1;\n        } else {\n   \
    \         $histogram[$letter]++;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5zjrztj.php:24\n\
    Stack trace:\n#0 /tmp/tmpk5zjrztj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk5zjrztj.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3oiu0_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpz3oiu0_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz3oiu0_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_keys($counts, $max);\n    return $result;\n}\n\n$test = \"abcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppysokiio.php on line 20

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nprint_r(histogram(\"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j\
    \ k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g\
    \ h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d\
    \ e f g h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c\
    \ d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o\
    \ p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m\
    \ n o p q r s t u v w\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpuh8b1mxy.php on line 26

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $count = array_count_values($letters);\n  $max = max($count);\n  $result =\
    \ array();\n  foreach ($count as $key => $value) {\n    if ($value == $max) {\n\
    \      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n\n$test = \"\
    aabbbcccc\";\n$result = histogram($test);\nprint_r($result);\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [c] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppvad65oq.php:28\nStack trace:\n#0 /tmp/tmppvad65oq.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmppvad65oq.php on line 28\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpej6lnhch.php:23\nStack trace:\n#0 /tmp/tmpej6lnhch.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpej6lnhch.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuiun5zgp.php:23\nStack trace:\n#0 /tmp/tmpuiun5zgp.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuiun5zgp.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"aabbccdddd\";\nprint_r(histogram($test));\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp2x_gloc1.php:23\nStack trace:\n#0 /tmp/tmp2x_gloc1.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2x_gloc1.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $count = array_count_values($letters);\n  $max = max($count);\n  $result =\
    \ array();\n  foreach ($count as $letter => $value) {\n    if ($value == $max)\
    \ {\n      $result[$letter] = $value;\n    }\n  }\n  return $result;\n}\n\n$test\
    \ = \"aabbccdddd\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp367zs18j.php:26\nStack trace:\n#0 /tmp/tmp367zs18j.php(36): test()\n\
    #1 {main}\n  thrown in /tmp/tmp367zs18j.php on line 26\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nprint_r(histogram(\"aabbbccc\"\
    ));\nprint_r(histogram(\"aabbbcccdddd\"));\nprint_r(histogram(\"aabbbcccddddeeeee\"\
    ));\nprint_r(histogram(\"aabbbcccddddeeeeefffff\"));\nprint_r(histogram(\"aabbbcccddddeeeeefffffgggggg\"\
    ));\nprint_r(histogram(\"aabbbcccddddeeeeefffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfrzkq_ny.php on line 27

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter]++;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcbv416d7.php:24\n\
    Stack trace:\n#0 /tmp/tmpcbv416d7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpcbv416d7.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl540cy3u.php:21\n\
    Stack trace:\n#0 /tmp/tmpl540cy3u.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpl540cy3u.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpej6lnhch.php:23\nStack trace:\n#0 /tmp/tmpej6lnhch.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpej6lnhch.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $result\
    \ = array_filter($counts, function($v) use ($max) {\n    return $v == $max;\n\
    \  });\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtgvtl_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpxtgvtl_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxtgvtl_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nprint_r(histogram(\"aabbccddddeeeee\"));\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [e] => 5\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_8ou_7k3.php:22\nStack trace:\n#0 /tmp/tmp_8ou_7k3.php(32): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_8ou_7k3.php on line 22\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) { return $v == $max; });\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy1rplj48.php:19\n\
    Stack trace:\n#0 /tmp/tmpy1rplj48.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpy1rplj48.php\
    \ on line 19\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n  \
    \          $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6ahio8.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6ahio8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvg6ahio8.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $test = str_split($test);\n\
    \    $histogram = array_count_values($test);\n    $max = max($histogram);\n  \
    \  $result = array_keys($histogram, $max);\n    return array_combine($result,\
    \ array_fill(0, count($result), $max));\n}\n\nprint_r(histogram(\"aabbccdddd\"\
    ));\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpieoqzcpf.php:20\nStack trace:\n#0 /tmp/tmpieoqzcpf.php(30): test()\n\
    #1 {main}\n  thrown in /tmp/tmpieoqzcpf.php on line 20\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3oiu0_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpz3oiu0_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz3oiu0_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $test = str_split($test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array_keys($count, $max);\n    return array_fill_keys($result, $max);\n}\n\
    \nprint_r(histogram(\"aabbbccc\"));\nprint_r(histogram(\"aabbbcccdddd\"));\nprint_r(histogram(\"\
    aabbbcccddddeeeee\"));\nprint_r(histogram(\"aabbbcccddddeeeeeffffff\"));\nprint_r(histogram(\"\
    aabbbcccddddeeeeeffffffgggggggg\"));\nprint_r(histogram(\"aabbbcccddddeeeeeffffffgggggggghhhhhhhhh\"\
    ));\nprint_r(histogram(\"aabbbcccddddeeeeeffffffgggggggghhhhhhhhhiiiiiiiiii\"\
    ));\nprint_r(histogram(\"aabbbcccddddeeeeeffffffgggggggghhhhhhhhhiiiiiiiiiijjjjjjjjjjjj\"\
    ));\nprint_r(histogram(\"aabbbcccddddeeeeeffffffgggggggghhhhhhhhhiiiiiiiiiijjjjjjjjjjjjkkkkkkkkkkkkkk\"\
    ));\nprint_r(histogram(\"aabbbcccddddeeeeeffffffgggggggghhhhhhhhhiiiiiiiiiijjjjjjjjjjjjkkkkkkkkkkkkkkllllllllllllllll\"\
    ));\nprint_r(histogram(\"aabbbcccddddeeeeeffffffgggggggghhhhhhhhhiiiiiiiiiijjjjjjjjjjjjkkkkkkkkkkkkkkllllllllllllllllmmmmmmmmmmmmmmmmmmmm\"\
    ));\nprint_r(histogram(\"aabbbcccddddeeeeeffffffgggggggghhhhhhhhhiiiiiiiiiijjjjjjjjjjjjkkkkkkkkkkkkkkllllllllllllllllmmmmmmmmmmmmmmmmmmmmnnnnnnnnnnnnnnnnnnnnnn\"\
    ));\nprint_r(histogram(\"aabbbcccddddeeeeeffffffgggggg\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpbi0hlk0w.php on line 32

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nprint_r(histogram(\"abccccccdddddd\"\
    ));\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [c] => 6\n    [d] => 6\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpii1jwipa.php:22\nStack trace:\n#0 /tmp/tmpii1jwipa.php(32):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpii1jwipa.php on line 22\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"aabbbcccccdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp66qronoe.php on line 22

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nprint_r(histogram(\"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j\
    \ k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g\
    \ h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d\
    \ e f g h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c\
    \ d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o\
    \ p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m\
    \ n o p q r s t u v w\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpuh8b1mxy.php on line 26

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nprint_r(histogram(\"aabbccdddd\"));\nprint_r(histogram(\"\
    aabbccddddeee\"));\nprint_r(histogram(\"aabbccddddeeeeff\"));\nprint_r(histogram(\"\
    aabbccddddeeeeffff\"));\nprint_r(histogram(\"aabbccddddeeeeffffgg\"));\nprint_r(histogram(\"\
    aabbccddddeeeeffffggg\"));\nprint_r(histogram(\"aabbccddddeeeeffffgggg\"));\n\
    print_r(histogram(\"aabbccddddeeeeffffggggg\"));\nprint_r(histogram(\"aabbccddddeeeeffffgggggg\"\
    ));\nprint_r(histogram(\"aabbccddddeeeeffffggggggg\"));\nprint_r(histogram(\"\
    aabbccddddeeeeffffgggggggg\"));\nprint_r(histogram(\"aabbccddddeeeeffffggggggggg\"\
    ));\nprint_r(histogram(\"aabbccddddeeeeffffgggggggggg\"));\nprint_r(histogram(\"\
    aabbccddddeeeeffffggggggggggg\"));\nprint_r(histogram(\"aabbccddddeeeeffffgggggggggggg\"\
    ));\nprint_r(histogram(\"aabbccddddeeeeffffggggggggggggg\"));\nprint_r(histogram(\"\
    aabbccddddeeeeffffgggggggggggggg\"));\nprint_r(histogram(\"aabbccddddeeeeffffggggggggggggggg\"\
    ));\nprint_r(histogram(\"aabbccddddeeeeffffgggggggggggggggg\"));\nprint_r(histogram(\"\
    aabbccddddeeeeffffggggggggggggggggg\"));\nprint_r(histogram(\"aabbccddddeeeeffffgggg\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzho431nc.php on line 42

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n\t$letters = str_split($test);\n\
    \t$count = array_count_values($letters);\n\t$max = max($count);\n\t$max_letters\
    \ = array_keys($count, $max);\n\t$result = array();\n\tforeach ($max_letters as\
    \ $letter) {\n\t\t$result[$letter] = $max;\n\t}\n\treturn $result;\n}\n\n$test\
    \ = \"aabbccdddd\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpqutr5czk.php:25\nStack trace:\n#0 /tmp/tmpqutr5czk.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqutr5czk.php on line 25\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $test = str_split($test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array_keys($count, $max);\n    return array_combine($result, array_fill(0,\
    \ count($result), $max));\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1y_z6uf.php:19\n\
    Stack trace:\n#0 /tmp/tmpb1y_z6uf.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpb1y_z6uf.php\
    \ on line 19\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $dict = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $dict)) {\n            $dict[$letter]++;\n        } else {\n            $dict[$letter]\
    \ = 1;\n        }\n    }\n    return $dict;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkma1pbg7.php:24\n\
    Stack trace:\n#0 /tmp/tmpkma1pbg7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkma1pbg7.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuiun5zgp.php:23\nStack trace:\n#0 /tmp/tmpuiun5zgp.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuiun5zgp.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nprint_r(histogram(\"aabbccdd\"\
    ));\nprint_r(histogram(\"aabbccddeeff\"));\nprint_r(histogram(\"aabbccddeeffgg\"\
    ));\nprint_r(histogram(\"aabbccddeeffggaa\"));\nprint_r(histogram(\"aabbccddeeffggaabb\"\
    ));\nprint_r(histogram(\"aabbccddeeffggaabbcc\"));\nprint_r(histogram(\"aabbccddeeffggaabbccdd\"\
    ));\nprint_r(histogram(\"aabbccddeeffggaabbccddee\"));\nprint_r(histogram(\"aabbccddeeffggaabbccddeeff\"\
    ));\nprint_r(histogram(\"aabbccddeeffggaabbccddeeffgg\"));\nprint_r(histogram(\"\
    aabbccddeeffggaabbccddeeffggaa\"));\nprint_r(histogram(\"aabbccddeeffggaabbccddeeffggaabb\"\
    ));\nprint_r(histogram(\"aabbccddeeffggaabbccddeeffggaabbcc\"));\nprint_r(histogram(\"\
    aabbccddeeffggaabbccddeeffggaabbccdd\"));\nprint_r(histogram(\"aabbccddeeffggaabbccddeeffggaabbccddee\"\
    ));\nprint_r(histogram(\"aabbccddeeffggaabbccddeeffggaabbccddeeff\"));\nprint_r(histogram(\"\
    aabbccddeeffggaabbccddeeffggaabbccddeeffgg\"));\nprint_r(histogram(\"aabbccddeeffggaabbccddeeffggaabbccddeeffggaa\"\
    ));\nprint_r(histogram(\"aabbccddee\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpebospsic.php on line 40

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $letter_count = array_count_values($letters);\n    $max_count = max($letter_count);\n\
    \    $max_letters = array_keys($letter_count, $max_count);\n    $result = array();\n\
    \    foreach ($max_letters as $letter) {\n        $result[$letter] = $max_count;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2rpzdw5j.php:23\n\
    Stack trace:\n#0 /tmp/tmp2rpzdw5j.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2rpzdw5j.php\
    \ on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpej6lnhch.php:23\nStack trace:\n#0 /tmp/tmpej6lnhch.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpej6lnhch.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpno8iustq.php:23\nStack trace:\n#0 /tmp/tmpno8iustq.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpno8iustq.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4dh62mi.php:21\n\
    Stack trace:\n#0 /tmp/tmpq4dh62mi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq4dh62mi.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl540cy3u.php:21\n\
    Stack trace:\n#0 /tmp/tmpl540cy3u.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpl540cy3u.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $test = str_split($test);\n\
    \    $result = [];\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $result)) {\n            $result[$letter] += 1;\n        } else {\n        \
    \    $result[$letter] = 1;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygsi2s8d.php:24\n\
    Stack trace:\n#0 /tmp/tmpygsi2s8d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpygsi2s8d.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_keys($counts, $max);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ujstiac.php:19\n\
    Stack trace:\n#0 /tmp/tmp2ujstiac.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2ujstiac.php\
    \ on line 19\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $hist = [];\n  \
    \  $max = 0;\n    $result = [];\n    $letters = str_split($test);\n    foreach\
    \ ($letters as $letter) {\n        if (!array_key_exists($letter, $hist)) {\n\
    \            $hist[$letter] = 1;\n        } else {\n            $hist[$letter]++;\n\
    \        }\n        if ($hist[$letter] > $max) {\n            $max = $hist[$letter];\n\
    \        }\n    }\n    foreach ($hist as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\n$test = \"aabbbccccc\";\nprint_r(histogram($test));\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [c] => 5\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp1fj0v4tz.php:36\nStack trace:\n#0 /tmp/tmp1fj0v4tz.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1fj0v4tz.php on line 36\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($a) use ($max) {\n        return $a == $max;\n\
    \    });\n    return $result;\n}\n\nprint_r(histogram(\"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j\
    \ k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h\
    \ i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d\
    \ e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b\
    \ c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n\
    \ o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z\
    \ a\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpb8ttef9v.php on line 23

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max_count = max($counts);\n\
    \    $result = array_filter($counts, function($value) use ($max_count) {\n   \
    \     return $value == $max_count;\n    });\n    return $result;\n}\n\n$test =\
    \ \"a b c d e f g h i j k l m n o p q r s t u v w x y z\";\nvar_dump(histogram($test));\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(1) {\n  [\" \"]=>\n  int(25)\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp7yamzy61.php:24\nStack trace:\n#0 /tmp/tmp7yamzy61.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7yamzy61.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4dh62mi.php:21\n\
    Stack trace:\n#0 /tmp/tmpq4dh62mi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq4dh62mi.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"abbcccddddeeeee\";\n\
    print_r(histogram($test));\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [e] => 5\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmph3k2c65s.php:24\nStack trace:\n#0 /tmp/tmph3k2c65s.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmph3k2c65s.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_keys($count, $max);\n    return $result;\n}\n\n$test = \"aabbccccdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpna8zyogj.php on line 20

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nprint_r(histogram(\"aabbbccc\"\
    ));\nprint_r(histogram(\"aabbbcccdddd\"));\nprint_r(histogram(\"aabbbcccddddeeeeee\"\
    ));\nprint_r(histogram(\"aabbbcccddddeeeeeeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsa23j7ec.php on line 25

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $histogram = [];\n  foreach ($letters as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter]++;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxor7vqx.php:24\n\
    Stack trace:\n#0 /tmp/tmphxor7vqx.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphxor7vqx.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n  \
    \          $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6ahio8.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6ahio8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvg6ahio8.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $test = str_split($test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nprint_r(histogram(\"aabbccdddd\"));\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9daxz4i8.php:22\nStack trace:\n#0 /tmp/tmp9daxz4i8.php(32): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9daxz4i8.php on line 22\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $test = str_split($test);\n\
    \    $hist = array_count_values($test);\n    $max = max($hist);\n    $result =\
    \ array_keys($hist, $max);\n    return $result;\n}\n\n$test = \"aabbccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplqmhpsig.php on line 20

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $max_letters\
    \ = array_keys($count, $max);\n    $result = array_fill_keys($max_letters, $max);\n\
    \    return $result;\n}\n\n$test = \"aabbbcccc\";\nprint_r(histogram($test));\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [c] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpl3xlwccm.php:22\nStack trace:\n#0 /tmp/tmpl3xlwccm.php(32): test()\n\
    #1 {main}\n  thrown in /tmp/tmpl3xlwccm.php on line 22\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\";\nprint_r(histogram($test));\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpm0nrgq60.php:24\nStack trace:\n#0 /tmp/tmpm0nrgq60.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpm0nrgq60.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) { return $v == $max; });\n \
    \   return $result;\n}\n\n$test = \"aabbccdddd\";\nprint_r(histogram($test));\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp3y14sg49.php:21\nStack trace:\n#0 /tmp/tmp3y14sg49.php(31): test()\n\
    #1 {main}\n  thrown in /tmp/tmp3y14sg49.php on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $letters_count = array_count_values($letters);\n    $max_count = max($letters_count);\n\
    \    $result = array();\n    foreach ($letters_count as $key => $value) {\n  \
    \      if ($value == $max_count) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\n\necho '<pre>';\nprint_r(histogram('aabbbccccddddd'));\n\
    echo '</pre>';\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [d] => 5\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpeckf8q8g.php:28\nStack trace:\n#0 /tmp/tmpeckf8q8g.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpeckf8q8g.php on line 28\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $result\
    \ = array_filter($counts, function($value) use ($max) {\n    return $value ==\
    \ $max;\n  });\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdb93ch6z.php:21\n\
    Stack trace:\n#0 /tmp/tmpdb93ch6z.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdb93ch6z.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = [];\n    foreach ($count as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\
    ));\nprint_r(histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m\
    \ n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w\
    \ x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i\
    \ j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g\
    \ h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s\
    \ t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e\
    \ f g h i j k l m n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzjarqyv4.php on line 26

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = [];\n    foreach ($count as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\
    ));\nprint_r(histogram(\"a b c d e f g h i j k l m n o p q r s t u v w x y z a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m\
    \ n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w\
    \ x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i\
    \ j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g\
    \ h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s\
    \ t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e\
    \ f g h i j k l m n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzjarqyv4.php on line 26

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4dh62mi.php:21\n\
    Stack trace:\n#0 /tmp/tmpq4dh62mi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq4dh62mi.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_keys($counts, $max);\n    return array_combine($result, array_fill(0,\
    \ count($result), $max));\n}\n\nprint_r(histogram(\"abccccccccccc\"));\nprint_r(histogram(\"\
    aabbbccccc\"));\nprint_r(histogram(\"aabbbcccccdddd\"));\nprint_r(histogram(\"\
    aabbbcccccddddeeeee\"));\nprint_r(histogram(\"aabbbcccccddddeeeeefffff\"));\n\
    print_r(histogram(\"aabbbcccccddddeeeeefffffgggggg\"));\nprint_r(histogram(\"\
    aabbbcccccddddeeeeefffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpxgqq9kf1.php on line 26

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuiun5zgp.php:23\nStack trace:\n#0 /tmp/tmpuiun5zgp.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuiun5zgp.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    arsort($counts);\n    $max =\
    \ max($counts);\n    $result = array_filter($counts, function($v) use ($max) {\
    \ return $v == $max; });\n    return $result;\n}\n\n$test = \"aabbccdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9egsc42s.php on line 21

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $max_letters\
    \ = array_keys($counts, $max);\n  $result = array();\n  foreach ($max_letters\
    \ as $letter) {\n    $result[$letter] = $max;\n  }\n  return $result;\n}\n\n$test\
    \ = \"aabbccdddd\";\nprint_r(histogram($test));\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppsv8casn.php:26\nStack trace:\n#0 /tmp/tmppsv8casn.php(36): test()\n\
    #1 {main}\n  thrown in /tmp/tmppsv8casn.php on line 26\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_keys($counts, $max);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ujstiac.php:19\n\
    Stack trace:\n#0 /tmp/tmp2ujstiac.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2ujstiac.php\
    \ on line 19\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4dh62mi.php:21\n\
    Stack trace:\n#0 /tmp/tmpq4dh62mi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq4dh62mi.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpej6lnhch.php:23\nStack trace:\n#0 /tmp/tmpej6lnhch.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpej6lnhch.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\nprint_r(histogram($test));\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp2ivzjcpe.php:24\nStack trace:\n#0 /tmp/tmp2ivzjcpe.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2ivzjcpe.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (!array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] = 1;\n        } else {\n   \
    \         $histogram[$letter]++;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5zjrztj.php:24\n\
    Stack trace:\n#0 /tmp/tmpk5zjrztj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk5zjrztj.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $test = str_split($test);\n\
    \    $result = [];\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu4q8wnhs.php:24\n\
    Stack trace:\n#0 /tmp/tmpu4q8wnhs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpu4q8wnhs.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_keys($count, $max);\n    $result = array_fill_keys($result, $max);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq49hwfim.php:20\n\
    Stack trace:\n#0 /tmp/tmpq49hwfim.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpq49hwfim.php\
    \ on line 20\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = [];\n    foreach ($count as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvf4k0i7q.php:24\n\
    Stack trace:\n#0 /tmp/tmpvf4k0i7q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvf4k0i7q.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $result\
    \ = array_filter($counts, function($value) use ($max) {\n    return $value ==\
    \ $max;\n  });\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdb93ch6z.php:21\n\
    Stack trace:\n#0 /tmp/tmpdb93ch6z.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdb93ch6z.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = [];\n    foreach ($count as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvf4k0i7q.php:24\n\
    Stack trace:\n#0 /tmp/tmpvf4k0i7q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvf4k0i7q.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) { return $v == $max; });\n  \
    \  return $result;\n}\n\n$test = \"aabbbccccddddd\";\nprint_r(histogram($test));\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 5\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpd_tul3gj.php:22\nStack trace:\n#0 /tmp/tmpd_tul3gj.php(32): test()\n\
    #1 {main}\n  thrown in /tmp/tmpd_tul3gj.php on line 22\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) { return $v == $max; });\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy1rplj48.php:19\n\
    Stack trace:\n#0 /tmp/tmpy1rplj48.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpy1rplj48.php\
    \ on line 19\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3oiu0_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpz3oiu0_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz3oiu0_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $result\
    \ = array_keys($counts, $max);\n  return $result;\n}\n\n$test = \"hello world\"\
    ;\nprint_r(histogram($test));\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => l\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpkhp2tx3r.php:21\nStack trace:\n#0 /tmp/tmpkhp2tx3r.php(31): test()\n\
    #1 {main}\n  thrown in /tmp/tmpkhp2tx3r.php on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nprint_r(histogram(\"aabbbccc\"));\nprint_r(histogram(\"\
    aabbbcccdddd\"));\nprint_r(histogram(\"aabbbcccddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmprfvb61zz.php on line 24

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4dh62mi.php:21\n\
    Stack trace:\n#0 /tmp/tmpq4dh62mi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq4dh62mi.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuiun5zgp.php:23\nStack trace:\n#0 /tmp/tmpuiun5zgp.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuiun5zgp.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nprint_r(histogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e\
    \ f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q\
    \ r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b\
    \ c d e f g h i j k l m n o p q r s t u v w x y z\"));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\nArray\n(\n    [ ] => 51\n)\nArray\n(\n    [\
    \ ] => 77\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw4mql7zs.php:24\n\
    Stack trace:\n#0 /tmp/tmpw4mql7zs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw4mql7zs.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"aabbbccccdddd\";\nprint_r(histogram($test));\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [c] => 4\n    [d] => 4\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpbfhlcptd.php:24\nStack trace:\n#0 /tmp/tmpbfhlcptd.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbfhlcptd.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $arr = explode(\"\
    \ \", $test);\n  $count = array_count_values($arr);\n  $max = max($count);\n \
    \ $result = array_keys($count, $max);\n  $result = array_combine($result, array_fill(0,\
    \ count($result), $max));\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb0vyt727.php:26\n\
    Stack trace:\n#0 /tmp/tmpb0vyt727.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpb0vyt727.php\
    \ on line 26\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3oiu0_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpz3oiu0_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz3oiu0_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $result\
    \ = array_filter($counts, function($value) use ($max) {\n    return $value ==\
    \ $max;\n  });\n  return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n\
    \ o p q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9xkf_rry.php:23\nStack trace:\n#0 /tmp/tmp9xkf_rry.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9xkf_rry.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $result\
    \ = array_filter($counts, function($v) use ($max) {\n    return $v == $max;\n\
    \  });\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtgvtl_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpxtgvtl_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxtgvtl_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $test = str_split($test);\n\
    \    $result = [];\n    $max = 0;\n    foreach ($test as $letter) {\n        if\
    \ (array_key_exists($letter, $result)) {\n            $result[$letter]++;\n  \
    \      } else {\n            $result[$letter] = 1;\n        }\n        if ($result[$letter]\
    \ > $max) {\n            $max = $result[$letter];\n        }\n    }\n    $final\
    \ = [];\n    foreach ($result as $key => $value) {\n        if ($value == $max)\
    \ {\n            $final[$key] = $value;\n        }\n    }\n    return $final;\n\
    }\n\n$test = \"aabbccdddd\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 4\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp64ccpt_r.php:36\nStack trace:\n#0 /tmp/tmp64ccpt_r.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp64ccpt_r.php on line 36\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $hist = array();\n\
    \    $max = 0;\n    $max_letters = array();\n    for ($i = 0; $i < strlen($test);\
    \ $i++) {\n        $letter = $test[$i];\n        if (array_key_exists($letter,\
    \ $hist)) {\n            $hist[$letter]++;\n        } else {\n            $hist[$letter]\
    \ = 1;\n        }\n        if ($hist[$letter] > $max) {\n            $max = $hist[$letter];\n\
    \            $max_letters = array($letter);\n        } else if ($hist[$letter]\
    \ == $max) {\n            array_push($max_letters, $letter);\n        }\n    }\n\
    \    return array($max_letters, $max);\n}\n\n$test = \"abbcccddddeeeee\";\nlist($max_letters,\
    \ $max) = histogram($test);\necho \"Max letters: \" . implode(\",\", $max_letters)\
    \ . \" with count \" . $max . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Max letters: e with count 5\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpgb6yjkdx.php:35\nStack trace:\n#0 /tmp/tmpgb6yjkdx.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgb6yjkdx.php on line 35\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $max_letters\
    \ = array_keys($counts, $max);\n    $result = array();\n    foreach ($max_letters\
    \ as $letter) {\n        $result[$letter] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6av7sx3u.php:23\n\
    Stack trace:\n#0 /tmp/tmp6av7sx3u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6av7sx3u.php\
    \ on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nprint_r(histogram(\"aaabbbccc\"));\nprint_r(histogram(\"\
    aabbbccc\"));\nprint_r(histogram(\"aabbbcccdddd\"));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [a] => 3\n    [b] => 3\n    [c] => 3\n)\nArray\n(\n    [b]\
    \ => 3\n    [c] => 3\n)\nArray\n(\n    [d] => 4\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp23216m1t.php:24\nStack trace:\n#0 /tmp/tmp23216m1t.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp23216m1t.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nprint_r(histogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e\
    \ f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q\
    \ r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b\
    \ c d e f g h i j k l m n o p q r s t u v w x y z\"));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\nArray\n(\n    [ ] => 51\n)\nArray\n(\n    [\
    \ ] => 77\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw4mql7zs.php:24\n\
    Stack trace:\n#0 /tmp/tmpw4mql7zs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw4mql7zs.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $histogram = [];\n\
    \    $letters = explode(' ', $test);\n    foreach ($letters as $letter) {\n  \
    \      if (array_key_exists($letter, $histogram)) {\n            $histogram[$letter]++;\n\
    \        } else {\n            $histogram[$letter] = 1;\n        }\n    }\n  \
    \  return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8f8fk5bo.php:25\n\
    Stack trace:\n#0 /tmp/tmp8f8fk5bo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8f8fk5bo.php\
    \ on line 25\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"aabbbccccddddd\";\n$result\
    \ = histogram($test);\nprint_r($result);\n\nfunction candidate(...$args) {\n \
    \   return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 5\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpv3csggk_.php:25\nStack trace:\n#0 /tmp/tmpv3csggk_.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpv3csggk_.php on line 25\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n  \
    \          $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6ahio8.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6ahio8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvg6ahio8.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (isset($histogram[$letter]))\
    \ {\n            $histogram[$letter] += 1;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39e_yng7.php:24\n\
    Stack trace:\n#0 /tmp/tmp39e_yng7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp39e_yng7.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpej6lnhch.php:23\nStack trace:\n#0 /tmp/tmpej6lnhch.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpej6lnhch.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $test = str_split($test);\n\
    \    $histogram = array_count_values($test);\n    $max = max($histogram);\n  \
    \  $result = array_filter($histogram, function($v) use ($max) {\n        return\
    \ $v == $max;\n    });\n    return $result;\n}\n\n$test = \"aabbbcccddddd\";\n\
    print_r(histogram($test));\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [d] => 5\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp1js9f9n0.php:24\nStack trace:\n#0 /tmp/tmp1js9f9n0.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1js9f9n0.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $histogram = [];\n  foreach ($letters as $letter) {\n    if (array_key_exists($letter,\
    \ $histogram)) {\n      $histogram[$letter] += 1;\n    } else {\n      $histogram[$letter]\
    \ = 1;\n    }\n  }\n  return $histogram;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf698qc29.php:24\n\
    Stack trace:\n#0 /tmp/tmpf698qc29.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf698qc29.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) { return $v == $max; });\n \
    \   return $result;\n}\n\necho '<pre>';\nprint_r(histogram('abccccc'));\necho\
    \ '</pre>';\n\necho '<pre>';\nprint_r(histogram('abcccccc'));\necho '</pre>';\n\
    \necho '<pre>';\nprint_r(histogram('abccccccc'));\necho '</pre>';\n\necho '<pre>';\n\
    print_r(histogram('abcccccccc'));\necho '</pre>';\n\necho '<pre>';\nprint_r(histogram('abccccccccc'));\n\
    echo '</pre>';\n\necho '<pre>';\nprint_r(histogram('abcccccccccc'));\necho '</pre>';\n\
    \necho '<pre>';\nprint_r(histogram('abccccccccccc'));\necho '</pre>';\n\necho\
    \ '<pre>';\nprint_r(histogram('abcccccccccccc'));\necho '</pre>';\n\necho '<pre>';\n\
    print_r(histogram('abccccccccccccc'));\necho '</pre>';\n\necho '<pre>';\nprint_r(histogram('abcccccccccccccc'));\n\
    echo '</pre>';\n\necho '<pre>';\nprint_r(histogram('abccccccccccccccc'));\necho\
    \ '</pre>';\n\necho '<pre>';\nprint_r(histogram('abcccccccccccccccc'));\necho\
    \ '</pre>';\n\necho '<pre>';\nprint_r(histogram('abccccccccccccccccc'));\necho\
    \ '</pre>';\n\necho '<pre>';\nprint_r(histogram('abcccccccccccccccccc')\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9x58bxg8.php on line 68

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = explode(\"\
    \ \", $test);\n    $histogram = [];\n    foreach ($letters as $letter) {\n   \
    \     if (array_key_exists($letter, $histogram)) {\n            $histogram[$letter]++;\n\
    \        } else {\n            $histogram[$letter] = 1;\n        }\n    }\n  \
    \  return $histogram;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnl9i7pq_.php:25\n\
    Stack trace:\n#0 /tmp/tmpnl9i7pq_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnl9i7pq_.php\
    \ on line 25\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpej6lnhch.php:23\nStack trace:\n#0 /tmp/tmpej6lnhch.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpej6lnhch.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $arr = str_split($test);\n\
    \    $result = [];\n    foreach ($arr as $letter) {\n        if (isset($result[$letter]))\
    \ {\n            $result[$letter]++;\n        } else {\n            $result[$letter]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf4yk71nx.php:24\n\
    Stack trace:\n#0 /tmp/tmpf4yk71nx.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf4yk71nx.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $result\
    \ = array_filter($counts, function($v) use ($max) { return $v == $max; });\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0liom47.php:19\n\
    Stack trace:\n#0 /tmp/tmpd0liom47.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpd0liom47.php\
    \ on line 19\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $hist = array_count_values($letters);\n    $max = max($hist);\n    $max_letters\
    \ = array_keys($hist, $max);\n    return array_combine($max_letters, array_fill(0,\
    \ count($max_letters), $max));\n}\n\nprint_r(histogram(\"abccccccccccc\"));\n\
    print_r(histogram(\"aaabbbccc\"));\nprint_r(histogram(\"aabbbccc\"));\nprint_r(histogram(\"\
    aabbbcccdddd\"));\nprint_r(histogram(\"aabbbcccddddeeeee\"));\nprint_r(histogram(\"\
    aabbbcccddddeeeeeffffff\"));\nprint_r(histogram(\"aabbbcccddddeeeeeffffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpn60ts1i0.php on line 26

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n  \
    \          $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6ahio8.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6ahio8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvg6ahio8.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $max_letters\
    \ = array_keys($counts, $max);\n    $result = array();\n    foreach ($max_letters\
    \ as $letter) {\n        $result[$letter] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6av7sx3u.php:23\n\
    Stack trace:\n#0 /tmp/tmp6av7sx3u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6av7sx3u.php\
    \ on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nprint_r(histogram(\"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j\
    \ k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z\"));\nprint_r(histogram(\"a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g\
    \ h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d\
    \ e f g h i j k l m n o p q r s t u v w x y z\"));\nprint_r(histogram(\"a b c\
    \ d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o\
    \ p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m\
    \ n o p q r s t u v w\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpuh8b1mxy.php on line 26

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4dh62mi.php:21\n\
    Stack trace:\n#0 /tmp/tmpq4dh62mi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq4dh62mi.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_keys($counts, $max);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ujstiac.php:19\n\
    Stack trace:\n#0 /tmp/tmp2ujstiac.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2ujstiac.php\
    \ on line 19\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $result\
    \ = array_filter($counts, function($v) use ($max) {\n    return $v == $max;\n\
    \  });\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtgvtl_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpxtgvtl_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxtgvtl_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4dh62mi.php:21\n\
    Stack trace:\n#0 /tmp/tmpq4dh62mi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq4dh62mi.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuiun5zgp.php:23\nStack trace:\n#0 /tmp/tmpuiun5zgp.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuiun5zgp.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n  \
    \          $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n\
    }\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6ahio8.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6ahio8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvg6ahio8.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $letters = str_split($test);\n\
    \  $counts = array_count_values($letters);\n  $max = max($counts);\n  $result\
    \ = array_filter($counts, function($v) use ($max) {\n    return $v == $max;\n\
    \  });\n  return $result;\n}\n\necho \"histogram('a b c d e f g h i j k l m n\
    \ o p q r s t u v w x y z')\\n\";\nprint_r(histogram('a b c d e f g h i j k l\
    \ m n o p q r s t u v w x y z'));\necho \"\\n\";\necho \"histogram('a b c d e\
    \ f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q\
    \ r s t u v w x y z')\\n\";\nprint_r(histogram('a b c d e f g h i j k l m n o\
    \ p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z'));\n\
    echo \"\\n\";\necho \"histogram('a b c d e f g h i j k l m n o p q r s t u v w\
    \ x y z a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f g h i\
    \ j k l m n o p q r s t u v w x y z')\\n\";\nprint_r(histogram('a b c d e f g\
    \ h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r s\
    \ t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z'));\necho\
    \ \"\\n\";\necho \"histogram('a b c d e f g h i j k l m n o p q r s t u v w x\
    \ y z a b c d e f g h i j k l m n o p\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpu57n32fu.php on line 31

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $result)) {\n            $result[$letter]++;\n        } else {\n           \
    \ $result[$letter] = 1;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" => 2)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\") !==\
    \ array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
    \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"\
    b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"r t\
    \ g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3s5pmwxk.php:24\n\
    Stack trace:\n#0 /tmp/tmp3s5pmwxk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3s5pmwxk.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_keys($counts, $max);\n    return $result;\n}\n\n$test = \"aabbccdddd\"\
    ;\nprint_r(histogram($test));\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => d\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpnod6oz10.php:21\nStack trace:\n#0 /tmp/tmpnod6oz10.php(31): test()\n\
    #1 {main}\n  thrown in /tmp/tmpnod6oz10.php on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $test = str_split($test);\n\
    \    $histogram = array_count_values($test);\n    $max = max($histogram);\n  \
    \  $result = array_keys($histogram, $max);\n    return array_combine($result,\
    \ array_fill(0, count($result), $max));\n}\n\nprint_r(histogram(\"abccccccccccc\"\
    ));\nprint_r(histogram(\"aabbbcccccdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpepjlzm4n.php on line 21

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) { return $v == $max; });\n \
    \   return $result;\n}\n\n$test = \"aabbbbbcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp1gi_9gij.php on line 20

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpej6lnhch.php:23\nStack trace:\n#0 /tmp/tmpej6lnhch.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpej6lnhch.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\nprint_r(histogram($test));\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuiun5zgp.php:23\nStack trace:\n#0 /tmp/tmpuiun5zgp.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuiun5zgp.php on line 23\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4dh62mi.php:21\n\
    Stack trace:\n#0 /tmp/tmpq4dh62mi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq4dh62mi.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z\";\nprint_r(histogram($test));\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp2ivzjcpe.php:24\nStack trace:\n#0 /tmp/tmp2ivzjcpe.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2ivzjcpe.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $result = [];\n\
    \    $letters = explode(' ', $test);\n    foreach ($letters as $letter) {\n  \
    \      if (isset($result[$letter])) {\n            $result[$letter]++;\n     \
    \   } else {\n            $result[$letter] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpen58wnfc.php:25\n\
    Stack trace:\n#0 /tmp/tmpen58wnfc.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpen58wnfc.php\
    \ on line 25\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4dh62mi.php:21\n\
    Stack trace:\n#0 /tmp/tmpq4dh62mi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq4dh62mi.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n  $test = str_split($test);\n\
    \  $result = [];\n  $max = 0;\n  foreach ($test as $letter) {\n    if (array_key_exists($letter,\
    \ $result)) {\n      $result[$letter]++;\n    } else {\n      $result[$letter]\
    \ = 1;\n    }\n    if ($result[$letter] > $max) {\n      $max = $result[$letter];\n\
    \    }\n  }\n  $result = array_filter($result, function($value) use ($max) {\n\
    \    return $value == $max;\n  });\n  return $result;\n}\n\n$test = \"aabbccddddeee\"\
    ;\nvar_dump(histogram($test));\n$test = \"aabbccddddeeefff\";\nvar_dump(histogram($test));\n\
    $test = \"aabbccddddeeefffgggg\";\nvar_dump(histogram($test));\n$test = \"aabbccddddeeefffgggggggg\"\
    ;\nvar_dump(histogram($test));\n$test = \"aabbccddddeeefffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpozt50ynq.php on line 40

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavl_xcbv.php:21\n\
    Stack trace:\n#0 /tmp/tmpavl_xcbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpavl_xcbv.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3oiu0_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpz3oiu0_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz3oiu0_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $histogram = [];\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n\
    \nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7t13_b2.php:24\n\
    Stack trace:\n#0 /tmp/tmpf7t13_b2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf7t13_b2.php\
    \ on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\n$test = \"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\";\nprint_r(histogram($test));\n\nfunction candidate(...$args)\
    \ {\n    return histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a b b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [ ] => 25\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpm0nrgq60.php:24\nStack trace:\n#0 /tmp/tmpm0nrgq60.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpm0nrgq60.php on line 24\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nprint_r(histogram(\"aabbccdddd\"\
    ));\nprint_r(histogram(\"aabbccddddeeeee\"));\nprint_r(histogram(\"aabbccddddeeeeefffff\"\
    ));\nprint_r(histogram(\"aabbccddddeeeeefffffgggggg\"));\nprint_r(histogram(\"\
    aabbccddddeeeeefffffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpde2umy8t.php on line 26

    '
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3oiu0_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpz3oiu0_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz3oiu0_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_filter($count, function($v) use ($max) {\n        return $v == $max;\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ histogram(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a b\
    \ b a\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d g\") !== array(\"\
    a\" => 1, \"b\" => 1, \"c\" => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" =>\
    \ 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    b b b b a\") !== array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\") !== array(\"\
    a\" => 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3oiu0_e.php:21\n\
    Stack trace:\n#0 /tmp/tmpz3oiu0_e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz3oiu0_e.php\
    \ on line 21\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_keys($counts, $max);\n    return $result;\n}\n\nprint_r(histogram(\"\
    aabbccdddd\"));\nfunction candidate(...$args) {\n    return histogram(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" =>\
    \ 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a b c a b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => d\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp55xxnyqe.php:20\nStack trace:\n#0 /tmp/tmp55xxnyqe.php(30): test()\n\
    #1 {main}\n  thrown in /tmp/tmp55xxnyqe.php on line 20\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array_keys($count, $max);\n    return $result;\n}\n\necho histogram(\"aabbccddddeeeee\"\
    );\nfunction candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyo3hc8fb.php:20\n\
    Stack trace:\n#0 /tmp/tmpyo3hc8fb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyo3hc8fb.php\
    \ on line 20\n"
  timestamp: 1659730812
- exit_code: 255
  program: "<?php\n// Given a string representing a space separated lowercase letters,\
    \ return a dictionary\n// of the letter with the most repetition and containing\
    \ the corresponding count.\n// If several letters have the same occurrence, return\
    \ all of them.\n// Example:\nfunction histogram($test) {\n    $letters = str_split($test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array_filter($counts, function($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n\nprint_r(histogram(\"aabbccddddeeeee\"\
    ));\nprint_r(histogram(\"aabbccddddeeeeeff\"));\nprint_r(histogram(\"aabbccddddeeeeeffgg\"\
    ));\nprint_r(histogram(\"aabbccddddeeeeeffgggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\n\
    function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
    \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a\
    \ b\") !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\"\
    \ => 1, \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"b b b b a\") !==\
    \ array(\"b\" => 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6jcywazn.php on line 25

    '
  timestamp: 1659730812

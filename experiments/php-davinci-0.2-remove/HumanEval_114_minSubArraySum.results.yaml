language: php
name: HumanEval_114_minSubArraySum
results:
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = $sum;\n            $sum -= $nums[$start];\n \
    \           $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkucl558c.php:27\n\
    Stack trace:\n#0 /tmp/tmpkucl558c.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkucl558c.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mfabxrk.php:22\n\
    Stack trace:\n#0 /tmp/tmp3mfabxrk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3mfabxrk.php\
    \ on line 22\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    $end = 0;\n\
    \    while ($end < count($nums)) {\n        $sum += $nums[$end];\n        while\
    \ ($sum >= $min) {\n            $min = $sum;\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n        $end++;\n    }\n    return $min;\n\
    }\n\n$nums = [2, 3, 1, 2, 4, 3];\nprint_r(minSubArraySum($nums));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2n2lvrhi.php:29\n\
    Stack trace:\n#0 /tmp/tmp2n2lvrhi.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2n2lvrhi.php\
    \ on line 29\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pj09dxx.php:25\n\
    Stack trace:\n#0 /tmp/tmp_pj09dxx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_pj09dxx.php\
    \ on line 25\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    foreach ($nums as $num) {\n    \
    \    $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n   \
    \     }\n        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n  \
    \  return $min;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\necho minSubArraySum($nums);\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $minSum = min($minSum, $sum);\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2,\
    \ 1, -5, 4];\n$nums = [1, 2, 3, 4, 5];\n$nums = [1, -2, 3, 4, -5];\n$nums = [1,\
    \ -2, 3, 4, -5, 6];\n$nums = [1, -2, 3, 4, -5, 6, -7];\n$nums = [1, -2, 3, 4,\
    \ -5, 6, -7, 8];\n$nums = [1, -2, 3, 4, -5, 6, -7, 8, -9];\n$nums = [1, -2, 3,\
    \ 4, -5, 6, -7, 8, -9, 10];\n$nums = [1, -2, 3, 4, -5, 6, -7, 8, -9, 10, -11];\n\
    $nums = [1, -2, 3, 4, -5, 6, -7, 8, -9, 10, -11, 12];\n$nums = [1, -2, 3, 4, -5,\
    \ 6, -7, 8, -9, 10, -11, 12, -13];\n$nums = [1, -2, 3, 4, -5, 6, -7, 8, -9, 10,\
    \ -11, 12, -13, 14];\n$nums = [1, -2, 3, 4, -5, 6, -7, 8, -9, 10, -11, 12, -13,\
    \ 14, -15];\n$nums = [1, -2, 3, 4, -5, 6, -7, 8, -9, 10,\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpy4cuhwns.php on line 34

    '
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2,\
    \ 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n  \
    \  return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    $end = 0;\n\
    \    while ($end < count($nums)) {\n        $sum += $nums[$end];\n        if ($sum\
    \ < $min) {\n            $min = $sum;\n        }\n        if ($sum > 0) {\n  \
    \          $sum = 0;\n            $start = $end + 1;\n        }\n        $end++;\n\
    \    }\n    return $min;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ifd2f8h.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ifd2f8h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6ifd2f8h.php\
    \ on line 25\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2,3,1,2,4,3];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbto26_i.php:27\n\
    Stack trace:\n#0 /tmp/tmpfbto26_i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfbto26_i.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = $sum;\n            $sum -= $nums[$start];\n \
    \           $start++;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_ilygtm.php:25\n\
    Stack trace:\n#0 /tmp/tmp7_ilygtm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7_ilygtm.php\
    \ on line 25\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = $sum;\n            $sum -= $nums[$start];\n \
    \           $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkucl558c.php:27\n\
    Stack trace:\n#0 /tmp/tmpkucl558c.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkucl558c.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2,3,1,2,4,3];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbto26_i.php:27\n\
    Stack trace:\n#0 /tmp/tmpfbto26_i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfbto26_i.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    $nums = [-2,1,-3,4,-1,2,1,-5,4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, -3, 4,\
    \ -1, -2, 1, 5, -3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayay0f58.php:24\n\
    Stack trace:\n#0 /tmp/tmpayay0f58.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpayay0f58.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currentSum = $nums[0];\n    for ($i = 1; $i\
    \ < count($nums); $i++) {\n        $currentSum = min($currentSum + $nums[$i],\
    \ $nums[$i]);\n        $minSum = min($minSum, $currentSum);\n    }\n    return\
    \ $minSum;\n}\n\n$nums = [2, 3, -2, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-2'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = $sum;\n            $sum -= $nums[$start];\n \
    \           $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkucl558c.php:27\n\
    Stack trace:\n#0 /tmp/tmpkucl558c.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkucl558c.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n\n$nums = [2, 3, 1, 2, 4, 3];\nprint_r(minSubArraySum($nums));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4whse25.php:27\n\
    Stack trace:\n#0 /tmp/tmpg4whse25.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpg4whse25.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2,\
    \ 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n  \
    \  return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2,\
    \ 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n  \
    \  return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, -1, -3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-6'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    $end = 0;\n\
    \    while ($end < count($nums)) {\n        $sum += $nums[$end];\n        while\
    \ ($sum >= $min) {\n            $min = $sum;\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n        $end++;\n    }\n    return $min;\n\
    }\n\n$nums = [2,3,1,2,4,3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ws5mirg.php:29\n\
    Stack trace:\n#0 /tmp/tmp1ws5mirg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1ws5mirg.php\
    \ on line 29\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\nprint_r(minSubArraySum($nums));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2p9mx9zj.php:24\n\
    Stack trace:\n#0 /tmp/tmp2p9mx9zj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2p9mx9zj.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ifd2f8h.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ifd2f8h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6ifd2f8h.php\
    \ on line 25\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mfabxrk.php:22\n\
    Stack trace:\n#0 /tmp/tmp3mfabxrk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3mfabxrk.php\
    \ on line 22\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    $end = 0;\n\
    \    while ($end < count($nums)) {\n        $sum += $nums[$end];\n        while\
    \ ($sum >= $min) {\n            $min = $sum;\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n        $end++;\n    }\n    return $min;\n\
    }\n\n$nums = [2, 3, 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe4vgvu3z.php:29\n\
    Stack trace:\n#0 /tmp/tmpe4vgvu3z.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpe4vgvu3z.php\
    \ on line 29\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n\n$nums = [2,3,1,2,4,3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3rzv2r6i.php:27\n\
    Stack trace:\n#0 /tmp/tmp3rzv2r6i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3rzv2r6i.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tjaytvs.php:24\n\
    Stack trace:\n#0 /tmp/tmp_tjaytvs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_tjaytvs.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    $nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2,\
    \ 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n  \
    \  return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tjaytvs.php:24\n\
    Stack trace:\n#0 /tmp/tmp_tjaytvs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_tjaytvs.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n\n$nums = [2,3,1,2,4,3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3rzv2r6i.php:27\n\
    Stack trace:\n#0 /tmp/tmp3rzv2r6i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3rzv2r6i.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\n$res = minSubArraySum($nums);\necho $res;\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1jdjtgzn.php:28\n\
    Stack trace:\n#0 /tmp/tmp1jdjtgzn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1jdjtgzn.php\
    \ on line 28\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tjaytvs.php:24\n\
    Stack trace:\n#0 /tmp/tmp_tjaytvs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_tjaytvs.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pj09dxx.php:25\n\
    Stack trace:\n#0 /tmp/tmp_pj09dxx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_pj09dxx.php\
    \ on line 25\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    $nums = [-2,1,-3,4,-1,2,1,-5,4];\nprint_r(minSubArraySum($nums));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $left = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = $sum;\n            $sum -= $nums[$left];\n  \
    \          $left++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3, 1,\
    \ 2, 4, 3];\n$result = minSubArraySum($nums);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkqn838dq.php:28\n\
    Stack trace:\n#0 /tmp/tmpkqn838dq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkqn838dq.php\
    \ on line 28\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $minSum = min($minSum, $sum);\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\nprint_r(minSubArraySum($nums));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk37s_ryj.php:27\n\
    Stack trace:\n#0 /tmp/tmpk37s_ryj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpk37s_ryj.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    $nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tjaytvs.php:24\n\
    Stack trace:\n#0 /tmp/tmp_tjaytvs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_tjaytvs.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tjaytvs.php:24\n\
    Stack trace:\n#0 /tmp/tmp_tjaytvs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_tjaytvs.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2, -3, -1];\necho\
    \ minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-6'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $minSum = min($minSum, $sum);\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $minSum = min($minSum, $sum);\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pj09dxx.php:25\n\
    Stack trace:\n#0 /tmp/tmp_pj09dxx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_pj09dxx.php\
    \ on line 25\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n\n$nums = [2,3,1,2,4,3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3rzv2r6i.php:27\n\
    Stack trace:\n#0 /tmp/tmp3rzv2r6i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3rzv2r6i.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tjaytvs.php:24\n\
    Stack trace:\n#0 /tmp/tmp_tjaytvs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_tjaytvs.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mfabxrk.php:22\n\
    Stack trace:\n#0 /tmp/tmp3mfabxrk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3mfabxrk.php\
    \ on line 22\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxg3cl6tz.php:24\n\
    Stack trace:\n#0 /tmp/tmpxg3cl6tz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxg3cl6tz.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pj09dxx.php:25\n\
    Stack trace:\n#0 /tmp/tmp_pj09dxx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_pj09dxx.php\
    \ on line 25\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2, -1, -3];\necho\
    \ minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-6'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ifd2f8h.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ifd2f8h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6ifd2f8h.php\
    \ on line 25\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    $nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $currentSum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $currentSum += $nums[$i];\n        if ($currentSum < $minSum)\
    \ {\n            $minSum = $currentSum;\n        }\n        if ($currentSum >\
    \ 0) {\n            $currentSum = 0;\n        }\n    }\n    return $minSum;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    $end = 0;\n\
    \    while ($end < count($nums)) {\n        $sum += $nums[$end];\n        while\
    \ ($sum >= $min) {\n            $min = $sum;\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n        $end++;\n    }\n    return $min;\n\
    }\n\n$nums = [2, 3, 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe4vgvu3z.php:29\n\
    Stack trace:\n#0 /tmp/tmpe4vgvu3z.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpe4vgvu3z.php\
    \ on line 29\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\nprint_r(minSubArraySum($nums));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2p9mx9zj.php:24\n\
    Stack trace:\n#0 /tmp/tmp2p9mx9zj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2p9mx9zj.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $left = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = $sum;\n            $sum -= $nums[$left];\n  \
    \          $left++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3, 1,\
    \ 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnvkyl1u8.php:27\n\
    Stack trace:\n#0 /tmp/tmpnvkyl1u8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnvkyl1u8.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mfabxrk.php:22\n\
    Stack trace:\n#0 /tmp/tmp3mfabxrk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3mfabxrk.php\
    \ on line 22\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $left = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = $sum;\n            $sum -= $nums[$left];\n  \
    \          $left++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3, 1,\
    \ 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnvkyl1u8.php:27\n\
    Stack trace:\n#0 /tmp/tmpnvkyl1u8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnvkyl1u8.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2,\
    \ 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n  \
    \  return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2,\
    \ 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n  \
    \  return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, -1, -3];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpew0squop.php:24\n\
    Stack trace:\n#0 /tmp/tmpew0squop.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpew0squop.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\n$nums = [1, 2, 3, 4, 5];\n$nums = [5, 4, 3, 2, 1];\n$nums = [3,\
    \ -1, 2, -3, 4];\n$nums = [3, -4, 2, -3, -4];\n$nums = [2, -3, -2, 4, -1, 2, 1,\
    \ -5, 3];\n$nums = [2, -3, -2, 4, -1, 2, 1, -5, 3];\n$nums = [1, -1, -1, -1];\n\
    $nums = [1, -1, -1, -1, -1];\n$nums = [1, -1, -1, -1, -1, -1];\n$nums = [1, -1,\
    \ -1, -1, -1, -1, -1];\n$nums = [1, -1, -1, -1, -1, -1, -1, -1];\n$nums = [1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1];\n$nums = [1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1];\n$nums = [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\n$nums = [1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1,\nfunction candidate(...$args) {\n    return\
    \ minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp6w5ppt9m.php on line 36

    '
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    foreach ($nums as $num) {\n    \
    \    $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n   \
    \     }\n        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n  \
    \  return $min;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\necho minSubArraySum($nums);\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tjaytvs.php:24\n\
    Stack trace:\n#0 /tmp/tmp_tjaytvs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_tjaytvs.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\nvar_dump(minSubArraySum($nums));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'int(-5)

    '
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pj09dxx.php:25\n\
    Stack trace:\n#0 /tmp/tmp_pj09dxx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_pj09dxx.php\
    \ on line 25\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $minSum = min($minSum, $sum);\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    $nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\nprint_r(minSubArraySum($nums));\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ifd2f8h.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ifd2f8h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6ifd2f8h.php\
    \ on line 25\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $left = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        $min = min($min,\
    \ $sum - $left);\n        $left = min($left, $sum);\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3a0mxoj.php:22\n\
    Stack trace:\n#0 /tmp/tmpt3a0mxoj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpt3a0mxoj.php\
    \ on line 22\n"
  timestamp: 1659730995
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, -1, -3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-6'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mfabxrk.php:22\n\
    Stack trace:\n#0 /tmp/tmp3mfabxrk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3mfabxrk.php\
    \ on line 22\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    $nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums\
    \ = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4,\
    \ 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums\
    \ = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4,\
    \ 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums\
    \ = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4, 3];\n$nums = [2, 3, 1, 2, 4,\
    \ 3];\n$nums =\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjfruqpn2.php on line 43

    '
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pj09dxx.php:25\n\
    Stack trace:\n#0 /tmp/tmp_pj09dxx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_pj09dxx.php\
    \ on line 25\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2,3,1,2,4,3];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbto26_i.php:27\n\
    Stack trace:\n#0 /tmp/tmpfbto26_i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfbto26_i.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ifd2f8h.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ifd2f8h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6ifd2f8h.php\
    \ on line 25\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    $nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $left = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = $sum;\n            $sum -= $nums[$left];\n  \
    \          $left++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3, 1,\
    \ 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnvkyl1u8.php:27\n\
    Stack trace:\n#0 /tmp/tmpnvkyl1u8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnvkyl1u8.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\nprint_r(minSubArraySum($nums));\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk37s_ryj.php:27\n\
    Stack trace:\n#0 /tmp/tmpk37s_ryj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpk37s_ryj.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2,3,1,2,4,3];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbto26_i.php:27\n\
    Stack trace:\n#0 /tmp/tmpfbto26_i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfbto26_i.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tjaytvs.php:24\n\
    Stack trace:\n#0 /tmp/tmp_tjaytvs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_tjaytvs.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n\n$nums = [2, 3, -2, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp917cxcph.php:27\n\
    Stack trace:\n#0 /tmp/tmp917cxcph.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp917cxcph.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $currSum = $nums[0];\n    for ($i = 1; $i <\
    \ count($nums); $i++) {\n        $currSum = min($nums[$i], $currSum + $nums[$i]);\n\
    \        $minSum = min($minSum, $currSum);\n    }\n    return $minSum;\n}\n\n\
    $nums = [-2,1,-3,4,-1,2,1,-5,4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n\n$nums = [2, 3, 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz4hri0qy.php:27\n\
    Stack trace:\n#0 /tmp/tmpz4hri0qy.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpz4hri0qy.php\
    \ on line 27\n"
  timestamp: 1659730995
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\necho minSubArraySum([-2,1,-3,4,-1,2,1,-5,4])\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5

    '
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n$nums = [-2, 1, -3, 4,\
    \ -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssgdcy0l.php:23\n\
    Stack trace:\n#0 /tmp/tmpssgdcy0l.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpssgdcy0l.php\
    \ on line 23\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2,3,1,2,4,3];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbto26_i.php:27\n\
    Stack trace:\n#0 /tmp/tmpfbto26_i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfbto26_i.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2,\
    \ 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n  \
    \  return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    echo minSubArraySum($nums);\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tjaytvs.php:24\n\
    Stack trace:\n#0 /tmp/tmp_tjaytvs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_tjaytvs.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i =\
    \ 0; $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $minSum) {\n            $minSum = min($minSum, $sum);\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $minSum;\n\
    }\n\n$nums = [2,3,1,2,4,3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3rzv2r6i.php:27\n\
    Stack trace:\n#0 /tmp/tmp3rzv2r6i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3rzv2r6i.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $sum = 0;\n    $min = PHP_INT_MAX;\n    $start = 0;\n    $end = 0;\n\
    \    while ($end < count($nums)) {\n        $sum += $nums[$end];\n        $end++;\n\
    \        while ($sum >= $min) {\n            $min = $sum;\n            $sum -=\
    \ $nums[$start];\n            $start++;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [2,3,1,2,4,3];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wlgav1l.php:29\n\
    Stack trace:\n#0 /tmp/tmp4wlgav1l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4wlgav1l.php\
    \ on line 29\n"
  timestamp: 1659730995
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $minSum = min($minSum, $sum);\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\n\
    function candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $minSum) {\n       \
    \     $minSum = $sum;\n        }\n        if ($sum > 0) {\n            $sum =\
    \ 0;\n        }\n    }\n    return $minSum;\n}\n\n$nums = [-2, 1, -3, 4, -1, 2,\
    \ 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n  \
    \  return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3))\
    \ !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $minSum = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $minSum = min($minSum, $sum);\n\
    \        if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return\
    \ $minSum;\n}\n\nfunction candidate(...$args) {\n    return minSubArraySum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2,\
    \ -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $start = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = min($min, $sum);\n            $sum -= $nums[$start];\n\
    \            $start++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3,\
    \ 1, 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n\
    \    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5b1wghg.php:27\n\
    Stack trace:\n#0 /tmp/tmpb5b1wghg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5b1wghg.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    $left = 0;\n    for ($i = 0;\
    \ $i < count($nums); $i++) {\n        $sum += $nums[$i];\n        while ($sum\
    \ >= $min) {\n            $min = $sum;\n            $sum -= $nums[$left];\n  \
    \          $left++;\n        }\n    }\n    return $min;\n}\n\n$nums = [2, 3, 1,\
    \ 2, 4, 3];\necho minSubArraySum($nums);\nfunction candidate(...$args) {\n   \
    \ return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(2,\
    \ 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, -3, 2, -10)) !== -14) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 10,\
    \ -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10)) !==\
    \ -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "9223372036854775807\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnvkyl1u8.php:27\n\
    Stack trace:\n#0 /tmp/tmpnvkyl1u8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnvkyl1u8.php\
    \ on line 27\n"
  timestamp: 1659730994
- exit_code: 0
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = PHP_INT_MAX;\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        $min = min($min, $sum);\n     \
    \   if ($sum > 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n\
    }\n\n$nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction\
    \ candidate(...$args) {\n    return minSubArraySum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-5'
  timestamp: 1659730994
- exit_code: 255
  program: "<?php\n// Given an array of integers nums, find the minimum sum of any\
    \ non-empty sub-array\n// of nums.\n// Example\nfunction minSubArraySum($nums)\
    \ {\n    $min = $nums[0];\n    $sum = 0;\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $sum += $nums[$i];\n        if ($sum < $min) {\n          \
    \  $min = $sum;\n        }\n    }\n    return $min;\n}\n\n$nums = [-2, 1, -3,\
    \ 4, -1, 2, 1, -5, 4];\necho minSubArraySum($nums);\nfunction candidate(...$args)\
    \ {\n    return minSubArraySum(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-9999999999999999))\
    \ !== -9999999999999999) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 10, 20, 1000000)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(100, -33, 32, -1,\
    \ 0, -2)) !== -33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10))\
    \ !== -10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7))\
    \ !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -1)) !== -1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bvxkmzo.php:24\n\
    Stack trace:\n#0 /tmp/tmp4bvxkmzo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4bvxkmzo.php\
    \ on line 24\n"
  timestamp: 1659730994

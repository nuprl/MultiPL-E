language: php
name: HumanEval_65_circular_shift
results:
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnlrb2jn.php:20\n\
    Stack trace:\n#0 /tmp/tmpvnlrb2jn.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvnlrb2jn.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2imxpypr.php:20\n\
    Stack trace:\n#0 /tmp/tmp2imxpypr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2imxpypr.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2imxpypr.php:20\n\
    Stack trace:\n#0 /tmp/tmp2imxpypr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2imxpypr.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobj5lj_l.php:20\n\
    Stack trace:\n#0 /tmp/tmpobj5lj_l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpobj5lj_l.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    $shift = $shift % $len;\n\
    \    if ($shift == 0) {\n        return $x;\n    }\n    return substr($x, $len\
    \ - $shift) . substr($x, 0, $len - $shift);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkm6z6jk3.php:22\n\
    Stack trace:\n#0 /tmp/tmpkm6z6jk3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkm6z6jk3.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwlfnpx2x.php:20\n\
    Stack trace:\n#0 /tmp/tmpwlfnpx2x.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwlfnpx2x.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $x = substr($x,\
    \ $shift) . substr($x, 0, $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp53xtl8qg.php:21\n\
    Stack trace:\n#0 /tmp/tmp53xtl8qg.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp53xtl8qg.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_slice($digits, $shift);\n    $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5o7c00_.php:21\n\
    Stack trace:\n#0 /tmp/tmpp5o7c00_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp5o7c00_.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$n = count($digits);\n\tif ($shift > $n) {\n\t\treturn\
    \ implode('', array_reverse($digits));\n\t}\n\t$shift_digits = array_splice($digits,\
    \ $n - $shift);\n\treturn implode('', array_merge($shift_digits, $digits));\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2imxpypr.php:20\n\
    Stack trace:\n#0 /tmp/tmp2imxpypr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2imxpypr.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$len = count($digits);\n\tif ($shift >= $len) {\n\t\
    \treturn implode('', array_reverse($digits));\n\t}\n\t$new_digits = array_slice($digits,\
    \ $shift);\n\t$new_digits = array_merge($new_digits, array_slice($digits, 0, $shift));\n\
    \treturn implode('', $new_digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fwqlf0j.php:21\n\
    Stack trace:\n#0 /tmp/tmp1fwqlf0j.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1fwqlf0j.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_slice($digits, $shift);\n    $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4bek3kl.php:21\n\
    Stack trace:\n#0 /tmp/tmpt4bek3kl.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpt4bek3kl.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$num_digits = count($digits);\n\tif ($shift > $num_digits)\
    \ {\n\t\t$digits = array_reverse($digits);\n\t} else {\n\t\t$digits = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n\t}\n\treturn implode($digits);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb57nk6nd.php:21\n\
    Stack trace:\n#0 /tmp/tmpb57nk6nd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpb57nk6nd.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift >= $len) {\n        return strrev($x);\n    }\n    $y = substr($x,\
    \ $shift);\n    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0idqfod2.php:22\n\
    Stack trace:\n#0 /tmp/tmp0idqfod2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0idqfod2.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4kagbij.php:22\n\
    Stack trace:\n#0 /tmp/tmpc4kagbij.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpc4kagbij.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $y = substr($x, $len - $shift, $shift);\n\
    \    $y .= substr($x, 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobj5lj_l.php:20\n\
    Stack trace:\n#0 /tmp/tmpobj5lj_l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpobj5lj_l.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift >= $digits) {\n        return strrev($x);\n\
    \    }\n    $y = substr($x, $shift, $digits - $shift);\n    $z = substr($x, 0,\
    \ $shift);\n    return $y . $z;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiu1kqi24.php:20\n\
    Stack trace:\n#0 /tmp/tmpiu1kqi24.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpiu1kqi24.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $shift = intval($shift);\n    if ($shift > strlen($x))\
    \ {\n        return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x,\
    \ 0, $shift);\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3td1cnuy.php:20\n\
    Stack trace:\n#0 /tmp/tmp3td1cnuy.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3td1cnuy.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1i8d9ahg.php:20\n\
    Stack trace:\n#0 /tmp/tmp1i8d9ahg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1i8d9ahg.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $n = strlen($x);\n    if ($shift >= $n) {\n      \
    \  return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3p0wrqc.php:20\n\
    Stack trace:\n#0 /tmp/tmpt3p0wrqc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpt3p0wrqc.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    $shift = $shift %\
    \ $n;\n    if ($shift == 0) {\n        return $x;\n    }\n    $digits = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($digits);\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv2nk_l4.php:21\n\
    Stack trace:\n#0 /tmp/tmpuv2nk_l4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuv2nk_l4.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$digits_reversed = array_reverse($digits);\n\t$digits_shifted\
    \ = array_merge(array_slice($digits_reversed, $shift), array_slice($digits_reversed,\
    \ 0, $shift));\n\t$digits_shifted_reversed = array_reverse($digits_shifted);\n\
    \treturn implode('', $digits_shifted_reversed);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2x3zdjnu.php:20\n\
    Stack trace:\n#0 /tmp/tmp2x3zdjnu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2x3zdjnu.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\t$shift = $shift % $len;\n\tif ($shift\
    \ == 0) return $x;\n\t$x = substr($x, $shift) . substr($x, 0, $shift);\n\treturn\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3ytorjf.php:19\n\
    Stack trace:\n#0 /tmp/tmpm3ytorjf.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpm3ytorjf.php\
    \ on line 19\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    $shift = $shift % $len;\n\
    \    if ($shift == 0) {\n        return $x;\n    }\n    $y = substr($x, $shift)\
    \ . substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp48uc5jqt.php:21\n\
    Stack trace:\n#0 /tmp/tmp48uc5jqt.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp48uc5jqt.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $shift = $len - $shift;\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$n = count($digits);\n\tif ($shift > $n) {\n\t\treturn\
    \ implode('', array_reverse($digits));\n\t}\n\t$shifted = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n\treturn implode('', $shifted);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_kzhkhq.php:20\n\
    Stack trace:\n#0 /tmp/tmpp_kzhkhq.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpp_kzhkhq.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift >= $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $shift);\n    $y .= substr($x,\
    \ 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiicx0m2p.php:21\n\
    Stack trace:\n#0 /tmp/tmpiicx0m2p.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpiicx0m2p.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $n = strlen($x);\n    if ($shift >= $n) {\n      \
    \  return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3p0wrqc.php:20\n\
    Stack trace:\n#0 /tmp/tmpt3p0wrqc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpt3p0wrqc.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4kagbij.php:22\n\
    Stack trace:\n#0 /tmp/tmpc4kagbij.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpc4kagbij.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $n = strlen($x);\n    if ($shift >= $n) {\n      \
    \  return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3p0wrqc.php:20\n\
    Stack trace:\n#0 /tmp/tmpt3p0wrqc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpt3p0wrqc.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift > $len) {\n\t\treturn strrev($x);\n\
    \t}\n\t$shift = $len - $shift;\n\treturn substr($x, $shift) . substr($x, 0, $shift);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    $shift = $shift %\
    \ $n;\n    if ($shift == 0) {\n        return $x;\n    }\n    $digits = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode('', $digits);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxt_ei2ri.php:21\n\
    Stack trace:\n#0 /tmp/tmpxt_ei2ri.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxt_ei2ri.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2imxpypr.php:20\n\
    Stack trace:\n#0 /tmp/tmp2imxpypr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2imxpypr.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $digits = strlen($x);\n    if ($shift >= $digits)\
    \ {\n        return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x,\
    \ 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphjo0a183.php:20\n\
    Stack trace:\n#0 /tmp/tmphjo0a183.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphjo0a183.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $digits =\
    \ array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxt6x2s_h.php:20\n\
    Stack trace:\n#0 /tmp/tmpxt6x2s_h.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxt6x2s_h.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobj5lj_l.php:20\n\
    Stack trace:\n#0 /tmp/tmpobj5lj_l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpobj5lj_l.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $shift = $len - $shift;\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $digits =\
    \ array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4e8nc26.php:20\n\
    Stack trace:\n#0 /tmp/tmpb4e8nc26.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpb4e8nc26.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string) $x;\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qao2gn3.php:20\n\
    Stack trace:\n#0 /tmp/tmp0qao2gn3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp0qao2gn3.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits = array_reverse($digits);\n    $digits\
    \ = array_pad($digits, $shift, 0);\n    $digits = array_reverse($digits);\n  \
    \  $digits = array_slice($digits, $shift);\n    $digits = array_reverse($digits);\n\
    \    return implode($digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprj97lvs1.php:20\n\
    Stack trace:\n#0 /tmp/tmprj97lvs1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprj97lvs1.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$n = count($digits);\n\tif ($shift > $n) {\n\t\t$digits\
    \ = array_reverse($digits);\n\t} else {\n\t\t$digits = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n\t}\n\treturn implode('', $digits);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps84ul97m.php:21\n\
    Stack trace:\n#0 /tmp/tmps84ul97m.php(28): test()\n#1 {main}\n  thrown in /tmp/tmps84ul97m.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnlrb2jn.php:20\n\
    Stack trace:\n#0 /tmp/tmpvnlrb2jn.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvnlrb2jn.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $n = strlen($x);\n    if ($shift >= $n) {\n      \
    \  return strrev($x);\n    }\n    $y = substr($x, $shift, $n - $shift);\n    $y\
    \ .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxe8talnb.php:21\n\
    Stack trace:\n#0 /tmp/tmpxe8talnb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxe8talnb.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzetot93k.php:20\n\
    Stack trace:\n#0 /tmp/tmpzetot93k.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzetot93k.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift >= $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $shift, $len - $shift);\n\
    \    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7guuu5l.php:21\n\
    Stack trace:\n#0 /tmp/tmpw7guuu5l.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw7guuu5l.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobj5lj_l.php:20\n\
    Stack trace:\n#0 /tmp/tmpobj5lj_l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpobj5lj_l.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift, $len - $shift);\n\
    \    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggrcm_4o.php:21\n\
    Stack trace:\n#0 /tmp/tmpggrcm_4o.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpggrcm_4o.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $first =\
    \ array_slice($digits, $shift);\n    $second = array_slice($digits, 0, $shift);\n\
    \    return implode('', array_merge($first, $second));\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq06ruc5d.php:21\n\
    Stack trace:\n#0 /tmp/tmpq06ruc5d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpq06ruc5d.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift >= $len) {\n\t\treturn strrev($x);\n\
    \t}\n\treturn substr($x, $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_nqov1rh.php:19\n\
    Stack trace:\n#0 /tmp/tmp_nqov1rh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_nqov1rh.php\
    \ on line 19\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift >= $len) {\n\t\treturn strrev($x);\n\
    \t}\n\t$right = substr($x, 0, $len - $shift);\n\t$left = substr($x, $len - $shift);\n\
    \treturn $left . $right;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaet8zpsa.php:22\n\
    Stack trace:\n#0 /tmp/tmpaet8zpsa.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpaet8zpsa.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        $digits = array_reverse($digits);\n    } else {\n        $digits\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    }\n    return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaz2jp1lj.php:21\n\
    Stack trace:\n#0 /tmp/tmpaz2jp1lj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpaz2jp1lj.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        return implode('', array_reverse($digits));\n  \
    \  }\n    $left = array_slice($digits, 0, $shift);\n    $right = array_slice($digits,\
    \ $shift);\n    return implode('', array_merge($right, $left));\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_wwtn9sm.php:21\n\
    Stack trace:\n#0 /tmp/tmp_wwtn9sm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_wwtn9sm.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    $shift = $shift %\
    \ $n;\n    if ($shift == 0) {\n        return $x;\n    }\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $result = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($result);\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyii9h15.php:24\n\
    Stack trace:\n#0 /tmp/tmphyii9h15.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphyii9h15.php\
    \ on line 24\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2imxpypr.php:20\n\
    Stack trace:\n#0 /tmp/tmp2imxpypr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2imxpypr.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$num_digits = count($digits);\n\tif ($shift >= $num_digits)\
    \ {\n\t\treturn implode('', array_reverse($digits));\n\t}\n\t$new_digits = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n\treturn implode('', $new_digits);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcpsynzct.php:20\n\
    Stack trace:\n#0 /tmp/tmpcpsynzct.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcpsynzct.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $length = strlen($x);\n    $shift = $shift % $length;\n\
    \    if ($shift == 0) {\n        return $x;\n    }\n    if ($shift > $length)\
    \ {\n        return strrev($x);\n    }\n    $right = substr($x, 0, $length - $shift);\n\
    \    $left = substr($x, $length - $shift);\n    return $left . $right;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphono99wy.php:27\n\
    Stack trace:\n#0 /tmp/tmphono99wy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmphono99wy.php\
    \ on line 27\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$shift = (int) $shift;\n\t$len = strlen($x);\n\tif ($shift\
    \ >= $len) {\n\t\treturn strrev($x);\n\t}\n\t$y = substr($x, $shift);\n\t$y .=\
    \ substr($x, 0, $shift);\n\treturn $y;\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpls230jh7.php:22\n\
    Stack trace:\n#0 /tmp/tmpls230jh7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpls230jh7.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4kagbij.php:22\n\
    Stack trace:\n#0 /tmp/tmpc4kagbij.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpc4kagbij.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift >= $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39kpbzhi.php:23\n\
    Stack trace:\n#0 /tmp/tmp39kpbzhi.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp39kpbzhi.php\
    \ on line 23\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnlrb2jn.php:20\n\
    Stack trace:\n#0 /tmp/tmpvnlrb2jn.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvnlrb2jn.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    $shift = $shift %\
    \ $n;\n    if ($shift == 0) {\n        return implode('', $digits);\n    }\n \
    \   $result = array_slice($digits, $shift);\n    $result = array_merge($result,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_la65j9.php:22\n\
    Stack trace:\n#0 /tmp/tmp1_la65j9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1_la65j9.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$n = count($digits);\n\tif ($shift > $n) {\n\t\treturn\
    \ implode('', array_reverse($digits));\n\t}\n\t$shifted = array_slice($digits,\
    \ $n - $shift);\n\t$shifted = array_merge($shifted, array_slice($digits, 0, $n\
    \ - $shift));\n\treturn implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        $digits = array_reverse($digits);\n    } else {\n\
    \        $digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    }\n    return implode('', $digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgpdtftbu.php:21\n\
    Stack trace:\n#0 /tmp/tmpgpdtftbu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgpdtftbu.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift >= $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $shift, $len - $shift);\n\
    \    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7guuu5l.php:21\n\
    Stack trace:\n#0 /tmp/tmpw7guuu5l.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw7guuu5l.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift > $len) {\n\t\treturn strrev($x);\n\
    \t}\n\t$right = substr($x, 0, $len - $shift);\n\t$left = substr($x, $len - $shift);\n\
    \treturn $left . $right;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $s = array_slice($digits,\
    \ $shift);\n    $s = array_merge($s, array_slice($digits, 0, $shift));\n    return\
    \ implode('', $s);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx7dpl3v4.php:21\n\
    Stack trace:\n#0 /tmp/tmpx7dpl3v4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpx7dpl3v4.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode('', array_reverse($digits));\n   \
    \ }\n    $shifted = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycccmsa7.php:20\n\
    Stack trace:\n#0 /tmp/tmpycccmsa7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpycccmsa7.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2kmmdnv.php:22\n\
    Stack trace:\n#0 /tmp/tmpb2kmmdnv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpb2kmmdnv.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x_str = (string) $x;\n\t$x_len = strlen($x_str);\n\tif ($shift >= $x_len) {\n\
    \t\treturn strrev($x_str);\n\t}\n\t$x_str_rev = strrev($x_str);\n\t$x_str_rev_shifted\
    \ = substr($x_str_rev, 0, $shift);\n\t$x_str_rev_remaining = substr($x_str_rev,\
    \ $shift);\n\treturn strrev($x_str_rev_remaining . $x_str_rev_shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4kqugzuy.php:23\n\
    Stack trace:\n#0 /tmp/tmp4kqugzuy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp4kqugzuy.php\
    \ on line 23\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $y = substr($x,\
    \ $shift);\n    $z = substr($x, 0, $shift);\n    return $y . $z;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d_qnjpu.php:22\n\
    Stack trace:\n#0 /tmp/tmp1d_qnjpu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1d_qnjpu.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $len = count($digits);\n    if ($shift >= $len)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $new_digits\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $new_digits);\n}\n\nfunction candidate(...$args) {\n \
    \   return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy59isxwx.php:20\n\
    Stack trace:\n#0 /tmp/tmpy59isxwx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpy59isxwx.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$digits_count = count($digits);\n\tif ($shift > $digits_count)\
    \ {\n\t\treturn implode('', array_reverse($digits));\n\t}\n\t$shifted = array_slice($digits,\
    \ $shift);\n\t$shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \treturn implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5fvolc9r.php:21\n\
    Stack trace:\n#0 /tmp/tmp5fvolc9r.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5fvolc9r.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $r = substr($x, $len - $shift);\n    $l\
    \ = substr($x, 0, $len - $shift);\n    return $r . $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7_162pp.php:22\n\
    Stack trace:\n#0 /tmp/tmpe7_162pp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe7_162pp.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $shift = $shift % count($digits);\n    if ($shift\
    \ == 0) {\n        return $x;\n    }\n    $shifted = array_merge(array_slice($digits,\
    \ -$shift), array_slice($digits, 0, -$shift));\n    return implode('', $shifted);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp04jv9omt.php:21\n\
    Stack trace:\n#0 /tmp/tmp04jv9omt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp04jv9omt.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    $shift = $shift %\
    \ $n;\n    if ($shift == 0) {\n        return $x;\n    }\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $result =\
    \ array_slice($digits, $shift);\n    $result = array_merge($result, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouiislr7.php:25\n\
    Stack trace:\n#0 /tmp/tmpouiislr7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpouiislr7.php\
    \ on line 25\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1i8d9ahg.php:20\n\
    Stack trace:\n#0 /tmp/tmp1i8d9ahg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp1i8d9ahg.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $second = substr($x, $len - $shift);\n    return $second . $first;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift > $len) {\n\t\treturn strrev($x);\n\
    \t}\n\t$right = substr($x, $len - $shift);\n\t$left = substr($x, 0, $len - $shift);\n\
    \treturn $right . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        return\
    \ implode('', array_reverse($digits));\n    }\n    $shift_digits = array_slice($digits,\
    \ -$shift);\n    $remaining_digits = array_slice($digits, 0, -$shift);\n    return\
    \ implode('', array_merge($shift_digits, $remaining_digits));\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift, $shift);\n\
    \    $y .= substr($x, 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$shift = (int) $shift;\n\t$len = strlen($x);\n\tif ($shift\
    \ > $len) {\n\t\treturn strrev($x);\n\t}\n\treturn substr($x, $len - $shift) .\
    \ substr($x, 0, $len - $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits = array_reverse($digits);\n    $digits\
    \ = array_pad($digits, $shift, 0);\n    $digits = array_reverse($digits);\n  \
    \  $digits = array_slice($digits, 0, $shift);\n    $digits = array_reverse($digits);\n\
    \    return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpol2fnuba.php:20\n\
    Stack trace:\n#0 /tmp/tmpol2fnuba.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpol2fnuba.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_len = count($digits);\n    if ($shift\
    \ >= $digits_len) {\n        return implode('', array_reverse($digits));\n   \
    \ }\n    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtm5w7yh.php:21\n\
    Stack trace:\n#0 /tmp/tmpxtm5w7yh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxtm5w7yh.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobj5lj_l.php:20\n\
    Stack trace:\n#0 /tmp/tmpobj5lj_l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpobj5lj_l.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $n = strlen($x);\n    if ($shift >= $n) {\n      \
    \  return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3p0wrqc.php:20\n\
    Stack trace:\n#0 /tmp/tmpt3p0wrqc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpt3p0wrqc.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$n = count($digits);\n\tif ($shift >= $n) {\n\t\t\
    return implode('', array_reverse($digits));\n\t}\n\t$shifted = array_slice($digits,\
    \ $shift);\n\t$shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \treturn implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_yzahud9.php:21\n\
    Stack trace:\n#0 /tmp/tmp_yzahud9.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_yzahud9.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$len = count($digits);\n\tif ($shift > $len) {\n\t\
    \treturn implode('', array_reverse($digits));\n\t}\n\t$shift = $shift % $len;\n\
    \t$result = array_slice($digits, $shift);\n\t$result = array_merge($result, array_slice($digits,\
    \ 0, $shift));\n\treturn implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6iu6x4i.php:22\n\
    Stack trace:\n#0 /tmp/tmpf6iu6x4i.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpf6iu6x4i.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    $shift = $shift %\
    \ $n;\n    if ($shift == 0) {\n        return $x;\n    }\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $result =\
    \ array_slice($digits, $shift);\n    $result = array_merge($result, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouiislr7.php:25\n\
    Stack trace:\n#0 /tmp/tmpouiislr7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpouiislr7.php\
    \ on line 25\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        $digits = array_reverse($digits);\n    } else {\n        $digits\
    \ = array_merge(array_slice($digits, $shift),\n                              array_slice($digits,\
    \ 0, $shift));\n    }\n    return implode($digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnupymt0q.php:22\n\
    Stack trace:\n#0 /tmp/tmpnupymt0q.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpnupymt0q.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift >= $len) {\n\t\treturn strrev($x);\n\
    \t}\n\t$right = substr($x, $len - $shift);\n\t$left = substr($x, 0, $len - $shift);\n\
    \treturn $right . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2u7jcre.php:22\n\
    Stack trace:\n#0 /tmp/tmpg2u7jcre.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpg2u7jcre.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $str = strval($x);\n    $len = strlen($str);\n    if ($shift > $len) {\n\
    \        return strrev($str);\n    }\n    $str = substr($str, $shift) . substr($str,\
    \ 0, $shift);\n    return $str;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2a2bb65.php:20\n\
    Stack trace:\n#0 /tmp/tmpv2a2bb65.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv2a2bb65.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4kagbij.php:22\n\
    Stack trace:\n#0 /tmp/tmpc4kagbij.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpc4kagbij.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_length = count($digits);\n    if ($shift\
    \ >= $digits_length) {\n        return implode('', array_reverse($digits));\n\
    \    }\n    $shifted_digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2e1kn6vz.php:20\n\
    Stack trace:\n#0 /tmp/tmp2e1kn6vz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2e1kn6vz.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $shift = intval($shift);\n    $len = strlen($x);\n\
    \    if ($shift > $len) {\n        return strrev($x);\n    }\n    $right = substr($x,\
    \ $len - $shift);\n    $left = substr($x, 0, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$n = count($digits);\n\tif ($shift > $n) {\n\t\t$digits\
    \ = array_reverse($digits);\n\t} else {\n\t\t$digits = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n\t}\n\treturn implode('', $digits);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps84ul97m.php:21\n\
    Stack trace:\n#0 /tmp/tmps84ul97m.php(28): test()\n#1 {main}\n  thrown in /tmp/tmps84ul97m.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        return implode('', array_reverse($digits));\n  \
    \  }\n    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7x_8vjv.php:21\n\
    Stack trace:\n#0 /tmp/tmpi7x_8vjv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpi7x_8vjv.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    return substr($x, $shift) . substr($x, 0,\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45ne0noi.php:19\n\
    Stack trace:\n#0 /tmp/tmp45ne0noi.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp45ne0noi.php\
    \ on line 19\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   $shift = $shift % $len;\n    if ($shift == 0) {\n        return $x;\n    }\n\
    \    $x = substr($x, $shift) . substr($x, 0, $shift);\n    return $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24upr16d.php:22\n\
    Stack trace:\n#0 /tmp/tmp24upr16d.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp24upr16d.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = strval($x);\n\t$len = strlen($x);\n\tif ($shift > $len) {\n\t\t$x = strrev($x);\n\
    \t} else {\n\t\t$x = substr($x, $shift) . substr($x, 0, $shift);\n\t}\n\treturn\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6l99oc7a.php:21\n\
    Stack trace:\n#0 /tmp/tmp6l99oc7a.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6l99oc7a.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$n = count($digits);\n\tif ($shift > $n) {\n\t\treturn\
    \ implode('', array_reverse($digits));\n\t}\n\t$right = array_slice($digits, 0,\
    \ $shift);\n\t$left = array_slice($digits, $shift);\n\treturn implode('', array_merge($left,\
    \ $right));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppbh_nh60.php:21\n\
    Stack trace:\n#0 /tmp/tmppbh_nh60.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppbh_nh60.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift > $len) {\n\t\treturn strrev($x);\n\
    \t}\n\t$y = substr($x, $len - $shift) . substr($x, 0, $len - $shift);\n\treturn\
    \ $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2kmmdnv.php:22\n\
    Stack trace:\n#0 /tmp/tmpb2kmmdnv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpb2kmmdnv.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode(array_reverse($digits));\n    }\n \
    \   $new_digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode($new_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_nz59p0.php:20\n\
    Stack trace:\n#0 /tmp/tmpa_nz59p0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpa_nz59p0.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $digits = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($digits);\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5usy6t2.php:20\n\
    Stack trace:\n#0 /tmp/tmpu5usy6t2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpu5usy6t2.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string) $x;\n    $len = strlen($x_str);\n    if ($shift > $len)\
    \ {\n        return strrev($x_str);\n    }\n    $shift_str = substr($x_str, $len\
    \ - $shift);\n    $x_str = substr($x_str, 0, $len - $shift);\n    return $shift_str\
    \ . $x_str;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_slice($digits, $shift);\n    $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5o7c00_.php:21\n\
    Stack trace:\n#0 /tmp/tmpp5o7c00_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp5o7c00_.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        $digits = array_reverse($digits);\n    } else {\n        $digits\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    }\n    return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaz2jp1lj.php:21\n\
    Stack trace:\n#0 /tmp/tmpaz2jp1lj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpaz2jp1lj.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $result =\
    \ array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $result);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahzp8d4b.php:20\n\
    Stack trace:\n#0 /tmp/tmpahzp8d4b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpahzp8d4b.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $y = substr($x,\
    \ $shift);\n    $z = substr($x, 0, $shift);\n    return $y . $z;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d_qnjpu.php:22\n\
    Stack trace:\n#0 /tmp/tmp1d_qnjpu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1d_qnjpu.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$n = count($digits);\n\tif ($shift >= $n) {\n\t\t\
    return implode('', array_reverse($digits));\n\t}\n\t$a = array_slice($digits,\
    \ $shift);\n\t$b = array_slice($digits, 0, $shift);\n\treturn implode('', array_merge($a,\
    \ $b));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38289s_b.php:21\n\
    Stack trace:\n#0 /tmp/tmp38289s_b.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp38289s_b.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift > $len) {\n\t\treturn strrev($x);\n\
    \t}\n\t$y = substr($x, $len - $shift) . substr($x, 0, $len - $shift);\n\treturn\
    \ $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2imxpypr.php:20\n\
    Stack trace:\n#0 /tmp/tmp2imxpypr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2imxpypr.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits = array_reverse($digits);\n    $digits\
    \ = array_pad($digits, $shift, 0);\n    $digits = array_reverse($digits);\n  \
    \  $digits = array_slice($digits, 0, $shift);\n    $digits = array_reverse($digits);\n\
    \    return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpol2fnuba.php:20\n\
    Stack trace:\n#0 /tmp/tmpol2fnuba.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpol2fnuba.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string) $x;\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qao2gn3.php:20\n\
    Stack trace:\n#0 /tmp/tmp0qao2gn3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp0qao2gn3.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $new_digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $new_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yeou4_6.php:20\n\
    Stack trace:\n#0 /tmp/tmp9yeou4_6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9yeou4_6.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        $digits = array_reverse($digits);\n    } else {\n        for ($i\
    \ = 0; $i < $shift; $i++) {\n            $d = array_pop($digits);\n          \
    \  array_unshift($digits, $d);\n        }\n    }\n    return implode('', $digits);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $shift = $len - $shift;\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $result =\
    \ array_slice($digits, $shift);\n    $result = array_merge($result, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxctbmsq.php:21\n\
    Stack trace:\n#0 /tmp/tmpxxctbmsq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxxctbmsq.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $x = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $x;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    $shift\
    \ = $shift % $digits_count;\n    if ($shift == 0) {\n        return $x;\n    }\n\
    \    $shifted_digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode($shifted_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpom6b5pcf.php:21\n\
    Stack trace:\n#0 /tmp/tmpom6b5pcf.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpom6b5pcf.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $n = strlen($x);\n    if ($shift >= $n) {\n       \
    \ return strrev($x);\n    }\n    $y = substr($x, $shift, $n - $shift);\n    $y\
    \ .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmisqpcu_.php:21\n\
    Stack trace:\n#0 /tmp/tmpmisqpcu_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmisqpcu_.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        $digits = array_reverse($digits);\n    } else {\n        $digits\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    }\n    return implode($digits);\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpor6l7w4o.php:21\n\
    Stack trace:\n#0 /tmp/tmpor6l7w4o.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpor6l7w4o.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$n = count($digits);\n\tif ($shift > $n) {\n\t\t$digits\
    \ = array_reverse($digits);\n\t} else {\n\t\t$digits = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n\t}\n\treturn implode('', $digits);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps84ul97m.php:21\n\
    Stack trace:\n#0 /tmp/tmps84ul97m.php(28): test()\n#1 {main}\n  thrown in /tmp/tmps84ul97m.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     $x = strrev($x);\n    } else {\n        $x = substr($x, $shift) . substr($x,\
    \ 0, $shift);\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwiaarl_.php:21\n\
    Stack trace:\n#0 /tmp/tmptwiaarl_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptwiaarl_.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    $shift = $shift %\
    \ $n;\n    if ($shift == 0) {\n        return $x;\n    }\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $right = array_slice($digits,\
    \ $shift);\n    $left = array_slice($digits, 0, $shift);\n    return implode($right)\
    \ . implode($left);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpywe9uyq4.php:25\n\
    Stack trace:\n#0 /tmp/tmpywe9uyq4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpywe9uyq4.php\
    \ on line 25\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift > $len) {\n\t\treturn strrev($x);\n\
    \t}\n\t$right = substr($x, 0, $len - $shift);\n\t$left = substr($x, $len - $shift);\n\
    \treturn $left . $right;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $n = strlen($x);\n    if ($shift >= $n) {\n      \
    \  return strrev($x);\n    }\n    $a = substr($x, $shift);\n    $b = substr($x,\
    \ 0, $shift);\n    return $a . $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvi5byoia.php:21\n\
    Stack trace:\n#0 /tmp/tmpvi5byoia.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvi5byoia.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift >= $len) {\n\t\treturn strrev($x);\n\
    \t}\n\t$y = substr($x, $shift);\n\t$y .= substr($x, 0, $shift);\n\treturn $y;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0h98zvlu.php:21\n\
    Stack trace:\n#0 /tmp/tmp0h98zvlu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0h98zvlu.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2imxpypr.php:20\n\
    Stack trace:\n#0 /tmp/tmp2imxpypr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2imxpypr.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$n = count($digits);\n\tif ($shift > $n) {\n\t\t$digits\
    \ = array_reverse($digits);\n\t} else {\n\t\t$digits = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n\t}\n\treturn implode('', $digits);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps84ul97m.php:21\n\
    Stack trace:\n#0 /tmp/tmps84ul97m.php(28): test()\n#1 {main}\n  thrown in /tmp/tmps84ul97m.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$len = count($digits);\n\tif ($shift >= $len) {\n\t\
    \treturn implode('', array_reverse($digits));\n\t}\n\t$shifted = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n\treturn implode('', $shifted);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzebllaws.php:20\n\
    Stack trace:\n#0 /tmp/tmpzebllaws.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzebllaws.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $new_digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $new_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yeou4_6.php:20\n\
    Stack trace:\n#0 /tmp/tmp9yeou4_6.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9yeou4_6.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $n = strlen($x);\n    if ($shift >= $n) {\n      \
    \  return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3p0wrqc.php:20\n\
    Stack trace:\n#0 /tmp/tmpt3p0wrqc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpt3p0wrqc.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift >= $len) {\n   \
    \     return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdu3v4wwf.php:20\n\
    Stack trace:\n#0 /tmp/tmpdu3v4wwf.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdu3v4wwf.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode(array_reverse($digits));\n    }\n \
    \   $shifted = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode($shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplgarv0v4.php:20\n\
    Stack trace:\n#0 /tmp/tmplgarv0v4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplgarv0v4.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift, $len - $shift);\n\
    \    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggrcm_4o.php:21\n\
    Stack trace:\n#0 /tmp/tmpggrcm_4o.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpggrcm_4o.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    return substr($x, $shift) . substr($x, 0,\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6me7bl6.php:19\n\
    Stack trace:\n#0 /tmp/tmps6me7bl6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmps6me7bl6.php\
    \ on line 19\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $shift = $shift % strlen($x);\n    if ($shift == 0)\
    \ {\n        return $x;\n    }\n    return substr($x, $shift) . substr($x, 0,\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmco2rryf.php:19\n\
    Stack trace:\n#0 /tmp/tmpmco2rryf.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmco2rryf.php\
    \ on line 19\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        $digits = array_reverse($digits);\n    } else {\n\
    \        for ($i = 0; $i < $shift; $i++) {\n            $last = array_pop($digits);\n\
    \            array_unshift($digits, $last);\n        }\n    }\n    return implode($digits);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $len = count($digits);\n    $shift = $shift\
    \ % $len;\n    if ($shift == 0) {\n        return $x;\n    }\n    $first = array_slice($digits,\
    \ 0, $shift);\n    $second = array_slice($digits, $shift);\n    return implode('',\
    \ array_merge($second, $first));\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vm57eir.php:22\n\
    Stack trace:\n#0 /tmp/tmp_vm57eir.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_vm57eir.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4kagbij.php:22\n\
    Stack trace:\n#0 /tmp/tmpc4kagbij.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpc4kagbij.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $shift = $shift % strlen($x);\n    if ($shift == 0)\
    \ {\n        return $x;\n    }\n    $y = substr($x, $shift);\n    $y .= substr($x,\
    \ 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hso5sbd.php:21\n\
    Stack trace:\n#0 /tmp/tmp4hso5sbd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4hso5sbd.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $n = strlen($x);\n    if ($shift >= $n) {\n      \
    \  return strrev($x);\n    }\n    $left = substr($x, 0, $n - $shift);\n    $right\
    \ = substr($x, $n - $shift);\n    return $right . $left;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxssfy3j.php:22\n\
    Stack trace:\n#0 /tmp/tmpwxssfy3j.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwxssfy3j.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$n = count($digits);\n\tif ($shift >= $n) {\n\t\t\
    return implode('', array_reverse($digits));\n\t}\n\t$shift_digits = array_slice($digits,\
    \ $n - $shift);\n\t$digits = array_slice($digits, 0, $n - $shift);\n\treturn implode('',\
    \ array_merge($shift_digits, $digits));\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9i_ci_bi.php:22\n\
    Stack trace:\n#0 /tmp/tmp9i_ci_bi.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9i_ci_bi.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    $shift = $shift %\
    \ $n;\n    if ($shift == 0) {\n        return $x;\n    }\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($shifted);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ggyzy0c.php:24\n\
    Stack trace:\n#0 /tmp/tmp2ggyzy0c.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2ggyzy0c.php\
    \ on line 24\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift, $len - $shift);\n\
    \    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggrcm_4o.php:21\n\
    Stack trace:\n#0 /tmp/tmpggrcm_4o.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpggrcm_4o.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $y = substr($x,\
    \ $shift) . substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_31_f7f8.php:21\n\
    Stack trace:\n#0 /tmp/tmp_31_f7f8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_31_f7f8.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2imxpypr.php:20\n\
    Stack trace:\n#0 /tmp/tmp2imxpypr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2imxpypr.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$shift = (int) $shift;\n\t$len = strlen($x);\n\tif ($shift\
    \ > $len) {\n\t\treturn strrev($x);\n\t}\n\t$y = substr($x, $shift) . substr($x,\
    \ 0, $shift);\n\treturn $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo1tidtrc.php:21\n\
    Stack trace:\n#0 /tmp/tmpo1tidtrc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpo1tidtrc.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $x = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $x;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ >= $digits_count) {\n        return implode('', array_reverse($digits));\n \
    \   }\n    $shifted = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_mxgdzcw.php:20\n\
    Stack trace:\n#0 /tmp/tmp_mxgdzcw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_mxgdzcw.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    } else {\n        return substr($x, $shift) . substr($x,\
    \ 0, $shift);\n    }\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9lwqnure.php:20\n\
    Stack trace:\n#0 /tmp/tmp9lwqnure.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9lwqnure.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $shifted = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpccdxzsdn.php:20\n\
    Stack trace:\n#0 /tmp/tmpccdxzsdn.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpccdxzsdn.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$shift = (int) $shift;\n\t$len = strlen($x);\n\tif ($shift\
    \ > $len) {\n\t\treturn strrev($x);\n\t}\n\t$right = substr($x, 0, $len - $shift);\n\
    \t$left = substr($x, $len - $shift);\n\treturn $left . $right;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    return substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift >= $len) {\n\t\treturn strrev($x);\n\
    \t}\n\t$right = substr($x, 0, $len - $shift);\n\t$left = substr($x, $len - $shift);\n\
    \treturn $left . $right;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaet8zpsa.php:22\n\
    Stack trace:\n#0 /tmp/tmpaet8zpsa.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpaet8zpsa.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$shift = (int) $shift;\n\t$len = strlen($x);\n\tif ($shift\
    \ > $len) {\n\t\treturn strrev($x);\n\t}\n\t$right = substr($x, 0, $len - $shift);\n\
    \t$left = substr($x, $len - $shift);\n\treturn $left . $right;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift > $len) {\n\t\treturn strrev($x);\n\
    \t}\n\t$shift = $len - $shift;\n\treturn substr($x, $shift) . substr($x, 0, $shift);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $result =\
    \ array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode('', $result);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahzp8d4b.php:20\n\
    Stack trace:\n#0 /tmp/tmpahzp8d4b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpahzp8d4b.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, $shift);\n    $b = substr($x,\
    \ 0, $shift);\n    return $a . $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3otda5mc.php:21\n\
    Stack trace:\n#0 /tmp/tmp3otda5mc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3otda5mc.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $str = strval($x);\n    $len = strlen($str);\n    if ($shift > $len) {\n\
    \        return strrev($str);\n    }\n    $str = substr($str, $shift) . substr($str,\
    \ 0, $shift);\n    return $str;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2a2bb65.php:20\n\
    Stack trace:\n#0 /tmp/tmpv2a2bb65.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv2a2bb65.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $y = substr($x,\
    \ $shift) . substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_31_f7f8.php:21\n\
    Stack trace:\n#0 /tmp/tmp_31_f7f8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_31_f7f8.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_slice($digits, $shift);\n    $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4bek3kl.php:21\n\
    Stack trace:\n#0 /tmp/tmpt4bek3kl.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpt4bek3kl.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4kagbij.php:22\n\
    Stack trace:\n#0 /tmp/tmpc4kagbij.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpc4kagbij.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_slice($digits, $shift);\n    $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5o7c00_.php:21\n\
    Stack trace:\n#0 /tmp/tmpp5o7c00_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp5o7c00_.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $first =\
    \ array_slice($digits, $shift);\n    $second = array_slice($digits, 0, $shift);\n\
    \    return implode('', array_merge($first, $second));\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq06ruc5d.php:21\n\
    Stack trace:\n#0 /tmp/tmpq06ruc5d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpq06ruc5d.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    $shift = $shift % $len;\n\
    \    $x = substr($x, $shift) . substr($x, 0, $shift);\n    return $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpja04sz5l.php:18\n\
    Stack trace:\n#0 /tmp/tmpja04sz5l.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpja04sz5l.php\
    \ on line 18\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        $digits = array_reverse($digits);\n    } else {\n\
    \        $digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    }\n    return implode($digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpseck9c_s.php:21\n\
    Stack trace:\n#0 /tmp/tmpseck9c_s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpseck9c_s.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift, $len - $shift);\n\
    \    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggrcm_4o.php:21\n\
    Stack trace:\n#0 /tmp/tmpggrcm_4o.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpggrcm_4o.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits = array_reverse($digits);\n    $digits\
    \ = array_pad($digits, $shift, 0);\n    $digits = array_reverse($digits);\n  \
    \  $digits = array_slice($digits, 0, $shift);\n    $digits = array_reverse($digits);\n\
    \    return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpol2fnuba.php:20\n\
    Stack trace:\n#0 /tmp/tmpol2fnuba.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpol2fnuba.php\
    \ on line 20\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    return substr($x, $shift) . substr($x, 0,\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6me7bl6.php:19\n\
    Stack trace:\n#0 /tmp/tmps6me7bl6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmps6me7bl6.php\
    \ on line 19\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $x = (string) $x;\n\t$len = strlen($x);\n\tif ($shift >= $len) {\n\t\treturn strrev($x);\n\
    \t}\n\t$right = substr($x, 0, $len - $shift);\n\t$left = substr($x, $len - $shift);\n\
    \treturn $left . $right;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaet8zpsa.php:22\n\
    Stack trace:\n#0 /tmp/tmpaet8zpsa.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpaet8zpsa.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ >= $digits_count) {\n        return implode('', array_reverse($digits));\n \
    \   }\n    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqeaqsm3v.php:21\n\
    Stack trace:\n#0 /tmp/tmpqeaqsm3v.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqeaqsm3v.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $a = substr($x,\
    \ $shift);\n    $b = substr($x, 0, $shift);\n    return $a . $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p295ekz.php:22\n\
    Stack trace:\n#0 /tmp/tmp7p295ekz.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7p295ekz.php\
    \ on line 22\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift >= $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $shift, $len - $shift);\n\
    \    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7guuu5l.php:21\n\
    Stack trace:\n#0 /tmp/tmpw7guuu5l.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw7guuu5l.php\
    \ on line 21\n"
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 0
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $right = substr($x, $len - $shift);\n   \
    \ $left = substr($x, 0, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits = array_reverse($digits);\n    $digits\
    \ = array_pad($digits, $shift, 0);\n    $digits = array_reverse($digits);\n  \
    \  return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq2e2hrbq.php:18\n\
    Stack trace:\n#0 /tmp/tmpq2e2hrbq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpq2e2hrbq.php\
    \ on line 18\n"
  timestamp: 1659730788
- exit_code: 255
  program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\nfunction circular_shift($x, $shift) {\n\t\
    $digits = str_split($x);\n\t$n = count($digits);\n\tif ($shift > $n) {\n\t\treturn\
    \ implode('', array_reverse($digits));\n\t}\n\t$y = array_slice($digits, $shift);\n\
    \t$y = array_merge($y, array_slice($digits, 0, $shift));\n\treturn implode('',\
    \ $y);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_n0pddk.php:21\n\
    Stack trace:\n#0 /tmp/tmpx_n0pddk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpx_n0pddk.php\
    \ on line 21\n"
  timestamp: 1659730788

language: php
name: HumanEval_155_even_odd_count
results:
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpzq6lq51r.php:9\nStack trace:\n#0 /tmp/tmpzq6lq51r.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpzq6lq51r.php(24): candidate(-78)\n#2 /tmp/tmpzq6lq51r.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzq6lq51r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $str = strval($num);\n    for ($i = 0; $i\
    \ < strlen($str); $i++) {\n        if ($str[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpze01f39g.php:9\nStack trace:\n#0 /tmp/tmpze01f39g.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmpze01f39g.php(24): candidate(-78)\n#2 /tmp/tmpze01f39g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpze01f39g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\necho \"<pre>\";\nprint_r(even_odd_count(123456789));\necho \"</pre>\";\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 4\n    [1] => 5\n)\n</pre>\nFatal error: Uncaught\
    \ TypeError: Unsupported operand types: string % int in /tmp/tmps2dto4dr.php:9\n\
    Stack trace:\n#0 /tmp/tmps2dto4dr.php(22): even_odd_count('-78')\n#1 /tmp/tmps2dto4dr.php(27):\
    \ candidate(-78)\n#2 /tmp/tmps2dto4dr.php(36): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmps2dto4dr.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpy25vvauy.php:9\nStack trace:\n#0 /tmp/tmpy25vvauy.php(19): even_odd_count('-78')\n\
    #1 /tmp/tmpy25vvauy.php(24): candidate(-78)\n#2 /tmp/tmpy25vvauy.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy25vvauy.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  while ($num > 0) {\n    $digit = $num % 10;\n  \
    \  if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n\
    \    $num = floor($num / 10);\n  }\n  return [$even, $odd];\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjhh7qp4u.php:25\n\
    Stack trace:\n#0 /tmp/tmpjhh7qp4u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjhh7qp4u.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $n)\
    \ {\n    if ($n % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n   \
    \ }\n  }\n  return array($even, $odd);\n}\n\necho even_odd_count(1234);\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmpj7kmhmyl.php on line 18\n\
    Array\nFatal error: Uncaught TypeError: Unsupported operand types: string % int\
    \ in /tmp/tmpj7kmhmyl.php:9\nStack trace:\n#0 /tmp/tmpj7kmhmyl.php(21): even_odd_count(Array)\n\
    #1 /tmp/tmpj7kmhmyl.php(26): candidate(-78)\n#2 /tmp/tmpj7kmhmyl.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpj7kmhmyl.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nprint_r(even_odd_count(12345));\nprint_r(even_odd_count(2468));\nprint_r(even_odd_count(1357));\n\
    print_r(even_odd_count(0));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n)\nArray\n(\n    [0] => 4\n    [1]\
    \ => 0\n)\nArray\n(\n    [0] => 0\n    [1] => 4\n)\nArray\n(\n    [0] => 1\n \
    \   [1] => 0\n)\n\nFatal error: Uncaught TypeError: Unsupported operand types:\
    \ string % int in /tmp/tmpyu31eequ.php:9\nStack trace:\n#0 /tmp/tmpyu31eequ.php(23):\
    \ even_odd_count(Array)\n#1 /tmp/tmpyu31eequ.php(28): candidate(-78)\n#2 /tmp/tmpyu31eequ.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpyu31eequ.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxtml5by.php:25\n\
    Stack trace:\n#0 /tmp/tmphxtml5by.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphxtml5by.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = (string)$num;\n  for ($i = 0; $i < strlen($num);\
    \ $i++) {\n    if ($num[$i] % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return [$even, $odd];\n}\n\nprint_r(even_odd_count(12345));\nprint_r(even_odd_count(2468));\n\
    print_r(even_odd_count(1357));\nprint_r(even_odd_count(0));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n)\nArray\n(\n    [0] => 4\n    [1]\
    \ => 0\n)\nArray\n(\n    [0] => 0\n    [1] => 4\n)\nArray\n(\n    [0] => 1\n \
    \   [1] => 0\n)\n\nFatal error: Uncaught TypeError: Unsupported operand types:\
    \ string % int in /tmp/tmpadi4txae.php:9\nStack trace:\n#0 /tmp/tmpadi4txae.php(23):\
    \ even_odd_count('-78')\n#1 /tmp/tmpadi4txae.php(28): candidate(-78)\n#2 /tmp/tmpadi4txae.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpadi4txae.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpzq6lq51r.php:9\nStack trace:\n#0 /tmp/tmpzq6lq51r.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpzq6lq51r.php(24): candidate(-78)\n#2 /tmp/tmpzq6lq51r.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzq6lq51r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $value)\
    \ {\n    if ($value % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return [$even, $odd];\n}\n\necho even_odd_count(123456789);\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmp6zfi8oku.php on line 18\n\
    Array\n\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp6zfi8oku.php:9\nStack trace:\n#0 /tmp/tmp6zfi8oku.php(22): even_odd_count(Array)\n\
    #1 /tmp/tmp6zfi8oku.php(27): candidate(-78)\n#2 /tmp/tmp6zfi8oku.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6zfi8oku.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpy25vvauy.php:9\nStack trace:\n#0 /tmp/tmpy25vvauy.php(19): even_odd_count('-78')\n\
    #1 /tmp/tmpy25vvauy.php(24): candidate(-78)\n#2 /tmp/tmpy25vvauy.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy25vvauy.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $n)\
    \ {\n    if ($n % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n   \
    \ }\n  }\n  return [$even, $odd];\n}\n\nprint_r(even_odd_count(1234));\nprint_r(even_odd_count(1235));\n\
    print_r(even_odd_count(1236));\nprint_r(even_odd_count(1237));\nprint_r(even_odd_count(1238));\n\
    print_r(even_odd_count(1239));\nprint_r(even_odd_count(1240));\nprint_r(even_odd_count(1241));\n\
    print_r(even_odd_count(1242));\nprint_r(even_odd_count(1243));\nprint_r(even_odd_count(1244));\n\
    print_r(even_odd_count(1245));\nprint_r(even_odd_count(1246));\nprint_r(even_odd_count(1247));\n\
    print_r(even_odd_count(1248));\nprint_r(even_odd_count(1249));\nprint_r(even_odd_count(1250));\n\
    print_r(even_odd_count(1251));\nprint_r(even_odd_count(1252));\nprint_r(even_odd_count(1253));\n\
    print_r(even_odd_count(1254));\nprint_r(even_odd_count(1255));\nprint_r(even_odd_count(1256));\n\
    print_r(even_odd_count(1257));\nprint_r(even_odd_count(1258));\nprint_r(even_odd_count(1259));\n\
    print_r(even_odd_count(1260));\nprint_r(even_odd_count(1261));\nprint_r(even_odd_count(1262));\n\
    print_r(even_odd_count(1263));\nprint_r(even_odd_count(\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpzz_rf8dc.php on line 49

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $n)\
    \ {\n    if ($n % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n   \
    \ }\n  }\n  return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp4jtrtkrb.php:9\nStack trace:\n#0 /tmp/tmp4jtrtkrb.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmp4jtrtkrb.php(24): candidate(-78)\n#2 /tmp/tmp4jtrtkrb.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4jtrtkrb.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\n$num = 12345;\n$result = even_odd_count($num);\n\
    print_r($result);\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpac3_x4p0.php:29\nStack trace:\n#0 /tmp/tmpac3_x4p0.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpac3_x4p0.php on line 29\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $value)\
    \ {\n    if ($value % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return [$even, $odd];\n}\n\necho \"even_odd_count(12345) = \" .\
    \ even_odd_count(12345) . \"\\n\";\necho \"even_odd_count(2468) = \" . even_odd_count(2468)\
    \ . \"\\n\";\necho \"even_odd_count(1357) = \" . even_odd_count(1357) . \"\\n\"\
    ;\necho \"even_odd_count(0) = \" . even_odd_count(0) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmpshs7w_3a.php on line 18\n\
    even_odd_count(12345) = Array\n\nWarning: Array to string conversion in /tmp/tmpshs7w_3a.php\
    \ on line 19\neven_odd_count(2468) = Array\n\nWarning: Array to string conversion\
    \ in /tmp/tmpshs7w_3a.php on line 20\neven_odd_count(1357) = Array\n\nWarning:\
    \ Array to string conversion in /tmp/tmpshs7w_3a.php on line 21\neven_odd_count(0)\
    \ = Array\n\nFatal error: Uncaught TypeError: Unsupported operand types: string\
    \ % int in /tmp/tmpshs7w_3a.php:9\nStack trace:\n#0 /tmp/tmpshs7w_3a.php(24):\
    \ even_odd_count(Array)\n#1 /tmp/tmpshs7w_3a.php(29): candidate(-78)\n#2 /tmp/tmpshs7w_3a.php(38):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpshs7w_3a.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even_count = 0;\n    $odd_count = 0;\n    while ($num > 0) {\n        $remainder\
    \ = $num % 10;\n        if ($remainder % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n        $num = floor($num\
    \ / 10);\n    }\n    return array($even_count, $odd_count);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvjxnyfh_.php:25\n\
    Stack trace:\n#0 /tmp/tmpvjxnyfh_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvjxnyfh_.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nprint_r(even_odd_count(1234));\nprint_r(even_odd_count(1235));\n\
    print_r(even_odd_count(1236));\nprint_r(even_odd_count(1237));\nprint_r(even_odd_count(1238));\n\
    print_r(even_odd_count(1239));\nprint_r(even_odd_count(1240));\nprint_r(even_odd_count(1241));\n\
    print_r(even_odd_count(1242));\nprint_r(even_odd_count(1243));\nprint_r(even_odd_count(1244));\n\
    print_r(even_odd_count(1245));\nprint_r(even_odd_count(1246));\nprint_r(even_odd_count(1247));\n\
    print_r(even_odd_count(1248));\nprint_r(even_odd_count(1249));\nprint_r(even_odd_count(1250));\n\
    print_r(even_odd_count(1251));\nprint_r(even_odd_count(1252));\nprint_r(even_odd_count(1253));\n\
    print_r(even_odd_count(1254));\nprint_r(even_odd_count(1255));\nprint_r(even_odd_count(1256));\n\
    print_r(even_odd_count(1257));\nprint_r(even_odd_count(1258));\nprint_r(even_odd_count(1259));\n\
    print_r(even_odd_count(1260));\nprint_r(even_odd_count(1261));\nprint_r(even_odd_count(1262));\n\
    print_r(even_odd_count(1263));\nprint_\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpk3p2935y.php
    on line 50

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $value)\
    \ {\n    if ($value % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp47stsm3_.php:9\nStack trace:\n#0 /tmp/tmp47stsm3_.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmp47stsm3_.php(24): candidate(-78)\n#2 /tmp/tmp47stsm3_.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp47stsm3_.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n\n$num = 1234;\n$result = even_odd_count($num);\n\
    echo \"Even: $result[0]\\n\";\necho \"Odd: $result[1]\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Even: 2\nOdd: 2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ng_gnpp.php:29\n\
    Stack trace:\n#0 /tmp/tmp6ng_gnpp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6ng_gnpp.php\
    \ on line 29\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh_ibsxo.php:25\n\
    Stack trace:\n#0 /tmp/tmpeh_ibsxo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpeh_ibsxo.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\necho \"even_odd_count(123456789): \";\nvar_dump(even_odd_count(123456789));\n\
    echo \"even_odd_countn\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test", expecting "," or ";"
    in /tmp/tmp4o7va4rm.php on line 27

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $digit)\
    \ {\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return array($even, $odd);\n}\n\nprint_r(even_odd_count(12345));\n\
    print_r(even_odd_count(2468));\nprint_r(even_odd_count(1357));\nprint_r(even_odd_count(0));\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n)\nArray\n(\n    [0] => 4\n    [1]\
    \ => 0\n)\nArray\n(\n    [0] => 0\n    [1] => 4\n)\nArray\n(\n    [0] => 1\n \
    \   [1] => 0\n)\n\nFatal error: Uncaught TypeError: Unsupported operand types:\
    \ string % int in /tmp/tmp3vhkerft.php:9\nStack trace:\n#0 /tmp/tmp3vhkerft.php(24):\
    \ even_odd_count(Array)\n#1 /tmp/tmp3vhkerft.php(29): candidate(-78)\n#2 /tmp/tmp3vhkerft.php(38):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp3vhkerft.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $value)\
    \ {\n    if ($value % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmplkk_f6m7.php:9\nStack trace:\n#0 /tmp/tmplkk_f6m7.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmplkk_f6m7.php(24): candidate(-78)\n#2 /tmp/tmplkk_f6m7.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmplkk_f6m7.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcrqsfe7.php:25\n\
    Stack trace:\n#0 /tmp/tmpfcrqsfe7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfcrqsfe7.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpyf_h2xpm.php:9\nStack trace:\n#0 /tmp/tmpyf_h2xpm.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpyf_h2xpm.php(24): candidate(-78)\n#2 /tmp/tmpyf_h2xpm.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyf_h2xpm.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = ($num - $remainder) / 10;\n\
    \    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6cncbedf.php:25\n\
    Stack trace:\n#0 /tmp/tmp6cncbedf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6cncbedf.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $rem = $num % 10;\n        if ($rem % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\n$num = 12345;\n$result = even_odd_count($num);\n\
    echo \"Even: $result[0], Odd: $result[1]\";\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Even: 2, Odd: 3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbk9gkupz.php:36\n\
    Stack trace:\n#0 /tmp/tmpbk9gkupz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbk9gkupz.php\
    \ on line 36\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\n$num = 12345;\n$result = even_odd_count($num);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp3f92lzdz.php:28\nStack trace:\n#0 /tmp/tmp3f92lzdz.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3f92lzdz.php on line 28\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\necho \"even_odd_count(123456789) = \" . implode(',\
    \ ', even_odd_count(123456789)) . \"\\n\";\necho \"even_odd_count(2468) = \" .\
    \ implode(', ', even_odd_count(2468)) . \"\\n\";\necho \"even_odd_count(1357)\
    \ = \" . implode(', ', even_odd_count(1357)) . \"\\n\";\necho \"even_odd_count(0)\
    \ = \" . implode(', ', even_odd_count(0)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "even_odd_count(123456789) = 4, 5\neven_odd_count(2468) = 4, 0\neven_odd_count(1357)\
    \ = 0, 4\neven_odd_count(0) = 0, 0\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpc3bpkmtl.php:29\nStack trace:\n#0 /tmp/tmpc3bpkmtl.php(38): test()\n\
    #1 {main}\n  thrown in /tmp/tmpc3bpkmtl.php on line 29\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxtml5by.php:25\n\
    Stack trace:\n#0 /tmp/tmphxtml5by.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphxtml5by.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpp_mixq58.php:9\nStack trace:\n#0 /tmp/tmpp_mixq58.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpp_mixq58.php(24): candidate(-78)\n#2 /tmp/tmpp_mixq58.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpp_mixq58.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpy25vvauy.php:9\nStack trace:\n#0 /tmp/tmpy25vvauy.php(19): even_odd_count('-78')\n\
    #1 /tmp/tmpy25vvauy.php(24): candidate(-78)\n#2 /tmp/tmpy25vvauy.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy25vvauy.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcrqsfe7.php:25\n\
    Stack trace:\n#0 /tmp/tmpfcrqsfe7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfcrqsfe7.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nprint_r(even_odd_count(123456789));\n\nfunction candidate(...$args) {\n \
    \   return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 4\n    [1] => 5\n)\n\nFatal error: Uncaught TypeError:\
    \ Unsupported operand types: string % int in /tmp/tmpi01ozqqv.php:9\nStack trace:\n\
    #0 /tmp/tmpi01ozqqv.php(21): even_odd_count(Array)\n#1 /tmp/tmpi01ozqqv.php(26):\
    \ candidate(-78)\n#2 /tmp/tmpi01ozqqv.php(35): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpi01ozqqv.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp7hntnj8k.php:9\nStack trace:\n#0 /tmp/tmp7hntnj8k.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmp7hntnj8k.php(24): candidate(-78)\n#2 /tmp/tmp7hntnj8k.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7hntnj8k.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpzq6lq51r.php:9\nStack trace:\n#0 /tmp/tmpzq6lq51r.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpzq6lq51r.php(24): candidate(-78)\n#2 /tmp/tmpzq6lq51r.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzq6lq51r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\necho implode(', ', even_odd_count(12345))\
    \ . \"\\n\";\necho implode(', ', even_odd_count(1234)) . \"\\n\";\necho implode(',\
    \ ', even_odd_count(123456)) . \"\\n\";\necho implode(', ', even_odd_count(1234567))\
    \ . \"\\n\";\necho implode(', ', even_odd_count(12345678)) . \"\\n\";\necho implode(',\
    \ ', even_odd_count(123456789)) . \"\\n\";\necho implode(', ', even_odd_count(1234567890))\
    \ . \"\\n\";\necho implode(', ', even_odd_count(12345678901)) . \"\\n\";\necho\
    \ implode(', ', even_odd_count(123456789012)) . \"\\n\";\necho implode(', ', even_odd_count(1234567890123))\
    \ . \"\\n\";\necho implode(', ', even_odd_count(12345678901234)) . \"\\n\";\n\
    echo implode(', ', even_odd_count(123456789012345)) . \"\\n\";\necho implode(',\
    \ ', even_odd_count(1234567890123456)) . \"\\n\";\necho implode(', ', even_odd_count(12345678901234567))\
    \ . \"\\n\";\necho implode(', ', even_odd_count(123456789012345678)) . \"\\n\"\
    ;\necho implode(', ', even_odd_count(1234567890123456789)) . \"\\n\";\necho implode(',\
    \ ', even_odd_count(12345678901234567890)) . \"\\n\";\necho implode(', ', even_odd_count(12345678901\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpxqb2bvws.php
    on line 38

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\necho \"even_odd_count(123456789) = \" . json_encode(even_odd_count(123456789))\
    \ . \"\\n\";\necho \"even_odd_count(1234567890123456789) = \" . json_encode(even_odd_count(1234567890123456789))\
    \ . \"\\n\";\necho \"even_odd_count(12345678901234567890123456789) = \" . json_encode(even_odd_count(12345678901234567890123456789))\
    \ . \"\\n\";\necho \"even_odd_count(123456789012345678901234567890123456789) =\
    \ \" . json_encode(even_odd_count(123456789012345678901234567890123456789)) .\
    \ \"\\n\";\necho \"even_odd_count(1234567890123456789012345678901234567890123456789)\
    \ = \" . json_encode(even_odd_count(1234567890123456789012345678901234567890123456789))\
    \ . \"\\n\";\necho \"even_odd_count(12345678901234567890123456789012345678901234567890123456789)\
    \ = \" . json_encode(even_odd_count(12345678901234567890123456789012345678901234567890123456789))\
    \ . \"\\n\";\necho \"even_odd_count(123456789012345678901234567890123456789012345678901234567890123456789)\
    \ = \" . json_encode\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp8a3f27t8.php on line 26

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3bt_obh.php:32\n\
    Stack trace:\n#0 /tmp/tmpi3bt_obh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpi3bt_obh.php\
    \ on line 32\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpzq6lq51r.php:9\nStack trace:\n#0 /tmp/tmpzq6lq51r.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpzq6lq51r.php(24): candidate(-78)\n#2 /tmp/tmpzq6lq51r.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzq6lq51r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaboprc1w.php:32\n\
    Stack trace:\n#0 /tmp/tmpaboprc1w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpaboprc1w.php\
    \ on line 32\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh_ibsxo.php:25\n\
    Stack trace:\n#0 /tmp/tmpeh_ibsxo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpeh_ibsxo.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $num)\
    \ {\n    if ($num % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n \
    \   }\n  }\n  return [$even, $odd];\n}\n\nprint_r(even_odd_count(123456789));\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 4\n    [1] => 5\n)\n\nFatal error: Uncaught TypeError:\
    \ Unsupported operand types: string % int in /tmp/tmpuvs8fqhz.php:9\nStack trace:\n\
    #0 /tmp/tmpuvs8fqhz.php(21): even_odd_count('-')\n#1 /tmp/tmpuvs8fqhz.php(26):\
    \ candidate(-78)\n#2 /tmp/tmpuvs8fqhz.php(35): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpuvs8fqhz.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1cn_yody.php:32\n\
    Stack trace:\n#0 /tmp/tmp1cn_yody.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1cn_yody.php\
    \ on line 32\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\necho \"even_odd_count(12345) = \" . implode(',\
    \ ', even_odd_count(12345)) . \"\\n\";\necho \"even_odd_count(2468) = \" . implode(',\
    \ ', even_odd_count(2468)) . \"\\n\";\necho \"even_odd_count(1357) = \" . implode(',\
    \ ', even_odd_count(1357)) . \"\\n\";\necho \"even_odd_count(0) = \" . implode(',\
    \ ', even_odd_count(0)) . \"\\n\";\necho \"even_odd_count(1) = \" . implode(',\
    \ ', even_odd_count(1)) . \"\\n\";\necho \"even_odd_count(2) = \" . implode(',\
    \ ', even_odd_count(2)) . \"\\n\";\necho \"even_odd_count(3) = \" . implode(',\
    \ ', even_odd_count(3)) . \"\\n\";\necho \"even_odd_count(4) = \" . implode(',\
    \ ', even_odd_count(4)) . \"\\n\";\necho \"even_odd_count(5) = \" . implode(',\
    \ ', even_odd_count(5)) . \"\\n\";\necho \"even_odd_count(6) = \" . implode(',\
    \ ', even_odd_count(6)) . \"\\n\";\necho \"even_odd_count(7) = \" . implode(',\
    \ ', even_odd_count(7)) . \"\\n\";\necho \"even_odd_count(8) = \" . implode(',\
    \ ', even_odd_count(8)) . \"\\n\";\necho \"even_odd_count(9) = \" . implode(',\
    \ ', even_odd_count(9)) . \"\\n\";\necho \"even_odd_count(10) = \" .\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpgegxc1fu.php on line 33

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $arr = str_split($num);\n    foreach ($arr\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpbrpqd8y2.php:9\nStack trace:\n#0 /tmp/tmpbrpqd8y2.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmpbrpqd8y2.php(24): candidate(-78)\n#2 /tmp/tmpbrpqd8y2.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbrpqd8y2.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even_count = 0;\n    $odd_count = 0;\n    $num_str = strval($num);\n   \
    \ for ($i = 0; $i < strlen($num_str); $i++) {\n        if ($num_str[$i] % 2 ==\
    \ 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    return [$even_count, $odd_count];\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpmz187e1_.php:9\nStack trace:\n#0 /tmp/tmpmz187e1_.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmpmz187e1_.php(24): candidate(-78)\n#2 /tmp/tmpmz187e1_.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmz187e1_.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpm4kfvkh5.php:9\nStack trace:\n#0 /tmp/tmpm4kfvkh5.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmpm4kfvkh5.php(24): candidate(-78)\n#2 /tmp/tmpm4kfvkh5.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpm4kfvkh5.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $digit)\
    \ {\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpemcc3b7h.php:9\nStack trace:\n#0 /tmp/tmpemcc3b7h.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpemcc3b7h.php(24): candidate(-78)\n#2 /tmp/tmpemcc3b7h.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpemcc3b7h.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit\
    \ = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n    $num = ($num - $digit) / 10;\n  }\n  return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3e9539x.php:32\n\
    Stack trace:\n#0 /tmp/tmpg3e9539x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpg3e9539x.php\
    \ on line 32\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string) $num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\necho \"even_odd_count(123456789) = \" . implode(', ', even_odd_count(123456789))\
    \ . \"\\n\";\necho \"even_odd_count(1234) = \" . implode(', ', even_odd_count(1234))\
    \ . \"\\n\";\necho \"even_odd_count(123456789) = \" . implode(', ', even_odd_count(123456789))\
    \ . \"\\n\";\necho \"even_odd_count(123456789) = \" . implode(', ', even_odd_count(123456789))\
    \ . \"\\n\";\necho \"even_odd_count(123456789) = \" . implode(', ', even_odd_count(123456789))\
    \ . \"\\n\";\necho \"even_odd_count(123456789) = \" . implode(', ', even_odd_count(123456789))\
    \ . \"\\n\";\necho \"even_odd_count(123456789) = \" . implode(', ', even_odd_count(123456789))\
    \ . \"\\n\";\necho \"even_odd_count(123456789) = \" . implode(', ', even_odd_count(123456789))\
    \ . \"\\n\";\necho \"even_odd_count(123456789) = \" . implode(', ', even_odd_count(123456789))\
    \ . \"\\n\";\necho \"even_odd_count(123456789) = \" . implode(', ', even_odd_count(123456789))\
    \ . \"\\n\";\necho \"even_odd_count(123456789) = \" . implode(', ', even_odd_count(123456789))\
    \ . \"\\n\";\necho \"even_odd_count(123456789) =\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test", expecting "," or ";"
    in /tmp/tmp21bpdk0r.php on line 35

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $arr = str_split($num);\n    foreach ($arr\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpva6ptpes.php:9\nStack trace:\n#0 /tmp/tmpva6ptpes.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmpva6ptpes.php(24): candidate(-78)\n#2 /tmp/tmpva6ptpes.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpva6ptpes.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n\n$num = 12345;\n$result = even_odd_count($num);\n\
    echo \"Even: \" . $result[0] . \" Odd: \" . $result[1];\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Even: 2 Odd: 3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprq9_8ruj.php:28\n\
    Stack trace:\n#0 /tmp/tmprq9_8ruj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprq9_8ruj.php\
    \ on line 28\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\necho \"even_odd_count(123456789)\
    \ = \" . json_encode(even_odd_count(123456789)) . \"\\n\";\necho \"even_odd_count(0)\
    \ = \" . json_encode(even_odd_count(0)) . \"\\n\";\necho \"even_odd_count(-123456789)\
    \ = \" . json_encode(even_odd_count(-123456789)) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "even_odd_count(123456789) = [4,5]\neven_odd_count(0) = [0,0]\neven_odd_count(-123456789)\
    \ = [4,5]\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl169g7za.php:36\n\
    Stack trace:\n#0 /tmp/tmpl169g7za.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl169g7za.php\
    \ on line 36\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $value)\
    \ {\n    if ($value % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp47stsm3_.php:9\nStack trace:\n#0 /tmp/tmp47stsm3_.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmp47stsm3_.php(24): candidate(-78)\n#2 /tmp/tmp47stsm3_.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp47stsm3_.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpyf_h2xpm.php:9\nStack trace:\n#0 /tmp/tmpyf_h2xpm.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpyf_h2xpm.php(24): candidate(-78)\n#2 /tmp/tmpyf_h2xpm.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyf_h2xpm.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaboprc1w.php:32\n\
    Stack trace:\n#0 /tmp/tmpaboprc1w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpaboprc1w.php\
    \ on line 32\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcrqsfe7.php:25\n\
    Stack trace:\n#0 /tmp/tmpfcrqsfe7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfcrqsfe7.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $rem = $num % 10;\n        if ($rem % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n\n$num = 1234;\n$result = even_odd_count($num);\n\
    echo \"Even: \" . $result[0] . \" Odd: \" . $result[1];\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 123.4 to int loses precision in /tmp/tmp9bxhkbc5.php
    on line 9


    Deprecated: Implicit conversion from float 12.34 to int loses precision in /tmp/tmp9bxhkbc5.php
    on line 9


    Deprecated: Implicit conversion from float 1.234 to int loses precision in /tmp/tmp9bxhkbc5.php
    on line 9


    Deprecated: Implicit conversion from float 0.1234 to int loses precision in /tmp/tmp9bxhkbc5.php
    on line 9


    Deprecated: Implicit conversion from float 0.01234 to int loses precision in /tmp/tmp9bxhkbc5.php
    on line 9


    Deprecated: Implicit conversion from float 0.001234 to int loses precision in
    /tmp/tmp9bxhkbc5.php on line 9


    Deprecated: Implicit conversion from float 0.00012340000000000002 to int loses
    precision in /tmp/tmp9bxhkbc5.php on line 9


    Deprecated: Implicit conversion from float 1.2340000000000002E-5 to int loses
    precision in /tmp/tmp9bxhkbc5.php on line 9


    Deprecated: Implicit conversion from float 1.2340000000000002E-6 to int loses
    precision in /tmp/tmp9bxhkbc5.php on line 9


    Deprecated: Implicit conversion from float 1.234E-7 to int loses precision in
    /tmp/tmp9bxhkbc5.php on line 9


    Deprecated: Implicit conversion from float 1.234E-8 to int loses precision in
    /tmp/tmp9bxhkbc5.php on line 9


    Deprecated: Implicit conversion from float 1.234E-9 to int loses precision in
    /tmp/tmp9bxhkbc5.php on line 9


    Deprecated: Implicit conversion from float 1.234E-10 to int loses precision in
    /tmp/tmp9bxhkbc5.php on line 9


    Deprecated: Implicit conversion from float 1.2340000000000001E-11 to int loses
    precision in /tmp/tmp9bxhkbc5.php on line 9


    Deprecated: Implicit conversion from float 1.2340000000000002E-12 to int loses
    precision in /tmp/tmp9bxhkbc5.php on line 9


    Deprecated: Implicit conversion from float 1.234E-13 to int loses precision in
    /tmp/tmp9bxhkbc5.php on line 9


    Deprecated: Implicit conversion from float 1.2340000000000001E-14 to int loses
    precision in /tmp/tmp9bxhkbc5.php on line 9


    Deprecated: Implicit conversion from float 1.2340000000000001E-15 to int loses
    precision in /tmp/tmp9bxhk'
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcrqsfe7.php:25\n\
    Stack trace:\n#0 /tmp/tmpfcrqsfe7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfcrqsfe7.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaboprc1w.php:32\n\
    Stack trace:\n#0 /tmp/tmpaboprc1w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpaboprc1w.php\
    \ on line 32\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\necho \"even_odd_count(123456789) = \" . implode(\"\
    , \", even_odd_count(123456789)) . \"\\n\";\necho \"even_odd_count(1234567890)\
    \ = \" . implode(\", \", even_odd_count(1234567890)) . \"\\n\";\necho \"even_odd_count(12345678901)\
    \ = \" . implode(\", \", even_odd_count(12345678901)) . \"\\n\";\necho \"even_odd_count(123456789012)\
    \ = \" . implode(\", \", even_odd_count(123456789012)) . \"\\n\";\necho \"even_odd_count(1234567890123)\
    \ = \" . implode(\", \", even_odd_count(1234567890123)) . \"\\n\";\necho \"even_odd_count(12345678901234)\
    \ = \" . implode(\", \", even_odd_count(12345678901234)) . \"\\n\";\necho \"even_odd_count(123456789012345)\
    \ = \" . implode(\", \", even_odd_count(123456789012345)) . \"\\n\";\necho \"\
    even_odd_count(1234567890123456) = \" . implode(\", \", even_odd_count(1234567890123456))\
    \ . \"\\n\";\necho \"even_odd_count(12345678901234567) = \" . implode(\", \",\
    \ even_odd_count(12345678901234567)) . \"\\n\";\necho \"even_odd_count(123456789012345678)\
    \ = \" . implode(\", \", even_odd_count(123456789012345678)) . \"\\n\";\necho\
    \ \"even_odd_count(123456789\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test", expecting "," or ";"
    in /tmp/tmp1ehthz5l.php on line 35

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(12345));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(1234));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(even_odd_count(12));\necho \"</pre>\";\n\necho \"\
    <pre>\";\nprint_r(even_odd_count(0));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(1));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(2));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(even_odd_count(3));\necho \"</pre>\";\n\necho \"\
    <pre>\";\nprint_r(even_odd_count(4));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(5));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(6));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(even_odd_count(7));\necho \"</pre>\";\n\necho \"\
    <pre>\";\nprint_r(even_odd_count(8));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(9));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(10));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(even_odd_count(11));\necho \"</pre>\";\n\necho \"\
    <pre>\";\nprint_r(even_odd_count\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpkik8ioel.php
    on line 81

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\n$num = 12345;\n$result = even_odd_count($num);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp3f92lzdz.php:28\nStack trace:\n#0 /tmp/tmp3f92lzdz.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3f92lzdz.php on line 28\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp_nme0_jg.php:9\nStack trace:\n#0 /tmp/tmp_nme0_jg.php(18): even_odd_count(Array)\n\
    #1 /tmp/tmp_nme0_jg.php(23): candidate(-78)\n#2 /tmp/tmp_nme0_jg.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_nme0_jg.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\n$num = 123456789;\n$result = even_odd_count($num);\n\
    print_r($result);\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 4\n    [1] => 5\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpyzysf7nt.php:29\nStack trace:\n#0 /tmp/tmpyzysf7nt.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpyzysf7nt.php on line 29\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcrqsfe7.php:25\n\
    Stack trace:\n#0 /tmp/tmpfcrqsfe7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfcrqsfe7.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nprint_r(even_odd_count(123456789));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 4\n    [1] => 5\n)\n\nFatal error: Uncaught TypeError:\
    \ Unsupported operand types: string % int in /tmp/tmpxfnk3w2r.php:9\nStack trace:\n\
    #0 /tmp/tmpxfnk3w2r.php(20): even_odd_count(Array)\n#1 /tmp/tmpxfnk3w2r.php(25):\
    \ candidate(-78)\n#2 /tmp/tmpxfnk3w2r.php(34): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpxfnk3w2r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpzq6lq51r.php:9\nStack trace:\n#0 /tmp/tmpzq6lq51r.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpzq6lq51r.php(24): candidate(-78)\n#2 /tmp/tmpzq6lq51r.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzq6lq51r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpzq6lq51r.php:9\nStack trace:\n#0 /tmp/tmpzq6lq51r.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpzq6lq51r.php(24): candidate(-78)\n#2 /tmp/tmpzq6lq51r.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzq6lq51r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nprint_r(even_odd_count(1234));\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2\n)\n\nFatal error: Uncaught TypeError:\
    \ Unsupported operand types: string % int in /tmp/tmpyl6glt93.php:9\nStack trace:\n\
    #0 /tmp/tmpyl6glt93.php(20): even_odd_count(Array)\n#1 /tmp/tmpyl6glt93.php(25):\
    \ candidate(-78)\n#2 /tmp/tmpyl6glt93.php(34): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpyl6glt93.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxtml5by.php:25\n\
    Stack trace:\n#0 /tmp/tmphxtml5by.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphxtml5by.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $digit)\
    \ {\n    if ($digit % 2 === 0) {\n      $even += 1;\n    } else {\n      $odd\
    \ += 1;\n    }\n  }\n  return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp5lalthxr.php:9\nStack trace:\n#0 /tmp/tmp5lalthxr.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmp5lalthxr.php(24): candidate(-78)\n#2 /tmp/tmp5lalthxr.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5lalthxr.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num_str = strval($num);\n    for ($i = 0;\
    \ $i < strlen($num_str); $i++) {\n        if ($num_str[$i] % 2 == 0) {\n     \
    \       $even++;\n        } else {\n            $odd++;\n        }\n    }\n  \
    \  return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpek8qfonv.php:9\nStack trace:\n#0 /tmp/tmpek8qfonv.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmpek8qfonv.php(24): candidate(-78)\n#2 /tmp/tmpek8qfonv.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpek8qfonv.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = (string)$num;\n  $num_arr = str_split($num);\n\
    \  foreach ($num_arr as $digit) {\n    if ($digit % 2 === 0) {\n      $even++;\n\
    \    } else {\n      $odd++;\n    }\n  }\n  return [$even, $odd];\n}\n\necho '<pre>';\n\
    print_r(even_odd_count(123456789));\necho '</pre>';\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 4\n    [1] => 5\n)\n</pre>\nFatal error: Uncaught\
    \ TypeError: Unsupported operand types: string % int in /tmp/tmpi6e5gtz_.php:10\n\
    Stack trace:\n#0 /tmp/tmpi6e5gtz_.php(24): even_odd_count('-78')\n#1 /tmp/tmpi6e5gtz_.php(29):\
    \ candidate(-78)\n#2 /tmp/tmpi6e5gtz_.php(38): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpi6e5gtz_.php on line 10\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even_count = 0;\n    $odd_count = 0;\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even_count++;\n \
    \       } else {\n            $odd_count++;\n        }\n        $num = floor($num\
    \ / 10);\n    }\n    return [$even_count, $odd_count];\n}\n\necho \"even_odd_count(12345)\
    \ = \" . implode(', ', even_odd_count(12345)) . \"\\n\";\necho \"even_odd_count(123456789)\
    \ = \" . implode(', ', even_odd_count(123456789)) . \"\\n\";\necho \"even_odd_count(0)\
    \ = \" . implode(', ', even_odd_count(0)) . \"\\n\";\necho \"even_odd_count(1)\
    \ = \" . implode(', ', even_odd_count(1)) . \"\\n\";\necho \"even_odd_count(2)\
    \ = \" . implode(', ', even_odd_count(2)) . \"\\n\";\necho \"even_odd_count(3)\
    \ = \" . implode(', ', even_odd_count(3)) . \"\\n\";\necho \"even_odd_count(4)\
    \ = \" . implode(', ', even_odd_count(4)) . \"\\n\";\necho \"even_odd_count(5)\
    \ = \" . implode(', ', even_odd_count(5)) . \"\\n\";\necho \"even_odd_count(6)\
    \ = \" . implode(', ', even_odd_count(6)) . \"\\n\";\necho \"even_odd_count(7)\
    \ = \" . implode(', ', even_odd_count(7)) . \"\\n\";\necho \"even_odd_count(8)\
    \ = \" . implode(', ', even_odd_count(8)) . \"\\n\";\necho \"even_odd_count(9)\
    \ = \" . implode(', ', even_odd_count(9)) . \"\\n\";\necho \"even_odd_count(10)\
    \ = \" . implode(', ', even_odd_count(10)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "even_odd_count(12345) = 2, 3\neven_odd_count(123456789) = 4, 5\neven_odd_count(0)\
    \ = 0, 0\neven_odd_count(1) = 0, 1\neven_odd_count(2) = 1, 0\neven_odd_count(3)\
    \ = 0, 1\neven_odd_count(4) = 1, 0\neven_odd_count(5) = 0, 1\neven_odd_count(6)\
    \ = 1, 0\neven_odd_count(7) = 0, 1\neven_odd_count(8) = 1, 0\neven_odd_count(9)\
    \ = 0, 1\neven_odd_count(10) = 1, 1\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpeg9kt0p9.php:38\nStack trace:\n#0 /tmp/tmpeg9kt0p9.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmpeg9kt0p9.php on line 38\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit\
    \ = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n    $num = floor($num / 10);\n  }\n  return [$even, $odd];\n\
    }\n\n$num = 12345;\necho \"The number $num has \" . even_odd_count($num)[0] .\
    \ \" even and \" . even_odd_count($num)[1] . \" odd digits.\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The number 12345 has 2 even and 3 odd digits.\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpqs8h9s_f.php:34\nStack trace:\n#0 /tmp/tmpqs8h9s_f.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqs8h9s_f.php on line 34\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpp_mixq58.php:9\nStack trace:\n#0 /tmp/tmpp_mixq58.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpp_mixq58.php(24): candidate(-78)\n#2 /tmp/tmpp_mixq58.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpp_mixq58.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcrqsfe7.php:25\n\
    Stack trace:\n#0 /tmp/tmpfcrqsfe7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfcrqsfe7.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\necho even_odd_count(123456789);\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmp9hb2_1f0.php on line 18\n\
    Array\nFatal error: Uncaught TypeError: Unsupported operand types: string % int\
    \ in /tmp/tmp9hb2_1f0.php:9\nStack trace:\n#0 /tmp/tmp9hb2_1f0.php(21): even_odd_count(Array)\n\
    #1 /tmp/tmp9hb2_1f0.php(26): candidate(-78)\n#2 /tmp/tmp9hb2_1f0.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9hb2_1f0.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $rem = $num %\
    \ 10;\n        if ($rem % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return [$even, $odd];\n}\n\n$num = 1234;\n$result = even_odd_count($num);\n\
    echo \"Even: $result[0] Odd: $result[1]\";\nfunction candidate(...$args) {\n \
    \   return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Even: 2 Odd: 2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwyz3gcq3.php:28\n\
    Stack trace:\n#0 /tmp/tmpwyz3gcq3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwyz3gcq3.php\
    \ on line 28\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpp_mixq58.php:9\nStack trace:\n#0 /tmp/tmpp_mixq58.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpp_mixq58.php(24): candidate(-78)\n#2 /tmp/tmpp_mixq58.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpp_mixq58.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpzq6lq51r.php:9\nStack trace:\n#0 /tmp/tmpzq6lq51r.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpzq6lq51r.php(24): candidate(-78)\n#2 /tmp/tmpzq6lq51r.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzq6lq51r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpzq6lq51r.php:9\nStack trace:\n#0 /tmp/tmpzq6lq51r.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpzq6lq51r.php(24): candidate(-78)\n#2 /tmp/tmpzq6lq51r.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzq6lq51r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\necho \"even_odd_count(123456789) = \" . json_encode(even_odd_count(123456789))\
    \ . \"\\n\";\necho \"even_odd_count(2468) = \" . json_encode(even_odd_count(2468))\
    \ . \"\\n\";\necho \"even_odd_count(1357) = \" . json_encode(even_odd_count(1357))\
    \ . \"\\n\";\necho \"even_odd_count(0) = \" . json_encode(even_odd_count(0)) .\
    \ \"\\n\";\necho \"even_odd_count(1) = \" . json_encode(even_odd_count(1)) . \"\
    \\n\";\necho \"even_odd_count(2) = \" . json_encode(even_odd_count(2)) . \"\\\
    n\";\necho \"even_odd_count(3) = \" . json_encode(even_odd_count(3)) . \"\\n\"\
    ;\necho \"even_odd_count(4) = \" . json_encode(even_odd_count(4)) . \"\\n\";\n\
    echo \"even_odd_count(5) = \" . json_encode(even_odd_count(5)) . \"\\n\";\necho\
    \ \"even_odd_count(6) = \" . json_encode(even_odd_count(6)) . \"\\n\";\necho \"\
    even_odd_count(7) = \" . json_encode(even_odd_count(7)) . \"\\n\";\necho \"even_odd_count(8)\
    \ = \" . json_encode(even_odd_count(8)) . \"\\n\";\necho \"even_odd_count(9) =\
    \ \" . json_encode(even_odd_count(9)) . \"\\n\";\necho \"even_odd_count(10\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test", expecting "," or ";"
    in /tmp/tmp5x8qqkue.php on line 38

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    for ($i = 0;\
    \ $i < count($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpxtie0s8g.php:9\nStack trace:\n#0 /tmp/tmpxtie0s8g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpxtie0s8g.php(24): candidate(-78)\n#2 /tmp/tmpxtie0s8g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxtie0s8g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 === 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp9z50s2oa.php:9\nStack trace:\n#0 /tmp/tmp9z50s2oa.php(19): even_odd_count('-78')\n\
    #1 /tmp/tmp9z50s2oa.php(24): candidate(-78)\n#2 /tmp/tmp9z50s2oa.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9z50s2oa.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaboprc1w.php:32\n\
    Stack trace:\n#0 /tmp/tmpaboprc1w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpaboprc1w.php\
    \ on line 32\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\n$num = 12345;\n$result = even_odd_count($num);\n\
    print_r($result);\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpb1kjfjwj.php:36\nStack trace:\n#0 /tmp/tmpb1kjfjwj.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpb1kjfjwj.php on line 36\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpy25vvauy.php:9\nStack trace:\n#0 /tmp/tmpy25vvauy.php(19): even_odd_count('-78')\n\
    #1 /tmp/tmpy25vvauy.php(24): candidate(-78)\n#2 /tmp/tmpy25vvauy.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy25vvauy.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\necho implode(', ', even_odd_count(123456789)) . PHP_EOL;\necho implode(',\
    \ ', even_odd_count(1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp1qrbrcg7.php
    on line 20

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  while ($num > 0) {\n    $digit = $num % 10;\n  \
    \  if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n\
    \    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n$num =\
    \ 123456789;\n$result = even_odd_count($num);\nprint_r($result);\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 4\n    [1] => 5\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0k0lr5ca.php:29\nStack trace:\n#0 /tmp/tmp0k0lr5ca.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0k0lr5ca.php on line 29\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpp_mixq58.php:9\nStack trace:\n#0 /tmp/tmpp_mixq58.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpp_mixq58.php(24): candidate(-78)\n#2 /tmp/tmpp_mixq58.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpp_mixq58.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcrqsfe7.php:25\n\
    Stack trace:\n#0 /tmp/tmpfcrqsfe7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfcrqsfe7.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpzq6lq51r.php:9\nStack trace:\n#0 /tmp/tmpzq6lq51r.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpzq6lq51r.php(24): candidate(-78)\n#2 /tmp/tmpzq6lq51r.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzq6lq51r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\necho \"even_odd_count(12345) =\
    \ \" . json_encode(even_odd_count(12345)) . \"\\n\";\necho \"even_odd_count(123456789)\
    \ = \" . json_encode(even_odd_count(123456789)) . \"\\n\";\necho \"even_odd_count(0)\
    \ = \" . json_encode(even_odd_count(0)) . \"\\n\";\necho \"even_odd_count(-12345)\
    \ = \" . json_encode(even_odd_count(-12345)) . \"\\n\";\necho \"even_odd_count(-123456789)\
    \ = \" . json_encode(even_odd_count(-123456789)) . \"\\n\";\necho \"even_odd_count(-0)\
    \ = \" . json_encode(even_odd_count(-0)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "even_odd_count(12345) = [2,3]\neven_odd_count(123456789) = [4,5]\neven_odd_count(0)\
    \ = [0,0]\neven_odd_count(-12345) = [2,3]\neven_odd_count(-123456789) = [4,5]\n\
    even_odd_count(-0) = [0,0]\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmppj8l9ns0.php:38\nStack trace:\n#0 /tmp/tmppj8l9ns0.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmppj8l9ns0.php on line 38\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $key\
    \ => $value) {\n    if ($value % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n  }\n  return [$even, $odd];\n}\n\nprint_r(even_odd_count(123456789));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 4\n    [1] => 5\n)\n\nFatal error: Uncaught TypeError:\
    \ Unsupported operand types: string % int in /tmp/tmp81rt5w3r.php:9\nStack trace:\n\
    #0 /tmp/tmp81rt5w3r.php(20): even_odd_count(Array)\n#1 /tmp/tmp81rt5w3r.php(25):\
    \ candidate(-78)\n#2 /tmp/tmp81rt5w3r.php(34): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp81rt5w3r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\n$num = 12345;\n$result = even_odd_count($num);\n\
    echo \"Even: $result[0]\\n\";\necho \"Odd: $result[1]\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Even: 2\nOdd: 3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmdcsftx.php:29\n\
    Stack trace:\n#0 /tmp/tmpsmdcsftx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsmdcsftx.php\
    \ on line 29\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpy25vvauy.php:9\nStack trace:\n#0 /tmp/tmpy25vvauy.php(19): even_odd_count('-78')\n\
    #1 /tmp/tmpy25vvauy.php(24): candidate(-78)\n#2 /tmp/tmpy25vvauy.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy25vvauy.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\necho \"even_odd_count(123456789) = \" . implode(',\
    \ ', even_odd_count(123456789)) . \"\\n\";\necho \"even_odd_count(0) = \" . implode(',\
    \ ', even_odd_count(0)) . \"\\n\";\necho \"even_odd_count(1) = \" . implode(',\
    \ ', even_odd_count(1)) . \"\\n\";\necho \"even_odd_count(2) = \" . implode(',\
    \ ', even_odd_count(2)) . \"\\n\";\necho \"even_odd_countn\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test", expecting "," or ";"
    in /tmp/tmpwdyavmyx.php on line 29

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcrqsfe7.php:25\n\
    Stack trace:\n#0 /tmp/tmpfcrqsfe7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfcrqsfe7.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $value)\
    \ {\n    if ($value % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp47stsm3_.php:9\nStack trace:\n#0 /tmp/tmp47stsm3_.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmp47stsm3_.php(24): candidate(-78)\n#2 /tmp/tmp47stsm3_.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp47stsm3_.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = (string)$num;\n  for ($i = 0; $i < strlen($num);\
    \ $i++) {\n    if ($num[$i] % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n  }\n  return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpqsnvw21q.php:9\nStack trace:\n#0 /tmp/tmpqsnvw21q.php(19): even_odd_count('-78')\n\
    #1 /tmp/tmpqsnvw21q.php(24): candidate(-78)\n#2 /tmp/tmpqsnvw21q.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpqsnvw21q.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\nprint_r(even_odd_count(123456789));\n\nfunction candidate(...$args) {\n   \
    \ return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 4\n    [1] => 5\n)\n\nFatal error: Uncaught TypeError:\
    \ Unsupported operand types: string % int in /tmp/tmpwsskmvav.php:9\nStack trace:\n\
    #0 /tmp/tmpwsskmvav.php(20): even_odd_count(Array)\n#1 /tmp/tmpwsskmvav.php(25):\
    \ candidate(-78)\n#2 /tmp/tmpwsskmvav.php(34): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpwsskmvav.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \t$even = 0;\n\t$odd = 0;\n\t$num = str_split($num);\n\tforeach ($num as $value)\
    \ {\n\t\tif ($value % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t}\n\treturn [$even, $odd];\n}\n\nfunction candidate(...$args) {\n   \
    \ return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpi419b7tk.php:9\nStack trace:\n#0 /tmp/tmpi419b7tk.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpi419b7tk.php(24): candidate(-78)\n#2 /tmp/tmpi419b7tk.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi419b7tk.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even += 1;\n    \
    \    } else {\n            $odd += 1;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nprint_r(even_odd_count(12345));\nprint_r(even_odd_count(2468));\nprint_r(even_odd_count(1357));\n\
    print_r(even_odd_count(0));\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n)\nArray\n(\n    [0] => 4\n    [1]\
    \ => 0\n)\nArray\n(\n    [0] => 0\n    [1] => 4\n)\nArray\n(\n    [0] => 1\n \
    \   [1] => 0\n)\n\nFatal error: Uncaught TypeError: Unsupported operand types:\
    \ string % int in /tmp/tmpvkpn8hpl.php:9\nStack trace:\n#0 /tmp/tmpvkpn8hpl.php(24):\
    \ even_odd_count(Array)\n#1 /tmp/tmpvkpn8hpl.php(29): candidate(-78)\n#2 /tmp/tmpvkpn8hpl.php(38):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpvkpn8hpl.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $str = strval($num);\n    for ($i = 0; $i\
    \ < strlen($str); $i++) {\n        if ($str[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpo1_8hvjz.php:9\nStack trace:\n#0 /tmp/tmpo1_8hvjz.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmpo1_8hvjz.php(24): candidate(-78)\n#2 /tmp/tmpo1_8hvjz.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpo1_8hvjz.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpgbytecf_.php:9\nStack trace:\n#0 /tmp/tmpgbytecf_.php(19): even_odd_count('-78')\n\
    #1 /tmp/tmpgbytecf_.php(24): candidate(-78)\n#2 /tmp/tmpgbytecf_.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpgbytecf_.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\n$num = 12345;\n$result = even_odd_count($num);\n\
    print_r($result);\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpac3_x4p0.php:29\nStack trace:\n#0 /tmp/tmpac3_x4p0.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpac3_x4p0.php on line 29\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcrqsfe7.php:25\n\
    Stack trace:\n#0 /tmp/tmpfcrqsfe7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfcrqsfe7.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nprint_r(even_odd_count(1234));\n\
    print_r(even_odd_count(0));\nprint_r(even_odd_count(-1234));\nprint_r(even_odd_count(123456789));\n\
    print_r(even_odd_count(1234567890123456789));\nprint_r(even_odd_count(12345678901234567890123456789));\n\
    print_r(even_odd_count(123456789012345678901234567890123456789));\nprint_r(even_odd_count(1234567890123456789012345678901234567890123456789));\n\
    print_r(even_odd_count(12345678901234567890123456789012345678901234567890123456789));\n\
    print_r(even_odd_count(123456789012345678901234567890123456789012345678901234567890123456789));\n\
    print_r(even_odd_count(1234567890123456789012345678901234567890123456789012345678901234567890123456789));\n\
    print_r(even_odd_count(12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789));\n\
    print_r(even_odd_count(12345678901234567890123456789012345678901234567890123456789012345678901234567\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpsy67lbei.php
    on line 33

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp7vxueejl.php:9\nStack trace:\n#0 /tmp/tmp7vxueejl.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmp7vxueejl.php(24): candidate(-78)\n#2 /tmp/tmp7vxueejl.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7vxueejl.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\necho even_odd_count(1234);\necho\
    \ \"\\n\";\necho even_odd_count(-1234);\necho \"\\n\";\necho even_odd_count(0);\n\
    echo \"\\n\";\necho even_odd_count(1);\necho \"\\n\";\necho even_odd_count(2);\n\
    echo \"\\n\";\necho even_odd_count(3);\necho \"\\n\";\necho even_odd_count(4);\n\
    echo \"\\n\";\necho even_odd_count(5);\necho \"\\n\";\necho even_odd_count(6);\n\
    echo \"\\n\";\necho even_odd_count(7);\necho \"\\n\";\necho even_odd_count(8);\n\
    echo \"\\n\";\necho even_odd_count(9);\necho \"\\n\";\necho even_odd_count(10);\n\
    echo \"\\n\";\necho even_odd_count(11);\necho \"\\n\";\necho even_odd_count(12);\n\
    echo \"\\n\";\necho even_odd_count(13);\necho \"\\n\";\necho even_odd_count(14);\n\
    echo \"\\n\";\necho even_odd_count(15);\necho \"\\n\";\necho even_odd_count(16);\n\
    echo \"\\n\";\necho even_odd_count(17);\necho \"\\n\";\necho even_odd_count(18);\n\
    echo \"\\n\";\necho even_odd_count(19);\necho \"\\n\";\necho even_odd_count(20);\n\
    echo \"\\n\";\necho even_odd_count(21);\necho \"\\n\";\necho even_odd_count(22);\n\
    echo \"\\n\";\necho even_odd_count(23);\necho \"\\n\";\necho even_odd_count(24);\n\
    echo \"\\n\";\necho even_odd_count\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmpi0s4gwyd.php on line 75

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    for ($i = 0;\
    \ $i < count($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp_k4jlgy2.php:9\nStack trace:\n#0 /tmp/tmp_k4jlgy2.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmp_k4jlgy2.php(24): candidate(-78)\n#2 /tmp/tmp_k4jlgy2.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_k4jlgy2.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcrqsfe7.php:25\n\
    Stack trace:\n#0 /tmp/tmpfcrqsfe7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfcrqsfe7.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\necho implode(', ', even_odd_count(12345)) . PHP_EOL;\n\
    echo implode(', ', even_odd_count(1234)) . PHP_EOL;\necho implode(', ', even_odd_count(123456))\
    \ . PHP_EOL;\necho implode(', ', even_odd_count(1234567)) . PHP_EOL;\necho implode(',\
    \ ', even_odd_count(12345678)) . PHP_EOL;\necho implode(', ', even_odd_count(123456789))\
    \ . PHP_EOL;\necho implode(', ', even_odd_count(1234567890)) . PHP_EOL;\necho\
    \ implode(', ', even_odd_count(12345678901)) . PHP_EOL;\necho implode(', ', even_odd_count(123456789012))\
    \ . PHP_EOL;\necho implode(', ', even_odd_count(1234567890123)) . PHP_EOL;\necho\
    \ implode(', ', even_odd_count(12345678901234)) . PHP_EOL;\necho implode(', ',\
    \ even_odd_count(123456789012345)) . PHP_EOL;\necho implode(', ', even_odd_count(1234567890123456))\
    \ . PHP_EOL;\necho implode(', ', even_odd_count(12345678901234567)) . PHP_EOL;\n\
    echo implode(', ', even_odd_count(123456789012345678)) . PHP_EOL;\necho implode(',\
    \ ', even_odd_count(1234567890123456789)) . PHP_EOL;\necho implode(', ', even_odd_count(12345678901234567890\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmptpojc451.php
    on line 36

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpzq6lq51r.php:9\nStack trace:\n#0 /tmp/tmpzq6lq51r.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpzq6lq51r.php(24): candidate(-78)\n#2 /tmp/tmpzq6lq51r.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzq6lq51r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\n$num = 12345;\n$result = even_odd_count($num);\n\
    print_r($result);\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpwrxdgapu.php:29\nStack trace:\n#0 /tmp/tmpwrxdgapu.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwrxdgapu.php on line 29\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh_ibsxo.php:25\n\
    Stack trace:\n#0 /tmp/tmpeh_ibsxo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpeh_ibsxo.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpm4kfvkh5.php:9\nStack trace:\n#0 /tmp/tmpm4kfvkh5.php(19): even_odd_count(-78)\n\
    #1 /tmp/tmpm4kfvkh5.php(24): candidate(-78)\n#2 /tmp/tmpm4kfvkh5.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpm4kfvkh5.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpabuts78j.php:9\nStack trace:\n#0 /tmp/tmpabuts78j.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpabuts78j.php(24): candidate(-78)\n#2 /tmp/tmpabuts78j.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpabuts78j.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaboprc1w.php:32\n\
    Stack trace:\n#0 /tmp/tmpaboprc1w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpaboprc1w.php\
    \ on line 32\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n\n$num = 12345;\n$result = even_odd_count($num);\n\
    echo $result[0] . \" \" . $result[1];\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2 3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbza_0qzz.php:28\n\
    Stack trace:\n#0 /tmp/tmpbza_0qzz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbza_0qzz.php\
    \ on line 28\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n\n$num = 12345;\n$result = even_odd_count($num);\necho\
    \ \"Even: {$result[0]}, Odd: {$result[1]}\";\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmp80x5jj5t.php
    on line 8


    Deprecated: Implicit conversion from float 123.45 to int loses precision in /tmp/tmp80x5jj5t.php
    on line 8


    Deprecated: Implicit conversion from float 12.345 to int loses precision in /tmp/tmp80x5jj5t.php
    on line 8


    Deprecated: Implicit conversion from float 1.2345000000000002 to int loses precision
    in /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 0.12345000000000002 to int loses precision
    in /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 0.012345000000000002 to int loses precision
    in /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 0.0012345000000000001 to int loses
    precision in /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 0.00012345000000000002 to int loses
    precision in /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 1.2345000000000001E-5 to int loses
    precision in /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 1.2345000000000002E-6 to int loses
    precision in /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 1.2345E-7 to int loses precision in
    /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 1.2345E-8 to int loses precision in
    /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 1.2345E-9 to int loses precision in
    /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 1.2345E-10 to int loses precision in
    /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 1.2345E-11 to int loses precision in
    /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 1.2345E-12 to int loses precision in
    /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 1.2345E-13 to int loses precision in
    /tmp/tmp80x5jj5t.php on line 8


    Deprecated: Implicit conversion from float 1.2345E-14 to int loses precision in
    /tmp/t'
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcrqsfe7.php:25\n\
    Stack trace:\n#0 /tmp/tmpfcrqsfe7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfcrqsfe7.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nprint_r(even_odd_count(1234));\nprint_r(even_odd_count(1235));\nprint_r(even_odd_count(1236));\n\
    print_r(even_odd_count(1237));\nprint_r(even_odd_count(1238));\nprint_r(even_odd_count(1239));\n\
    print_r(even_odd_count(1240));\nprint_r(even_odd_count(1241));\nprint_r(even_odd_count(1242));\n\
    print_r(even_odd_count(1243));\nprint_r(even_odd_count(1244));\nprint_r(even_odd_count(1245));\n\
    print_r(even_odd_count(1246));\nprint_r(even_odd_count(1247));\nprint_r(even_odd_count(1248));\n\
    print_r(even_odd_count(1249));\nprint_r(even_odd_count(1250));\nprint_r(even_odd_count(1251));\n\
    print_r(even_odd_count(1252));\nprint_r(even_odd_count(1253));\nprint_r(even_odd_count(1254));\n\
    print_r(even_odd_count(1255));\nprint_r(even_odd_count(1256));\nprint_r(even_odd_count(1257));\n\
    print_r(even_odd_count(1258));\nprint_r(even_odd_count(1259));\nprint_r(even_odd_count(1260));\n\
    print_r(even_odd_count(1261));\nprint_r(even_odd_count(1262));\nprint_r(even_odd_count(1263));\n\
    print_r(even_odd_count(\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmphe2jawr2.php on line 49

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as $digit)\
    \ {\n    if ($digit % 2 == 0) {\n      $even += 1;\n    } else {\n      $odd +=\
    \ 1;\n    }\n  }\n  return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp2w2p8pob.php:9\nStack trace:\n#0 /tmp/tmp2w2p8pob.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmp2w2p8pob.php(24): candidate(-78)\n#2 /tmp/tmp2w2p8pob.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2w2p8pob.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $n) {\n        if ($n % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpzq6lq51r.php:9\nStack trace:\n#0 /tmp/tmpzq6lq51r.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpzq6lq51r.php(24): candidate(-78)\n#2 /tmp/tmpzq6lq51r.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzq6lq51r.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $last_digit =\
    \ $num % 10;\n        if ($last_digit % 2 == 0) {\n            $even++;\n    \
    \    } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmzlfh24s.php:25\n\
    Stack trace:\n#0 /tmp/tmpmzlfh24s.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmzlfh24s.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \  $even = 0;\n  $odd = 0;\n  while ($num > 0) {\n    $digit = $num % 10;\n  \
    \  if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n\
    \    $num = (int)($num / 10);\n  }\n  return [$even, $odd];\n}\n\necho \"even_odd_count(12345)\
    \ = \" . implode(', ', even_odd_count(12345)) . \"\\n\";\necho \"even_odd_count(1234)\
    \ = \" . implode(', ', even_odd_count(1234)) . \"\\n\";\necho \"even_odd_count(123456)\
    \ = \" . implode(', ', even_odd_count(123456)) . \"\\n\";\necho \"even_odd_count(1234567)\
    \ = \" . implode(', ', even_odd_count(1234567)) . \"\\n\";\necho \"even_odd_count(12345678)\
    \ = \" . implode(', ', even_odd_count(12345678)) . \"\\n\";\necho \"even_odd_count(123456789)\
    \ = \" . implode(', ', even_odd_count(123456789)) . \"\\n\";\necho \"even_odd_count(1234567890)\
    \ = \" . implode(', ', even_odd_count(1234567890)) . \"\\n\";\necho \"even_odd_count(12345678901)\
    \ = \" . implode(', ', even_odd_count(12345678901)) . \"\\n\";\necho \"even_odd_count(123456789012)\
    \ = \" . implode(', ', even_odd_count(123456789012)) . \"\\n\";\necho \"even_odd_count(1234567890123)\
    \ = \" . implode(', ', even_odd_count(1234567890123)) . \"\\n\";\necho \"even_odd_count(12345678901234)\
    \ = \" . implode(', ', even_odd_count(12345678901234)) . \"\\n\";\necho \"even_odd_count(123456789012345)\
    \ =\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test", expecting "," or ";"
    in /tmp/tmpqh5i5gsk.php on line 36

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nprint_r(even_odd_count(12345));\nprint_r(even_odd_count(1234));\n\
    print_r(even_odd_count(123456));\nprint_r(even_odd_count(12));\nprint_r(even_odd_count(0));\n\
    print_r(even_odd_count(1));\nprint_r(even_odd_count(2));\nprint_r(even_odd_count(3));\n\
    print_r(even_odd_count(4));\nprint_r(even_odd_count(5));\nprint_r(even_odd_count(6));\n\
    print_r(even_odd_count(7));\nprint_r(even_odd_count(8));\nprint_r(even_odd_count(9));\n\
    print_r(even_odd_count(10));\nprint_r(even_odd_count(11));\nprint_r(even_odd_count(12));\n\
    print_r(even_odd_count(13));\nprint_r(even_odd_count(14));\nprint_r(even_odd_count(15));\n\
    print_r(even_odd_count(16));\nprint_r(even_odd_count(17));\nprint_r(even_odd_count(18));\n\
    print_r(even_odd_count(19));\nprint_r(even_odd_count(20));\nprint_r(even_odd_count(21));\n\
    print_r(even_odd_count(22));\nprint_r(even_odd_count(23));\nprint_r(even_odd_count(24));\n\
    print_r(even_odd_count(25));\nprint_r(even_odd_count(26));\nprint_r(even_odd_count(27));\n\
    print_r\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpw9mlf80q.php
    on line 52

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpciklq83g.php:9\nStack trace:\n#0 /tmp/tmpciklq83g.php(19): even_odd_count(Array)\n\
    #1 /tmp/tmpciklq83g.php(24): candidate(-78)\n#2 /tmp/tmpciklq83g.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpciklq83g.php on line 9\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxtml5by.php:25\n\
    Stack trace:\n#0 /tmp/tmphxtml5by.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphxtml5by.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n\necho \"even_odd_count(123456789) = \" .\
    \ implode(\", \", even_odd_count(123456789)) . \"\\n\";\necho \"even_odd_countn\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test", expecting "," or ";"
    in /tmp/tmp8ksoo1li.php on line 26

    '
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasp870wu.php:25\n\
    Stack trace:\n#0 /tmp/tmpasp870wu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpasp870wu.php\
    \ on line 25\n"
  timestamp: 1660028393
- exit_code: 255
  program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\nfunction even_odd_count($num) {\n\
    \    $even = 0;\n    $odd = 0;\n    $num = (string)$num;\n    for ($i = 0; $i\
    \ < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpy25vvauy.php:9\nStack trace:\n#0 /tmp/tmpy25vvauy.php(19): even_odd_count('-78')\n\
    #1 /tmp/tmpy25vvauy.php(24): candidate(-78)\n#2 /tmp/tmpy25vvauy.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy25vvauy.php on line 9\n"
  timestamp: 1660028393

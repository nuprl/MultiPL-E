language: php
name: HumanEval_9_rolling_max
results:
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [];\n  foreach ($numbers as $number) {\n\
    \    if ($number > $max) {\n      $max = $number;\n    }\n    $result[] = $max;\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $max[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5hjnm0d8.php:18\n\
    Stack trace:\n#0 /tmp/tmp5hjnm0d8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp5hjnm0d8.php\
    \ on line 18\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [];\n  foreach ($numbers as $number) {\n\
    \    if ($number > $max) {\n      $max = $number;\n    }\n    $result[] = $max;\n\
    \  }\n  return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $max[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5hjnm0d8.php:18\n\
    Stack trace:\n#0 /tmp/tmp5hjnm0d8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp5hjnm0d8.php\
    \ on line 18\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 3,\
    \ 5, 7, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$result =\
    \ rolling_max($numbers);\nprint_r($result);\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 7\n    [4]\
    \ => 7\n    [5] => 7\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    \    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n\
    \    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $maxes = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $maxes[] = $max;\n\
    \    }\n    return $maxes;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp069cakyg.php:19\n\
    Stack trace:\n#0 /tmp/tmp069cakyg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp069cakyg.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeu__pa45.php:22\n\
    Stack trace:\n#0 /tmp/tmpeu__pa45.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpeu__pa45.php\
    \ on line 22\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10);\nprint_r(rolling_max($numbers));\n\n$numbers = array(10, 9, 8, 7, 6, 5,\
    \ 4, 3, 2, 1);\nprint_r(rolling_max($numbers));\n\n$numbers = array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(rolling_max($numbers));\n\
    \n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1);\nprint_r(rolling_max($numbers));\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(rolling_max($numbers));\n\
    \n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 9, 8, 7, 6, 5, 4,\
    \ 3, 2, 1);\nprint_r(rolling_max($numbers));\n\n$numbers = array(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 10, 10, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\nprint_r(rolling_max($numbers));\n\
    \n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpz705ek01.php on line 39

    '
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10);\nprint_r(rolling_max($numbers));\n\nfunction candidate(...$args) {\n  \
    \  return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgu6w012f.php:25\n\
    Stack trace:\n#0 /tmp/tmpgu6w012f.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgu6w012f.php\
    \ on line 25\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [];\n  foreach ($numbers as $number) {\n\
    \    if ($number > $max) {\n      $max = $number;\n    }\n    $result[] = $max;\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = 0;\n    $result = [];\n    foreach ($numbers as $number) {\n \
    \       if ($number > $max) {\n            $max = $number;\n        }\n      \
    \  $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result\
    \ = rolling_max($numbers);\nprint_r($result);\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3toxzgrb.php:25\n\
    Stack trace:\n#0 /tmp/tmp3toxzgrb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3toxzgrb.php\
    \ on line 25\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $maxes = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $maxes[] = $max;\n    }\n    return $maxes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $maxes = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $maxes[] = $max;\n\
    \    }\n    return $maxes;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp069cakyg.php:19\n\
    Stack trace:\n#0 /tmp/tmp069cakyg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp069cakyg.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $rolling_max = [];\n    $max = $numbers[0];\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $rolling_max[] = $max;\n\
    \    }\n    return $rolling_max;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10];\n$rolling_max = rolling_max($numbers);\nprint_r($rolling_max);\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $maxes = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $maxes[] = $max;\n\
    \    }\n    return $maxes;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp069cakyg.php:19\n\
    Stack trace:\n#0 /tmp/tmp069cakyg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp069cakyg.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zls2bry.php:24\n\
    Stack trace:\n#0 /tmp/tmp7zls2bry.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7zls2bry.php\
    \ on line 24\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [];\n  foreach ($numbers as $number) {\n\
    \    if ($number > $max) {\n      $max = $number;\n    }\n    $result[] = $max;\n\
    \  }\n  return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result\
    \ = rolling_max($numbers);\nprint_r($result);\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [$max];\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $max = max($max, $numbers[$i]);\n    $result[] = $max;\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5s_g477m.php:19\n\
    Stack trace:\n#0 /tmp/tmp5s_g477m.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5s_g477m.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphagxudto.php:22\n\
    Stack trace:\n#0 /tmp/tmphagxudto.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphagxudto.php\
    \ on line 22\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = [];\n  $max_so_far = -1;\n  foreach ($numbers as $number) {\n  \
    \  if ($number > $max_so_far) {\n      $max_so_far = $number;\n    }\n    $max[]\
    \ = $max_so_far;\n  }\n  return $max;\n}\n\nfunction candidate(...$args) {\n \
    \   return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $maxes = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $maxes[] = $max;\n\
    \    }\n    return $maxes;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp069cakyg.php:19\n\
    Stack trace:\n#0 /tmp/tmp069cakyg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp069cakyg.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphagxudto.php:22\n\
    Stack trace:\n#0 /tmp/tmphagxudto.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphagxudto.php\
    \ on line 22\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_list = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $max_list[] = $max;\n\
    \    }\n    return $max_list;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps63ih2_h.php:19\n\
    Stack trace:\n#0 /tmp/tmps63ih2_h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmps63ih2_h.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $max_so_far = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($max_so_far === null || $number > $max_so_far) {\n          \
    \  $max_so_far = $number;\n        }\n        $max[] = $max_so_far;\n    }\n \
    \   return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $current_max = $numbers[0];\n    $max[] = $current_max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $current_max)\
    \ {\n            $current_max = $numbers[$i];\n        }\n        $max[] = $current_max;\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpab1x0tqq.php:22\n\
    Stack trace:\n#0 /tmp/tmpab1x0tqq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpab1x0tqq.php\
    \ on line 22\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = 0;\n    $result = [];\n    foreach ($numbers as $number) {\n \
    \       if ($number > $max) {\n            $max = $number;\n        }\n      \
    \  $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [];\n  foreach ($numbers as $number) {\n\
    \    if ($number > $max) {\n      $max = $number;\n    }\n    $result[] = $max;\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [$max];\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $max = max($max, $numbers[$i]);\n    $result[] = $max;\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5s_g477m.php:19\n\
    Stack trace:\n#0 /tmp/tmp5s_g477m.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5s_g477m.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $maxes = [];\n  foreach ($numbers as $number) {\n\
    \    if ($number > $max) {\n      $max = $number;\n    }\n    $maxes[] = $max;\n\
    \  }\n  return $maxes;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $maxes = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $maxes[] = $max;\n\
    \    }\n    return $maxes;\n}\n\n$numbers = [1, 3, 5, 2, 4, 6, 7, 8, 9, 10];\n\
    var_dump(rolling_max($numbers));\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(10) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(3)\n  [2]=>\n  int(5)\n\
    \  [3]=>\n  int(5)\n  [4]=>\n  int(5)\n  [5]=>\n  int(6)\n  [6]=>\n  int(7)\n\
    \  [7]=>\n  int(8)\n  [8]=>\n  int(9)\n  [9]=>\n  int(10)\n}\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpejf1ygm4.php:21\nStack trace:\n#0 /tmp/tmpejf1ygm4.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpejf1ygm4.php on line 21\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    $result = rolling_max($numbers);\nprint_r($result);\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvtlff2ol.php:23\n\
    Stack trace:\n#0 /tmp/tmpvtlff2ol.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvtlff2ol.php\
    \ on line 23\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 3,\
    \ 5, 4, 2, 7, 9, 8, 6];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 5\n    [4]\
    \ => 5\n    [5] => 7\n    [6] => 9\n    [7] => 9\n    [8] => 9\n)\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [$max];\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $max = max($max, $numbers[$i]);\n    $result[] = $max;\n  }\n \
    \ return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7z0anwdt.php:21\n\
    Stack trace:\n#0 /tmp/tmp7z0anwdt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7z0anwdt.php\
    \ on line 21\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = 0;\n    $result = [];\n    foreach ($numbers as $number) {\n \
    \       if ($number > $max) {\n            $max = $number;\n        }\n      \
    \  $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $max_so_far = -INF;\n    foreach ($numbers as $number)\
    \ {\n        $max_so_far = max($max_so_far, $number);\n        $max[] = $max_so_far;\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $max_so_far = -INF;\n    foreach ($numbers as $number)\
    \ {\n        $max_so_far = max($max_so_far, $number);\n        $max[] = $max_so_far;\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $max_so_far = -INF;\n    foreach ($numbers as $number)\
    \ {\n        $max_so_far = max($max_so_far, $number);\n        $max[] = $max_so_far;\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $maxes = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $maxes[] = $max;\n\
    \    }\n    return $maxes;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp069cakyg.php:19\n\
    Stack trace:\n#0 /tmp/tmp069cakyg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp069cakyg.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zls2bry.php:24\n\
    Stack trace:\n#0 /tmp/tmp7zls2bry.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7zls2bry.php\
    \ on line 24\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [$max];\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $max = max($max, $numbers[$i]);\n    $result[] = $max;\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5s_g477m.php:19\n\
    Stack trace:\n#0 /tmp/tmp5s_g477m.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5s_g477m.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_list = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $max_list[] = $max;\n\
    \    }\n    return $max_list;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps63ih2_h.php:19\n\
    Stack trace:\n#0 /tmp/tmps63ih2_h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmps63ih2_h.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [];\n  foreach ($numbers as $number) {\n\
    \    if ($number > $max) {\n      $max = $number;\n    }\n    $result[] = $max;\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10);\n$result = rolling_max($numbers);\nprint_r($result);\n\n$numbers = array(10,\
    \ 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$result = rolling_max($numbers);\nprint_r($result);\n\
    \n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n\
    $result = rolling_max($numbers);\nprint_r($result);\n\n$numbers = array(10, 9,\
    \ 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = rolling_max($numbers);\n\
    print_r($result);\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8,\
    \ 7, 6, 5, 4, 3, 2, 1);\n$result = rolling_max($numbers);\nprint_r($result);\n\
    \n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = rolling_max($numbers);\nprint_r($result);\n\
    \n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmplody9pvy.php on line 42

    '
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeu__pa45.php:22\n\
    Stack trace:\n#0 /tmp/tmpeu__pa45.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpeu__pa45.php\
    \ on line 22\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $max_so_far = -INF;\n    foreach ($numbers as $number)\
    \ {\n        $max_so_far = max($max_so_far, $number);\n        $max[] = $max_so_far;\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_list = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $max_list[] = $max;\n\
    \    }\n    return $max_list;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps63ih2_h.php:19\n\
    Stack trace:\n#0 /tmp/tmps63ih2_h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmps63ih2_h.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result\
    \ = rolling_max($numbers);\n\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpez65_443.php:26\n\
    Stack trace:\n#0 /tmp/tmpez65_443.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpez65_443.php\
    \ on line 26\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = [];\n  $max_so_far = -INF;\n  foreach ($numbers as $number) {\n\
    \    $max_so_far = max($max_so_far, $number);\n    $max[] = $max_so_far;\n  }\n\
    \  return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = array();\n  $max[] = $numbers[0];\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $max[] = max($max[$i - 1], $numbers[$i]);\n  }\n  return $max;\n\
    }\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(rolling_max($numbers));\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpun_065rj.php:21\n\
    Stack trace:\n#0 /tmp/tmpun_065rj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpun_065rj.php\
    \ on line 21\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_so_far = $numbers[0];\n    $max_list = [];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_so_far) {\n            $max_so_far\
    \ = $number;\n        }\n        $max_list[] = $max_so_far;\n    }\n    return\
    \ $max_list;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    print_r(rolling_max($numbers));\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyc1t9gfw.php:21\n\
    Stack trace:\n#0 /tmp/tmpyc1t9gfw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpyc1t9gfw.php\
    \ on line 21\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10);\n$result = rolling_max($numbers);\nprint_r($result);\n\n$numbers = array(10,\
    \ 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$result = rolling_max($numbers);\nprint_r($result);\n\
    \n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n\
    $result = rolling_max($numbers);\nprint_r($result);\n\n$numbers = array(10, 9,\
    \ 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = rolling_max($numbers);\n\
    print_r($result);\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7,\
    \ 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = rolling_max($numbers);\n\
    print_r($result);\n\n$numbers = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\
    $result = rolling_max($numbers);\nprint_r($result);\n\n$numbers = array(1, 2,\
    \ 3\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp00a7g5_t.php on line 42

    '
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = 0;\n    foreach ($numbers as $number) {\n \
    \       if ($number > $max) {\n            $max = $number;\n        }\n      \
    \  $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [$max];\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $max = max($max, $numbers[$i]);\n    $result[] = $max;\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5s_g477m.php:19\n\
    Stack trace:\n#0 /tmp/tmp5s_g477m.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5s_g477m.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [];\n  foreach ($numbers as $number) {\n\
    \    if ($number > $max) {\n      $max = $number;\n    }\n    $result[] = $max;\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $max[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5hjnm0d8.php:18\n\
    Stack trace:\n#0 /tmp/tmp5hjnm0d8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp5hjnm0d8.php\
    \ on line 18\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [];\n  foreach ($numbers as $number) {\n\
    \    if ($number > $max) {\n      $max = $number;\n    }\n    $result[] = $max;\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphagxudto.php:22\n\
    Stack trace:\n#0 /tmp/tmphagxudto.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphagxudto.php\
    \ on line 22\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = 0;\n    $result = [];\n    foreach ($numbers as $number) {\n \
    \       if ($number > $max) {\n            $max = $number;\n        }\n      \
    \  $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $rolling_max = [];\n  foreach ($numbers as $number)\
    \ {\n    if ($number > $max) {\n      $max = $number;\n    }\n    $rolling_max[]\
    \ = $max;\n  }\n  return $rolling_max;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $max_so_far = -INF;\n    foreach ($numbers as $number)\
    \ {\n        $max_so_far = max($max_so_far, $number);\n        $max[] = $max_so_far;\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $max_so_far = -INF;\n    foreach ($numbers as $number)\
    \ {\n        $max_so_far = max($max_so_far, $number);\n        $max[] = $max_so_far;\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $max_so_far = -1;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_so_far) {\n            $max_so_far = $number;\n\
    \        }\n        $max[] = $max_so_far;\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = 0;\n    $result = [];\n    foreach ($numbers as $number) {\n \
    \       if ($number > $max) {\n            $max = $number;\n        }\n      \
    \  $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10);\n$result = rolling_max($numbers);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpam0mfv21.php:25\n\
    Stack trace:\n#0 /tmp/tmpam0mfv21.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpam0mfv21.php\
    \ on line 25\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphagxudto.php:22\n\
    Stack trace:\n#0 /tmp/tmphagxudto.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphagxudto.php\
    \ on line 22\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_list = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $max_list[] = $max;\n\
    \    }\n    return $max_list;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps63ih2_h.php:19\n\
    Stack trace:\n#0 /tmp/tmps63ih2_h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmps63ih2_h.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_list = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $max_list[] = $max;\n\
    \    }\n    return $max_list;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps63ih2_h.php:19\n\
    Stack trace:\n#0 /tmp/tmps63ih2_h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmps63ih2_h.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphagxudto.php:22\n\
    Stack trace:\n#0 /tmp/tmphagxudto.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphagxudto.php\
    \ on line 22\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $maxes = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $maxes[] = $max;\n\
    \    }\n    return $maxes;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp069cakyg.php:19\n\
    Stack trace:\n#0 /tmp/tmp069cakyg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp069cakyg.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = [];\n    $max_so_far = -1;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max_so_far) {\n            $max_so_far = $number;\n\
    \        }\n        $max[] = $max_so_far;\n    }\n    return $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $maxes = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $maxes[] = $max;\n\
    \    }\n    return $maxes;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\
    print_r(rolling_max($numbers));\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx6bct7nh.php:21\n\
    Stack trace:\n#0 /tmp/tmpx6bct7nh.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx6bct7nh.php\
    \ on line 21\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $maxes = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $maxes[] = $max;\n    }\n    return $maxes;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphagxudto.php:22\n\
    Stack trace:\n#0 /tmp/tmphagxudto.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphagxudto.php\
    \ on line 22\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [$max];\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $max = max($max, $numbers[$i]);\n    $result[] = $max;\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5s_g477m.php:19\n\
    Stack trace:\n#0 /tmp/tmp5s_g477m.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5s_g477m.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = [];\n  $max_so_far = -INF;\n  foreach ($numbers as $number) {\n\
    \    $max_so_far = max($max_so_far, $number);\n    $max[] = $max_so_far;\n  }\n\
    \  return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max) {\n\
    \            $max = $numbers[$i];\n        }\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(rolling_max($numbers));\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zls2bry.php:24\n\
    Stack trace:\n#0 /tmp/tmp7zls2bry.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7zls2bry.php\
    \ on line 24\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphagxudto.php:22\n\
    Stack trace:\n#0 /tmp/tmphagxudto.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphagxudto.php\
    \ on line 22\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\n$numbers\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result = rolling_max($numbers);\nprint_r($result);\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n  $max = $numbers[0];\n  $result = [];\n  foreach ($numbers as $number) {\n\
    \    if ($number > $max) {\n      $max = $number;\n    }\n    $result[] = $max;\n\
    \  }\n  return $result;\n}\n\nprint_r(rolling_max([1, 2, 3, 4, 5]));\nprint_r(rolling_max([5,\
    \ 4, 3, 2, 1]));\nprint_r(rolling_max([1, 5, 2, 4, 3]));\nprint_r(rolling_max([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nprint_r(rolling_max([10, 9, 8, 7, 6, 5, 4, 3,\
    \ 2, 1]));\nprint_r(rolling_max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5,\
    \ 4, 3, 2, 1]));\nprint_r(rolling_max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8,\
    \ 7, 6, 5, 4, 3, 2, 1]));\nprint_r(rolling_max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n)\nArray\n(\n    [0] => 5\n    [1] => 5\n    [2] => 5\n    [3] => 5\n\
    \    [4] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 5\n    [2] => 5\n    [3]\
    \ => 5\n    [4] => 5\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n\
    \    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8]\
    \ => 9\n    [9] => 10\n)\nArray\n(\n    [0] => 10\n    [1] => 10\n    [2] => 10\n\
    \    [3] => 10\n    [4] => 10\n    [5] => 10\n    [6] => 10\n    [7] => 10\n \
    \   [8] => 10\n    [9] => 10\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2]\
    \ => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n\
    \    [8] => 9\n    [9] => 10\n    [10] => 10\n    [11] => 10\n    [12] => 10\n\
    \    [13] => 10\n    [14] => 10\n    [15] => 10\n    [16] => 10\n    [17] => 10\n\
    \    [18] => 10\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3]\
    \ => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n\
    \    [9] => 10\n    [10] => 10\n    [11] => 10\n    [12] => 10\n    [13] => 10\n\
    \    [14] => 10\n    [15] => 10\n    [16] => 10\n    [17] => 10\n    [18] => 10\n\
    \    [19] => 10\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3]\
    \ => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n\
    \    [9] => 10\n    [10] => 10\n    [11] => 10\n    [12] => 10\n    [13] => 10\n\
    \    [14] => 10\n    [15] => 10\n    [16] => 10\n    [17] => 10\n    [18] => 10\n\
    \    [19] => 10\n    [20] => 10\n    [21] => 10\n    [22] => 10\n    [23] => 10\n\
    \    [24] => 10\n    [25] => 10\n    [26] => 10\n    [27] => 10\n    [28] => 10\n\
    )\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [$max];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0ceobz.php:19\n\
    Stack trace:\n#0 /tmp/tmplg0ceobz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplg0ceobz.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = array();\n    $max = $numbers[0];\n    $result[] = $max;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max)\
    \ {\n            $max = $numbers[$i];\n        }\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10);\n$result = rolling_max($numbers);\nprint_r($result);\n\n$numbers = array(10,\
    \ 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$result = rolling_max($numbers);\nprint_r($result);\n\
    \n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n\
    $result = rolling_max($numbers);\nprint_r($result);\n\n$numbers = array(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = rolling_max($numbers);\n\
    print_r($result);\n\n$numbers = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8,\
    \ 7, 6, 5, 4, 3, 2, 1);\n$result = rolling_max($numbers);\nprint_r($result);\n\
    \n$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1);\n$result = rolling_max($numbers);\nprint_r($result);\n\n$numbers = array(10,\
    \ 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = rolling_max($numbers);\n\
    print\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5pk_kk02.php on line 44

    '
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($max === null || $number > $max) {\n            $max = $number;\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $result = [];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max_so_far = $numbers[0];\n    $max_list = [$max_so_far];\n    for ($i\
    \ = 1; $i < count($numbers); $i++) {\n        $max_so_far = max($max_so_far, $numbers[$i]);\n\
    \        $max_list[] = $max_so_far;\n    }\n    return $max_list;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1zv5w66.php:19\n\
    Stack trace:\n#0 /tmp/tmpz1zv5w66.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpz1zv5w66.php\
    \ on line 19\n"
  timestamp: 1659730603
- exit_code: 0
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730603
- exit_code: 255
  program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\nfunction rolling_max($numbers)\
    \ {\n    $max = array();\n    $max[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9z7whg92.php:18\n\
    Stack trace:\n#0 /tmp/tmp9z7whg92.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9z7whg92.php\
    \ on line 18\n"
  timestamp: 1659730603

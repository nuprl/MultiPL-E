name: HumanEval_42_incr_list
language: php
prompt: "<?php\n// Return list with elements incremented by 1.\nfunction incr_list($l)\
  \ {\n"
tests: "function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
  \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["  $l2 = array();\n  foreach ($l as $e) {\n    $l2[] = $e + 1;\n  }\n\
    \  return $l2;\n}\n", "    $result = array();\n    foreach ($l as $e) {\n    \
    \    $result[] = $e + 1;\n    }\n    return $result;\n}\n", "\t$r = array();\n\
    \tforeach ($l as $e) {\n\t\t$r[] = $e + 1;\n\t}\n\treturn $r;\n}\n", "  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n", "  $result\
    \ = array();\n  foreach ($l as $e) {\n    $result[] = $e + 1;\n  }\n  return $result;\n\
    }\n", "    $r = array();\n    foreach ($l as $v) {\n        $r[] = $v + 1;\n \
    \   }\n    return $r;\n}\n", "  $r = array();\n  foreach ($l as $v) {\n    $r[]\
    \ = $v + 1;\n  }\n  return $r;\n}\n", "  $r = array();\n  foreach ($l as $v) {\n\
    \    $r[] = $v + 1;\n  }\n  return $r;\n}\n", "    $r = array();\n    foreach\
    \ ($l as $e) {\n        $r[] = $e + 1;\n    }\n    return $r;\n}\n", "  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n", "  return\
    \ array_map(function($x) { return $x + 1; }, $l);\n}\n", "\t$l2 = array();\n\t\
    foreach ($l as $e) {\n\t\t$l2[] = $e + 1;\n\t}\n\treturn $l2;\n}\n", "    $result\
    \ = array();\n    foreach ($l as $e) {\n        $result[] = $e + 1;\n    }\n \
    \   return $result;\n}\n", "  $ret = array();\n  foreach ($l as $e) {\n    $ret[]\
    \ = $e + 1;\n  }\n  return $ret;\n}\n", "    $r = [];\n    foreach ($l as $e)\
    \ {\n        $r[] = $e + 1;\n    }\n    return $r;\n}\n", "  return array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\n", "    $r = array();\n    foreach ($l as $v) {\n\
    \        $r[] = $v + 1;\n    }\n    return $r;\n}\n", "  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n", "  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n", "  $r =\
    \ array();\n  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

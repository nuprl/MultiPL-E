language: php
name: HumanEval_70_strange_sort_list
results:
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpzflo9d31.php
    on line 51

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $lst_len = count($lst);\n    $lst_len_half = floor($lst_len\
    \ / 2);\n    $lst_len_half_plus = $lst_len_half + 1;\n    $lst_len_half_minus\
    \ = $lst_len_half - 1;\n    $lst_len_half_plus_minus = $lst_len_half_plus - 1;\n\
    \    $lst_len_half_minus_plus = $lst_len_half_minus + 1;\n    $lst_len_half_plus_minus_plus\
    \ = $lst_len_half_plus_minus + 1;\n    $lst_len_half_minus_plus_minus = $lst_len_half_minus_plus\
    \ - 1;\n    $lst_len_half_plus_minus_plus_minus = $lst_len_half_plus_minus_plus\
    \ - 1;\n    $lst_len_half_minus_plus_minus_plus = $lst_len_half_minus_plus_minus\
    \ + 1;\n    $lst_len_half_plus_minus_plus_minus_plus = $lst_len_half_plus_minus_plus_minus\
    \ + 1;\n    $lst_len_half_minus_plus_minus_plus_minus = $lst_len_half_minus_plus_minus_plus\
    \ - 1;\n    $lst_len_half_plus_minus_plus_minus_plus_minus = $lst_len_half_plus_minus_plus_minus_plus\
    \ - 1;\n    $lst_len_half_minus_plus_minus_plus_minus_plus = $lst_len_half_minus_plus_minus_plus_minus\
    \ + 1;\n    $lst_len_half_plus_minus_plus_minus_plus_minus_plus = $lst_len_half_plus_minus_plus_minus_plus_minus\
    \ + 1;\n    $lst_len_half_minus_plus_minus_plus_minus_plus_minus = $lst_len_half_minus_plus_minus_plus_minus_plus\
    \ -\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpcbwlks_n.php on line 24

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $lst = array_unique($lst);\n    sort($lst);\n    $len\
    \ = count($lst);\n    $i = 0;\n    while ($i < $len) {\n        $res[] = $lst[$i];\n\
    \        $i++;\n        if ($i < $len) {\n            $res[] = $lst[$len - $i];\n\
    \            $i++;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8v2wekd9.php:28\n\
    Stack trace:\n#0 /tmp/tmp8v2wekd9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8v2wekd9.php\
    \ on line 28\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmp_lm3_iis.php
    on line 47

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while(count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nvar_dump(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nvar_dump(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nvar_dump(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nvar_dump(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmp58hnxdvg.php
    on line 47

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(strange_sort_list($lst));\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 9\n   \
    \ [4] => 3\n    [5] => 8\n    [6] => 4\n    [7] => 7\n    [8] => 5\n    [9] =>\
    \ 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapb0ljn9.php:39\n\
    Stack trace:\n#0 /tmp/tmpapb0ljn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpapb0ljn9.php\
    \ on line 39\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, $result);\n    $lst = array_values($lst);\n\
    \    if (count($lst) > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw3butcdi.php:30\n\
    Stack trace:\n#0 /tmp/tmpw3butcdi.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpw3butcdi.php\
    \ on line 30\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $min = min($lst);\n    $max = max($lst);\n    $res = [];\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $res[]\
    \ = min($lst);\n            $lst = array_diff($lst, [min($lst)]);\n        } else\
    \ {\n            $res[] = max($lst);\n            $lst = array_diff($lst, [max($lst)]);\n\
    \        }\n        $i++;\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66xhsfw8.php:33\n\
    Stack trace:\n#0 /tmp/tmp66xhsfw8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp66xhsfw8.php\
    \ on line 33\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $res = [];\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $res[]\
    \ = array_shift($lst);\n        } else {\n            $res[] = array_pop($lst);\n\
    \        }\n        $i++;\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgn8eo8w.php:31\n\
    Stack trace:\n#0 /tmp/tmpdgn8eo8w.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdgn8eo8w.php\
    \ on line 31\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $res = [];\n    $i =\
    \ 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $res[] = $lst[$j];\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pnckh3c.php:32\n\
    Stack trace:\n#0 /tmp/tmp8pnckh3c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8pnckh3c.php\
    \ on line 32\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $result = [];\n    $i\
    \ = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        if ($i == $j)\
    \ {\n            $result[] = $lst[$i];\n            break;\n        }\n      \
    \  $result[] = $lst[$i];\n        $result[] = $lst[$j];\n        $i++;\n     \
    \   $j--;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(strange_sort_list($lst));\n\n$lst =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 9\n   \
    \ [4] => 3\n    [5] => 8\n    [6] => 4\n    [7] => 7\n    [8] => 5\n    [9] =>\
    \ 6\n)\nArray\n(\n    [0] => 1\n    [1] => 11\n    [2] => 2\n    [3] => 10\n \
    \   [4] => 3\n    [5] => 9\n    [6] => 4\n    [7] => 8\n    [8] => 5\n    [9]\
    \ => 7\n    [10] => 6\n)\nArray\n(\n    [0] => 1\n    [1] => 12\n    [2] => 2\n\
    \    [3] => 11\n    [4] => 3\n    [5] => 10\n    [6] => 4\n    [7] => 9\n    [8]\
    \ => 5\n    [9] => 8\n    [10] => 6\n    [11] => 7\n)\nArray\n(\n    [0] => 1\n\
    \    [1] => 13\n    [2] => 2\n    [3] => 12\n    [4] => 3\n    [5] => 11\n   \
    \ [6] => 4\n    [7] => 10\n    [8] => 5\n    [9] => 9\n    [10] => 6\n    [11]\
    \ => 8\n    [12] => 7\n)\nArray\n(\n    [0] => 1\n    [1] => 14\n    [2] => 2\n\
    \    [3] => 13\n    [4] => 3\n    [5] => 12\n    [6] => 4\n    [7] => 11\n   \
    \ [8] => 5\n    [9] => 10\n    [10] => 6\n    [11] => 9\n    [12] => 7\n    [13]\
    \ => 8\n)\nArray\n(\n    [0] => 1\n    [1] => 15\n    [2] => 2\n    [3] => 14\n\
    \    [4] => 3\n    [5] => 13\n    [6] => 4\n    [7] => 12\n    [8] => 5\n    [9]\
    \ => 11\n    [10] => 6\n    [11] => 10\n    [12] => 7\n    [13] => 9\n    [14]\
    \ => 8\n)\nArray\n(\n    [0] => 1\n    [1] => 16\n    [2] => 2\n    [3] => 15\n\
    \    [4] => 3\n    [5] => 14\n    [6] => 4\n    [7] => 13\n    [8] => 5\n    [9]\
    \ => 12\n    [10] => 6\n    [11] => 11\n    [12] => 7\n    [13] => 10\n    [14]\
    \ => 8\n    [15] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk48d4kjm.php:57\n\
    Stack trace:\n#0 /tmp/tmpk48d4kjm.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpk48d4kjm.php\
    \ on line 57\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  \
    \  $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $res[] = $min;\n        $res[] = $max;\n \
    \       $lst = array_diff($lst, [$min, $max]);\n        $lst = array_values($lst);\n\
    \    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3738ie1g.php:31\n\
    Stack trace:\n#0 /tmp/tmp3738ie1g.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3738ie1g.php\
    \ on line 31\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  \
    \  while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptlbbamt3.php:29\n\
    Stack trace:\n#0 /tmp/tmptlbbamt3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptlbbamt3.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $res = [];\n    $i =\
    \ 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $res[] = $lst[$j];\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pnckh3c.php:32\n\
    Stack trace:\n#0 /tmp/tmp8pnckh3c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8pnckh3c.php\
    \ on line 32\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  \
    \  while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptlbbamt3.php:29\n\
    Stack trace:\n#0 /tmp/tmptlbbamt3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptlbbamt3.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\necho implode(', ', strange_sort_list($lst)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 10, 2, 9, 3, 8, 4, 7, 5, 6\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpvz4f2_vh.php:31\nStack trace:\n#0 /tmp/tmpvz4f2_vh.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvz4f2_vh.php on line 31\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $sorted = [];\n    $min = min($lst);\n    $max = max($lst);\n    $sorted[]\
    \ = $min;\n    $sorted[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $sorted[] = $min;\n        $sorted[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4m7xg8_.php:29\n\
    Stack trace:\n#0 /tmp/tmps4m7xg8_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps4m7xg8_.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, $result);\n    $lst = array_values($lst);\n\
    \    if (count($lst) > 0) {\n        $result = array_merge($result, strange_sort_list($lst));\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw3butcdi.php:30\n\
    Stack trace:\n#0 /tmp/tmpw3butcdi.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpw3butcdi.php\
    \ on line 30\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_values(array_diff($lst, $result));\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $lst[$min_index] = $max;\n        $lst[$max_index] = $min;\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_values(array_diff($lst,\
    \ $result));\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvrc517pn.php:37\n\
    Stack trace:\n#0 /tmp/tmpvrc517pn.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpvrc517pn.php\
    \ on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, $result);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $lst[$min_index] = $max;\n        $lst[$max_index] = $min;\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $lst = array_diff($lst, $result);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_s8j88i.php:37\n\
    Stack trace:\n#0 /tmp/tmp7_s8j88i.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7_s8j88i.php\
    \ on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(strange_sort_list($lst));\n\n\
    $lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmpfzuq5o7t.php
    on line 45

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    while\
    \ (count($lst) > 0) {\n        $result[] = $min;\n        $lst = array_diff($lst,\
    \ [$min]);\n        if (count($lst) > 0) {\n            $result[] = $max;\n  \
    \          $lst = array_diff($lst, [$max]);\n        }\n        $min = min($lst);\n\
    \        $max = max($lst);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: min(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmpm37ry42g.php:17\nStack trace:\n#0 /tmp/tmpm37ry42g.php(17):\
    \ min(Array)\n#1 /tmp/tmpm37ry42g.php(24): strange_sort_list(Array)\n#2 /tmp/tmpm37ry42g.php(28):\
    \ candidate(Array)\n#3 /tmp/tmpm37ry42g.php(39): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpm37ry42g.php on line 17\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $sorted = [];\n    $min = min($lst);\n    $max = max($lst);\n    $sorted[]\
    \ = $min;\n    $sorted[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $sorted[] = $min;\n        $sorted[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4m7xg8_.php:29\n\
    Stack trace:\n#0 /tmp/tmps4m7xg8_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps4m7xg8_.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$lst = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12];\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$lst = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15];\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16];\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmpcgg9fvwx.php
    on line 39

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    if (count($lst)\
    \ == 0) {\n        return $result;\n    }\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpbzqlv1__.php
    on line 53

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $lst = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_values($lst);\n    $min = min($lst\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpe3ai5yqr.php
    on line 51

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $index\
    \ = 0;\n    while ($index < count($lst)) {\n        if ($index % 2 == 0) {\n \
    \           $result[] = $min;\n            $lst = array_diff($lst, [$min]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $lst = array_diff($lst, [$max]);\n            $max = max($lst);\n\
    \        }\n        $index++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppcjqt24o.php:31\n\
    Stack trace:\n#0 /tmp/tmppcjqt24o.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppcjqt24o.php\
    \ on line 31\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = min($lst);\n            $key = array_search(min($lst), $lst);\n          \
    \  unset($lst[$key]);\n        } else {\n            $result[] = max($lst);\n\
    \            $key = array_search(max($lst), $lst);\n            unset($lst[$key]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: min(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmpohgwwhgy.php:7\nStack trace:\n#0 /tmp/tmpohgwwhgy.php(7):\
    \ min(Array)\n#1 /tmp/tmpohgwwhgy.php(27): strange_sort_list(Array)\n#2 /tmp/tmpohgwwhgy.php(36):\
    \ candidate(Array)\n#3 /tmp/tmpohgwwhgy.php(42): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpohgwwhgy.php on line 7\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $sorted = [];\n    $min = min($lst);\n    $max = max($lst);\n    $sorted[]\
    \ = $min;\n    $sorted[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $sorted[] = $min;\n        $sorted[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4m7xg8_.php:29\n\
    Stack trace:\n#0 /tmp/tmps4m7xg8_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps4m7xg8_.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: max(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmp8xyi7g8h.php:19\nStack trace:\n#0 /tmp/tmp8xyi7g8h.php(19):\
    \ max(Array)\n#1 /tmp/tmp8xyi7g8h.php(27): strange_sort_list(Array)\n#2 /tmp/tmp8xyi7g8h.php(31):\
    \ candidate(Array)\n#3 /tmp/tmp8xyi7g8h.php(42): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmp8xyi7g8h.php on line 19\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i != $j)\
    \ {\n            $result[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    sort($lst);\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        $i++;\n      \
    \  if ($i <= $j) {\n            $result[] = $lst[$j];\n            $j--;\n   \
    \     }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i != $j)\
    \ {\n            $result[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $min_index = array_search($min, $lst);\n\
    \    $max_index = array_search($max, $lst);\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $i = 0;\n   \
    \ while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $min = min($lst);\n\
    \            $result[] = $min;\n            $min_index = array_search($min, $lst);\n\
    \            unset($lst[$min_index]);\n            $lst = array_values($lst);\n\
    \        } else {\n            $max = max($lst);\n            $result[] = $max;\n\
    \            $max_index = array_search($max, $lst);\n            unset($lst[$max_index]);\n\
    \            $lst = array_values($lst);\n        }\n        $i++;\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4_5ui1v.php:46\n\
    Stack trace:\n#0 /tmp/tmpy4_5ui1v.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpy4_5ui1v.php\
    \ on line 46\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i != $j)\
    \ {\n            $result[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $count\
    \ = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[] = $min;\n            $min = min(array_diff($lst,\
    \ $result));\n        } else {\n            $result[] = $max;\n            $max\
    \ = max(array_diff($lst, $result));\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: max(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmppeh_c7k3.php:18\nStack trace:\n#0 /tmp/tmppeh_c7k3.php(18):\
    \ max(Array)\n#1 /tmp/tmppeh_c7k3.php(26): strange_sort_list(Array)\n#2 /tmp/tmppeh_c7k3.php(30):\
    \ candidate(Array)\n#3 /tmp/tmppeh_c7k3.php(41): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmppeh_c7k3.php on line 18\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\necho implode(', ', strange_sort_list($lst));\necho \"\\n\";\n\n\
    $lst = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\necho implode(', ', strange_sort_list($lst));\n\
    echo \"\\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20];\necho implode(', ', strange_sort_list($lst));\necho \"\\n\"\
    ;\n\n$lst = [20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3,\
    \ 2, 1];\necho implode(', ', strange_sort_list($lst));\necho \"\\n\";\n\n$lst\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30];\necho implode(', ', strange_sort_list($lst));\n\
    echo \"\\n\";\n\n$lst = [30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17,\
    \ 16, 15, 14, 13, 12, 11\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmpbczzliey.php
    on line 44

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_values(array_diff($lst, $result));\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $lst[$min_index] = $max;\n        $lst[$max_index] = $min;\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_values(array_diff($lst,\
    \ $result));\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvrc517pn.php:37\n\
    Stack trace:\n#0 /tmp/tmpvrc517pn.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpvrc517pn.php\
    \ on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    sort($lst);\n    $max = count($lst) - 1;\n    $min\
    \ = 0;\n    while ($min <= $max) {\n        $result[] = $lst[$max];\n        $max--;\n\
    \        if ($min <= $max) {\n            $result[] = $lst[$min];\n          \
    \  $min++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ljfz5qu.php:27\n\
    Stack trace:\n#0 /tmp/tmp3ljfz5qu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3ljfz5qu.php\
    \ on line 27\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $sorted = [];\n    $min = min($lst);\n    $max = max($lst);\n    $sorted[]\
    \ = $min;\n    $sorted[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $sorted[] = $min;\n        $sorted[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4m7xg8_.php:29\n\
    Stack trace:\n#0 /tmp/tmps4m7xg8_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps4m7xg8_.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $result = [];\n    $i\
    \ = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] =\
    \ $lst[$i];\n        if ($i != $j) {\n            $result[] = $lst[$j];\n    \
    \    }\n        $i++;\n        $j--;\n    }\n    return $result;\n}\n\n$lst =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(strange_sort_list($lst));\n\n$lst\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10];\nprint_r(strange_sort_list($lst));\n\n\
    $lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10, 10];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10, 10, 10];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10, 10, 10, 10];\nprint_r(strange_sort_list($lst));\n\
    \n$\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpxfbtne94.php on line 48

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $lst_length =\
    \ count($lst);\n    for ($i = 0; $i < $lst_length; $i++) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $min_index = array_search($min, $lst);\n \
    \       $max_index = array_search($max, $lst);\n        $result[] = $min;\n  \
    \      $result[] = $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: min(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmprrx1awzo.php:19\nStack trace:\n#0 /tmp/tmprrx1awzo.php(19):\
    \ min(Array)\n#1 /tmp/tmprrx1awzo.php(33): strange_sort_list(Array)\n#2 /tmp/tmprrx1awzo.php(37):\
    \ candidate(Array)\n#3 /tmp/tmprrx1awzo.php(48): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmprrx1awzo.php on line 19\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  \
    \  while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\necho implode(', ', strange_sort_list($lst)) . PHP_EOL;\n$lst = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\necho implode(', ', strange_sort_list($lst))\
    \ . PHP_EOL;\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\necho implode(',\
    \ ', strange_sort_list($lst)) . PHP_EOL;\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13];\necho implode(', ', strange_sort_list($lst)) . PHP_EOL;\n$lst =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\necho implode(', ', strange_sort_list($lst))\
    \ . PHP_EOL;\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\necho\
    \ implode(', ', strange_sort_list($lst)) . PHP_EOL;\n$lst = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\necho implode(', ', strange_\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpzggx6z3l.php
    on line 37

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $res[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n\
    \        } else {\n            $res[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $res;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: max(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmpgevsr4rw.php:19\nStack trace:\n#0 /tmp/tmpgevsr4rw.php(19):\
    \ max(Array)\n#1 /tmp/tmpgevsr4rw.php(27): strange_sort_list(Array)\n#2 /tmp/tmpgevsr4rw.php(31):\
    \ candidate(Array)\n#3 /tmp/tmpgevsr4rw.php(42): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpgevsr4rw.php on line 19\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n  $min_index =\
    \ array_search($min, $lst);\n  $max_index = array_search($max, $lst);\n  $result[]\
    \ = $min;\n  $result[] = $max;\n  $lst[$min_index] = null;\n  $lst[$max_index]\
    \ = null;\n  $lst = array_filter($lst);\n  while (count($lst) > 0) {\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min, $lst);\n\
    \    $max_index = array_search($max, $lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst[$min_index] = null;\n    $lst[$max_index] = null;\n    $lst\
    \ = array_filter($lst);\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpanir5az1.php:37\n\
    Stack trace:\n#0 /tmp/tmpanir5az1.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpanir5az1.php\
    \ on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $max = max($lst);\n        }\n        $i++;\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpssgpvlqz.php on line 13

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n\
    \        $lst = array_diff($lst, [$min, $max]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwny6c94h.php:24\n\
    Stack trace:\n#0 /tmp/tmpwny6c94h.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwny6c94h.php\
    \ on line 24\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9u3vdqdk.php:36\n\
    Stack trace:\n#0 /tmp/tmp9u3vdqdk.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9u3vdqdk.php\
    \ on line 36\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  \
    \  while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\n$res = strange_sort_list($lst);\nprint_r($res);\n\n$lst = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11];\n$res = strange_sort_list($lst);\nprint_r($res);\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$res = strange_sort_list($lst);\n\
    print_r($res);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$res =\
    \ strange_sort_list($lst);\nprint_r($res);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14];\n$res = strange_sort_list($lst);\nprint_r($res);\n\n\
    $lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$res = strange_sort_list($lst);\n\
    print_r($res);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n\
    $res = strange_sort_list($lst);\nprint\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpeh2a6x3k.php on line 50

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    sort($lst);\n    $min = 0;\n    $max = count($lst)\
    \ - 1;\n    while ($min <= $max) {\n        $result[] = $lst[$min];\n        $min++;\n\
    \        if ($min <= $max) {\n            $result[] = $lst[$max];\n          \
    \  $max--;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpved8fxr0.php:37\n\
    Stack trace:\n#0 /tmp/tmpved8fxr0.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpved8fxr0.php\
    \ on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $result = [];\n    $i\
    \ = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] =\
    \ $lst[$i];\n        if ($i != $j) {\n            $result[] = $lst[$j];\n    \
    \    }\n        $i++;\n        $j--;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpch37pl1l.php:32\n\
    Stack trace:\n#0 /tmp/tmpch37pl1l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpch37pl1l.php\
    \ on line 32\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    sort($lst);\n    $count = count($lst);\n    $i = 0;\n\
    \    while ($i < $count) {\n        $result[] = $lst[$i];\n        if ($i + 1\
    \ < $count) {\n            $result[] = $lst[$count - $i - 1];\n        }\n   \
    \     $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1maanlgm.php:26\n\
    Stack trace:\n#0 /tmp/tmp1maanlgm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1maanlgm.php\
    \ on line 26\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  \
    \  while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptlbbamt3.php:29\n\
    Stack trace:\n#0 /tmp/tmptlbbamt3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptlbbamt3.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $lst_length =\
    \ count($lst);\n    $i = 0;\n    while ($i < $lst_length) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $min_index = array_search($min, $lst);\n \
    \       $max_index = array_search($max, $lst);\n        $result[] = $min;\n  \
    \      $result[] = $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \        $lst = array_values($lst);\n        $lst_length = count($lst);\n    \
    \    $i += 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ec9qke0.php:41\n\
    Stack trace:\n#0 /tmp/tmp4ec9qke0.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp4ec9qke0.php\
    \ on line 41\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $len = count($lst);\n\
    \    $result = [];\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[] = array_shift($lst);\n        } else {\n       \
    \     $result[] = array_pop($lst);\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgly2_2_.php:30\n\
    Stack trace:\n#0 /tmp/tmpsgly2_2_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsgly2_2_.php\
    \ on line 30\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\nprint_r(strange_sort_list($lst));\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 9\n   \
    \ [4] => 3\n    [5] => 8\n    [6] => 4\n    [7] => 7\n    [8] => 5\n    [9] =>\
    \ 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiydg9nz8.php:31\n\
    Stack trace:\n#0 /tmp/tmpiydg9nz8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpiydg9nz8.php\
    \ on line 31\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $lst_size = count($lst);\n    $min_index = 0;\n  \
    \  $max_index = 0;\n    for ($i = 0; $i < $lst_size; $i++) {\n        if ($i %\
    \ 2 == 0) {\n            $min_index = array_search(min($lst), $lst);\n       \
    \     $result[] = $lst[$min_index];\n            unset($lst[$min_index]);\n  \
    \      } else {\n            $max_index = array_search(max($lst), $lst);\n   \
    \         $result[] = $lst[$max_index];\n            unset($lst[$max_index]);\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $res = [];\n    $i =\
    \ 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $res[] = $lst[$j];\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pnckh3c.php:32\n\
    Stack trace:\n#0 /tmp/tmp8pnckh3c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8pnckh3c.php\
    \ on line 32\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  \
    \  while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(strange_sort_list($lst));\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 9\n   \
    \ [4] => 3\n    [5] => 8\n    [6] => 4\n    [7] => 7\n    [8] => 5\n    [9] =>\
    \ 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprfqevp0d.php:32\n\
    Stack trace:\n#0 /tmp/tmprfqevp0d.php(42): test()\n#1 {main}\n  thrown in /tmp/tmprfqevp0d.php\
    \ on line 32\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $lst_len = count($lst);\n    $lst_len_half = floor($lst_len\
    \ / 2);\n    $lst_len_half_plus_one = $lst_len_half + 1;\n    $lst_len_half_minus_one\
    \ = $lst_len_half - 1;\n    $lst_len_half_plus_one_times_two = $lst_len_half_plus_one\
    \ * 2;\n    $lst_len_half_minus_one_times_two = $lst_len_half_minus_one * 2;\n\
    \    $lst_len_half_plus_one_times_two_minus_one = $lst_len_half_plus_one_times_two\
    \ - 1;\n    $lst_len_half_minus_one_times_two_minus_one = $lst_len_half_minus_one_times_two\
    \ - 1;\n    $lst_len_half_plus_one_times_two_minus_two = $lst_len_half_plus_one_times_two\
    \ - 2;\n    $lst_len_half_minus_one_times_two_minus_two = $lst_len_half_minus_one_times_two\
    \ - 2;\n    $lst_len_half_plus_one_times_two_minus_three = $lst_len_half_plus_one_times_two\
    \ - 3;\n    $lst_len_half_minus_one_times_two_minus_three = $lst_len_half_minus_one_times_two\
    \ - 3;\n    $lst_len_half_plus_one_times_two_minus_four = $lst_len_half_plus_one_times_two\
    \ - 4;\n    $lst_len_half_minus_one_times_two_minus_four = $lst_len_half_minus_one_times_two\
    \ - 4;\n    $lst_len_half_plus_one_times_two_minus_five = $lst_len_half_plus_one_times_two\
    \ - 5;\n   \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 6 in /tmp/tmp32c1ihaa.php on line 40

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  \
    \  while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(strange_sort_list($lst));\n\n$lst\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmpkznzyq3a.php
    on line 45

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = min($lst);\n            $lst = array_diff($lst, [min($lst)]);\n        } else\
    \ {\n            $result[] = max($lst);\n            $lst = array_diff($lst, [max($lst)]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_o53sc_1.php:33\n\
    Stack trace:\n#0 /tmp/tmp_o53sc_1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_o53sc_1.php\
    \ on line 33\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    sort($lst);\n    $size = count($lst);\n    $i = 0;\n\
    \    $j = $size - 1;\n    while ($i <= $j) {\n        $result[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $result[] = $lst[$j];\n        }\n     \
    \   $i++;\n        $j--;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, [$min, $max]);\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $l\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpwrzj3749.php
    on line 53

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $result[] = $min;\n        $result[]\
    \ = $max;\n        $lst = array_diff($lst, [$min, $max]);\n        $lst = array_values($lst);\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result\
    \ = strange_sort_list($lst);\nprint_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11];\n$result = strange_sort_list($lst);\nprint_r($result);\n\n$lst\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$result\
    \ = strange_sort_list($lst);\nprint_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14];\n$result = strange_sort_list($lst);\nprint_r($result);\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmpyp54jta6.php
    on line 50

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $result[] = $min;\n        $result[]\
    \ = $max;\n        $lst = array_diff($lst, [$min, $max]);\n        $lst = array_values($lst);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwxhc2l6.php:31\n\
    Stack trace:\n#0 /tmp/tmpnwxhc2l6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnwxhc2l6.php\
    \ on line 31\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxwik9w42.php:29\n\
    Stack trace:\n#0 /tmp/tmpxwik9w42.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxwik9w42.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\necho implode(', ', strange_sort_list($lst));\necho \"\\n\";\n\n\
    $lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\necho implode(', ', strange_sort_list($lst));\n\
    echo \"\\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\necho implode(',\
    \ ', strange_sort_list($lst));\necho \"\\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13];\necho implode(', ', strange_sort_list($lst));\necho \"\
    \\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\necho implode(',\
    \ ', strange_sort_list($lst));\necho \"\\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15];\necho implode(', ', strange_sort_list($lst));\n\
    echo \"\\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n\
    echo implode(', ', strange_\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpek_s28ig.php
    on line 49

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $res = [];\n    $i =\
    \ 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $res[] = $lst[$j];\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pnckh3c.php:32\n\
    Stack trace:\n#0 /tmp/tmp8pnckh3c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8pnckh3c.php\
    \ on line 32\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst =\
    \ array_diff($lst, [$min, $max]);\n    $res[] = $min;\n    $res[] = $max;\n  \
    \  while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $res[] = $min;\n    \
    \    $res[] = $max;\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujog2dcv.php:29\n\
    Stack trace:\n#0 /tmp/tmpujog2dcv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpujog2dcv.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\n$result = strange_sort_list($lst);\nprint_r($result);\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$result\
    \ = strange_sort_list($lst);\nprint_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13];\n$result = strange_sort_list($lst);\nprint_r($result);\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\
    $result = strange_sort_list($lst);\nprint_r($result);\n\n$lst = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$result = strange_sort_list($lst);\n\
    print\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpujw_1nc6.php on line 50

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpved8fxr0.php:37\n\
    Stack trace:\n#0 /tmp/tmpved8fxr0.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpved8fxr0.php\
    \ on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: max(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmp8xyi7g8h.php:19\nStack trace:\n#0 /tmp/tmp8xyi7g8h.php(19):\
    \ max(Array)\n#1 /tmp/tmp8xyi7g8h.php(27): strange_sort_list(Array)\n#2 /tmp/tmp8xyi7g8h.php(31):\
    \ candidate(Array)\n#3 /tmp/tmp8xyi7g8h.php(42): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmp8xyi7g8h.php on line 19\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $lst_len = count($lst);\n\
    \    for ($i = 0; $i < $lst_len; $i++) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $min_index = array_search($min, $lst);\n        $max_index\
    \ = array_search($max, $lst);\n        $result[] = $min;\n        $result[] =\
    \ $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n\n$lst = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(strange_sort_list($lst));\n\n$lst = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(strange_sort_list($lst));\n\n$lst\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1,\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpdnmvdw4o.php on line 48

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    sort($lst);\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i < $j) {\n\
    \            $result[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst =\
    \ array_diff($lst, [$min, $max]);\n    $res[] = $min;\n    $res[] = $max;\n  \
    \  while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $res[] = $min;\n    \
    \    $res[] = $max;\n    }\n    return $res;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(strange_sort_list($lst));\n\n\
    $lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmpqohyk9sq.php
    on line 45

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, $result);\n    $lst = array_values($lst);\n\
    \    $lst_length = count($lst);\n    for ($i = 0; $i < $lst_length; $i++) {\n\
    \        $min = min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $lst[$min_index]\
    \ = $max;\n        $lst[$max_index] = $min;\n        $result[] = $min;\n     \
    \   $result[] = $max;\n        $lst = array_diff($lst, $result);\n        $lst\
    \ = array_values($lst);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: min(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmp3ojoamkk.php:20\nStack trace:\n#0 /tmp/tmp3ojoamkk.php(20):\
    \ min(Array)\n#1 /tmp/tmp3ojoamkk.php(35): strange_sort_list(Array)\n#2 /tmp/tmp3ojoamkk.php(39):\
    \ candidate(Array)\n#3 /tmp/tmp3ojoamkk.php(50): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmp3ojoamkk.php on line 20\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpved8fxr0.php:37\n\
    Stack trace:\n#0 /tmp/tmpved8fxr0.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpved8fxr0.php\
    \ on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = min($lst);\n            $lst = array_diff($lst, [min($lst)]);\n        } else\
    \ {\n            $result[] = max($lst);\n            $lst = array_diff($lst, [max($lst)]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1t8_dzqp.php:33\n\
    Stack trace:\n#0 /tmp/tmp1t8_dzqp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1t8_dzqp.php\
    \ on line 33\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $len = count($lst);\n    $i = 0;\n    while ($i <\
    \ $len) {\n        $min = min($lst);\n        $max = max($lst);\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $i += 2;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9];\nprint_r(strange_sort_list($lst));\n\n$lst = [9, 2, 4, 7, 3];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [12, 13, 14];\nprint_r(strange_sort_list($lst));\n\n$lst = [12, 13, 14,\
    \ 15];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(strange_sort_list($lst));\n\n$lst =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(str\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpni392ffj.php
    on line 50

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    $min_max\
    \ = 0;\n    $max_min = 1;\n    while (count($lst) > 0) {\n        if ($min_max\
    \ % 2 == 0) {\n            $result[] = $min;\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $min_max++;\n        $max_min++;\n    }\n    return $result;\n\
    }\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [2, 4, 6, 8, 10, 9, 7, 5, 3, 1];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [1, 3, 5, 7, 9, 8, 6, 4, 2, 10];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [10, 8, 6, 4, 2, 3, 5, 7, 9, 1];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [2, 4, 6, 8, 10, 9, 7, 5, 3, 1];\n$result = strange_sort_list($lst);\n\
    print\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpymj9tryx.php on line 57

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $res = [];\n    $i =\
    \ 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $res[] = $lst[$j];\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pnckh3c.php:32\n\
    Stack trace:\n#0 /tmp/tmp8pnckh3c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8pnckh3c.php\
    \ on line 32\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    sort($lst);\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i != $j)\
    \ {\n            $result[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [9, 8, 7, 6, 5, 4, 3, 2, 1];\nprint_r(strange_sort_list($lst));\n\n$lst\
    \ = [1, 3, 5, 7, 9, 8, 6, 4, 2];\nprint_r(strange_sort_list($lst));\n\n$lst =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(strange_sort_list($lst));\n\n$lst\
    \ = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\nprint_r(strange_sort_list($lst));\n\n$lst\
    \ = [1, 3, 5, 7, 9, 8, 6, 4, 2, 10];\nprint_r(strange_sort_list($lst));\n\n$lst\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(strange_sort_list($lst));\n\n\
    $lst = [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 3, 5, 7, 9, 8, 6, 4, 2, 10, 11];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmpi53_1k98.php
    on line 50

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    if (empty($lst)) return [];\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $res = [$min];\n    $lst = array_diff($lst, [$min]);\n    $lst = array_values($lst);\n\
    \    $i = 0;\n    while (!empty($lst)) {\n        if ($i % 2 == 0) {\n       \
    \     $max = max($lst);\n            $res[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $lst = array_values($lst);\n        } else {\n       \
    \     $min = min($lst);\n            $res[] = $min;\n            $lst = array_diff($lst,\
    \ [$min]);\n            $lst = array_values($lst);\n        }\n        $i++;\n\
    \    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1uhds8x.php:40\n\
    Stack trace:\n#0 /tmp/tmpx1uhds8x.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpx1uhds8x.php\
    \ on line 40\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $min = min($lst);\n    $max = max($lst);\n    $new_lst = [];\n    $new_lst[]\
    \ = $min;\n    $new_lst[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $new_lst[] = $min;\n        $new_lst[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $new_lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp072ih8ku.php:29\n\
    Stack trace:\n#0 /tmp/tmp072ih8ku.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp072ih8ku.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n    $min =\
    \ min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, [$min, $max]);\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $result[] = $min;\n    $result[]\
    \ = $max;\n    $l\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpwrzj3749.php
    on line 53

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $max = max($lst);\n        }\n        $i++;\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmpssgpvlqz.php on line 13

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $lst_len = count($lst);\n    $lst_copy = $lst;\n \
    \   $min_index = 0;\n    $max_index = 0;\n    for ($i = 0; $i < $lst_len; $i++)\
    \ {\n        $min_index = array_search(min($lst_copy), $lst_copy);\n        $max_index\
    \ = array_search(max($lst_copy), $lst_copy);\n        $result[] = $lst_copy[$min_index];\n\
    \        $result[] = $lst_copy[$max_index];\n        unset($lst_copy[$min_index]);\n\
    \        unset($lst_copy[$max_index]);\n        $lst_copy = array_values($lst_copy);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: min(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmp86abz8ys.php:13\nStack trace:\n#0 /tmp/tmp86abz8ys.php(13):\
    \ min(Array)\n#1 /tmp/tmp86abz8ys.php(25): strange_sort_list(Array)\n#2 /tmp/tmp86abz8ys.php(29):\
    \ candidate(Array)\n#3 /tmp/tmp86abz8ys.php(40): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmp86abz8ys.php on line 13\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $max = max($lst);\n        }\n        $i++;\n    }\n  \
    \  return $result;\n}\n\necho implode(', ', strange_sort_list([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9]));\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp8d7yeuay.php on line 13

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = min($lst);\n            $lst = array_diff($lst, [min($lst)]);\n        } else\
    \ {\n            $result[] = max($lst);\n            $lst = array_diff($lst, [max($lst)]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1t8_dzqp.php:33\n\
    Stack trace:\n#0 /tmp/tmp1t8_dzqp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1t8_dzqp.php\
    \ on line 33\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(strange_sort_list($lst));\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 9\n   \
    \ [4] => 3\n    [5] => 8\n    [6] => 4\n    [7] => 7\n    [8] => 5\n    [9] =>\
    \ 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5r5pqz9c.php:31\n\
    Stack trace:\n#0 /tmp/tmp5r5pqz9c.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5r5pqz9c.php\
    \ on line 31\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $min = min($lst);\n    $max = max($lst);\n    $result = [];\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = min($lst);\n            $key = array_search(min($lst), $lst);\n          \
    \  unset($lst[$key]);\n        } else {\n            $result[] = max($lst);\n\
    \            $key = array_search(max($lst), $lst);\n            unset($lst[$key]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: min(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmpohgwwhgy.php:7\nStack trace:\n#0 /tmp/tmpohgwwhgy.php(7):\
    \ min(Array)\n#1 /tmp/tmpohgwwhgy.php(27): strange_sort_list(Array)\n#2 /tmp/tmpohgwwhgy.php(36):\
    \ candidate(Array)\n#3 /tmp/tmpohgwwhgy.php(42): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpohgwwhgy.php on line 7\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i != $j)\
    \ {\n            $result[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(strange_sort_list($lst));\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 9\n    [2] => 2\n    [3] => 8\n    [4]\
    \ => 3\n    [5] => 7\n    [6] => 4\n    [7] => 6\n    [8] => 5\n)\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = min($lst);\n            $min = min($lst);\n            $lst = array_diff($lst,\
    \ [$min]);\n        } else {\n            $result[] = max($lst);\n           \
    \ $max = max($lst);\n            $lst = array_diff($lst, [$max]);\n        }\n\
    \        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7fi8ihsa.php:35\n\
    Stack trace:\n#0 /tmp/tmp7fi8ihsa.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7fi8ihsa.php\
    \ on line 35\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    sort($lst);\n    $res = [];\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $res[] = $lst[$i];\n        if ($i != $j) {\n\
    \            $res[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n   \
    \ }\n    return $res;\n}\n\necho implode(', ', strange_sort_list([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9]));\necho \"\\n\";\necho implode(', ', strange_sort_list([9, 8,\
    \ 7, 6, 5, 4, 3, 2, 1]));\necho \"\\n\";\necho implode(', ', strange_sort_list([1,\
    \ 3, 2, 4, 5, 7, 6, 8, 9]));\necho \"\\n\";\necho implode(', ', strange_sort_list([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]));\necho \"\\n\";\necho implode(', ', strange_sort_list([10,\
    \ 9, 8, 7, 6, 5, 4, 3, 2, 1]));\necho \"\\n\";\necho implode(', ', strange_sort_list([1,\
    \ 3, 2, 4, 5, 7, 6, 8, 9, 10]));\necho \"\\n\";\necho implode(', ', strange_sort_list([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\necho \"\\n\";\necho implode(', ', strange_sort_list([11,\
    \ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]));\necho \"\\n\";\necho implode(', ', strange_sort_list([1,\
    \ 3, 2, 4, 5, 7, 6, 8, 9, 10, 11]));\necho \"\\n\";\necho implode(', ', strange_sort_list([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\necho \"\\n\";\necho implode(', ', strange_sort_list([\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpdpei1i6u.php on line 43

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $max = max($lst);\n    $min = min($lst);\n    $lst\
    \ = array_diff($lst, [$max, $min]);\n    while (count($lst) > 0) {\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $max = max($lst);\n        $min\
    \ = min($lst);\n        $lst = array_diff($lst, [$max, $min]);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkvrbiovo.php:26\n\
    Stack trace:\n#0 /tmp/tmpkvrbiovo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkvrbiovo.php\
    \ on line 26\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min_max = [];\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    $min_max[] = $min;\n    $min_max[] = $max;\n    $result[] =\
    \ $min;\n    $result[] = $max;\n    $lst = array_diff($lst, $min_max);\n    $lst\
    \ = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n    $min_max\
    \ = [];\n    $min_max[] = $min;\n    $min_max[] = $max;\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, $min_max);\n    $lst = array_values($lst);\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $min_max = [];\n    $min_max[]\
    \ = $min;\n    $min_max[] = $max;\n    $result[] = $min;\n    $result[] = $max;\n\
    \    $lst = array_diff($lst, $min_max);\n    $lst = array_values($lst);\n    $min\
    \ = min($lst);\n    $max = max($lst);\n    $min_max = [];\n    $min_max[] = $min;\n\
    \    $min_max[] = $max;\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, $min_max);\n    $lst = array_values($lst);\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_max = [];\n    $min_max[] = $min;\n    $min_max[]\
    \ = $max;\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ $min_max);\n    $lst = array_values($lst);\n    $min = min($lst);\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 6 in /tmp/tmp841e4ivh.php on line 71

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpved8fxr0.php:37\n\
    Stack trace:\n#0 /tmp/tmpved8fxr0.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpved8fxr0.php\
    \ on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\nprint_r(strange_sort_list($lst));\n\n$lst = [10, 9, 8,\
    \ 7, 6, 5, 4, 3, 2, 1];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30];\nprint_r(strange_sort_list($lst));\n\n$lst = [30, 29, 28, 27, 26, 25,\
    \ 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4,\
    \ 3, 2, 1];\nprint_r(strange_sort\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpw49ibqvq.php
    on line 40

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $cnt = count($lst);\n    $i = 0;\n    while ($i < $cnt)\
    \ {\n        $min = min($lst);\n        $res[] = $min;\n        $lst = array_diff($lst,\
    \ [$min]);\n        if (count($lst) == 0) {\n            break;\n        }\n \
    \       $max = max($lst);\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$max]);\n        $i += 2;\n    }\n    return $res;\n}\n\n$lst = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9];\nprint_r(strange_sort_list($lst));\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 9\n    [2] => 2\n    [3] => 8\n    [4]\
    \ => 3\n    [5] => 7\n    [6] => 4\n    [7] => 6\n    [8] => 5\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmphwyvlxe3.php:36\nStack trace:\n\
    #0 /tmp/tmphwyvlxe3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphwyvlxe3.php\
    \ on line 36\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            unset($lst[array_search($min, $lst)]);\n            $min\
    \ = min($lst);\n        } else {\n            $result[] = $max;\n            unset($lst[array_search($max,\
    \ $lst)]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: max(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmp5h3_smax.php:19\nStack trace:\n#0 /tmp/tmp5h3_smax.php(19):\
    \ max(Array)\n#1 /tmp/tmp5h3_smax.php(27): strange_sort_list(Array)\n#2 /tmp/tmp5h3_smax.php(31):\
    \ candidate(Array)\n#3 /tmp/tmp5h3_smax.php(42): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmp5h3_smax.php on line 19\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $min_index = array_search($min, $lst);\n \
    \       $max_index = array_search($max, $lst);\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $result[] = $min;\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10];\nprint_r(strange_sort_list($lst));\nfunction candidate(...$args) {\n  \
    \  return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 9\n   \
    \ [4] => 3\n    [5] => 8\n    [6] => 4\n    [7] => 7\n    [8] => 5\n    [9] =>\
    \ 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavlwa_6r.php:37\n\
    Stack trace:\n#0 /tmp/tmpavlwa_6r.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpavlwa_6r.php\
    \ on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpved8fxr0.php:37\n\
    Stack trace:\n#0 /tmp/tmpved8fxr0.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpved8fxr0.php\
    \ on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n  $result[] =\
    \ $min;\n  $result[] = $max;\n  $lst = array_diff($lst, [$min, $max]);\n  while\
    \ (count($lst) > 0) {\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfgojfvmc.php:29\n\
    Stack trace:\n#0 /tmp/tmpfgojfvmc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfgojfvmc.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $res = [];\n    $i =\
    \ 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n\
    \        if ($i != $j) {\n            $res[] = $lst[$j];\n        }\n        $i++;\n\
    \        $j--;\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pnckh3c.php:32\n\
    Stack trace:\n#0 /tmp/tmp8pnckh3c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8pnckh3c.php\
    \ on line 32\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  \
    \  while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptlbbamt3.php:29\n\
    Stack trace:\n#0 /tmp/tmptlbbamt3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptlbbamt3.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    sort($lst);\n    $len = count($lst);\n    $i = 0;\n \
    \   while ($i < $len) {\n        $res[] = $lst[$i];\n        $i++;\n        if\
    \ ($i < $len) {\n            $res[] = $lst[$len - $i];\n            $i++;\n  \
    \      }\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_foewp9.php:27\n\
    Stack trace:\n#0 /tmp/tmpa_foewp9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa_foewp9.php\
    \ on line 27\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $lst[$min_index] = $max;\n    $lst[$max_index] = $min;\n    $result[] = $min;\n\
    \    $result[] = $max;\n    $lst = array_diff($lst, $result);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $lst[$min_index] = $max;\n        $lst[$max_index] = $min;\n        $result[]\
    \ = $min;\n        $result[] = $max;\n        $lst = array_diff($lst, $result);\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho\
    \ implode(', ', strange_sort_list($lst));\necho \"\\n\";\n\n$lst = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11];\necho implode(', ', strange_sort_list($lst));\necho\
    \ \"\\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\necho implode(',\
    \ ', strange_sort_list($lst));\necho \"\\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13];\necho implode(', ', strange_sort_list($lst));\necho \"\
    \\n\";\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\necho implode(',\
    \ ',\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp3damlreb.php on line 49

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $res[]\
    \ = $min;\n    $res[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n  \
    \  while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $res[] = $min;\n        $res[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $res;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10];\n$res = strange_sort_list($lst);\nprint_r($res);\n\n$lst = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11];\n$res = strange_sort_list($lst);\nprint_r($res);\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$res = strange_sort_list($lst);\n\
    print_r($res);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$res =\
    \ strange_sort_list($lst);\nprint_r($res);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14];\n$res = strange_sort_list($lst);\nprint_r($res);\n\n\
    $lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$res = strange_sort_list($lst);\n\
    print_r($res);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n\
    $res = strange_sort_list($lst);\nprint\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpeh2a6x3k.php on line 50

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $sorted = [];\n    $min = min($lst);\n    $max = max($lst);\n    $sorted[]\
    \ = $min;\n    $sorted[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $sorted[] = $min;\n        $sorted[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4m7xg8_.php:29\n\
    Stack trace:\n#0 /tmp/tmps4m7xg8_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps4m7xg8_.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10];\n$result = strange_sort_list($lst);\nprint_r($result);\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$result\
    \ = strange_sort_list($lst);\nprint_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13];\n$result = strange_sort_list($lst);\nprint_r($result);\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\
    $result = strange_sort_list($lst);\nprint_r($result);\n\n$lst = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n$result = strange_sort_list($lst);\n\
    print\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpujw_1nc6.php on line 50

    '
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    sort($lst);\n    $result = [];\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i != $j)\
    \ {\n            $result[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min,\
    \ $max]);\n    $lst = array_values($lst);\n    $min = min($lst\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpzflo9d31.php
    on line 51

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $sorted = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $sorted[] = $min;\n    $sorted[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $sorted[] = $min;\n \
    \       $sorted[] = $max;\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3ensrui.php:29\n\
    Stack trace:\n#0 /tmp/tmpj3ensrui.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj3ensrui.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n  $result = [];\n  $min = min($lst);\n  $max = max($lst);\n  $lst = array_diff($lst,\
    \ [$min, $max]);\n  $result[] = $min;\n  $result[] = $max;\n  while (count($lst)\
    \ > 0) {\n    $min = min($lst);\n    $max = max($lst);\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp08at768n.php:29\n\
    Stack trace:\n#0 /tmp/tmp08at768n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp08at768n.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    sort($lst);\n    $min = 0;\n    $max = count($lst)\
    \ - 1;\n    while ($min <= $max) {\n        $result[] = $lst[$min];\n        $min++;\n\
    \        if ($min <= $max) {\n            $result[] = $lst[$max];\n          \
    \  $max--;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    sort($lst);\n    $min = 0;\n    $max = count($lst) -\
    \ 1;\n    while ($min <= $max) {\n        $res[] = $lst[$min];\n        $min++;\n\
    \        if ($min <= $max) {\n            $res[] = $lst[$max];\n            $max--;\n\
    \        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n   \
    \ return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = min($lst);\n            $lst = array_diff($lst, [min($lst)]);\n        } else\
    \ {\n            $result[] = max($lst);\n            $lst = array_diff($lst, [max($lst)]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_o53sc_1.php:33\n\
    Stack trace:\n#0 /tmp/tmp_o53sc_1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_o53sc_1.php\
    \ on line 33\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    sort($lst);\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i != $j)\
    \ {\n            $result[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\n$result = strange_sort_list($lst);\nprint_r($result);\n\n$lst =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$result = strange_sort_list($lst);\nprint_r($result);\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$result\
    \ = strange_sort_list($lst);\nprint_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14];\n$result = strange_sort_list($lst);\nprint_r($result);\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n$result = strange_sort_list($lst);\n\
    print_r($result);\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16];\n$result = strange_sort_list($lst);\nprint\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpthjoc2zt.php on line 50

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\nprint_r(strange_sort_list($lst));\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 10\n    [2] => 2\n    [3] => 9\n   \
    \ [4] => 3\n    [5] => 8\n    [6] => 4\n    [7] => 7\n    [8] => 5\n    [9] =>\
    \ 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiydg9nz8.php:31\n\
    Stack trace:\n#0 /tmp/tmpiydg9nz8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpiydg9nz8.php\
    \ on line 31\n"
  timestamp: 1660028453
- exit_code: -1
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    sort($lst);\n    $i = 0;\n    while (count($lst) >\
    \ 0) {\n        $result[] = $lst[$i];\n        array_splice($lst, $i, 1);\n  \
    \      $i = $i + count($lst) * ($i % 2 ? -1 : 1);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: '

    Warning: Undefined array key 3 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 2 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 4 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 6 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 8 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 10 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 12 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 14 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 16 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 18 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 20 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 22 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 24 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 26 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 28 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 30 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 32 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 34 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 36 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 38 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 40 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 42 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 44 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 46 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 48 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 50 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 52 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 54 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 56 in /tmp/tmptxm75e5a.php on line 11


    Warning: Undefined array key 58 in /tmp/tmptxm75e5a.php on line 11


    Warning: Und'
  timestamp: 1660028458
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = min($lst);\n            $key = array_search(min($lst), $lst);\n          \
    \  unset($lst[$key]);\n        } else {\n            $result[] = max($lst);\n\
    \            $key = array_search(max($lst), $lst);\n            unset($lst[$key]);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: min(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmptgfl1qva.php:8\nStack trace:\n#0 /tmp/tmptgfl1qva.php(8):\
    \ min(Array)\n#1 /tmp/tmptgfl1qva.php(27): strange_sort_list(Array)\n#2 /tmp/tmptgfl1qva.php(36):\
    \ candidate(Array)\n#3 /tmp/tmptgfl1qva.php(42): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmptgfl1qva.php on line 8\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $min_index = array_search($min, $lst);\n \
    \       $max_index = array_search($max, $lst);\n        $result[] = $min;\n  \
    \      $result[] = $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho\
    \ implode(', ', strange_sort_list($lst));\nfunction candidate(...$args) {\n  \
    \  return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 10, 2, 9, 3, 8, 4, 7, 5, 6\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpebsks7bv.php:37\nStack trace:\n#0 /tmp/tmpebsks7bv.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmpebsks7bv.php on line 37\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $lst_length =\
    \ count($lst);\n    for ($i = 0; $i < $lst_length; $i++) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $min_index = array_search($min, $lst);\n \
    \       $max_index = array_search($max, $lst);\n        $result[] = $min;\n  \
    \      $result[] = $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: min(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmprrx1awzo.php:19\nStack trace:\n#0 /tmp/tmprrx1awzo.php(19):\
    \ min(Array)\n#1 /tmp/tmprrx1awzo.php(33): strange_sort_list(Array)\n#2 /tmp/tmprrx1awzo.php(37):\
    \ candidate(Array)\n#3 /tmp/tmprrx1awzo.php(48): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmprrx1awzo.php on line 19\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp3ntizsrg.php
    on line 49

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $count\
    \ = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[] = $min;\n            $min = min(array_diff($lst,\
    \ $result));\n        } else {\n            $result[] = $max;\n            $max\
    \ = max(array_diff($lst, $result));\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: max(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmppeh_c7k3.php:18\nStack trace:\n#0 /tmp/tmppeh_c7k3.php(18):\
    \ max(Array)\n#1 /tmp/tmppeh_c7k3.php(26): strange_sort_list(Array)\n#2 /tmp/tmppeh_c7k3.php(30):\
    \ candidate(Array)\n#3 /tmp/tmppeh_c7k3.php(41): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmppeh_c7k3.php on line 18\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $lst_len = count($lst);\n    $lst_len_half = $lst_len\
    \ / 2;\n    $lst_len_half_ceil = ceil($lst_len_half);\n    $lst_len_half_floor\
    \ = floor($lst_len_half);\n    $lst_len_half_ceil_start = $lst_len_half_ceil;\n\
    \    $lst_len_half_floor_start = $lst_len_half_floor;\n    $lst_len_half_ceil_end\
    \ = $lst_len;\n    $lst_len_half_floor_end = $lst_len_half_ceil;\n    $lst_len_half_ceil_start_step\
    \ = 1;\n    $lst_len_half_floor_start_step = 1;\n    $lst_len_half_ceil_end_step\
    \ = -1;\n    $lst_len_half_floor_end_step = -1;\n    for ($i = 0; $i < $lst_len;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $result[] = min($lst);\n  \
    \          $lst = array_diff($lst, [min($lst)]);\n        } else {\n         \
    \   $result[] = max($lst);\n            $lst = array_diff($lst, [max($lst)]);\n\
    \        }\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10];\n$result = strange_sort_list($lst);\nprint_r($result);\n\n$lst = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11];\n$result = strange_sort_list($lst);\nprint_r($result);\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n$result = strange_sort_list($lst);\n\
    print_r($result\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpx13zmq42.php
    on line 43

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $lst_count = count($lst);\n    $lst_count_half = floor($lst_count\
    \ / 2);\n    $lst_count_even = $lst_count % 2 == 0;\n    $lst_count_odd = $lst_count\
    \ % 2 == 1;\n    $lst_count_even_half = $lst_count_even ? $lst_count_half : $lst_count_half\
    \ + 1;\n    $lst_count_odd_half = $lst_count_odd ? $lst_count_half : $lst_count_half\
    \ - 1;\n    $lst_count_even_half_max = $lst_count_even ? $lst_count_half : $lst_count_half\
    \ - 1;\n    $lst_count_odd_half_max = $lst_count_odd ? $lst_count_half : $lst_count_half\
    \ - 1;\n    $lst_count_even_half_min = $lst_count_even ? $lst_count_half : $lst_count_half\
    \ + 1;\n    $lst_count_odd_half_min = $lst_count_odd ? $lst_count_half : $lst_count_half\
    \ + 1;\n    $lst_min = min($lst);\n    $lst_max = max($lst);\n    $lst_min_index\
    \ = array_search($lst_min, $lst);\n    $lst_max_index = array_search($lst_max,\
    \ $lst);\n    $lst_min_max_index = $lst_min_index > $lst_max_index ? $lst_min_index\
    \ : $lst_max_index;\n    $lst_max_min_index = $lst_min_index < $lst_max_index\
    \ ? $lst_min_index : $lst_max_index;\n    $lst_min_max_index_removed = array_splice($lst,\
    \ $lst_min_max_index, 1);\n    $\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpjnu02squ.php on line 26

    '
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    sort($lst);\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $result[] = $lst[$i];\n        if ($i != $j)\
    \ {\n            $result[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $sorted = [];\n    $min = min($lst);\n    $max = max($lst);\n    $sorted[]\
    \ = $min;\n    $sorted[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $sorted[] = $min;\n        $sorted[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4m7xg8_.php:29\n\
    Stack trace:\n#0 /tmp/tmps4m7xg8_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps4m7xg8_.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $lst_size = count($lst);\n\
    \    for ($i = 0; $i < $lst_size; $i++) {\n        $min = min($lst);\n       \
    \ $max = max($lst);\n        $min_index = array_search($min, $lst);\n        $max_index\
    \ = array_search($max, $lst);\n        $result[] = $min;\n        $result[] =\
    \ $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n\n$lst = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(strange_sort_list($lst));\n\n$lst = [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\nprint_r(strange_sort_list($lst));\n\n$lst\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1,\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpjre3j2_1.php on line 48

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $lst\
    \ = array_diff($lst, [$min, $max]);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $lst = array_diff($lst, [$min, $max]);\n        $result[] = $min;\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzh6ebjo.php:29\n\
    Stack trace:\n#0 /tmp/tmpuzh6ebjo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuzh6ebjo.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $result = [];\n    $i\
    \ = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] =\
    \ $lst[$i];\n        if ($i != $j) {\n            $result[] = $lst[$j];\n    \
    \    }\n        $i++;\n        $j--;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpch37pl1l.php:32\n\
    Stack trace:\n#0 /tmp/tmpch37pl1l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpch37pl1l.php\
    \ on line 32\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $lst = array_unique($lst);\n    sort($lst);\n    $count\
    \ = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[] = array_shift($lst);\n        } else {\n       \
    \     $result[] = array_pop($lst);\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxnorjvi.php:32\n\
    Stack trace:\n#0 /tmp/tmpjxnorjvi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjxnorjvi.php\
    \ on line 32\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    sort($lst);\n    $i = 0;\n    $j = count($lst) - 1;\n\
    \    while ($i <= $j) {\n        $res[] = $lst[$i];\n        if ($i != $j) {\n\
    \            $res[] = $lst[$j];\n        }\n        $i++;\n        $j--;\n   \
    \ }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $result = [];\n    $i\
    \ = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] =\
    \ $lst[$i];\n        if ($i != $j) {\n            $result[] = $lst[$j];\n    \
    \    }\n        $i++;\n        $j--;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpch37pl1l.php:32\n\
    Stack trace:\n#0 /tmp/tmpch37pl1l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpch37pl1l.php\
    \ on line 32\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min_max = [];\n    $min = min($lst);\n    $max =\
    \ max($lst);\n    $min_max[] = $min;\n    $min_max[] = $max;\n    $lst = array_diff($lst,\
    \ $min_max);\n    $result[] = $min;\n    $result[] = $max;\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_max\
    \ = [];\n        $min_max[] = $min;\n        $min_max[] = $max;\n        $lst\
    \ = array_diff($lst, $min_max);\n        $result[] = $min;\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjz0x1fu.php:35\n\
    Stack trace:\n#0 /tmp/tmpqjz0x1fu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpqjz0x1fu.php\
    \ on line 35\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $count\
    \ = count($lst);\n    $i = 0;\n    while ($i < $count) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[] = $min;\n            $min = min(array_diff($lst,\
    \ $result));\n        } else {\n            $result[] = $max;\n            $max\
    \ = max(array_diff($lst, $result));\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: max(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmppeh_c7k3.php:18\nStack trace:\n#0 /tmp/tmppeh_c7k3.php(18):\
    \ max(Array)\n#1 /tmp/tmppeh_c7k3.php(26): strange_sort_list(Array)\n#2 /tmp/tmppeh_c7k3.php(30):\
    \ candidate(Array)\n#3 /tmp/tmppeh_c7k3.php(41): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmppeh_c7k3.php on line 18\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $res = [];\n    $min = min($lst);\n    $max = max($lst);\n    $i = 0;\n\
    \    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $res[]\
    \ = $min;\n            $lst = array_diff($lst, [$min]);\n            $min = min($lst);\n\
    \        } else {\n            $res[] = $max;\n            $lst = array_diff($lst,\
    \ [$max]);\n            $max = max($lst);\n        }\n        $i++;\n    }\n \
    \   return $res;\n}\n\necho implode(', ', strange_sort_list([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9]));\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: min(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmpi0x_3vhn.php:15\nStack trace:\n#0 /tmp/tmpi0x_3vhn.php(15):\
    \ min(Array)\n#1 /tmp/tmpi0x_3vhn.php(26): strange_sort_list(Array)\n#2 {main}\n\
    \  thrown in /tmp/tmpi0x_3vhn.php on line 15\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $result = [];\n    $i\
    \ = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] =\
    \ $lst[$i];\n        if ($i != $j) {\n            $result[] = $lst[$j];\n    \
    \    }\n        $i++;\n        $j--;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpch37pl1l.php:32\n\
    Stack trace:\n#0 /tmp/tmpch37pl1l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpch37pl1l.php\
    \ on line 32\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_xjxkbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpa_xjxkbk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa_xjxkbk.php\
    \ on line 29\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $result = [];\n    $i\
    \ = 0;\n    $j = count($lst) - 1;\n    while ($i <= $j) {\n        $result[] =\
    \ $lst[$i];\n        if ($i != $j) {\n            $result[] = $lst[$j];\n    \
    \    }\n        $i++;\n        $j--;\n    }\n    return $result;\n}\n\necho implode(',\
    \ ', strange_sort_list([1, 2, 3, 4, 5, 6, 7, 8, 9]));\necho \"\\n\";\necho implode(',\
    \ ', strange_sort_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\necho \"\\n\";\necho\
    \ implode(', ', strange_sort_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\necho\
    \ \"\\n\";\necho implode(', ', strange_sort_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12]));\necho \"\\n\";\necho implode(', ', strange_sort_list([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13]));\necho \"\\n\";\necho implode(', ', strange_sort_list([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\necho \"\\n\";\necho implode(',\
    \ ', strange_sort_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\n\
    echo \"\\n\";\necho implode(', ', strange_sort_list([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16]));\necho \"\\n\";\necho implode(', ', strange_sort_list([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmpm50dh40c.php
    on line 40

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $min = min($lst);\n    $max = max($lst);\n    $result[]\
    \ = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, [$min, $max]);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        $lst = array_diff($lst,\
    \ [$min, $max]);\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\nprint_r(strange_sort_list($lst));\n\n$lst = [10, 9, 8, 7, 6, 5,\
    \ 4, 3, 2, 1];\nprint_r(strange_sort_list($lst));\n\n$lst = [2, 4, 6, 8, 10, 1,\
    \ 3, 5, 7, 9];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 3, 5, 7, 9, 2,\
    \ 4, 6, 8, 10];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1];\nprint_r(strange_sort_list($lst));\n\n$lst = [2, 4, 6, 8, 10, 12, 14, 16,\
    \ 18, 20, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 3, 5\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmp3ywk_e56.php
    on line 45

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $result = [];\n    $len = count($lst);\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst,\
    \ [$min, $max]);\n    $len = count($lst);\n    $i = 0;\n    while ($i < $len)\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        $lst = array_diff($lst, [$min, $max]);\n\
    \        $i++;\n    }\n    return $result;\n}\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12];\nprint_r(strange_sort_list($lst));\n\n$lst = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\nprint_r(strange_sort_list($lst));\n\n\
    $lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\nprint_r(strange_sort_list($lst));\n\
    \n$lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nprint_r(strange_sort_list($lst));\n\
    \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: min(): Argument #1 ($value) must contain\
    \ at least one element in /tmp/tmpxwyp_1g_.php:17\nStack trace:\n#0 /tmp/tmpxwyp_1g_.php(17):\
    \ min(Array)\n#1 /tmp/tmpxwyp_1g_.php(28): strange_sort_list(Array)\n#2 {main}\n\
    \  thrown in /tmp/tmpxwyp_1g_.php on line 17\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\nfunction strange_sort_list($lst)\
    \ {\n    $lst = array_unique($lst);\n    sort($lst);\n    $len = count($lst);\n\
    \    $result = [];\n    for ($i = 0; $i < $len; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $result[] = array_shift($lst);\n        } else {\n       \
    \     $result[] = array_pop($lst);\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgly2_2_.php:30\n\
    Stack trace:\n#0 /tmp/tmpsgly2_2_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsgly2_2_.php\
    \ on line 30\n"
  timestamp: 1660028453

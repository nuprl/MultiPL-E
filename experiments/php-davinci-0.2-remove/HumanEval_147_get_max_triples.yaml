name: HumanEval_147_get_max_triples
language: php
prompt: "<?php\n// You are given a positive integer n. You have to create an integer\
  \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] =\
  \ i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
  \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// Explanation:\
  \ \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1, 7, 13).\nfunction\
  \ get_max_triples($n) {\n"
tests: "function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
  }\n\ntest();"
completions: ["    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i\
    \ * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n\n$n = 5;\necho get_max_triples($n);", " \
    \   $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n    \
    \        for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5)\
    \ . PHP_EOL;\necho get_max_triples(10) . PHP_EOL;\necho get_max_triples(20) .\
    \ PHP_EOL;\necho get_max_triples(100) . PHP_EOL;\necho get_max_triples(1000) .\
    \ PHP_EOL;\necho get_max_triples(10000) . PHP_EOL;\necho get_max_triples(100000)\
    \ . PHP_EOL;\necho get_max_triples(1000000) . PHP_EOL;\necho get_max_triples(10000000)\
    \ . PHP_EOL;\necho get_max_triples(100000000) . PHP_EOL;\necho get_max_triples(1000000000)\
    \ . PHP_EOL;\necho get_max_triples(10000000000) . PHP_EOL;\necho get_max_triples(100000000000)\
    \ . PHP_EOL;\necho get_max_triples(1000000000000) . PHP_EOL;\necho get_max_triples(10000000000000)\
    \ . PHP_EOL;\necho get_max_triples(100000000000000) . PHP_EOL;\necho get_max_triples(1000000000000000)\
    \ . PHP_EOL;\necho get_max_triples(10000000000000000) . PHP_EOL;\necho get_max_triples(100000000000000000)\
    \ . PHP_", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i\
    \ * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho get_max_triples(5) . \"\\n\";\necho get_max_triples(10) .\
    \ \"\\n\";\necho get_max_triples(100) . \"\\n\";\necho get_max_triples(1000) .\
    \ \"\\n\";\necho get_max_triples(10000) . \"\\n\";\necho get_max_triples(100000)\
    \ . \"\\n\";\necho get_max_triples(1000000) . \"\\n\";\necho get_max_triples(10000000)\
    \ . \"\\n\";\necho get_max_triples(100000000) . \"\\n\";\necho get_max_triples(1000000000)\
    \ . \"\\n\";\necho get_max_triples(10000000000) . \"\\n\";\necho get_max_triples(100000000000)\
    \ . \"\\n\";\necho get_max_triples(1000000000000) . \"\\n\";\necho get_max_triples(10000000000000)\
    \ . \"\\n\";\necho get_max_triples(100000000000000) . \"\\n\";\necho get_max_triples(1000000000000000)\
    \ . \"\\n\";\necho get_max_triples(10000000000000000) . \"\\n\";\necho get_max_triples(100000000000000000)\
    \ . \"\\n\";\necho get_max_triples(1000000000000000000) . \"\\n\";\necho get_max_triples(10000000000000000000)\
    \ . \"\\n\";\necho get_max_triples(100000000000000000000) . \"\\", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i\
    \ < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n  \
    \          for ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n           \
    \     if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n \
    \   for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n   \
    \             }\n            }\n        }\n    }\n    return $count;\n}\n", " \
    \   $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n  \
    \                  $count++;\n                }\n            }\n        }\n  \
    \  }\n    return $count;\n}\n$n = 5;\necho get_max_triples($n);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n         \
    \       if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n \
    \   for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n   \
    \             }\n            }\n        }\n    }\n    return $count;\n}\n", " \
    \   $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n  \
    \                  $count++;\n                }\n            }\n        }\n  \
    \  }\n    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0;\
    \ $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n     \
    \       for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\n$n = 5;\necho get_max_triples($n);", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n   \
    \             }\n            }\n        }\n    }\n    return $count;\n}\n", " \
    \   $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n  \
    \                  $count++;\n                }\n            }\n        }\n  \
    \  }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}\n", "    $arr = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for ($j = $i + 1;\
    \ $j < count($arr); $j++) {\n            for ($k = $j + 1; $k < count($arr); $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\n$n = 5;\necho get_max_triples($n);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i\
    \ < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\n\n$n = 5;\necho get_max_triples($n);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n           \
    \     if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n           \
    \     if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ count($a); $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n    \
    \        for ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}\n\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n \
    \   for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n           \
    \     if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n\n\
    $n = 5;\necho get_max_triples($n);", "    $a = [];\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\n\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $triples++;\n                }\n\
    \            }\n        }\n    }\n    return $triples;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\n$n = 5;\necho get_max_triples($n);", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(5);\necho \"\\n\";\n\
    echo get_max_triples(10);\necho \"\\n\";\necho get_max_triples(100);\necho \"\\\
    n\";\necho get_max_triples(1000);\necho \"\\n\";\necho get_max_triples(10000);\n\
    echo \"\\n\";\necho get_max_triples(100000);\necho \"\\n\";\necho get_max_triples(1000000);\n\
    echo \"\\n\";\necho get_max_triples(10000000);\necho \"\\n\";\necho get_max_triples(100000000);\n\
    echo \"\\n\";\necho get_max_triples(1000000000);\necho \"\\n\";\necho get_max_triples(10000000000);\n\
    echo \"\\n\";\necho get_max_triples(100000000000);\necho \"\\n\";\necho get_max_triples(1000000000000);\n\
    echo \"\\n\";\necho get_max_triples(10000000000000);\necho \"\\n\";\necho get_max_triples(100000000000000);\n\
    echo \"\\n\";\necho get_max_triples(1000000000000000);\necho \"\\n\";\necho get_max_triples(10000000000000000);\n\
    echo \"\\n\";\necho get_max_triples(100000000000000000);\necho \"\\n\";\necho\
    \ get_max_triples(1000000000000000000);\necho \"\\n\";\necho get_max_triples(10000000000000000000);\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\n$n = 5;\necho get_max_triples($n);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\necho get_max_triples(5);", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ count($a); $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n    \
    \        for ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i\
    \ < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n\necho get_max_triples(5) . \"\\n\";\necho\
    \ get_max_triples(10) . \"\\n\";\necho get_max_triples(100) . \"\\n\";\necho get_max_triples(1000)\
    \ . \"\\n\";\necho get_max_triples(10000) . \"\\n\";\necho get_max_triples(100000)\
    \ . \"\\n\";\necho get_max_triples(1000000) . \"\\n\";\necho get_max_triples(10000000)\
    \ . \"\\n\";\necho get_max_triples(100000000) . \"\\n\";\necho get_max_triples(1000000000)\
    \ . \"\\n\";\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\n\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i\
    \ < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n  \
    \          for ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\necho \"\\n\";\necho get_max_triples(6);\n\
    echo \"\\n\";\necho get_max_triples(7);\necho \"\\n\";\necho get_max_triples(8);\n\
    echo \"\\n\";\necho get_max_triples(9);\necho \"\\n\";\necho get_max_triples(10);\n\
    echo \"\\n\";\necho get_max_triples(11);\necho \"\\n\";\necho get_max_triples(12);\n\
    echo \"\\n\";\necho get_max_triples(13);\necho \"\\n\";\necho get_max_triples(14);\n\
    echo \"\\n\";\necho get_max_triples(15);\necho \"\\n\";\necho get_max_triples(16);\n\
    echo \"\\n\";\necho get_max_triples(17);\necho \"\\n\";\necho get_max_triples(18);\n\
    echo \"\\n\";\necho get_max_triples(19);\necho \"\\n\";\necho get_max_triples(20);\n\
    echo \"\\n\";\necho get_max_triples(21);\necho \"\\n\";\necho get_max_triples(22);\n\
    echo \"\\n\";\necho get_max_triples(23);\necho \"\\n\";\necho get_max_triples(24);\n\
    echo \"\\n\";\necho get_max_triples(25);\necho \"\\n\";\necho get_max_", "   \
    \ $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n \
    \   for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n           \
    \     if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}\n\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n           \
    \     if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n\n$n = 5;\necho get_max_triples($n);", " \
    \   $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n  \
    \                  $count++;\n                }\n            }\n        }\n  \
    \  }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n           \
    \     if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n", "    $triples = 0;\n    $a = [];\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for\
    \ ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n                    $triples++;\n                }\n          \
    \  }\n        }\n    }\n    return $triples;\n}\necho get_max_triples(5);", " \
    \   $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n  \
    \                  $count++;\n                }\n            }\n        }\n  \
    \  }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\n$n = 5;\necho get_max_triples($n);", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n\n$n = 5;\necho\
    \ get_max_triples($n);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n \
    \       $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i\
    \ < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n  \
    \          for ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n    \
    \        for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $count++;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\necho get_max_triples(5) . PHP_EOL;\necho get_max_triples(6)\
    \ . PHP_EOL;\necho get_max_triples(7) . PHP_EOL;\necho get_max_triples(8) . PHP_EOL;\n\
    echo get_max_triples(9) . PHP_EOL;\necho get_max_triples(10) . PHP_EOL;\necho\
    \ get_max_triples(11) . PHP_EOL;\necho get_max_triples(12) . PHP_EOL;\necho get_max_triples(13)\
    \ . PHP_EOL;\necho get_max_triples(14) . PHP_EOL;\necho get_max_triples(15) .\
    \ PHP_EOL;\necho get_max_triples(16) . PHP_EOL;\necho get_max_triples(17) . PHP_EOL;\n\
    echo get_max_triples(18) . PHP_EOL;\necho get_max_triples(19) . PHP_EOL;\necho\
    \ get_max_triples(20) . PHP_EOL;\necho get_max_triples(21) . PHP_EOL;\necho get_max_triples(22)\
    \ . PHP_EOL;\necho get_max_triples(23) . PHP_EOL;\necho get_max_triples(24) .\
    \ PHP_EOL;\necho get_max_", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i\
    \ < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n\n$n = 5;\necho\
    \ get_max_triples($n);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n \
    \       $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i\
    \ < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n  \
    \          for ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n           \
    \     if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n\n\
    $n = 5;\necho get_max_triples($n);", "    $a = [];\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i\
    \ = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a); $j++)\
    \ {\n            for ($k = $j + 1; $k < count($a); $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n   \
    \             }\n            }\n        }\n    }\n    return $count;\n}\n\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n    \
    \        for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n\necho get_max_triples(5) . PHP_EOL;\necho\
    \ get_max_triples(6) . PHP_EOL;\necho get_max_triples(7) . PHP_EOL;\necho get_max_triples(8)\
    \ . PHP_EOL;\necho get_max_triples(9) . PHP_EOL;\necho get_max_triples(10) . PHP_EOL;\n\
    echo get_max_triples(11) . PHP_EOL;\necho get_max_triples(12) . PHP_EOL;\necho\
    \ get_max_triples(13) . PHP_EOL;\necho get_max_triples(14) . PHP_EOL;\necho get_max_triples(15)\
    \ . PHP_EOL;\necho get_max_triples(16) . PHP_EOL;\necho get_max_triples(17) .\
    \ PHP_EOL;\necho get_max_triples(18) . PHP_EOL;\necho get_max_triples(19) . PHP_EOL;\n\
    echo get_max_triples(20) . PHP_EOL;\necho get_max_triples(21) . PHP_EOL;\necho\
    \ get_max_triples(22) . PHP_EOL;\necho get_max_triples(23) . PHP_EOL;\necho get_max_triples(24)\
    \ . PHP_EOL;\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n     \
    \   for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\n$n = 5;\necho get_max_triples($n);", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}\n\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n \
    \   for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n           \
    \     if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n    \
    \        }\n        }\n    }\n    return $count;\n}\n\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($a);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for\
    \ ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i <\
    \ count($a); $i++) {\n        for ($j = $i + 1; $j < count($a); $j++) {\n    \
    \        for ($k = $j + 1; $k < count($a); $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho get_max_triples(5) . \"\\n\";\necho get_max_triples(10) .\
    \ \"\\n\";\necho get_max_triples(20) . \"\\n\";\necho get_max_triples(100) . \"\
    \\n\";\necho get_max_triples(1000) . \"\\n\";\necho get_max_triples(10000) . \"\
    \\n\";\necho get_max_triples(100000) . \"\\n\";\necho get_max_triples(1000000)\
    \ . \"\\n\";\necho get_max_triples(10000000) . \"\\n\";\necho get_max_triples(100000000)\
    \ . \"\\n\";\necho get_max_triples(1000000000) . \"\\n\";\necho get_max_triples(10000000000)\
    \ . \"\\n\";\necho get_max_triples(100000000000) . \"\\n\";\necho get_max_triples(1000000000000)\
    \ . \"\\n\";\necho get_max_triples(10000000000000) . \"\\n\";\necho get_max_triples(100000000000000)\
    \ . \"\\n\";\necho get_max_triples(1000000000000000) . \"\\n\";\necho get_max_triples(10000000000000000)\
    \ . \"\\n\";\necho get_max_triples(100000000000000000) . \"\\n\";\necho get_max_triples(1000000000000000000)\
    \ . \"\\n\";\necho get_max_triples(10000000000000000000) . \"\\n\";", "    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $count++;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n\n\
    echo get_max_triples(5);"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

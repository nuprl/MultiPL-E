name: HumanEval_105_by_length
language: php
prompt: "<?php\n// Given an array of integers, sort the integers that are between\
  \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
  \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
  , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length([2,\
  \ 1, 1, 4, 5, 8, 2, 3])   \n// [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\"\
  , \"Two\", \"One\", \"One\"]\n// If the array is empty, return an empty array:\n\
  // If the array has any strange number ignore it:\n// >>> by_length([1, -1 , 55])\
  \ \n// ['One']\nfunction by_length($arr) {\n"
tests: "function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
  Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
  \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
  , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $result = [];\n    $numbers = [\n        1 => 'One',\n        2\
    \ => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n\
    \        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9\
    \ => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 &&\
    \ $value <= 9) {\n            $result[] = $value;\n        }\n    }\n    rsort($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($item)\
    \ {\n        return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n\
    \    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five',\
    \ 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as\
    \ $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n    \
    \    }\n    }\n    sort($result);\n    $result = array_reverse($result);\n   \
    \ foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $number) {\n   \
    \     if ($number >= 1 && $number <= 9) {\n            $result[] = $number;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $number) {\n        $result[$key] = $numbers[$number];\n\
    \    }\n    return $result;\n}\n", "    $numbers = array(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9);\n    $names = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\",\
    \ \"Six\", \"Seven\", \"Eight\", \"Nine\");\n    $result = array();\n    foreach\
    \ ($arr as $value) {\n        if (in_array($value, $numbers)) {\n            array_push($result,\
    \ $value);\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    for ($i = 0; $i < count($result); $i++) {\n        $result[$i] = $names[$result[$i]\
    \ - 1];\n    }\n    return $result;\n}\n", "    $result = [];\n    $numbers =\
    \ [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n       \
    \ 4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n\
    \        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $key\
    \ => $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $arr = array_filter($arr, function($item) {\n  \
    \      return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "\t$arr = array_filter($arr,\
    \ function($val) {\n\t\treturn $val > 0 && $val < 10;\n\t});\n\tsort($arr);\n\t\
    $arr = array_reverse($arr);\n\t$arr = array_map(function($val) {\n\t\tswitch ($val)\
    \ {\n\t\t\tcase 1:\n\t\t\t\treturn 'One';\n\t\t\tcase 2:\n\t\t\t\treturn 'Two';\n\
    \t\t\tcase 3:\n\t\t\t\treturn 'Three';\n\t\t\tcase 4:\n\t\t\t\treturn 'Four';\n\
    \t\t\tcase 5:\n\t\t\t\treturn 'Five';\n\t\t\tcase 6:\n\t\t\t\treturn 'Six';\n\t\
    \t\tcase 7:\n\t\t\t\treturn 'Seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'Eight';\n\
    \t\t\tcase 9:\n\t\t\t\treturn 'Nine';\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n",
  "\t$result = [];\n\t$numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four',\
    \ 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n\tforeach\
    \ ($arr as $value) {\n\t\tif ($value >= 1 && $value <= 9) {\n\t\t\t$result[] =\
    \ $value;\n\t\t}\n\t}\n\tsort($result);\n\t$result = array_reverse($result);\n\
    \tforeach ($result as $key => $value) {\n\t\t$result[$key] = $numbers[$value];\n\
    \t}\n\treturn $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $arr = array_filter($arr, function($item) {\n  \
    \      return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n\
    \    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n\
    \        4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 =>\
    \ 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr\
    \ as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $number) {\n        if ($number\
    \ > 0 && $number < 10) {\n            $result[] = $number;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $number) {\n        $result[$key] = $numbers[$number];\n    }\n \
    \   return $result;\n}\n", "    $result = [];\n    $numbers = [\n        1 =>\
    \ 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n \
    \       5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $number) {\n   \
    \     if ($number >= 1 && $number <= 9) {\n            $result[] = $number;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $number) {\n        $result[$key] = $numbers[$number];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $nums = [1 => 'One', 2 => 'Two',\
    \ 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight',\
    \ 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value\
    \ <= 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $nums[$value];\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value <=\
    \ 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $value) {\n        if ($value > 0 && $value < 10)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $arr = array_filter($arr, function($i) {\n        return $i >= 1 && $i <= 9;\n\
    \    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr = array_map(function($i)\
    \ {\n        switch ($i) {\n            case 1:\n                return 'One';\n\
    \            case 2:\n                return 'Two';\n            case 3:\n   \
    \             return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n",
  "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four',\
    \ 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach\
    \ ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($val)\
    \ {\n        return $val > 0 && $val < 10;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($val) {\n        switch\
    \ ($val) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n\
    \    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n\
    \        4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 =>\
    \ 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr\
    \ as $key => $value) {\n        if ($value >= 1 && $value <= 9) {\n          \
    \  $result[] = $value;\n        }\n    }\n    rsort($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    rsort($result);\n    foreach ($result as $key => $value) {\n        $result[$key]\
    \ = $numbers[$value];\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $nums = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five',\
    \ 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as\
    \ $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $nums[$value];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($v)\
    \ {\n        return $v >= 1 && $v <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($v) {\n        switch ($v)\
    \ {\n            case 1:\n                return 'One';\n            case 2:\n\
    \                return 'Two';\n            case 3:\n                return 'Three';\n\
    \            case 4:\n                return 'Four';\n            case 5:\n  \
    \              return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers\
    \ = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n     \
    \   4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n\
    \        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $number) {\n   \
    \     if ($number >= 1 && $number <= 9) {\n            $result[] = $number;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $number) {\n        $result[$key] = $numbers[$number];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if (in_array($value, array_keys($numbers))) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $key => $value) {\n      \
    \  if ($value > 0 && $value < 10) {\n            $result[] = $value;\n       \
    \ }\n    }\n    sort($result);\n    $result = array_reverse($result);\n    foreach\
    \ ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n \
    \   }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($n)\
    \ {\n        return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($n) {\n        switch ($n)\
    \ {\n            case 1:\n                return 'One';\n            case 2:\n\
    \                return 'Two';\n            case 3:\n                return 'Three';\n\
    \            case 4:\n                return 'Four';\n            case 5:\n  \
    \              return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers\
    \ = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n     \
    \   4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n\
    \        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    rsort($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $arr = array_filter($arr, function($item) {\n        return $item >= 1 && $item\
    \ <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr =\
    \ array_map(function($item) {\n        switch ($item) {\n            case 1:\n\
    \                return 'One';\n            case 2:\n                return 'Two';\n\
    \            case 3:\n                return 'Three';\n            case 4:\n \
    \               return 'Four';\n            case 5:\n                return 'Five';\n\
    \            case 6:\n                return 'Six';\n            case 7:\n   \
    \             return 'Seven';\n            case 8:\n                return 'Eight';\n\
    \            case 9:\n                return 'Nine';\n        }\n    }, $arr);\n\
    \    return $arr;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $number) {\n        if (in_array($number,\
    \ array_keys($numbers))) {\n            $result[] = $numbers[$number];\n     \
    \   }\n    }\n    return array_reverse($result);\n}\n", "    $result = [];\n \
    \   $numbers = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n\
    \        4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 =>\
    \ 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr\
    \ as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $key => $value) {\n      \
    \  if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n      \
    \  }\n    }\n    sort($result);\n    $result = array_reverse($result);\n    foreach\
    \ ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n \
    \   }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n     \
    \   1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n    \
    \    }\n    }\n    rsort($result);\n    foreach ($result as $key => $value) {\n\
    \        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four',\
    \ 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach\
    \ ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($num)\
    \ {\n        return $num >= 1 && $num <= 9;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($num) {\n        switch\
    \ ($num) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n\
    \    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n\
    \        4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 =>\
    \ 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr\
    \ as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    rsort($result);\n    foreach ($result as $key\
    \ => $value) {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n\
    }\n", "    $new_arr = [];\n    $numbers = [\n        1 => 'One',\n        2 =>\
    \ 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n\
    \        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9\
    \ => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 &&\
    \ $value <= 9) {\n            $new_arr[] = $value;\n        }\n    }\n    sort($new_arr);\n\
    \    $new_arr = array_reverse($new_arr);\n    foreach ($new_arr as $key => $value)\
    \ {\n        $new_arr[$key] = $numbers[$value];\n    }\n    return $new_arr;\n\
    }\n\nprint_r(by_length([2, 1, 1, 4, 5, 8, 2, 3]));\nprint_r(by_length([1, -1 ,\
    \ 55]));", "    $result = [];\n    $numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n \
    \   $names = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\"];\n    foreach ($arr as $key => $value) {\n        if (in_array($value,\
    \ $numbers)) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $names[$value - 1];\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 =>\
    \ 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n\
    \        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9\
    \ => 'Nine'\n    ];\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ > 0 && $value < 10) {\n            $result[] = $value;\n        }\n    }\n \
    \   sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $arr = array_filter($arr, function($item) {\n  \
    \      return $item >= 1 && $item <= 9;\n    });\n    rsort($arr);\n    $arr =\
    \ array_map(function($item) {\n        switch ($item) {\n            case 1:\n\
    \                return 'One';\n            case 2:\n                return 'Two';\n\
    \            case 3:\n                return 'Three';\n            case 4:\n \
    \               return 'Four';\n            case 5:\n                return 'Five';\n\
    \            case 6:\n                return 'Six';\n            case 7:\n   \
    \             return 'Seven';\n            case 8:\n                return 'Eight';\n\
    \            case 9:\n                return 'Nine';\n        }\n    }, $arr);\n\
    \    return $arr;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value\
    \ > 0 && $value < 10) {\n            $result[] = $value;\n        }\n    }\n \
    \   sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $key => $value) {\n       \
    \ if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n       \
    \ }\n    }\n    rsort($result);\n    foreach ($result as $key => $value) {\n \
    \       $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n", " \
    \   $arr = array_filter($arr, function($v) {\n        return $v >= 1 && $v <=\
    \ 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr = array_map(function($v)\
    \ {\n        switch ($v) {\n            case 1:\n                return 'One';\n\
    \            case 2:\n                return 'Two';\n            case 3:\n   \
    \             return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n",
  "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $value) {\n        if (isset($numbers[$value]))\
    \ {\n            $result[] = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n", "    $arr = array_filter($arr, function($item) {\n        return $item >=\
    \ 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers\
    \ = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six',\
    \ 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n\
    \        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n    \
    \    }\n    }\n    rsort($result);\n    foreach ($result as $key => $value) {\n\
    \        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "\t$arr = array_filter($arr, function($item) {\n\t\treturn $item >= 1 && $item <=\
    \ 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr = array_map(function($item)\
    \ {\n\t\tswitch ($item) {\n\t\t\tcase 1:\n\t\t\t\treturn 'One';\n\t\t\tcase 2:\n\
    \t\t\t\treturn 'Two';\n\t\t\tcase 3:\n\t\t\t\treturn 'Three';\n\t\t\tcase 4:\n\
    \t\t\t\treturn 'Four';\n\t\t\tcase 5:\n\t\t\t\treturn 'Five';\n\t\t\tcase 6:\n\
    \t\t\t\treturn 'Six';\n\t\t\tcase 7:\n\t\t\t\treturn 'Seven';\n\t\t\tcase 8:\n\
    \t\t\t\treturn 'Eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'Nine';\n\t\t}\n\t}, $arr);\n\
    \treturn $arr;\n}\n\n$arr = [2, 1, 1, 4, 5, 8, 2, 3];\nprint_r(by_length($arr));\n\
    \n$arr = [1, -1 , 55];\nprint_r(by_length($arr));", "    $sorted = array_filter($arr,\
    \ function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    sort($sorted);\n\
    \    $reversed = array_reverse($sorted);\n    $mapped = array_map(function($n)\
    \ {\n        switch ($n) {\n            case 1:\n                return 'One';\n\
    \            case 2:\n                return 'Two';\n            case 3:\n   \
    \             return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $reversed);\n    return $mapped;\n\
    }\n\nprint_r(by_length([2, 1, 1, 4, 5, 8, 2, 3]));\nprint_r(by_length([1, -1 ,\
    \ 55]));\nprint_r(by_length([]));", "    $arr = array_filter($arr, function($a)\
    \ {\n        return $a >= 1 && $a <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($a) {\n        switch ($a)\
    \ {\n            case 1:\n                return 'One';\n            case 2:\n\
    \                return 'Two';\n            case 3:\n                return 'Three';\n\
    \            case 4:\n                return 'Four';\n            case 5:\n  \
    \              return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "\t$arr = array_filter($arr,\
    \ function($item) {\n\t\treturn $item >= 1 && $item <= 9;\n\t});\n\tsort($arr);\n\
    \t$arr = array_reverse($arr);\n\t$arr = array_map(function($item) {\n\t\tswitch\
    \ ($item) {\n\t\t\tcase 1:\n\t\t\t\treturn 'One';\n\t\t\tcase 2:\n\t\t\t\treturn\
    \ 'Two';\n\t\t\tcase 3:\n\t\t\t\treturn 'Three';\n\t\t\tcase 4:\n\t\t\t\treturn\
    \ 'Four';\n\t\t\tcase 5:\n\t\t\t\treturn 'Five';\n\t\t\tcase 6:\n\t\t\t\treturn\
    \ 'Six';\n\t\t\tcase 7:\n\t\t\t\treturn 'Seven';\n\t\t\tcase 8:\n\t\t\t\treturn\
    \ 'Eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'Nine';\n\t\t}\n\t}, $arr);\n\treturn\
    \ $arr;\n}\n", "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 =>\
    \ 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9\
    \ => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value > 0 && $value\
    \ < 10) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names = array(\"One\", \"Two\"\
    , \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n \
    \   $result = array();\n    foreach ($arr as $num) {\n        if (in_array($num,\
    \ $nums)) {\n            array_push($result, $num);\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $names[$value - 1];\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 =>\
    \ 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n\
    \        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9\
    \ => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 &&\
    \ $value <= 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four',\
    \ 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach\
    \ ($arr as $key => $value) {\n        if ($value >= 1 && $value <= 9) {\n    \
    \        $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n", "   \
    \ $arr = array_filter($arr, function($item) {\n        return $item >= 1 && $item\
    \ <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr =\
    \ array_map(function($item) {\n        switch ($item) {\n            case 1:\n\
    \                return 'One';\n            case 2:\n                return 'Two';\n\
    \            case 3:\n                return 'Three';\n            case 4:\n \
    \               return 'Four';\n            case 5:\n                return 'Five';\n\
    \            case 6:\n                return 'Six';\n            case 7:\n   \
    \             return 'Seven';\n            case 8:\n                return 'Eight';\n\
    \            case 9:\n                return 'Nine';\n        }\n    }, $arr);\n\
    \    return $arr;\n}\n", "\t$arr = array_filter($arr, function($item) {\n\t\t\
    return $item >= 1 && $item <= 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\
    \t$arr = array_map(function($item) {\n\t\t$map = array(\n\t\t\t1 => 'One',\n\t\
    \t\t2 => 'Two',\n\t\t\t3 => 'Three',\n\t\t\t4 => 'Four',\n\t\t\t5 => 'Five',\n\
    \t\t\t6 => 'Six',\n\t\t\t7 => 'Seven',\n\t\t\t8 => 'Eight',\n\t\t\t9 => 'Nine'\n\
    \t\t);\n\t\treturn $map[$item];\n\t}, $arr);\n\treturn $arr;\n}\n", "    $arr\
    \ = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n  \
    \  });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr = array_map(function($n)\
    \ {\n        switch ($n) {\n            case 1:\n                return 'One';\n\
    \            case 2:\n                return 'Two';\n            case 3:\n   \
    \             return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n",
  "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value <=\
    \ 9) {\n            $result[] = $value;\n        }\n    }\n    rsort($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $number) {\n   \
    \     if ($number >= 1 && $number <= 9) {\n            $result[] = $number;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $number) {\n        $result[$key] = $numbers[$number];\n\
    \    }\n    return $result;\n}\n\necho '<pre>';\nprint_r(by_length([2, 1, 1, 4,\
    \ 5, 8, 2, 3]));\necho '</pre>';\n\necho '<pre>';\nprint_r(by_length([1, -1 ,\
    \ 55]));\necho '</pre>';", "    $arr = array_filter($arr, function($value) {\n\
    \        return $value >= 1 && $value <= 9;\n    });\n    rsort($arr);\n    $arr\
    \ = array_map(function($value) {\n        switch ($value) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers = [\n\
    \        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 =>\
    \ 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n\
    \        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $item)\
    \ {\n        if ($item >= 1 && $item <= 9) {\n            $result[] = $item;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $item) {\n        $result[$key] = $numbers[$item];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($x)\
    \ {\n        return $x >= 1 && $x <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($x) {\n        switch ($x)\
    \ {\n            case 1:\n                return \"One\";\n            case 2:\n\
    \                return \"Two\";\n            case 3:\n                return\
    \ \"Three\";\n            case 4:\n                return \"Four\";\n        \
    \    case 5:\n                return \"Five\";\n            case 6:\n        \
    \        return \"Six\";\n            case 7:\n                return \"Seven\"\
    ;\n            case 8:\n                return \"Eight\";\n            case 9:\n\
    \                return \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n\
    }\n", "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three',\
    \ 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n\
    \    foreach ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n \
    \           $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n", "   \
    \ $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $value) {\n        if (in_array($value, array_keys($numbers)))\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four',\
    \ 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach\
    \ ($arr as $key => $value) {\n        if ($value > 0 && $value < 10) {\n     \
    \       $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n", "   \
    \ $arr = array_filter($arr, function($item) {\n        return $item >= 1 && $item\
    \ <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr =\
    \ array_map(function($item) {\n        switch ($item) {\n            case 1:\n\
    \                return 'One';\n            case 2:\n                return 'Two';\n\
    \            case 3:\n                return 'Three';\n            case 4:\n \
    \               return 'Four';\n            case 5:\n                return 'Five';\n\
    \            case 6:\n                return 'Six';\n            case 7:\n   \
    \             return 'Seven';\n            case 8:\n                return 'Eight';\n\
    \            case 9:\n                return 'Nine';\n        }\n    }, $arr);\n\
    \    return $arr;\n}\n", "    $result = [];\n    $numbers = [1 => 'One', 2 =>\
    \ 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 =>\
    \ 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value >\
    \ 0 && $value < 10) {\n            $result[] = $value;\n        }\n    }\n   \
    \ sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n\nprint_r(by_length([2, 1, 1, 4, 5, 8, 2, 3]));\nprint_r(by_length([1,\
    \ -1 , 55]));", "    $result = [];\n    $numbers = [\n        1 => 'One',\n  \
    \      2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $arr = array_filter($arr, function($n) {\n     \
    \   return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers = [\n\
    \        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 =>\
    \ 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n\
    \        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($n)\
    \ {\n        return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($n) {\n        switch ($n)\
    \ {\n            case 1:\n                return 'One';\n            case 2:\n\
    \                return 'Two';\n            case 3:\n                return 'Three';\n\
    \            case 4:\n                return 'Four';\n            case 5:\n  \
    \              return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    foreach\
    \ ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n            array_push($result,\
    \ $value);\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    $result = array_map(function($value) {\n        switch ($value) {\n     \
    \       case 1:\n                return \"One\";\n            case 2:\n      \
    \          return \"Two\";\n            case 3:\n                return \"Three\"\
    ;\n            case 4:\n                return \"Four\";\n            case 5:\n\
    \                return \"Five\";\n            case 6:\n                return\
    \ \"Six\";\n            case 7:\n                return \"Seven\";\n         \
    \   case 8:\n                return \"Eight\";\n            case 9:\n        \
    \        return \"Nine\";\n        }\n    }, $result);\n    return $result;\n\
    }\n", "    $arr = array_filter($arr, function($val) {\n        return $val >=\
    \ 1 && $val <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($val) {\n        switch ($val) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers = [1 =>\
    \ 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 =>\
    \ 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n     \
    \   if ($value > 0 && $value < 10) {\n            $result[] = $value;\n      \
    \  }\n    }\n    sort($result);\n    $result = array_reverse($result);\n    foreach\
    \ ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n \
    \   }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($v)\
    \ {\n        return $v >= 1 && $v <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($v) {\n        switch ($v)\
    \ {\n            case 1:\n                return 'One';\n            case 2:\n\
    \                return 'Two';\n            case 3:\n                return 'Three';\n\
    \            case 4:\n                return 'Four';\n            case 5:\n  \
    \              return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "\t$arr = array_filter($arr,\
    \ function($n) {\n\t\treturn $n >= 1 && $n <= 9;\n\t});\n\tsort($arr);\n\t$arr\
    \ = array_reverse($arr);\n\t$arr = array_map(function($n) {\n\t\tswitch ($n) {\n\
    \t\t\tcase 1:\n\t\t\t\treturn 'One';\n\t\t\tcase 2:\n\t\t\t\treturn 'Two';\n\t\
    \t\tcase 3:\n\t\t\t\treturn 'Three';\n\t\t\tcase 4:\n\t\t\t\treturn 'Four';\n\t\
    \t\tcase 5:\n\t\t\t\treturn 'Five';\n\t\t\tcase 6:\n\t\t\t\treturn 'Six';\n\t\t\
    \tcase 7:\n\t\t\t\treturn 'Seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'Eight';\n\t\
    \t\tcase 9:\n\t\t\t\treturn 'Nine';\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n",
  "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value <=\
    \ 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $arr = array_filter($arr, function($val) {\n        return $val >= 1 && $val\
    \ <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr =\
    \ array_map(function($val) {\n        switch ($val) {\n            case 1:\n \
    \               return 'One';\n            case 2:\n                return 'Two';\n\
    \            case 3:\n                return 'Three';\n            case 4:\n \
    \               return 'Four';\n            case 5:\n                return 'Five';\n\
    \            case 6:\n                return 'Six';\n            case 7:\n   \
    \             return 'Seven';\n            case 8:\n                return 'Eight';\n\
    \            case 9:\n                return 'Nine';\n        }\n    }, $arr);\n\
    \    return $arr;\n}\n", "    $result = [];\n    $numbers = [1 => 'One', 2 =>\
    \ 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 =>\
    \ 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value >=\
    \ 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n   \
    \ sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    rsort($result);\n    foreach ($result as $key => $value) {\n        $result[$key]\
    \ = $numbers[$value];\n    }\n    return $result;\n}\n", "    $sorted = [];\n\
    \    $result = [];\n    foreach ($arr as $value) {\n        if ($value >= 1 &&\
    \ $value <= 9) {\n            $sorted[] = $value;\n        }\n    }\n    sort($sorted);\n\
    \    $sorted = array_reverse($sorted);\n    foreach ($sorted as $value) {\n  \
    \      switch ($value) {\n            case 1:\n                $result[] = \"\
    One\";\n                break;\n            case 2:\n                $result[]\
    \ = \"Two\";\n                break;\n            case 3:\n                $result[]\
    \ = \"Three\";\n                break;\n            case 4:\n                $result[]\
    \ = \"Four\";\n                break;\n            case 5:\n                $result[]\
    \ = \"Five\";\n                break;\n            case 6:\n                $result[]\
    \ = \"Six\";\n                break;\n            case 7:\n                $result[]\
    \ = \"Seven\";\n                break;\n            case 8:\n                $result[]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 =>\
    \ 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n\
    \        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9\
    \ => 'Nine'\n    ];\n    foreach ($arr as $item) {\n        if ($item > 0 && $item\
    \ < 10) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $item)\
    \ {\n        $result[$key] = $numbers[$item];\n    }\n    return $result;\n}\n",
  "    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n\
    \    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr = array_map(function($n)\
    \ {\n        switch ($n) {\n            case 1:\n                return 'One';\n\
    \            case 2:\n                return 'Two';\n            case 3:\n   \
    \             return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n",
  "    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n\
    \    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr = array_map(function($n)\
    \ {\n        switch ($n) {\n            case 1:\n                return 'One';\n\
    \            case 2:\n                return 'Two';\n            case 3:\n   \
    \             return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n",
  "    $result = [];\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value\
    \ <= 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        switch ($value) {\n            case 1:\n                $result[$key]\
    \ = \"One\";\n                break;\n            case 2:\n                $result[$key]\
    \ = \"Two\";\n                break;\n            case 3:\n                $result[$key]\
    \ = \"Three\";\n                break;\n            case 4:\n                $result[$key]\
    \ = \"Four\";\n                break;\n            case 5:\n                $result[$key]\
    \ = \"Five\";\n                break;\n            case 6:\n                $result[$key]\
    \ = \"Six\";\n                break;\n            case 7:\n                $result[$key]\
    \ = \"Seven\";\n                break;\n            case 8:\n                $result[$key]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[$key]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 =>\
    \ 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n\
    \        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9\
    \ => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 &&\
    \ $value <= 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four',\
    \ 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach\
    \ ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    $filtered = array_filter($arr, function($item)\
    \ {\n        return $item >= 1 && $item <= 9;\n    });\n    sort($filtered);\n\
    \    $filtered = array_reverse($filtered);\n    foreach ($filtered as $item) {\n\
    \        $result[] = $numbers[$item];\n    }\n    return $result;\n}\n", "   \
    \ $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four',\
    \ 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach\
    \ ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $numbers = array(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9);\n    $names = array('One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven',\
    \ 'Eight', 'Nine');\n    $result = array();\n    foreach ($arr as $value) {\n\
    \        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($num)\
    \ {\n        return $num >= 1 && $num <= 9;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($num) {\n        switch\
    \ ($num) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n\
    \    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n\
    \        4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 =>\
    \ 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr\
    \ as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $key => $value)\
    \ {\n        if ($value > 0 && $value < 10) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n    \
    \    }\n    }\n    rsort($result);\n    foreach ($result as $key => $value) {\n\
    \        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $arr = array_filter($arr, function($n) { return $n > 0 && $n < 10; });\n  \
    \  sort($arr);\n    $arr = array_reverse($arr);\n    $arr = array_map(function($n)\
    \ {\n        switch ($n) {\n            case 1: return 'One';\n            case\
    \ 2: return 'Two';\n            case 3: return 'Three';\n            case 4: return\
    \ 'Four';\n            case 5: return 'Five';\n            case 6: return 'Six';\n\
    \            case 7: return 'Seven';\n            case 8: return 'Eight';\n  \
    \          case 9: return 'Nine';\n        }\n    }, $arr);\n    return $arr;\n\
    }\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 =>\
    \ 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n\
    \        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9\
    \ => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 &&\
    \ $value <= 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value <=\
    \ 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four',\
    \ 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach\
    \ ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if (isset($numbers[$value])) {\n            $result[] = $numbers[$value];\n\
    \        }\n    }\n    sort($result);\n    return array_reverse($result);\n}\n",
  "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value <=\
    \ 9) {\n            $result[] = $value;\n        }\n    }\n    rsort($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n    \
    \    }\n    }\n    sort($result);\n    $result = array_reverse($result);\n   \
    \ foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $new_arr = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $num) {\n        if ($num\
    \ >= 1 && $num <= 9) {\n            $new_arr[] = $num;\n        }\n    }\n   \
    \ sort($new_arr);\n    $new_arr = array_reverse($new_arr);\n    foreach ($new_arr\
    \ as $key => $num) {\n        $new_arr[$key] = $numbers[$num];\n    }\n    return\
    \ $new_arr;\n}\n", "    $arr = array_filter($arr, function($num) {\n        return\
    \ $num > 0 && $num < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($num) {\n        switch ($num) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers = [\n\
    \        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 =>\
    \ 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n\
    \        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n    \
    \    }\n    }\n    rsort($result);\n    foreach ($result as $key => $value) {\n\
    \        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    $names = [\"\
    One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\",\
    \ \"Nine\"];\n    foreach ($arr as $value) {\n        if (in_array($value, $numbers))\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $names[$value - 1];\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 =>\
    \ 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n\
    \        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9\
    \ => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 &&\
    \ $value <= 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $new_arr = [];\n    $numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    foreach ($arr\
    \ as $value) {\n        if (in_array($value, $numbers)) {\n            $new_arr[]\
    \ = $value;\n        }\n    }\n    sort($new_arr);\n    $new_arr = array_reverse($new_arr);\n\
    \    $new_arr = array_map(function($value) {\n        switch ($value) {\n    \
    \        case 1:\n                return 'One';\n                break;\n    \
    \        case 2:\n                return 'Two';\n                break;\n    \
    \        case 3:\n                return 'Three';\n                break;\n  \
    \          case 4:\n                return 'Four';\n                break;\n \
    \           case 5:\n                return 'Five';\n                break;\n\
    \            case 6:\n                return 'Six';\n                break;\n\
    \            case 7:\n                return 'Seven';\n                break;\n\
    \            case 8:\n                return 'Eight';\n                break;\n\
    \            case 9:\n                return 'Nine';\n                break;\n\
    \        }\n    }, $new_arr);\n    return $new_arr;\n}\n\nprint_r(by_length([2,\
    \ 1, 1, 4, 5, 8, 2, 3]));\nprint_r(by_length([1, -1 , 55]));\nprint_r(by_length([]));",
  "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four',\
    \ 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach\
    \ ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n    \
    \    }\n    }\n    rsort($result);\n    foreach ($result as $key => $value) {\n\
    \        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value <=\
    \ 9) {\n            $result[] = $value;\n        }\n    }\n    rsort($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n    \
    \    }\n    }\n    sort($result);\n    $result = array_reverse($result);\n   \
    \ foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($item)\
    \ {\n        return $item > 0 && $item < 10;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n\
    \    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five',\
    \ 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as\
    \ $value) {\n        if ($value > 0 && $value < 10) {\n            $result[] =\
    \ $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    rsort($result);\n    foreach ($result as $key => $value) {\n        $result[$key]\
    \ = $numbers[$value];\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    $names = ['One', 'Two', 'Three',\
    \ 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'];\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($item)\
    \ {\n        return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n\
    \    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n\
    \        4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 =>\
    \ 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr\
    \ as $value) {\n        if ($value > 0 && $value < 10) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One', 2 =>\
    \ 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 =>\
    \ 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value >=\
    \ 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n   \
    \ sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One', 2 =>\
    \ 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 =>\
    \ 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value >=\
    \ 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n   \
    \ sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}", "    $arr = array_filter($arr, function($n) {\n       \
    \ return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers = [1 =>\
    \ 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 =>\
    \ 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $key => $value) {\n\
    \        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n\nprint_r(by_length([2, 1, 1, 4, 5, 8, 2, 3]));\n\
    print_r(by_length([1, -1 , 55]));", "    $arr = array_filter($arr, function($item)\
    \ {\n        return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n\
    \    $numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    $names = ['One', 'Two', 'Three',\
    \ 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'];\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n", "    $result = [];\n    $numbers =\
    \ [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six',\
    \ 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n\
    \        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n    \
    \    }\n    }\n    sort($result);\n    $result = array_reverse($result);\n   \
    \ foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($n)\
    \ {\n        return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($n) {\n        switch ($n)\
    \ {\n            case 1:\n                return 'One';\n            case 2:\n\
    \                return 'Two';\n            case 3:\n                return 'Three';\n\
    \            case 4:\n                return 'Four';\n            case 5:\n  \
    \              return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers\
    \ = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six',\
    \ 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n\
    \        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $key => $value) {\n      \
    \  if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n      \
    \  }\n    }\n    sort($result);\n    $result = array_reverse($result);\n    foreach\
    \ ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n \
    \   }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n     \
    \   1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n    \
    \    }\n    }\n    sort($result);\n    $result = array_reverse($result);\n   \
    \ foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\necho '<pre>';\nprint_r(by_length([2, 1, 1, 4, 5, 8, 2, 3]));\n\
    echo '</pre>';\necho '<pre>';\nprint_r(by_length([1, -1 , 55]));\necho '</pre>';\n\
    echo '<pre>';\nprint_r(by_length([]));\necho '</pre>';", "    $result = [];\n\
    \    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n\
    \        4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 =>\
    \ 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr\
    \ as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    rsort($result);\n    foreach ($result as $key\
    \ => $value) {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n\
    }\n", "    $arr = array_filter($arr, function($n) {\n        return $n >= 1 &&\
    \ $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr\
    \ = array_map(function($n) {\n        switch ($n) {\n            case 1:\n   \
    \             return 'One';\n            case 2:\n                return 'Two';\n\
    \            case 3:\n                return 'Three';\n            case 4:\n \
    \               return 'Four';\n            case 5:\n                return 'Five';\n\
    \            case 6:\n                return 'Six';\n            case 7:\n   \
    \             return 'Seven';\n            case 8:\n                return 'Eight';\n\
    \            case 9:\n                return 'Nine';\n        }\n    }, $arr);\n\
    \    return $arr;\n}\n", "    $arr = array_filter($arr, function($num) {\n   \
    \     return $num >= 1 && $num <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($num) {\n        switch ($num) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers = [1 =>\
    \ 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 =>\
    \ 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n     \
    \   if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n     \
    \   }\n    }\n    sort($result);\n    $result = array_reverse($result);\n    foreach\
    \ ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n \
    \   }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9];\n    $names = [\"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"];\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n", "    $result = [];\n    $numbers =\
    \ [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six',\
    \ 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $key => $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n    \
    \    1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n    \
    \    }\n    }\n    rsort($result);\n    foreach ($result as $key => $value) {\n\
    \        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value\
    \ <= 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        switch ($value) {\n            case 1:\n                $result[$key]\
    \ = \"One\";\n                break;\n            case 2:\n                $result[$key]\
    \ = \"Two\";\n                break;\n            case 3:\n                $result[$key]\
    \ = \"Three\";\n                break;\n            case 4:\n                $result[$key]\
    \ = \"Four\";\n                break;\n            case 5:\n                $result[$key]\
    \ = \"Five\";\n                break;\n            case 6:\n                $result[$key]\
    \ = \"Six\";\n                break;\n            case 7:\n                $result[$key]\
    \ = \"Seven\";\n                break;\n            case 8:\n                $result[$key]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[$key]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three',\
    \ 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n\
    \    foreach ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n \
    \           $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n", "   \
    \ $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value <=\
    \ 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n\
    \n$arr = [2, 1, 1, 4, 5, 8, 2, 3];\nprint_r(by_length($arr));", "    $result =\
    \ [];\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value <= 9)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        switch ($value) {\n            case 1:\n                $result[$key]\
    \ = \"One\";\n                break;\n            case 2:\n                $result[$key]\
    \ = \"Two\";\n                break;\n            case 3:\n                $result[$key]\
    \ = \"Three\";\n                break;\n            case 4:\n                $result[$key]\
    \ = \"Four\";\n                break;\n            case 5:\n                $result[$key]\
    \ = \"Five\";\n                break;\n            case 6:\n                $result[$key]\
    \ = \"Six\";\n                break;\n            case 7:\n                $result[$key]\
    \ = \"Seven\";\n                break;\n            case 8:\n                $result[$key]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[$key]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "    $new_arr = [];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $new_arr[] = $value;\n        }\n    }\n\
    \    sort($new_arr);\n    $reverse_arr = array_reverse($new_arr);\n    $result\
    \ = [];\n    foreach ($reverse_arr as $value) {\n        switch ($value) {\n \
    \           case 1:\n                $result[] = \"One\";\n                break;\n\
    \            case 2:\n                $result[] = \"Two\";\n                break;\n\
    \            case 3:\n                $result[] = \"Three\";\n               \
    \ break;\n            case 4:\n                $result[] = \"Four\";\n       \
    \         break;\n            case 5:\n                $result[] = \"Five\";\n\
    \                break;\n            case 6:\n                $result[] = \"Six\"\
    ;\n                break;\n            case 7:\n                $result[] = \"\
    Seven\";\n                break;\n            case 8:\n                $result[]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "\t$arr = array_filter($arr, function($x) {\n\t\treturn $x >= 1 && $x <=\
    \ 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr = array_map(function($x)\
    \ {\n\t\tswitch ($x) {\n\t\t\tcase 1:\n\t\t\t\treturn \"One\";\n\t\t\tcase 2:\n\
    \t\t\t\treturn \"Two\";\n\t\t\tcase 3:\n\t\t\t\treturn \"Three\";\n\t\t\tcase\
    \ 4:\n\t\t\t\treturn \"Four\";\n\t\t\tcase 5:\n\t\t\t\treturn \"Five\";\n\t\t\t\
    case 6:\n\t\t\t\treturn \"Six\";\n\t\t\tcase 7:\n\t\t\t\treturn \"Seven\";\n\t\
    \t\tcase 8:\n\t\t\t\treturn \"Eight\";\n\t\t\tcase 9:\n\t\t\t\treturn \"Nine\"\
    ;\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n", "    $sorted = array_filter($arr,\
    \ function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    sort($sorted);\n\
    \    $reversed = array_reverse($sorted);\n    $mapped = array_map(function($n)\
    \ {\n        switch ($n) {\n            case 1:\n                return 'One';\n\
    \            case 2:\n                return 'Two';\n            case 3:\n   \
    \             return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $reversed);\n    return $mapped;\n\
    }\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 =>\
    \ 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n\
    \        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9\
    \ => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if (in_array($value,\
    \ array_keys($numbers))) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "\t$newArr = [];\n\t$numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9];\n\tforeach ($arr as $key => $value) {\n\t\tif (in_array($value, $numbers))\
    \ {\n\t\t\t$newArr[] = $value;\n\t\t}\n\t}\n\tsort($newArr);\n\t$newArr = array_reverse($newArr);\n\
    \tforeach ($newArr as $key => $value) {\n\t\tswitch ($value) {\n\t\t\tcase 1:\n\
    \t\t\t\t$newArr[$key] = \"One\";\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$newArr[$key]\
    \ = \"Two\";\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t$newArr[$key] = \"Three\"\
    ;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\t$newArr[$key] = \"Four\";\n\t\t\t\t\
    break;\n\t\t\tcase 5:\n\t\t\t\t$newArr[$key] = \"Five\";\n\t\t\t\tbreak;\n\t\t\
    \tcase 6:\n\t\t\t\t$newArr[$key] = \"Six\";\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\
    \t\t\t$newArr[$key] = \"Seven\";\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\t$newArr[$key]\
    \ = \"Eight\";\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\t$newArr[$key] = \"Nine\"\
    ;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $newArr;\n}\n", "    $result = [];\n \
    \   $numbers = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n\
    \        4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 =>\
    \ 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr\
    \ as $key => $value) {\n        if ($value >= 1 && $value <= 9) {\n          \
    \  $result[] = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One', 2 =>\
    \ 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 =>\
    \ 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value >=\
    \ 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n   \
    \ sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $arr = array_filter($arr, function($v) {\n     \
    \   return $v >= 1 && $v <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($v) {\n        switch ($v) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers = [\n\
    \        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 =>\
    \ 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n\
    \        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    rsort($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <= 9;\n\
    \    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr = array_map(function($n)\
    \ {\n        switch ($n) {\n            case 1:\n                return 'One';\n\
    \            case 2:\n                return 'Two';\n            case 3:\n   \
    \             return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n",
  "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four',\
    \ 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach\
    \ ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "\t$result = [];\n\t$numbers = [1 => 'One', 2 => 'Two',\
    \ 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight',\
    \ 9 => 'Nine'];\n\tforeach ($arr as $value) {\n\t\tif ($value >= 1 && $value <=\
    \ 9) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\t$result = array_reverse($result);\n\
    \tforeach ($result as $key => $value) {\n\t\t$result[$key] = $numbers[$value];\n\
    \t}\n\treturn $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $sorted = [];\n    $numbers =\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    $names = ['One', 'Two', 'Three', 'Four', 'Five',\
    \ 'Six', 'Seven', 'Eight', 'Nine'];\n    foreach ($arr as $value) {\n        if\
    \ (in_array($value, $numbers)) {\n            $sorted[] = $value;\n        }\n\
    \    }\n    sort($sorted);\n    $sorted = array_reverse($sorted);\n    foreach\
    \ ($sorted as $value) {\n        $result[] = $names[$value - 1];\n    }\n    return\
    \ $result;\n}\n", "    $array = [];\n    $array_sort = [];\n    $array_sort_reverse\
    \ = [];\n    $array_sort_reverse_name = [];\n    foreach ($arr as $value) {\n\
    \        if ($value >= 1 && $value <= 9) {\n            $array[] = $value;\n \
    \       }\n    }\n    sort($array);\n    $array_sort = $array;\n    $array_sort_reverse\
    \ = array_reverse($array_sort);\n    foreach ($array_sort_reverse as $value) {\n\
    \        if ($value == 1) {\n            $array_sort_reverse_name[] = \"One\"\
    ;\n        } elseif ($value == 2) {\n            $array_sort_reverse_name[] =\
    \ \"Two\";\n        } elseif ($value == 3) {\n            $array_sort_reverse_name[]\
    \ = \"Three\";\n        } elseif ($value == 4) {\n            $array_sort_reverse_name[]\
    \ = \"Four\";\n        } elseif ($value == 5) {\n            $array_sort_reverse_name[]\
    \ = \"Five\";\n        } elseif ($value == 6) {\n            $array_sort_reverse_name[]\
    \ = \"Six\";\n        } elseif ($value == 7) {\n            $array_sort_reverse_name[]\
    \ = \"Seven\";\n        } elseif ($value == 8) {\n            $array_sort_reverse_name[]\
    \ = \"Eight\";\n        } elseif ($value == 9) {\n            $array_sort_reverse_name[]\
    \ = \"Nine\";\n        }\n    }\n    return $array_sort_reverse_name;\n}\n", " \
    \   $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 =>\
    \ 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n\
    \    foreach ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n \
    \           $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n", "\t$arr\
    \ = array_filter($arr, function($num) {\n\t\treturn $num >= 1 && $num <= 9;\n\t\
    });\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr = array_map(function($num)\
    \ {\n\t\tswitch ($num) {\n\t\t\tcase 1:\n\t\t\t\treturn 'One';\n\t\t\tcase 2:\n\
    \t\t\t\treturn 'Two';\n\t\t\tcase 3:\n\t\t\t\treturn 'Three';\n\t\t\tcase 4:\n\
    \t\t\t\treturn 'Four';\n\t\t\tcase 5:\n\t\t\t\treturn 'Five';\n\t\t\tcase 6:\n\
    \t\t\t\treturn 'Six';\n\t\t\tcase 7:\n\t\t\t\treturn 'Seven';\n\t\t\tcase 8:\n\
    \t\t\t\treturn 'Eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'Nine';\n\t\t}\n\t}, $arr);\n\
    \treturn $arr;\n}\n", "    $new_arr = [];\n    foreach ($arr as $value) {\n  \
    \      if ($value > 0 && $value < 10) {\n            $new_arr[] = $value;\n  \
    \      }\n    }\n    sort($new_arr);\n    $reverse_arr = array_reverse($new_arr);\n\
    \    $result = [];\n    foreach ($reverse_arr as $value) {\n        switch ($value)\
    \ {\n            case 1:\n                $result[] = \"One\";\n             \
    \   break;\n            case 2:\n                $result[] = \"Two\";\n      \
    \          break;\n            case 3:\n                $result[] = \"Three\"\
    ;\n                break;\n            case 4:\n                $result[] = \"\
    Four\";\n                break;\n            case 5:\n                $result[]\
    \ = \"Five\";\n                break;\n            case 6:\n                $result[]\
    \ = \"Six\";\n                break;\n            case 7:\n                $result[]\
    \ = \"Seven\";\n                break;\n            case 8:\n                $result[]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "    $arr = array_filter($arr, function($item) {\n        return $item >=\
    \ 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers\
    \ = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n     \
    \   4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n\
    \        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $new_arr = [];\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            array_push($new_arr,\
    \ $value);\n        }\n    }\n    sort($new_arr);\n    $reverse_arr = array_reverse($new_arr);\n\
    \    $result = [];\n    foreach ($reverse_arr as $value) {\n        switch ($value)\
    \ {\n            case 1:\n                array_push($result, \"One\");\n    \
    \            break;\n            case 2:\n                array_push($result,\
    \ \"Two\");\n                break;\n            case 3:\n                array_push($result,\
    \ \"Three\");\n                break;\n            case 4:\n                array_push($result,\
    \ \"Four\");\n                break;\n            case 5:\n                array_push($result,\
    \ \"Five\");\n                break;\n            case 6:\n                array_push($result,\
    \ \"Six\");\n                break;\n            case 7:\n                array_push($result,\
    \ \"Seven\");\n                break;\n            case 8:\n                array_push($result,\
    \ \"Eight\");\n                break;\n            case 9:\n                array_push($result,\
    \ \"Nine\");\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "    $arr = array_filter($arr, function($item) {\n        return $item >=\
    \ 1 && $item <= 9;\n    });\n    rsort($arr);\n    $arr = array_map(function($item)\
    \ {\n        switch ($item) {\n            case 1:\n                return 'One';\n\
    \            case 2:\n                return 'Two';\n            case 3:\n   \
    \             return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n",
  "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value <=\
    \ 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four',\
    \ 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach\
    \ ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($item)\
    \ {\n        return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n\nprint_r(by_length([2,\
    \ 1, 1, 4, 5, 8, 2, 3]));\nprint_r(by_length([1, -1 , 55]));\nprint_r(by_length([]));",
  "  $result = [];\n  $numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  $names = [\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    ];\n  foreach ($arr as $value) {\n    if (in_array($value, $numbers)) {\n    \
    \  $result[] = $value;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $names[$value -\
    \ 1];\n  }\n  return $result;\n}\n", "    $result = [];\n    $numbers = [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9];\n    $names = [\"One\", \"Two\", \"Three\", \"Four\",\
    \ \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"];\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n", "    $result = [];\n    $numbers =\
    \ [1 => 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six',\
    \ 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n\
    \        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($num)\
    \ {\n        return $num >= 1 && $num <= 9;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($num) {\n        switch\
    \ ($num) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n\
    \    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n\
    \        4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 =>\
    \ 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr\
    \ as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($item)\
    \ {\n        return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n\
    \    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n\
    \        4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 =>\
    \ 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr\
    \ as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One', 2 =>\
    \ 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 =>\
    \ 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value >=\
    \ 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n   \
    \ sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One', 2 =>\
    \ 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 =>\
    \ 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n        if ($value >=\
    \ 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n   \
    \ sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $item) {\n        if ($item\
    \ >= 1 && $item <= 9) {\n            $result[] = $item;\n        }\n    }\n  \
    \  sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $item) {\n        $result[$key] = $numbers[$item];\n    }\n    return\
    \ $result;\n}\n", "    $arr = array_filter($arr, function($num) {\n        return\
    \ $num >= 1 && $num <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($num) {\n        switch ($num) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers = [\n\
    \        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 =>\
    \ 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n\
    \        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $key\
    \ => $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    rsort($result);\n    foreach ($result as $key\
    \ => $value) {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n\
    }\n", "    $arr = array_filter($arr, function($el) {\n        return $el >= 1\
    \ && $el <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n  \
    \  $arr = array_map(function($el) {\n        switch ($el) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers = [1 =>\
    \ 'One', 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 =>\
    \ 'Seven', 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $value) {\n     \
    \   if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n     \
    \   }\n    }\n    sort($result);\n    $result = array_reverse($result);\n    foreach\
    \ ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n \
    \   }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n     \
    \   1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $number) {\n   \
    \     if (array_key_exists($number, $numbers)) {\n            $result[] = $numbers[$number];\n\
    \        }\n    }\n    rsort($result);\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($arr as $item) {\n        if ($item >= 1 && $item <= 9)\
    \ {\n            array_push($result, $item);\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    $result = array_map(function($item)\
    \ {\n        switch ($item) {\n            case 1:\n                return 'One';\n\
    \            case 2:\n                return 'Two';\n            case 3:\n   \
    \             return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $result);\n    return $result;\n\
    }\n", "\t$arr = array_filter($arr, function($n) {\n\t\treturn $n >= 1 && $n <=\
    \ 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr = array_map(function($n)\
    \ {\n\t\treturn [\n\t\t\t1 => 'One',\n\t\t\t2 => 'Two',\n\t\t\t3 => 'Three',\n\
    \t\t\t4 => 'Four',\n\t\t\t5 => 'Five',\n\t\t\t6 => 'Six',\n\t\t\t7 => 'Seven',\n\
    \t\t\t8 => 'Eight',\n\t\t\t9 => 'Nine'\n\t\t][$n];\n\t}, $arr);\n\treturn $arr;\n\
    }\n", "    $result = [];\n    $numbers = [1 => 'One', 2 => 'Two', 3 => 'Three',\
    \ 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n\
    \    foreach ($arr as $key => $value) {\n        if ($value > 0 && $value < 10)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

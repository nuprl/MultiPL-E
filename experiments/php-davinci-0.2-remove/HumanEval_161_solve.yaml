name: HumanEval_161_solve
language: php
prompt: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
  \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If\
  \ the string contains no letters, reverse the string.\n// The function should return\
  \ the resulted string.\n// Examples\nfunction solve($s) {\n"
tests: "function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\")\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"\
  #$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#ccc\"\
  ) !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $str = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n       \
    \ if (ctype_alpha($s[$i])) {\n            if (ctype_upper($s[$i])) {\n       \
    \         $str .= strtolower($s[$i]);\n            } else {\n                $str\
    \ .= strtoupper($s[$i]);\n            }\n        } else {\n            $str .=\
    \ $s[$i];\n        }\n    }\n    return $str;\n}\n", "    if (preg_match('/[a-z]/',\
    \ $s)) {\n        return strtolower($s);\n    }\n    if (preg_match('/[A-Z]/',\
    \ $s)) {\n        return strtoupper($s);\n    }\n    return strrev($s);\n}\n",
  "    $result = \"\";\n    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters\
    \ .= strtoupper($letters);\n    $letters = str_split($letters);\n    $s = str_split($s);\n\
    \    foreach ($s as $char) {\n        if (in_array($char, $letters)) {\n     \
    \       $result .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters\
    \ = str_split($letters);\n    $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  \
    \  $letters2 = str_split($letters2);\n    $s = str_split($s);\n    $new = [];\n\
    \    $count = 0;\n    foreach($s as $char){\n        if(in_array($char, $letters)){\n\
    \            $count++;\n            $new[] = strtoupper($char);\n        } else\
    \ if(in_array($char, $letters2)){\n            $count++;\n            $new[] =\
    \ strtolower($char);\n        } else {\n            $new[] = $char;\n        }\n\
    \    }\n    if($count == 0){\n        return strrev(implode(\"\", $new));\n  \
    \  }\n    return implode(\"\", $new);\n}\n", "    $result = '';\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n          \
    \  $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $letters = array_filter($s, function($v)\
    \ {\n        return ctype_alpha($v);\n    });\n    if(empty($letters)) {\n   \
    \     return strrev($s);\n    }\n    $s = array_map(function($v) {\n        return\
    \ ctype_alpha($v) ? strtolower($v) == $v ? strtoupper($v) : strtolower($v) : $v;\n\
    \    }, $s);\n    return implode('', $s);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    $result = [];\n    foreach ($s as\
    \ $char) {\n        if (in_array($char, $letters)) {\n            if (ctype_lower($char))\
    \ {\n                $result[] = strtoupper($char);\n            } else {\n  \
    \              $result[] = strtolower($char);\n            }\n        } else {\n\
    \            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters\
    \ = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $letters = array_flip($letters);\n    $s = str_split($s);\n\
    \    foreach ($s as $char) {\n        if (isset($letters[$char])) {\n        \
    \    $result .= $char === strtolower($char) ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $res = [];\n    $letters = [];\n\
    \    foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n  \
    \          $letters[] = $value;\n        } else {\n            $res[] = $value;\n\
    \        }\n    }\n    if (count($letters) === 0) {\n        return strrev(implode('',\
    \ $res));\n    }\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $res[] = strtolower($value) === $value ? strtoupper(array_pop($letters))\
    \ : strtolower(array_pop($letters));\n        }\n    }\n    return implode('',\
    \ $res);\n}\n", "    $letters = str_split($s);\n    $result = [];\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[]\
    \ = strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $s = str_split($s);\n    $result = [];\n \
    \   foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $result[]\
    \ = strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $letters = array_flip($letters);\n    $s = str_split($s);\n\
    \    foreach ($s as $char) {\n        if (isset($letters[$char])) {\n        \
    \    $result .= $char == strtoupper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtolower($s[$i])\
    \ == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $s = str_split($s);\n    $result = '';\n    foreach ($s as $char) {\n    \
    \    if (ctype_alpha($char)) {\n            $result .= strtolower($char) === $char\
    \ ? strtoupper($char) : strtolower($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map(\"\
    strtoupper\", $letters));\n    $s = str_split($s);\n    $result = [];\n    foreach\
    \ ($s as $char) {\n        if (in_array($char, $letters)) {\n            $result[]\
    \ = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n    \
    \    } else {\n            $result[] = $char;\n        }\n    }\n    return implode(\"\
    \", $result);\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach\
    \ ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $letters = str_split($s);\n    $result = [];\n    $hasLetters = false;\n\
    \    foreach ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n  \
    \          $hasLetters = true;\n            if (ctype_lower($letter)) {\n    \
    \            $result[] = strtoupper($letter);\n            } else {\n        \
    \        $result[] = strtolower($letter);\n            }\n        } else {\n \
    \           $result[] = $letter;\n        }\n    }\n    if ($hasLetters) {\n \
    \       return implode('', $result);\n    } else {\n        return strrev($s);\n\
    \    }\n}\n\necho solve('Hello World');\necho solve('Hello-LOL');\necho solve('Sup\
    \ DUDE!!?');\necho solve('12345');\necho solve('123456789');\necho solve('123456789a');\n\
    echo solve('123456789A');\necho solve('123456789aA');\necho solve('123456789aAa');\n\
    echo solve('123456789aAaA');\necho solve('123456789aAaAa');\necho solve('123456789aAaAaA');\n\
    echo solve('123456789aAaAaAa');\necho solve('123456789aAaAaAaA');\necho solve('123456789aAaAaAaAa');\n\
    echo solve('123456789aAaAaAaAaA');\necho solve('123456789aAaAaAaAaAa');\necho\
    \ solve('123456789aAaAaAaAaAaA');\necho solve('123456789aAaAaAaAaAaAa');\necho\
    \ solve('123456789aAaAaAaAaAaAaA');\necho solve('123456789aAaAaAaAaAaAaAa');\n\
    echo solve('123456789aAaAaAaAaAaAaAaA');\necho solve('123456789aAaAaAaAaA", " \
    \   $s = str_split($s);\n    $res = [];\n    $letters = [];\n    foreach ($s as\
    \ $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $value;\n        } else {\n            $res[] = $value;\n        }\n    }\n\
    \    if (count($letters) == 0) {\n        return strrev(implode($res));\n    }\n\
    \    foreach ($letters as $key => $value) {\n        if (ctype_lower($value))\
    \ {\n            $res[] = strtoupper($value);\n        } else {\n            $res[]\
    \ = strtolower($value);\n        }\n    }\n    return implode($res);\n}\n\necho\
    \ solve(\"abc\"); // \"ABC\"\necho solve(\"abcABC123\"); // \"ABCabc123\"\necho\
    \ solve(\"abcABC123!@\u20AC\xA3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"); // \"ABCabc123!@\u20AC\
    \xA3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"\necho solve(\"\"); // \"\"\necho solve(\"\
    123456789\"); // \"987654321\"\necho solve(\"abcdefghijklmnopqrstuvwxyz\"); //\
    \ \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\necho solve(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\");\
    \ // \"abcdefghijklmnopqrstuvwxyz\"\necho solve(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ); // \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\necho solve(\"\
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_-+=}{[]|\\\
    ':;?/>.<,~\"); // \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopq", "    $letters\
    \ = range('a', 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n\
    \    $letters = array_flip($letters);\n    $s = str_split($s);\n    $s = array_map(function($v)\
    \ use ($letters) {\n        if (isset($letters[$v])) {\n            return $v\
    \ === strtolower($v) ? strtoupper($v) : strtolower($v);\n        }\n        return\
    \ $v;\n    }, $s);\n    return implode('', $s);\n}\n", "    $letters = str_split($s);\n\
    \    $newString = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $newString .= strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $newString .= $letter;\n\
    \        }\n    }\n    return $newString;\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            if (ctype_upper($letter)) {\n                $result[] = strtolower($letter);\n\
    \            } else {\n                $result[] = strtoupper($letter);\n    \
    \        }\n        } else {\n            $result[] = $letter;\n        }\n  \
    \  }\n    return implode('', $result);\n}\n\necho solve('Hello World');", "  \
    \  $s = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n     \
    \   if (ctype_alpha($char)) {\n            $result[] = strtoupper($char) === $char\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $result[]\
    \ = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho solve('Hello\
    \ World'); // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('HELLOworld');\
    \ // helloWORLD\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\n\
    echo solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('DIGEST'); // digest\necho solve('AL-AZHAR'); // al-azhar\n\
    echo solve('al-azhar'); // AL-AZHAR\necho solve('CodeWars'); // cODEwARS\necho\
    \ solve('AaBbCcDdEe'); // aAbBcCdDeE\necho solve('Hello World!'); // hELLO wORLD!\n\
    echo solve('Hello World! 123'); // hELLO wORLD! 123\necho solve('Hello World!\
    \ 123!'); // hELLO wORLD! 123!\necho solve('Hello World! 123!!'); // hELLO wORLD!\
    \ 123!!\necho solve('Hello World! 123!!!'); // hELLO wORLD! 123!!!\necho solve('Hello\
    \ World! 123!!!!'); // hELLO wORLD! 123!!!!\necho solve('Hello World! 123!!!!!');\
    \ // hELLO wORLD! 123!!!!!\necho solve('Hello World! 123!!!!!!'); // hELLO wORLD!\
    \ 123!!!!!!\necho solve('Hello World! 123!!!!!!!'); // hELLO wORLD! 123!!!!!!!\n\
    echo solve('Hello World! 123!!!!!!!!'); // hELLO wORLD! 123!!!!!!!!\necho solve('Hello\
    \ World! 123!!!!!!!!!'); // hELLO wORLD! 123!!!!!!!!!\necho solve('Hello", " \
    \   $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n    $result\
    \ = [];\n    $letters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $result[]\
    \ = $char;\n        }\n    }\n    if (count($letters) === 0) {\n        return\
    \ strrev(implode('', $result));\n    }\n    foreach ($result as $char) {\n   \
    \     if (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else\
    \ {\n            $letters[] = $char;\n        }\n    }\n    return implode('',\
    \ $letters);\n}\n\necho solve('aBcD'); // 'AbCd'\necho solve('aBcD123'); // 'AbCd123'\n\
    echo solve('123'); // '321'\necho solve('aBcDeF'); // 'AbCdEf'\necho solve('aBcDeF123');\
    \ // 'AbCdEf123'\necho solve('123aBcDeF'); // '321AbCdEf'\necho solve('123aBcDeF456');\
    \ // '321AbCdEf456'\necho solve('abcdeFGHIJklmnOPQRStuvWXYZ'); // 'ABCDefghijKLMNopqrSTUvwxyz'\n\
    echo solve('abcdeFGHIJklmnOPQRStuvWXYZ123'); // 'ABCDefghijKLMNopqrSTUvwxyz123'\n\
    echo solve('abcdeFGHIJklmnOPQRStuvWXYZ1234567890'); // 'ABCDefghijKLMNopqrSTUvwxyz1234567890'\n\
    echo solve('abcdeFGHIJklmnOPQRStuvWXYZ1234567890!@#$%^&*()_+'); // 'ABCDefghijKLMNopqrSTUvwxyz1234567890!@#$%^&*()_+'\n\
    echo solve('abcdeFGHIJklmnOPQRStuvWXYZ1234567890!@#$%^", "    $letters = str_split($s);\n\
    \    $result = \"\";\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result .= $letter;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters .= strtoupper($letters);\n    $result = '';\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if (strpos($letters, $s[$i]) !== false) {\n \
    \           $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('hello'); // 'HELLO'\necho solve('HELLO'); // 'hello'\n\
    echo solve('12345'); // '12345'\necho solve('1a2b3c4d5e'); // '1A2B3C4D5E'\necho\
    \ solve('String.prototype.charAt'); // 'sTRING.PROTOTYPE.CHARAT'\necho solve('');\
    \ // ''\necho solve(' '); // ' '\necho solve('a'); // 'A'\necho solve('A'); //\
    \ 'a'\necho solve('.'); // '.'\necho solve('aA'); // 'Aa'\necho solve('ab'); //\
    \ 'AB'\necho solve('aB'); // 'Ab'\necho solve('abC'); // 'ABc'\necho solve('aBc');\
    \ // 'AbC'\necho solve('aBc123'); // 'AbC123'\necho solve('aBc123!@#'); // 'AbC123!@#'\n\
    echo solve('aBc123!@# '); // 'AbC123!@# '\necho solve('aBc123!@# $%^&*()_+');\
    \ // 'AbC123!@# $%^&*()_+'\necho solve('aBc123!@# $%^&*()_+=-'); // 'AbC123!@#\
    \ $%^&*()_+=-'\necho solve('aBc123!@# $%^&*()_+=-[]{}|;:<>,.?/'); // 'AbC", " \
    \   $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World');\necho solve('Hello-LOL');\n\
    echo solve('Sup DUDE!!?');\necho solve('12345');\necho solve('0');\necho solve('a');\n\
    echo solve('A');\necho solve('z');\necho solve('Z');\necho solve('aA');\necho\
    \ solve('zZ');\necho solve('aBcDeFg123');\necho solve('aBcDeFg123!@#$%^&*()_+');\n\
    echo solve('abcdefghijklmnopqrstuvwxyz');\necho solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    echo solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\necho solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890');\n\
    echo solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-=~!@#$%^&*()_+');\n\
    echo solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-=~!@#$%^&*()_+[]{}\\\
    \\|;:\\'\",./<>?');\necho solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-=~!@#$%^&*()_+[]{}\\\
    \\|;:\\'", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n   \
    \     if (ctype_alpha($s[$i])) {\n            $result .= strtolower($s[$i]) ==\
    \ $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n      \
    \      $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s\
    \ = str_split($s);\n    $letters = [];\n    $nonLetters = [];\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        } else {\n            $nonLetters[] = $char;\n        }\n    }\n    if\
    \ (count($letters) === 0) {\n        return strrev(implode($nonLetters));\n  \
    \  }\n    $letters = array_map(function ($char) {\n        if (ctype_upper($char))\
    \ {\n            return strtolower($char);\n        }\n        return strtoupper($char);\n\
    \    }, $letters);\n    return implode($letters) . implode($nonLetters);\n}\n",
  "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = str_split($s);\n    $result = '';\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result\
    \ .= strtolower($letter) === $letter ? strtoupper($letter) : strtolower($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('abcd');\necho solve('aBcD');\necho solve('aBcDe');\n\
    echo solve('aBcDeF');\necho solve('aBcDeFG');\necho solve('aBcDeFGh');\necho solve('aBcDeFGhI');\n\
    echo solve('aBcDeFGhIJ');\necho solve('aBcDeFGhIJk');\necho solve('aBcDeFGhIJkL');\n\
    echo solve('aBcDeFGhIJkLM');\necho solve('aBcDeFGhIJkLMn');\necho solve('aBcDeFGhIJkLMnO');\n\
    echo solve('aBcDeFGhIJkLMnOp');\necho solve('aBcDeFGhIJkLMnOpQ');\necho solve('aBcDeFGhIJkLMnOpQr');\n\
    echo solve('aBcDeFGhIJkLMnOpQrS');\necho solve('aBcDeFGhIJkLMnOpQrSt');\necho\
    \ solve('aBcDeFGhIJkLMnOpQrStU');\necho solve('aBcDeFGhIJkLMnOpQrStUv');\necho\
    \ solve('aBcDeFGhIJkLMnOpQrStUvW');\necho solve('aBcDeFGhIJkLMnOpQrStUvWx');\n\
    echo solve('aBcDeFGhIJkLMnOpQrStUvWxY');\necho solve('aBcDeFGhIJkLMnOpQrStUvWxYz');\n\
    echo solve('aBcDeFGhIJkLMnOpQrStUvWxYz0123456789');\necho solve('", "    $result\
    \ = '';\n    if (ctype_alpha($s)) {\n        for ($i = 0; $i < strlen($s); $i++)\
    \ {\n            if (ctype_upper($s[$i])) {\n                $result .= strtolower($s[$i]);\n\
    \            } else {\n                $result .= strtoupper($s[$i]);\n      \
    \      }\n        }\n    } else {\n        $result = strrev($s);\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtolower($s[$i])\
    \ == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $s = str_split($s);\n    $str = '';\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $str .= strtoupper($value) ==\
    \ $value ? strtolower($value) : strtoupper($value);\n        } else {\n      \
    \      $str .= $value;\n        }\n    }\n    return $str;\n}\n\necho solve(\"\
    Hello World\");\necho solve(\"HELLO WORLD\");\necho solve(\"HELLOworld\");\necho\
    \ solve(\"12345\");\necho solve(\"1A2B3C4D5E\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String,with,Punctuation*s\");\necho solve(\"String,with,Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punctuation*s\");\necho solve(\"String.with.Punctuation*s\"\
    );\necho solve(\"String.with.Punct", "    $s = str_split($s);\n    $result = [];\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        } else {\n            $result[]\
    \ = $value;\n        }\n    }\n    if (count($letters) > 0) {\n        $letters\
    \ = array_reverse($letters);\n        foreach ($letters as $key => $value) {\n\
    \            $result[] = $value;\n        }\n    } else {\n        $result = array_reverse($result);\n\
    \    }\n    return implode('', $result);\n}\n\necho solve('aBcDeFgH'); // hGFedCBA\n\
    echo solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho\
    \ solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH');\
    \ // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); //\
    \ hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\n\
    echo solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho\
    \ solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH');\
    \ // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); //\
    \ hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\necho solve('aBcDeFgH'); // hGFedCBA\n\
    echo solve('aBcDeFgH", "    $letters = str_split($s);\n    $reversed = [];\n \
    \   foreach ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n   \
    \         $reversed[] = ctype_lower($letter) ? strtoupper($letter) : strtolower($letter);\n\
    \        } else {\n            $reversed[] = $letter;\n        }\n    }\n    return\
    \ implode('', $reversed);\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtolower($s[$i])\
    \ == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho\
    \ solve('Hello World');\necho solve('Hello-LOL');\necho solve('Sup DUDE!!?');\n\
    echo solve('aBc');\necho solve('aBc12');\necho solve('aBc12?!');\necho solve('aBc12?!a');\n\
    echo solve('aBc12?!A');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\n\
    echo solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\n\
    echo solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\n\
    echo solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\n\
    echo solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\n\
    echo solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\n\
    echo solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\n\
    echo solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\n\
    echo solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\necho solve('aBc12?!Aa');\n\
    echo solve('a", "    $letters = str_split($s);\n    $result = '';\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result\
    \ .= strtolower($letter) == $letter ? strtoupper($letter) : strtolower($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            if (ctype_upper($s[$i]))\
    \ {\n                $result .= strtolower($s[$i]);\n            } else {\n  \
    \              $result .= strtoupper($s[$i]);\n            }\n        } else {\n\
    \            $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\n\
    echo solve(\"Hello World\");", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $letters = array_flip($letters);\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (isset($letters[$char]))\
    \ {\n            $result[] = $char === strtolower($char) ? strtoupper($char) :\
    \ strtolower($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n", "    $s = str_split($s);\n\
    \    $newString = \"\";\n    $hasLetters = false;\n    for ($i = 0; $i < count($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $hasLetters = true;\n\
    \            if (ctype_upper($s[$i])) {\n                $newString .= strtolower($s[$i]);\n\
    \            } else {\n                $newString .= strtoupper($s[$i]);\n   \
    \         }\n        } else {\n            $newString .= $s[$i];\n        }\n\
    \    }\n    if ($hasLetters) {\n        return $newString;\n    } else {\n   \
    \     return strrev($newString);\n    }\n}\n\necho solve(\"abc\") . \"\\n\"; //\
    \ \"ABC\"\necho solve(\"abcABC123\") . \"\\n\"; // \"ABCabc123\"\necho solve(\"\
    CodeWars\") . \"\\n\"; // \"cODEwARS\"\necho solve(\"abcABC123!@\u20AC\xA3#$%^&*()_-+=}{[]|\\\
    ':;?/>.<,~\") . \"\\n\"; // \"ABCabc123!@\u20AC\xA3#$%^&*()_-+=}{[]|\\':;?/>.<,~\"\
    \necho solve(\"\") . \"\\n\"; // \"\"\necho solve(\"123456789\") . \"\\n\"; //\
    \ \"987654321\"\necho solve(\"abcdefghijklmnopqrstuvwxyz\") . \"\\n\"; // \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \necho solve(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") . \"\\n\"; // \"abcdefghijklmnopqrstuvwxyz\"\
    \necho solve(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\") . \"\\\
    n\"; // \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\necho solve(\"\
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJK", "    $result = '';\n    $letters = range('a',\
    \ 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $letters)) {\n   \
    \         $result .= $s[$i] === strtolower($s[$i]) ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    $s = str_split($s);\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $result .= strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result .= $char;\n        }\n    }\n    return $result;\n}\n", "    $s\
    \ = str_split($s);\n    $letters = array_filter($s, function($v) {\n        return\
    \ ctype_alpha($v);\n    });\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    foreach ($s as $k => $v) {\n        if (ctype_alpha($v)) {\n     \
    \       $s[$k] = strtolower($v) === $v ? strtoupper($v) : strtolower($v);\n  \
    \      }\n    }\n    return implode('', $s);\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = strtoupper($letter) === $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return implode('', $result);\n}\n", "    $result = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('Hello World');\necho solve('Hello-LOL');\necho solve('Sup\
    \ DUDE!!?');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho", "    $s = str_split($s);\n    $letters = [];\n  \
    \  foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n    \
    \        $letters[] = $key;\n        }\n    }\n    if (count($letters) == 0) {\n\
    \        return strrev($s);\n    }\n    foreach ($letters as $key => $value) {\n\
    \        if (ctype_lower($s[$value])) {\n            $s[$value] = strtoupper($s[$value]);\n\
    \        } else {\n            $s[$value] = strtolower($s[$value]);\n        }\n\
    \    }\n    return implode($s);\n}\n", "    $s = str_split($s);\n    $letters\
    \ = [];\n    $noLetters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $noLetters[]\
    \ = $char;\n        }\n    }\n    if (count($letters) === 0) {\n        return\
    \ strrev(implode('', $noLetters));\n    }\n    $letters = array_map(function ($letter)\
    \ {\n        return ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \    }, $letters);\n    return implode('', $letters) . implode('', $noLetters);\n\
    }\n", "    $s = str_split($s);\n    $res = [];\n    foreach ($s as $char) {\n\
    \        if (ctype_alpha($char)) {\n            $res[] = strtoupper($char) ==\
    \ $char ? strtolower($char) : strtoupper($char);\n        } else {\n         \
    \   $res[] = $char;\n        }\n    }\n    return implode('', $res);\n}\n", " \
    \   $letters = str_split($s);\n    $result = '';\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ == $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    echo solve('abc') . PHP_EOL; // 'ABC'\necho solve('abcABC123') . PHP_EOL; // 'ABCabc123'\n\
    echo solve('CodeWars') . PHP_EOL; // 'cODEwARS'\necho solve('Hello World') . PHP_EOL;\
    \ // 'hELLO wORLD'\necho solve('HELLO WORLD') . PHP_EOL; // 'hello world'\necho\
    \ solve('12345') . PHP_EOL; // '12345'\necho solve('1a2b3c4d5e') . PHP_EOL; //\
    \ '1A2B3C4D5E'\necho solve('String.prototype.toAlternatingCase') . PHP_EOL; //\
    \ 'sTRING.PROTOTYPE.TOaLTERNATINGcASE'\necho solve('Hello World') . PHP_EOL; //\
    \ 'hELLO wORLD'\necho solve('hello world') . PHP_EOL; // 'HELLO WORLD'\necho solve('HELLO\
    \ WORLD') . PHP_EOL; // 'hello world'\necho solve('hello WORLD') . PHP_EOL; //\
    \ 'HELLO world'\necho solve('HeLLo WoRLD') . PHP_EOL; // 'hEllO wOrld'\necho solve('12345')\
    \ . PHP_EOL; // '12345'\necho solve('1a2b3c4d5e') . PHP_EOL; // '1A2B3C4D5E'\n\
    echo solve('String.prototype.toAlternatingCase') . PHP_EOL; // 'sTRING.PROTOTYPE.TOaLTERNATINGcASE'\n\
    echo solve('Hello World') . PHP_EOL; // 'hELLO wORLD'", "    $result = \"\";\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            if (ctype_upper($s[$i])) {\n                $result .= strtolower($s[$i]);\n\
    \            } else {\n                $result .= strtoupper($s[$i]);\n      \
    \      }\n        } else {\n            $result .= $s[$i];\n        }\n    }\n\
    \    return $result;\n}\n\n$s = \"Hello World\";\necho solve($s);", "    $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters .= strtoupper($letters);\n \
    \   $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= $s[$i] == strtolower($s[$i]) ?\
    \ strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n\
    \    $letters = [];\n    $others = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $letters[] = $char;\n        } else {\n\
    \            $others[] = $char;\n        }\n    }\n    $letters = array_map(function($letter)\
    \ {\n        return ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \    }, $letters);\n    $s = array_merge($letters, $others);\n    return implode('',\
    \ $s);\n}\n", "    $s = str_split($s);\n    $new_s = [];\n    $letters = [];\n\
    \    foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n  \
    \          $letters[] = $value;\n        }\n    }\n    if (count($letters) ==\
    \ 0) {\n        return strrev($s);\n    }\n    foreach ($s as $key => $value)\
    \ {\n        if (ctype_alpha($value)) {\n            $new_s[] = strtoupper($value)\
    \ == $value ? strtolower($value) : strtoupper($value);\n        } else {\n   \
    \         $new_s[] = $value;\n        }\n    }\n    return implode($new_s);\n\
    }\n", "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            if (ctype_upper($letter))\
    \ {\n                $result[] = strtolower($letter);\n            } else {\n\
    \                $result[] = strtoupper($letter);\n            }\n        } else\
    \ {\n            $result[] = $letter;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n", "    $s = str_split($s);\n    $result = \"\";\n    $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n   \
    \ $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $letters2 = str_split($letters2);\n\
    \    for ($i = 0; $i < count($s); $i++) {\n        if (in_array($s[$i], $letters))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else if (in_array($s[$i],\
    \ $letters2)) {\n            $result .= strtolower($s[$i]);\n        } else {\n\
    \            $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\n\
    echo solve(\"Hello World\");", "    $result = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtolower($s[$i])\
    \ === $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n  \
    \          $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho\
    \ solve('Hello World'); // hELLO wORLD\necho solve('Hello-LOL'); // hELLO-lol\n\
    echo solve('Sup DUDE!!?'); // sUP dude!!?\necho solve('12345'); // 12345\necho\
    \ solve('aBcD'); // AbCd\necho solve('aBcD123'); // AbCd123\necho solve('aBcD123!@#$%^&*()_-+=');\
    \ // AbCd123!@#$%^&*()_-+=\necho solve('aBcD123!@#$%^&*()_-+=][{}'); // AbCd123!@#$%^&*()_-+=][{}\n\
    echo solve('aBcD123!@#$%^&*()_-+=][{}|\\;:<>,.?/'); // AbCd123!@#$%^&*()_-+=][{}|\\\
    ;:<>,.?/\necho solve('aBcD123!@#$%^&*()_-+=][{}|\\;:<>,.?/~`'); // AbCd123!@#$%^&*()_-+=][{}|\\\
    ;:<>,.?/~`\necho solve('aBcD123!@#$%^&*()_-+=][{}|\\;:<>,.?/~`\"'); // AbCd123!@#$%^&*()_-+=][{}|\\\
    ;:<>,.?/~`\"\necho solve('aBcD123!@#$%^&*()_-+=][{}|\\;:<>,.?/~`\"\\''); // AbCd123",
  "    $s = str_split($s);\n    $letters = [];\n    $nonLetters = [];\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] =\
    \ $char;\n        } else {\n            $nonLetters[] = $char;\n        }\n  \
    \  }\n    if (count($letters) === 0) {\n        return strrev(implode('', $nonLetters));\n\
    \    }\n    foreach ($letters as $key => $letter) {\n        if (ctype_lower($letter))\
    \ {\n            $letters[$key] = strtoupper($letter);\n        } else {\n   \
    \         $letters[$key] = strtolower($letter);\n        }\n    }\n    return\
    \ implode('', $nonLetters) . implode('', $letters);\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $value) {\n        if (ctype_alpha($value))\
    \ {\n            $result[] = strtoupper($value) == $value ? strtolower($value)\
    \ : strtoupper($value);\n        } else {\n            $result[] = $value;\n \
    \       }\n    }\n    return implode('', $result);\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = strtoupper($letter) === $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return implode('', $result);\n}\n\necho solve('Hello World');\
    \ // hELLO wORLD\necho solve('Hello-LOL'); // hELLO-lol\necho solve('Sup DUDE!!?');\
    \ // sUP dude!!?\necho solve('12345'); // 12345\necho solve('aAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaA",
  "    $s = str_split($s);\n    $result = [];\n    $letters = [];\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev(implode('', $result));\n    }\n    foreach ($s as $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $result[] = strtolower($char)\
    \ === $char ? strtoupper($char) : strtolower($char);\n        } else {\n     \
    \       $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\n", "    $s = str_split($s);\n    $res = [];\n    $letters = range('a', 'z');\n\
    \    $letters = array_merge($letters, range('A', 'Z'));\n    foreach ($s as $char)\
    \ {\n        if (in_array($char, $letters)) {\n            $res[] = strtolower($char)\
    \ == $char ? strtoupper($char) : strtolower($char);\n        } else {\n      \
    \      $res[] = $char;\n        }\n    }\n    return implode('', $res);\n}\n",
  "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode($result);\n\
    }\n\necho solve(\"aBcD\"); // \"AbCd\"\necho solve(\"aBcD123\"); // \"AbCd123\"\
    \necho solve(\"abcd\"); // \"ABCD\"\necho solve(\"\"); // \"\"\necho solve(\"\
    123\"); // \"123\"\necho solve(\"a1b2c3d4\"); // \"A1B2C3D4\"\necho solve(\"a1b2c3d4A\"\
    ); // \"A1B2C3D4a\"\necho solve(\"a1b2c3d4A5\"); // \"A1B2C3D4a5\"\necho solve(\"\
    a1b2c3d4A5z\"); // \"A1B2C3D4a5Z\"\necho solve(\"a1b2c3d4A5zZ\"); // \"A1B2C3D4a5zZ\"\
    \necho solve(\"a1b2c3d4A5zZ!\"); // \"A1B2C3D4a5zZ!\"\necho solve(\"a1b2c3d4A5zZ!@\"\
    ); // \"A1B2C3D4a5zZ!@\"\necho solve(\"a1b2c3d4A5zZ!@#$\"); // \"A1B2C3D4a5zZ!@#$\"\
    \necho solve(\"a1b2c3d4A5zZ!@#$%\"); // \"A1B2C3D4a5zZ!@#$%\"\necho solve(\"a1b2c3d4A5zZ!@#$%^\"\
    ); // \"A1B2C3D4a5zZ!@#$%^\"\necho solve(\"a1b2c3d4A5zZ!@#$%", "    $result =\
    \ '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('Hello World'); // hELLO wORLD\necho '<br>';\necho\
    \ solve('Hello CodeEval'); // hELLO cODEeVAL\necho '<br>';\necho solve('HELLO\
    \ CODEEVAL'); // hello codeeval\necho '<br>';\necho solve('hEllO cOdEEvAl'); //\
    \ HeLlO CoDeEvAl\necho '<br>';\necho solve('12345'); // 12345\necho '<br>';\n\
    echo solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho '<br>';\necho solve('String.prototype.toAlternatingCase');\
    \ // sTRING.PROTOTYPE.TOaLTERNATINGcASE\necho '<br>';\necho solve('Hello World');\
    \ // hELLO wORLD\necho '<br>';\necho solve('Hello CodeEval'); // hELLO cODEeVAL\n\
    echo '<br>';\necho solve('HELLO CODEEVAL'); // hello codeeval\necho '<br>';\n\
    echo solve('hEllO cOdEEvAl'); // HeLlO CoDeEvAl\necho '<br>';\necho solve('12345');\
    \ // 12345\necho '<br>';\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho '<br>';\n\
    echo solve('String.prototype.toAlternatingCase'); // sTRING.PROTOTYPE.TOaLTERNATINGcASE\n\
    echo '<br>';\necho solve('Hello World'); // hELLO wORLD\necho '<br>';\necho solve('Hello\
    \ Code", "    $s = str_split($s);\n    $letters = [];\n    $nonLetters = [];\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[]\
    \ = $char;\n        } else {\n            $nonLetters[] = $char;\n        }\n\
    \    }\n    $letters = array_map(function($letter) {\n        if (ctype_upper($letter))\
    \ {\n            return strtolower($letter);\n        } else {\n            return\
    \ strtoupper($letter);\n        }\n    }, $letters);\n    $letters = array_reverse($letters);\n\
    \    return implode('', $letters) . implode('', $nonLetters);\n}\n", "    $s =\
    \ str_split($s);\n    $result = [];\n    $letters = range('a', 'z');\n    $letters\
    \ = array_merge($letters, range('A', 'Z'));\n    foreach ($s as $char) {\n   \
    \     if (in_array($char, $letters)) {\n            if (ctype_lower($char)) {\n\
    \                $result[] = strtoupper($char);\n            } else {\n      \
    \          $result[] = strtolower($char);\n            }\n        } else {\n \
    \           $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('Hello World');\necho solve('Hello World!');\necho solve('Hello\
    \ World! 123');\necho solve('HELLO WORLD');\necho solve('HELLO WORLD 123');\n\
    echo solve('123');\necho solve('!@#');\necho solve('!@#Hello World');\necho solve('!@#Hello\
    \ World 123');\necho solve('!@#Hello World 123#@!');\necho solve('!@#HELLO WORLD\
    \ 123#@!');\necho solve('!@#HELLO WORLD 123#@!a');\necho solve('!@#HELLO WORLD\
    \ 123#@!A');\necho solve('!@#HELLO WORLD 123#@!aA');\necho solve('!@#HELLO WORLD\
    \ 123#@!AA');\necho solve('!@#HELLO WORLD 123#@!aAa');\necho solve('!@#HELLO WORLD\
    \ 123#@!aAaA');\necho solve('!@#HELLO WORLD 123#@!aAaAa');\necho solve('!@#HELLO\
    \ WORLD 123#@!aAaAaA');\necho solve('!@#HELLO WORLD 123#@!aAaAaAa');\necho solve('!@#HELLO\
    \ WORLD 123#@!aAaAaAaA');\necho solve('!@#HELLO WORLD 123#@!aAaAaAaAa');\necho\
    \ solve('!@#HELLO WORLD 123#@!aAaAaAaAaA');\necho solve('!@#HELLO WORLD 123#@!aAaAa",
  "    $s = str_split($s);\n    $letters = [];\n    $numbers = [];\n    $result =\
    \ [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        } else {\n            $numbers[]\
    \ = $value;\n        }\n    }\n    if (count($letters) > 0) {\n        foreach\
    \ ($letters as $key => $value) {\n            if (ctype_lower($value)) {\n   \
    \             $result[] = strtoupper($value);\n            } else {\n        \
    \        $result[] = strtolower($value);\n            }\n        }\n    } else\
    \ {\n        $result = array_reverse($numbers);\n    }\n    return implode($result);\n\
    }\n", "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[] =\
    \ strtoupper($letter) === $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $letters = str_split('abcdefghijklmnopqrstuvwxyz');\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            if (ctype_lower($s[$i])) {\n                $result\
    \ .= strtoupper($s[$i]);\n            } else {\n                $result .= strtolower($s[$i]);\n\
    \            }\n        } else {\n            $result .= $s[$i];\n        }\n\
    \    }\n    return $result;\n}\n\necho solve('abc'); // 'ABC'\necho solve('abcABC123');\
    \ // 'ABCabc123'\necho solve('CodeWars'); // 'cODEwARS'\necho solve('abcABC123!@\u20AC\
    '); // 'ABCabc123!@\u20AC'\necho solve('AAaaooOIi'); // 'aaAAOOoiI'\necho solve('ABCabc');\
    \ // 'abcABC'\necho solve('z'); // 'Z'\necho solve('Z'); // 'z'\necho solve('zZ');\
    \ // 'ZZ'\necho solve('Zz'); // 'zz'\necho solve('ZzZz'); // 'zzZZzz'\necho solve('ZzZzZz');\
    \ // 'zzZZzzZZzz'\necho solve('ZzZzZzZz'); // 'zzZZzzZZzzZZzz'\necho solve('ZzZzZzZzZz');\
    \ // 'zzZZzzZZzzZZzzZZzz'\necho solve('ZzZzZzZzZzZz'); // 'zzZZzzZZzzZZzzZZzzZZzz'\n\
    echo solve('ZzZzZzZzZzZzZz'); // 'zzZZzzZZzzZZzzZZzzZZzzZZzz'\necho solve('ZzZzZzZzZzZzZzZz');\
    \ // 'zzZZzzZZzzZZzzZZzzZZzzZZzzZZzz'\necho solve('ZzZzZzZzZzZzZzZzZz'); // 'zzZZzzZZzzZZzzZZzzZZzz",
  "    $s = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n     \
    \   if (ctype_alpha($char)) {\n            $result[] = ctype_upper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return implode('', $result);\n}\n\nvar_dump(solve('Hello World'));\
    \ // hELLO wORLD\nvar_dump(solve('HELLO WORLD')); // hello world\nvar_dump(solve('12345'));\
    \ // 12345\nvar_dump(solve('1a2b3c4d5e')); // 1A2B3C4D5E\nvar_dump(solve('String.prototype.split'));\
    \ // sTRING.PROTOTYPE.SPLIT", "    $s = str_split($s);\n    $letters = [];\n \
    \   $others = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $others[]\
    \ = $char;\n        }\n    }\n    if (count($letters) === 0) {\n        return\
    \ strrev(implode('', $others));\n    }\n    $letters = array_map(function ($letter)\
    \ {\n        if (ctype_upper($letter)) {\n            return strtolower($letter);\n\
    \        }\n        return strtoupper($letter);\n    }, $letters);\n    return\
    \ implode('', $letters) . implode('', $others);\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $result[] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    $result = [];\n    foreach ($s as\
    \ $char) {\n        if (in_array($char, $letters)) {\n            $result[] =\
    \ strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n      \
    \  } else {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBc",
  "    $s = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n     \
    \   if (ctype_alpha($char)) {\n            $result[] = strtoupper($char) === $char\
    \ ? strtolower($char) : strtoupper($char);\n        } else {\n            $result[]\
    \ = $char;\n        }\n    }\n    return implode('', $result);\n}\n", "    $s\
    \ = str_split($s);\n    $result = [];\n    $isLetter = false;\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $isLetter = true;\n\
    \            if (ctype_lower($char)) {\n                $result[] = strtoupper($char);\n\
    \            } else {\n                $result[] = strtolower($char);\n      \
    \      }\n        } else {\n            $result[] = $char;\n        }\n    }\n\
    \    if ($isLetter) {\n        return implode('', $result);\n    } else {\n  \
    \      return strrev(implode('', $result));\n    }\n}\n", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $key;\n        }\n    }\n    if (count($letters)\
    \ == 0) {\n        return strrev($s);\n    }\n    foreach ($letters as $key =>\
    \ $value) {\n        if (ctype_lower($s[$value])) {\n            $s[$value] =\
    \ strtoupper($s[$value]);\n        } else {\n            $s[$value] = strtolower($s[$value]);\n\
    \        }\n    }\n    return implode($s);\n}\necho solve(\"Hello World\");",
  "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('Hello World');\necho solve('Hello-LOL');\necho solve('Sup DUDE!!?');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve('12345');\necho solve('12345');\n\
    echo solve('12345');\necho solve('12345');\necho solve", "    $s = str_split($s);\n\
    \    $result = [];\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $letters = array_flip($letters);\n    foreach ($s as\
    \ $char) {\n        if (isset($letters[$char])) {\n            $result[] = $char\
    \ === strtolower($char) ? strtoupper($char) : strtolower($char);\n        } else\
    \ {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtolower($s[$i])\
    \ == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World');\necho solve('Hello-LOL');\n\
    echo solve('Sup DUDE!!?');\necho solve('12345');\necho solve('12345');\necho solve('abcde');\n\
    echo solve('ABCDE');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('a", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = strtoupper($letter) === $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return implode('', $result);\n}\n", "    $arr = str_split($s);\n\
    \    $letters = array_filter($arr, function($item) {\n        return ctype_alpha($item);\n\
    \    });\n    if (empty($letters)) {\n        return strrev($s);\n    }\n    $result\
    \ = '';\n    foreach ($arr as $item) {\n        if (ctype_alpha($item)) {\n  \
    \          $result .= strtolower($item) === $item ? strtoupper($item) : strtolower($item);\n\
    \        } else {\n            $result .= $item;\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('Hello World');", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    $result = '';\n    foreach ($s as\
    \ $char) {\n        if (in_array($char, $letters)) {\n            $result .= strtolower($char)\
    \ === $char ? strtoupper($char) : strtolower($char);\n        } else {\n     \
    \       $result .= $char;\n        }\n    }\n    return $result;\n}\n", "    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('aBcD'); // 'AbCd'\necho solve('aBcD12'); // 'AbCd12'\necho solve('aBcD12#');\
    \ // 'AbCd12#'\necho solve('aBcD12#!'); // 'AbCd12#!'\necho solve('aBcD12#!@');\
    \ // 'AbCd12#!@'\necho solve('aBcD12#!@$'); // 'AbCd12#!@$'\necho solve('aBcD12#!@$%');\
    \ // 'AbCd12#!@$%'\necho solve('aBcD12#!@$%^'); // 'AbCd12#!@$%^'\necho solve('aBcD12#!@$%^&');\
    \ // 'AbCd12#!@$%^&'\necho solve('aBcD12#!@$%^&*'); // 'AbCd12#!@$%^&*'\necho\
    \ solve('aBcD12#!@$%^&*('); // 'AbCd12#!@$%^&*('\necho solve('aBcD12#!@$%^&*()');\
    \ // 'AbCd12#!@$%^&*()'\necho solve('aBcD12#!@$%^&*()_'); // 'AbCd12#!@$%^&*()_'\n\
    echo solve('aBcD12#!@$%^&*()_+'); // 'AbCd12#!@$%^&*()_+'\necho solve('aBcD12#!@$%^&*()_+{');\
    \ //", "    $s = str_split($s);\n    $letters = [];\n    $nonLetters = [];\n \
    \   foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[]\
    \ = $char;\n        } else {\n            $nonLetters[] = $char;\n        }\n\
    \    }\n    $letters = array_map(function($letter) {\n        return ctype_upper($letter)\
    \ ? strtolower($letter) : strtoupper($letter);\n    }, $letters);\n    return\
    \ count($letters) > 0 ? implode('', $letters) . implode('', $nonLetters) : implode('',\
    \ array_reverse($nonLetters));\n}\n", "    $result = '';\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result\
    \ .= strtolower($s[$i]) === $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO\
    \ WORLD'); // hello world\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e');\
    \ // 1A2B3C4D5E\necho solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('Hello World!'); // hELLO wORLD!\necho solve('!Hello\
    \ World'); // !hELLO wORLD\necho solve('!Hello World!'); // !hELLO wORLD!\necho\
    \ solve('Hello World!!'); // hELLO wORLD!!\necho solve('Hello World!!!'); // hELLO\
    \ wORLD!!!\necho solve('Hello World!!!!'); // hELLO wORLD!!!!\necho solve('Hello\
    \ World!!!!!'); // hELLO wORLD!!!!!\necho solve('Hello World!!!!!!'); // hELLO\
    \ wORLD!!!!!!\necho solve('Hello World!!!!!!!'); // hELLO wORLD!!!!!!!\necho solve('Hello\
    \ World!!!!!!!!'); // hELLO wORLD!!!!!!!!\necho solve('Hello World!!!!!!!!!');\
    \ // hELLO wORLD!!!!!!!!!\necho solve('Hello World!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!\n\
    echo solve('Hello World!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!\necho solve('Hello\
    \ World!!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!!!');\
    \ // hELLO wORLD!!!!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!!!!'); // hELLO\
    \ wORLD!!!!!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!!!!!\n\
    echo solve", "    $s = str_split($s);\n    $result = [];\n    foreach ($s as $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $result[] = strtoupper($char)\
    \ === $char ? strtolower($char) : strtoupper($char);\n        } else {\n     \
    \       $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\n", "    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n\
    \    $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $letters2 = str_split($letters2);\n\
    \    $s = str_split($s);\n    $new = [];\n    $check = false;\n    foreach($s\
    \ as $char){\n        if(in_array($char, $letters)){\n            $check = true;\n\
    \            $new[] = strtoupper($char);\n        } else if(in_array($char, $letters2)){\n\
    \            $check = true;\n            $new[] = strtolower($char);\n       \
    \ } else {\n            $new[] = $char;\n        }\n    }\n    if($check){\n \
    \       return implode(\"\", $new);\n    } else {\n        return strrev($s);\n\
    \    }\n}\n", "    if(!preg_match('/[a-zA-Z]/', $s)) {\n        return strrev($s);\n\
    \    }\n    $result = '';\n    for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $result = '';\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n          \
    \  $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = str_split($s);\n    $result = '';\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result\
    \ .= strtolower($letter) == $letter ? strtoupper($letter) : strtolower($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = str_split($s);\n    $result = '';\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result\
    \ .= strtolower($letter) == $letter ? strtoupper($letter) : strtolower($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtolower($s[$i])\
    \ == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho\
    \ solve('Hello World');\necho solve('Hello-LOL');\necho solve('Sup DUDE!!?');\n\
    echo solve('12345');\necho solve('12345');\necho solve('abcde');\necho solve('ABCDE');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\necho solve('aBcDe');\n\
    echo solve('aBcDe');\necho solve('a", "    $s = str_split($s);\n    $result =\
    \ [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n      \
    \      if (ctype_lower($char)) {\n                $result[] = strtoupper($char);\n\
    \            } else {\n                $result[] = strtolower($char);\n      \
    \      }\n        } else {\n            $result[] = $char;\n        }\n    }\n\
    \    return implode('', $result);\n}\n\necho solve('Hello World');", "    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $s = str_split($s);\n\
    \    $s = array_map(function($v) use ($letters) {\n        if (in_array($v, $letters))\
    \ {\n            return strtolower($v) == $v ? strtoupper($v) : strtolower($v);\n\
    \        }\n        return $v;\n    }, $s);\n    return implode('', $s);\n}\n",
  "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $result = '';\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n          \
    \  $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $letters = [];\n    $notLetters\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $letters[] = $char;\n        } else {\n            $notLetters[] = $char;\n\
    \        }\n    }\n    if (empty($letters)) {\n        return strrev(implode('',\
    \ $notLetters));\n    }\n    $letters = array_map(function ($letter) {\n     \
    \   if (ctype_upper($letter)) {\n            return strtolower($letter);\n   \
    \     }\n        return strtoupper($letter);\n    }, $letters);\n    return implode('',\
    \ $letters) . implode('', $notLetters);\n}\n", "    $letters = [];\n    $noLetters\
    \ = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $letters[] = $s[$i];\n        } else {\n            $noLetters[]\
    \ = $s[$i];\n        }\n    }\n    if (count($letters) === 0) {\n        return\
    \ strrev($s);\n    }\n    $result = '';\n    for ($i = 0; $i < count($letters);\
    \ $i++) {\n        if (ctype_upper($letters[$i])) {\n            $result .= strtolower($letters[$i]);\n\
    \        } else {\n            $result .= strtoupper($letters[$i]);\n        }\n\
    \    }\n    return $result . implode('', $noLetters);\n}\n", "    $letters = str_split('abcdefghijklmnopqrstuvwxyz');\n\
    \    $newString = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $newString .= strtoupper($s[$i]);\n        } else\
    \ {\n            $newString .= strtolower($s[$i]);\n        }\n    }\n    return\
    \ $newString;\n}\n", "    $s = str_split($s);\n    $result = '';\n    $letters\
    \ = range('a', 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n\
    \    foreach ($s as $char) {\n        if (in_array($char, $letters)) {\n     \
    \       $result .= strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('Hello World');\necho solve('HELLO WORLD');\necho\
    \ solve('HELLOworld');\necho solve('12345');\necho solve('1a2b3c4d5e');\necho\
    \ solve('String.prototype.charCodeAt()');\necho solve('String.prototype.charAt()');\n\
    echo solve('String.prototype.charCodeAt()');\necho solve('AbCdEfGhIjKlMnOpQrStUvWxYz');\n\
    echo solve('The quick brown fox jumps over the lazy dog.');\necho solve('THE QUICK\
    \ BROWN FOX JUMPS OVER THE LAZY DOG.');\necho solve('the quick brown fox jumps\
    \ over the lazy dog.');\necho solve('The Quick Brown Fox Jumps Over The Lazy Dog.');\n\
    echo solve('the quick brown fox jumps over the lazy dog.');\necho solve('the quick\
    \ brown fox jumps over the lazy dog');\necho solve('The Quick Brown Fox Jumps\
    \ Over The Lazy Dog');\necho solve('the quick brown fox jumps over the lazy dog');\n\
    echo solve('the quick brown fox jumps over the lazy dog');\necho solve('The Quick\
    \ Brown Fox Jumps Over The Lazy Dog');\necho solve('the quick brown fox jumps\
    \ over the lazy dog');\necho solve('the quick brown fox jumps over the lazy dog');\n\
    echo solve('The Quick Brown Fox Jumps Over The Lazy Dog');\necho solve('the quick\
    \ brown fox jumps over the lazy dog');\necho solve('the quick brown fox jumps\
    \ over the lazy dog');\necho solve('The Quick Brown Fox Jumps Over The Lazy Dog');\n\
    echo solve('the quick brown fox jumps over the lazy dog');\necho solve('", " \
    \   $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $result = '';\n    $letters =\
    \ 'abcdefghijklmnopqrstuvwxyz';\n    for ($i = 0; $i < strlen($s); $i++) {\n \
    \       if (strpos($letters, strtolower($s[$i])) !== false) {\n            $result\
    \ .= strtoupper($s[$i]);\n        } else {\n            $result .= strtolower($s[$i]);\n\
    \        }\n    }\n    return $result;\n}\n\necho solve('Hello World'); // hELLO\
    \ wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345'); // 12345\n\
    echo solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation chars');\
    \ // sTRING.WITH.PUNCTUATION CHARS\necho solve('Hello World'); // hELLO wORLD\n\
    echo solve('HELLO WORLD'); // hello world\necho solve('12345'); // 12345\necho\
    \ solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation chars');\
    \ // sTRING.WITH.PUNCTUATION CHARS\necho solve('Hello World'); // hELLO wORLD\n\
    echo solve('HELLO WORLD'); // hello world\necho solve('12345'); // 12345\necho\
    \ solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation chars');\
    \ // sTRING.WITH.PUNCTUATION CHARS\necho solve('Hello World'); // hELLO wORLD\n\
    echo solve('HELLO WORLD'); // hello world\necho solve('12345'); // 12345\necho\
    \ solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation chars');\
    \ // sTRING.WITH.PUNCTUATION CHARS\necho solve('Hello World'); // hELLO wORLD\n\
    echo solve('HELLO WORLD'); // hello world\n", "    $result = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n        \
    \    $result .= strtolower($s[$i]) === $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters\
    \ = str_split($letters);\n    $letters2 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $letters2\
    \ = str_split($letters2);\n    $result = '';\n    $s = str_split($s);\n    for\
    \ ($i = 0; $i < count($s); $i++) {\n        if (in_array($s[$i], $letters)) {\n\
    \            $result .= strtoupper($s[$i]);\n        } elseif (in_array($s[$i],\
    \ $letters2)) {\n            $result .= strtolower($s[$i]);\n        } else {\n\
    \            $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\n\
    echo solve('aBcDeFgHiJkLmNoPqRsTuVwXyZ');\necho '<br>';\necho solve('aBcDeFgHiJkLmNoPqRsTuVwXyZ1');\n\
    echo '<br>';\necho solve('1aBcDeFgHiJkLmNoPqRsTuVwXyZ');\necho '<br>';\necho solve('1aBcDeFgHiJkLmNoPqRsTuVwXyZ1');\n\
    echo '<br>';\necho solve('1aBcDeFgHiJkLmNoPqRsTuVwXyZ1a');\necho '<br>';\necho\
    \ solve('1aBcDeFgHiJkLmNoPqRsTuVwXyZ1aB');\necho '<br>';\necho solve('1aBcDeFgHiJkLmNoPqRsTuVwXyZ1aBc');\n\
    echo '<br>';\necho solve('1aBcDeFgHiJkLmNoPqRsTuVwXyZ1aBcD');\necho '<br>';\n\
    echo solve('1aBcDeFgHiJkLmNoPqRs", "    $letters = str_split($s);\n    $result\
    \ = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return implode('', $result);\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return implode('', $result);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters2 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $letters2 = str_split($letters2);\n    $s = str_split($s);\n    $result =\
    \ [];\n    $flag = false;\n    for ($i = 0; $i < count($s); $i++) {\n        if\
    \ (in_array($s[$i], $letters)) {\n            $flag = true;\n            $result[]\
    \ = strtoupper($s[$i]);\n        } else if (in_array($s[$i], $letters2)) {\n \
    \           $flag = true;\n            $result[] = strtolower($s[$i]);\n     \
    \   } else {\n            $result[] = $s[$i];\n        }\n    }\n    if ($flag)\
    \ {\n        return implode('', $result);\n    } else {\n        return strrev($s);\n\
    \    }\n}", "    $str = '';\n    if(ctype_alpha($s)) {\n        for($i = 0; $i\
    \ < strlen($s); $i++) {\n            if(ctype_upper($s[$i])) {\n             \
    \   $str .= strtolower($s[$i]);\n            } else {\n                $str .=\
    \ strtoupper($s[$i]);\n            }\n        }\n    } else {\n        $str =\
    \ strrev($s);\n    }\n    return $str;\n}\n", "    $s = str_split($s);\n    $result\
    \ = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $letters = array_merge($letters, array_map('strtoupper', $letters));\n  \
    \  foreach ($s as $char) {\n        if (in_array($char, $letters)) {\n       \
    \     $result .= $char === strtoupper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = \"\";\n    $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $letters = str_split($letters);\n    $lettersUpper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $lettersUpper = str_split($lettersUpper);\n    $s = str_split($s);\n  \
    \  for ($i = 0; $i < count($s); $i++) {\n        if (in_array($s[$i], $letters))\
    \ {\n            $result .= strtoupper($s[$i]);\n        } else if (in_array($s[$i],\
    \ $lettersUpper)) {\n            $result .= strtolower($s[$i]);\n        } else\
    \ {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\
    \necho solve(\"Hello World\");", "    $s = str_split($s);\n    $letters = [];\n\
    \    $nonLetters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $nonLetters[]\
    \ = $char;\n        }\n    }\n    $letters = array_map(function($letter) {\n \
    \       return ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \    }, $letters);\n    return count($letters) > 0 ? implode('', $letters) . implode('',\
    \ $nonLetters) : strrev(implode('', $nonLetters));\n}\n", "    $s = str_split($s);\n\
    \    $result = [];\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $letters = array_flip($letters);\n    foreach ($s as\
    \ $char) {\n        if (isset($letters[$char])) {\n            $result[] = $char\
    \ === strtolower($char) ? strtoupper($char) : strtolower($char);\n        } else\
    \ {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO\
    \ WORLD'); // hello world\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e');\
    \ // 1A2B3C4D5E\necho solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('! !'); // ! !\necho solve('WelcometoCodewars.com');\
    \ // wELCOMETOCODEWARS.COM", "    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \    $letters = str_split($letters);\n    $lettersUpper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $lettersUpper = str_split($lettersUpper);\n    $s = str_split($s);\n  \
    \  $result = \"\";\n    for ($i = 0; $i < count($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $key = array_search($s[$i], $letters);\n         \
    \   $result .= $lettersUpper[$key];\n        } else if (in_array($s[$i], $lettersUpper))\
    \ {\n            $key = array_search($s[$i], $lettersUpper);\n            $result\
    \ .= $letters[$key];\n        } else {\n            $result .= $s[$i];\n     \
    \   }\n    }\n    return $result;\n}\n", "    $result = '';\n    $s = str_split($s);\n\
    \    $letters = range('a', 'z');\n    $letters = array_merge($letters, range('A',\
    \ 'Z'));\n    $letters = array_flip($letters);\n    $isLetter = false;\n    foreach\
    \ ($s as $char) {\n        if (isset($letters[$char])) {\n            $isLetter\
    \ = true;\n            $result .= $char === strtoupper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result .= $char;\n    \
    \    }\n    }\n    return $isLetter ? $result : strrev($result);\n}\n\necho solve('aBcD');\n\
    echo solve('aBcD123');\necho solve('123');\necho solve('123aBcD');\necho solve('123aBcD456');\n\
    echo solve('123456');\necho solve('123456aBcD');\necho solve('123456aBcD789');\n\
    echo solve('123456789');\necho solve('123456789aBcD');\necho solve('123456789aBcD0');\n\
    echo solve('1234567890');\necho solve('1234567890aBcD');\necho solve('1234567890aBcD1');\n\
    echo solve('12345678901');\necho solve('12345678901aBcD');\necho solve('12345678901aBcD2');\n\
    echo solve('123456789012');\necho solve('123456789012aBcD');\necho solve('123456789012aBcD3');\n\
    echo solve('1234567890123');\necho solve('1234567890123aBcD');\necho solve('1234567890123aBcD4');\n\
    echo solve('12345678901234');\necho solve('12345678901234aBcD');\necho solve('12345678901234aBcD5');\n\
    echo solve('123456789012345');\necho solve('123456789012345aBcD');\n", "    $result\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World');", "    $s\
    \ = str_split($s);\n    $letters = [];\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $letters[] = $key;\n        }\n\
    \    }\n    if (empty($letters)) {\n        return strrev($s);\n    }\n    foreach\
    \ ($letters as $key => $value) {\n        if (ctype_upper($s[$value])) {\n   \
    \         $s[$value] = strtolower($s[$value]);\n        } else {\n           \
    \ $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $s = str_split($s);\n    $letters = range('a', 'z');\n    $letters\
    \ = array_merge($letters, range('A', 'Z'));\n    $letters = array_flip($letters);\n\
    \    $result = [];\n    $hasLetter = false;\n    foreach ($s as $char) {\n   \
    \     if (isset($letters[$char])) {\n            $hasLetter = true;\n        \
    \    $result[] = strtolower($char) === $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    if (!$hasLetter)\
    \ {\n        $result = array_reverse($result);\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve('aBcD'); // 'AbCd'\necho solve('aBcDeF'); // 'AbCdEf'\n\
    echo solve('aBcDeFg'); // 'AbCdEfG'\necho solve('aBcDeFgH'); // 'AbCdEfGh'\necho\
    \ solve('aBcDeFgHi'); // 'AbCdEfGhI'\necho solve('aBcDeFgHiJ'); // 'AbCdEfGhIj'\n\
    echo solve('aBcDeFgHiJk'); // 'AbCdEfGhIjK'\necho solve('aBcDeFgHiJkL'); // 'AbCdEfGhIjKl'\n\
    echo solve('aBcDeFgHiJkLm'); // 'AbCdEfGhIjKlM'\necho solve('aBcDeFgHiJkLmN');\
    \ // 'AbCdEfGhIjKlMn'\necho solve('aBcDeFgHiJkLmNo'); // 'AbCdEfGhIjKlMnO'\necho\
    \ solve('aBcDeFgHiJkLmNoP'); // 'AbCdEfGhIjKlMnOp'\necho solve('aBcDeFgHiJkLmNoPq');",
  "    $s = str_split($s);\n    $result = '';\n    foreach ($s as $char) {\n     \
    \   if (ctype_alpha($char)) {\n            $result .= strtolower($char) == $char\
    \ ? strtoupper($char) : strtolower($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\n", "    $result = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('Hello World'); // hELLO wORLD\necho solve('Hello-LOL');\
    \ // hELLO-lol\necho solve('Sup DUDE!!?'); // sUP dude!!?\necho solve('12345');\
    \ // 12345\necho solve('aBcD'); // AbCd\necho solve('aBcD123'); // AbCd123\necho\
    \ solve('aBcD123!@#$%^&*()_-+='); // AbCd123!@#$%^&*()_-+=\necho solve('aBcD123!@#$%^&*()_-+=[]{}|\\\
    :;\"<>,.?/'); // AbCd123!@#$%^&*()_-+=[]{}|\\:;\"<>,.?/\necho solve('abcdefghijklmnopqrstuvwxyz');\
    \ // ABCDEFGHIJKLMNOPQRSTUVWXYZ\necho solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'); //\
    \ abcdefghijklmnopqrstuvwxyz\necho solve('The quick brown fox jumps over the lazy\
    \ dog.'); // tHE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.\necho solve('THE QUICK\
    \ BROWN FOX JUMPS OVER THE LAZY DOG.'); // the quick brown fox jumps over the\
    \ lazy dog.\necho solve('The_quick_brown_fox_jumps_over_the_lazy_dog.'); // tHE_QUICK_BROWN_FOX_JUMPS_OVER_THE_LAZY_DOG.\n\
    echo solve('THE_QUICK_BROWN_FOX_JUMPS_OVER_THE_LA", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters_upper = strtoupper($letters);\n\
    \    $letters_upper = str_split($letters_upper);\n    $new_string = '';\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $letters)) {\n\
    \            $index = array_search($s[$i], $letters);\n            $new_string\
    \ .= $letters_upper[$index];\n        } elseif (in_array($s[$i], $letters_upper))\
    \ {\n            $index = array_search($s[$i], $letters_upper);\n            $new_string\
    \ .= $letters[$index];\n        } else {\n            $new_string .= $s[$i];\n\
    \        }\n    }\n    return $new_string;\n}\n", "    $s = str_split($s);\n \
    \   $letters = [];\n    $result = [];\n    for ($i = 0; $i < count($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            array_push($letters, $s[$i]);\n\
    \        } else {\n            array_push($result, $s[$i]);\n        }\n    }\n\
    \    if (count($letters) > 0) {\n        for ($i = 0; $i < count($letters); $i++)\
    \ {\n            if (ctype_upper($letters[$i])) {\n                array_push($result,\
    \ strtolower($letters[$i]));\n            } else {\n                array_push($result,\
    \ strtoupper($letters[$i]));\n            }\n        }\n    } else {\n       \
    \ $result = array_reverse($result);\n    }\n    return implode($result);\n}\n",
  "    $letters = range('a', 'z');\n    $letters = array_merge($letters, range('A',\
    \ 'Z'));\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n     \
    \   if (in_array($s[$i], $letters)) {\n            $result .= strtolower($s[$i])\
    \ == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $s = str_split($s);\n    $result = [];\n    $letters = [];\n    foreach ($s\
    \ as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $value;\n        } else {\n            $result[] = $value;\n        }\n  \
    \  }\n    if (count($letters) > 0) {\n        foreach ($letters as $key => $value)\
    \ {\n            if (ctype_lower($value)) {\n                $result[] = strtoupper($value);\n\
    \            } else {\n                $result[] = strtolower($value);\n     \
    \       }\n        }\n    } else {\n        $result = array_reverse($result);\n\
    \    }\n    return implode('', $result);\n}\n\necho solve('aBcD');\necho solve('aBcD12');\n\
    echo solve('12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\n\
    echo solve('aBcD12');\necho solve('aBcD12');\necho solve('aBcD12');\necho", " \
    \   $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $s = str_split($s);\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n    $letters\
    \ = array_merge($letters, array_map('strtoupper', $letters));\n    $letters =\
    \ array_flip($letters);\n    $result = [];\n    foreach ($s as $char) {\n    \
    \    if (isset($letters[$char])) {\n            $result[] = $char === strtolower($char)\
    \ ? strtoupper($char) : strtolower($char);\n        } else {\n            $result[]\
    \ = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho solve('Hello\
    \ World'); // hELLO wORLD\necho solve('Hello CodeEval'); // hELLO cODEeVAL\necho\
    \ solve('HELLO CODEEVAL'); // hello codeeval\necho solve('HELLO'); // ollEh\n\
    echo solve('12345'); // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\necho solve('String.with.punctuation\
    \ characters!'); // sTRING.WITH.PUNCTUATION CHARACTERS!\necho solve('!@#$%^&*()_+');\
    \ // !@#$%^&*()_+\necho solve('abcdefghijklmnopqrstuvwxyz'); // ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\
    echo solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'); // abcdefghijklmnopqrstuvwxyz\necho\
    \ solve('1234567890'); // 1234567890\necho solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\
    \ // ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\necho solve('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ12345678",
  "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n \
    \   $result = \"\";\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= strtoupper($letter) == $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result .= $letter;\n\
    \        }\n    }\n    return $result;\n}\n\necho solve(\"Hello World\"); // hELLO\
    \ wORLD\necho solve(\"HELLO WORLD\"); // hello world\necho solve(\"HELLOworld\"\
    ); // helloWORLD\necho solve(\"12345\"); // 12345\necho solve(\"1A2B3C4D5E\");\
    \ // 1a2b3c4d5e\necho solve(\"String.with.punctuation*(!)\"); // sTRING.WITH.PUNCTUATION*(!)\n\
    echo solve(\"\"); //", "    $s = str_split($s);\n    $res = [];\n    $letters\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $letters[] = $char;\n        } else {\n            $res[] = $char;\n\
    \        }\n    }\n    if (empty($letters)) {\n        return strrev(implode('',\
    \ $res));\n    }\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $res[] = strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $result .= strtolower($s[$i])\
    \ == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho\
    \ solve('Hello World'); // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\n\
    echo solve('HELLOworld'); // helloWORLD\necho solve('12345'); // 12345\necho solve('hello123world');\
    \ // HELLO123WORLD\necho solve('hello'); // HELLO\necho solve('HELLO'); // hello\n\
    echo solve('^&*('); // ^&*(\necho solve('a'); // A\necho solve('A'); // a\necho\
    \ solve('z'); // Z\necho solve('Z'); // z\necho solve('aBcDeFgHiJkLmNoPqRsTuVwXyZ');\
    \ // AbCdEfGhIjKlMnOpQrStUvWxYz\necho solve('AbCdEfGhIjKlMnOpQrStUvWxYz'); //\
    \ aBcDeFgHiJkLmNoPqRsTuVwXyZ\necho solve('The Quick Brown Fox'); // tHE qUICK\
    \ bROWN fOX\necho solve('THE QUICK BROWN FOX'); // the quick brown fox\necho solve('!@#$%^&*()_+');\
    \ // !@#$%^&*()_+\necho solve('abcdefghijklmnopqrstuvwxyz'); // ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\
    echo solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'); // abcdefghijklmnopqrstuvwxyz\necho\
    \ solve('0123456789'); // 0123456789\necho solve('`~!@#$%^&*()-_=", "    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            if (ctype_upper($letter)) {\n\
    \                $result[] = strtolower($letter);\n            } else {\n    \
    \            $result[] = strtoupper($letter);\n            }\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $letters = array_merge($letters, array_map('strtoupper', $letters));\n  \
    \  $letters = array_flip($letters);\n    $s = str_split($s);\n    $result = [];\n\
    \    foreach ($s as $char) {\n        if (isset($letters[$char])) {\n        \
    \    $result[] = $char === strtoupper($char) ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $s = str_split($s);\n    $result = [];\n \
    \   $letters = [];\n    foreach ($s as $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $value;\n        } else {\n            $result[]\
    \ = $value;\n        }\n    }\n    if (count($letters) > 0) {\n        $letters\
    \ = array_reverse($letters);\n        foreach ($letters as $value) {\n       \
    \     $result[] = $value;\n        }\n    } else {\n        $result = array_reverse($result);\n\
    \    }\n    return implode('', $result);\n}\n", "    $letters = range('a', 'z');\n\
    \    $letters = array_merge($letters, range('A', 'Z'));\n    $letters = array_flip($letters);\n\
    \    $s = str_split($s);\n    $s = array_map(function($v) use ($letters) {\n \
    \       if (isset($letters[$v])) {\n            return $v === strtolower($v) ?\
    \ strtoupper($v) : strtolower($v);\n        }\n        return $v;\n    }, $s);\n\
    \    return implode('', $s);\n}\n", "    $result = '';\n    for ($i = 0; $i <\
    \ strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result\
    \ .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (in_array($s[$i], $letters)) {\n            $result .= strtolower($s[$i])\
    \ == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $letters = str_split($s);\n    $result = [];\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s as $key =>\
    \ $value) {\n        if (ctype_alpha($value)) {\n            $letters[] = $key;\n\
    \        }\n    }\n    if (count($letters) === 0) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $letter) {\n        if (ctype_lower($s[$letter]))\
    \ {\n            $s[$letter] = strtoupper($s[$letter]);\n        } else {\n  \
    \          $s[$letter] = strtolower($s[$letter]);\n        }\n    }\n    return\
    \ implode('', $s);\n}\n", "    $s = str_split($s);\n    $letters = [];\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] =\
    \ $char;\n        }\n    }\n    if (count($letters) === 0) {\n        return strrev($s);\n\
    \    }\n    foreach ($s as $key => $char) {\n        if (ctype_alpha($char)) {\n\
    \            $s[$key] = ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \        }\n    }\n    return implode('', $s);\n}\n", "    $result = '';\n   \
    \ for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('abc'); // ABC\necho solve('abcABC123'); // ABCabc123\n\
    echo solve('CodeWars'); // cODEwARS\necho solve('abcABC123!@\u20AC'); // ABCabc123!@\u20AC\
    \necho solve('AAaaooOIi'); // aAaaOOoiI\necho solve('ABCabc'); // abcABC\necho\
    \ solve('z'); // Z\necho solve('Z'); // z\necho solve('zZ'); // zz\necho solve('Zz');\
    \ // zZ\necho solve('zZz'); // zzZ\necho solve('ZzZ'); // zzZ\necho solve('zZzZ');\
    \ // zzZz\necho solve('ZzZz'); // zzZz\necho solve('zZzZz'); // zzZzZ\necho solve('ZzZzZ');\
    \ // zzZzZ\necho solve('zZzZzZ'); // zzZzZz\necho solve('ZzZzZz'); // zzZzZz\n\
    echo solve('zZzZzZz'); // zzZzZzZ\necho solve('ZzZzZzZ'); // zzZzZzZ\necho solve('zZzZzZzZ');\
    \ // zzZzZzZz\necho solve('ZzZzZzZz'); // zzZzZzZz\necho solve('zZzZzZzZz'); //\
    \ zzZzZzZzZ\necho solve('ZzZzZzZzZ'); // zzZzZzZzZ\necho solve('zZzZzZzZzZ');\
    \ // zzZzZzZzZ", "    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters\
    \ = str_split($letters);\n    $letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  \
    \  $letters2 = str_split($letters2);\n    $s = str_split($s);\n    $result = [];\n\
    \    $count = 0;\n    for ($i = 0; $i < count($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result[$i] = strtoupper($s[$i]);\n            $count++;\n\
    \        } else if (in_array($s[$i], $letters2)) {\n            $result[$i] =\
    \ strtolower($s[$i]);\n            $count++;\n        } else {\n            $result[$i]\
    \ = $s[$i];\n        }\n    }\n    if ($count == 0) {\n        return strrev(implode(\"\
    \", $s));\n    }\n    return implode(\"\", $result);\n}\n\necho solve(\"hello\"\
    );\necho solve(\"HELLO\");\necho solve(\"12345\");\necho solve(\"1a2b3c4d5e\"\
    );\necho solve(\"String.prototype.toAlternatingCase\");\necho solve(\"Hello World\"\
    );", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $letters = array_merge($letters, array_map('strtoupper', $letters));\n  \
    \  $s = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n     \
    \   if (in_array($char, $letters)) {\n            $result[] = strtolower($char)\
    \ == $char ? strtoupper($char) : strtolower($char);\n        } else {\n      \
    \      $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\n", "    $s = str_split($s);\n    $result = [];\n    $letters = [];\n    for\
    \ ($i = 0; $i < count($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n     \
    \       $letters[] = $s[$i];\n        } else {\n            $result[] = $s[$i];\n\
    \        }\n    }\n    if (count($letters) === 0) {\n        return strrev(implode($result));\n\
    \    }\n    for ($i = 0; $i < count($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result[] = strtolower($s[$i]) === $s[$i] ? strtoupper(array_pop($letters))\
    \ : strtolower(array_pop($letters));\n        }\n    }\n    return implode($result);\n\
    }\n", "    $s = str_split($s);\n    $letters = [];\n    $nonLetters = [];\n  \
    \  foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[]\
    \ = $char;\n        } else {\n            $nonLetters[] = $char;\n        }\n\
    \    }\n    $letters = array_map(function($letter) {\n        return ctype_upper($letter)\
    \ ? strtolower($letter) : strtoupper($letter);\n    }, $letters);\n    $s = array_merge($letters,\
    \ $nonLetters);\n    return implode('', $s);\n}\n", "    $result = '';\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n    \
    \        $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $s = str_split($s);\n    $letters = [];\n    $others =\
    \ [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n      \
    \      $letters[] = $char;\n        } else {\n            $others[] = $char;\n\
    \        }\n    }\n    $letters = array_map(function($letter) {\n        return\
    \ ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n    }, $letters);\n\
    \    return count($letters) ? implode('', $letters) . implode('', $others) : implode('',\
    \ array_reverse($others));\n}\n", "    $letters = str_split($s);\n    $result\
    \ = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= strtolower($letter) === $letter ? strtoupper($letter)\
    \ : strtolower($letter);\n        } else {\n            $result .= $letter;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n\
    \    $result = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= $letter === strtoupper($letter) ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result .= $letter;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n\
    \    $result = [];\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result[] = strtoupper($letter) === $letter ? strtolower($letter)\
    \ : strtoupper($letter);\n        } else {\n            $result[] = $letter;\n\
    \        }\n    }\n    return implode('', $result);\n}\n\necho solve('Hello World');\
    \ // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('HELLOworld');\
    \ // helloWORLD\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\n\
    echo solve('String.with.punctuation chars'); // sTRING.WITH.PUNCTUATION CHARS\n\
    echo solve('DIGEST'); // digest\necho solve('AL-AZIZ'); // al-aziz\necho solve('Hello\
    \ World!'); // hELLO wORLD!\necho solve('Hello World!!'); // hELLO wORLD!!\necho\
    \ solve('Hello World!!!'); // hELLO wORLD!!!\necho solve('Hello World!!!!'); //\
    \ hELLO wORLD!!!!\necho solve('Hello World!!!!!'); // hELLO wORLD!!!!!\necho solve('Hello\
    \ World!!!!!!'); // hELLO wORLD!!!!!!\necho solve('Hello World!!!!!!!'); // hELLO\
    \ wORLD!!!!!!!\necho solve('Hello World!!!!!!!!'); // hELLO wORLD!!!!!!!!\necho\
    \ solve('Hello World!!!!!!!!!'); // hELLO wORLD!!!!!!!!!\necho solve('Hello World!!!!!!!!!!');\
    \ // hELLO wORLD!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!\n\
    echo solve('Hello World!!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!!\necho solve('Hello\
    \ World!!!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!!!!');\
    \ // hELLO wORLD!!!!!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!!!!!'); // hELLO\
    \ wORLD!!!!!!!!!!!!!!!\necho solve('Hello World!!!!!!!!!!!!!!!!'); // hELLO wORLD!!!!!!!!!!!!!!!!",
  "    $s = str_split($s);\n    $res = [];\n    $letters = [];\n    foreach ($s as\
    \ $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        } else {\n            $res[] = $char;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev(implode('', $res));\n    }\n    foreach ($s as $char)\
    \ {\n        if (ctype_alpha($char)) {\n            $res[] = strtolower($char)\
    \ == $char ? strtoupper($char) : strtolower($char);\n        } else {\n      \
    \      $res[] = $char;\n        }\n    }\n    return implode('', $res);\n}\n",
  "    $s = str_split($s);\n    $res = [];\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $res[] = strtoupper($char) == $char ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $res[] = $char;\n      \
    \  }\n    }\n    return implode('', $res);\n}\n\nvar_dump(solve('abc')); // 'ABC'\n\
    var_dump(solve('ABC')); // 'abc'\nvar_dump(solve('123')); // '123'\nvar_dump(solve('aBc'));\
    \ // 'AbC'\nvar_dump(solve('a1b2c3')); // 'A1B2C3'\nvar_dump(solve('a1B2c3'));\
    \ // 'A1b2C3'\nvar_dump(solve('a1b2C3')); // 'A1B2c3'\nvar_dump(solve('a1b2C3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26'));\
    \ // 'A1B2C3D4E5F6G7H8I9J10K11L12M13N14O15P16Q17R18S19T20U21V22W23X24Y25Z26'\n\
    var_dump(solve('a1b2C3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26A'));\
    \ // 'A1B2c3D4E5F6G7H8I9J10K11L12M13N14O15P16Q17R18S19T20U21V22W23X24Y25Z26a'\n\
    var_dump(solve('a1b2C3d4e5f6g7h8i9j10k11l12m", "    $s = str_split($s);\n    $result\
    \ = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $result[] = strtoupper($char) === $char ? strtolower($char) : strtoupper($char);\n\
    \        } else {\n            $result[] = $char;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n\necho solve('abc'); // 'ABC'\necho solve('abcABC');\
    \ // 'ABCabc'\necho solve('abc123'); // 'ABC123'\necho solve('123'); // '321'\n\
    echo solve('aBc'); // 'AbC'\necho solve('aBc123'); // 'AbC123'\necho solve('aBcDeF');\
    \ // 'AbCdEf'\necho solve('aBcDeF123'); // 'AbCdEf123'\necho solve('aBcDeF12345');\
    \ // 'AbCdEf12345'\necho solve('aBcDeF123456789'); // 'AbCdEf123456789'\necho\
    \ solve('AbCdEf123456789'); // 'aBcDeF123456789'\necho solve('The quick brown\
    \ fox jumps over the lazy dog.'); // 'tHE QUICK BROWN FOX JUMPS OVER THE LAZY\
    \ DOG.'\necho solve('123456789'); // '987654321'\necho solve('abcdefghijklmnopqrstuvwxyz');\
    \ // 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\necho solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ'); //\
    \ 'abcdefghijklmnopqrstuvwxyz'\necho solve('The quick brown fox jumps over the\
    \ lazy dog.'); // 'tHE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.'\necho solve('123456789');\
    \ // '987654321'\necho solve('abcdefghijklmnopqrstuvwxyz'); // 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\
    echo solve('ABCDEFGHIJKLM", "    $s = str_split($s);\n    $result = [];\n    $hasLetter\
    \ = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n \
    \           $hasLetter = true;\n            $result[] = ctype_upper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return $hasLetter ? implode('', $result) : strrev($s);\n}\n\
    \necho solve('Hello World'); // hELLO wORLD\necho solve('Hello CodeEval'); //\
    \ hELLO cODEEVAL\necho solve('HELLO CODEEVAL'); // hello codeeval\necho solve('HELLO');\
    \ // hello\necho solve('12345'); // 54321\necho solve('1a2b3c4d5e'); // 1A2B3C4D5E\n\
    echo solve('12345a'); // 54321A\necho solve('12345A'); // 54321a\necho solve('12345aA');\
    \ // 54321Aa\necho solve('12345aAa'); // 54321AaA\necho solve('12345aAaA'); //\
    \ 54321AaAa\necho solve('12345aAaAa'); // 54321AaAaA\necho solve('12345aAaAaA');\
    \ // 54321AaAaAa\necho solve('12345aAaAaAa'); // 54321AaAaAaA\necho solve('12345aAaAaAaA');\
    \ // 54321AaAaAaAa\necho solve('12345aAaAaAaAa'); // 54321AaAaAaAaA\necho solve('12345aAaAaAaAaA');\
    \ // 54321AaAaAaAaAa\necho solve('12345aAaAaAaAaAa'); // 54321AaAaAaAaAaA\necho\
    \ solve('12345aAaAaAaAaAaA'); // 54321A", "    $s = str_split($s);\n    $result\
    \ = [];\n    $isLetter = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $isLetter = true;\n            $result[] = strtolower($char)\
    \ == $char ? strtoupper($char) : strtolower($char);\n        } else {\n      \
    \      $result[] = $char;\n        }\n    }\n    return $isLetter ? implode('',\
    \ $result) : strrev($s);\n}\n\necho solve('abcdefg'); // ABCDEFG\necho solve('abcdefg123');\
    \ // ABCDEFG123\necho solve('abcdefg123!@#'); // ABCDEFG123!@#\necho solve('123!@#');\
    \ // 321!@#\necho solve('123!@#abc'); // 321!@#ABC\necho solve('123!@#ABC'); //\
    \ 321!@#abc\necho solve('123!@#ABCabc'); // 321!@#abcABC\necho solve('123!@#ABCabcABC');\
    \ // 321!@#abcABCabc\necho solve('123!@#ABCabcABCabc'); // 321!@#abcABCabcABC\n\
    echo solve('123!@#ABCabcABCabcABC'); // 321!@#abcABCabcABCabc\necho solve('123!@#ABCabcABCabcABCabc');\
    \ // 321!@#abcABCabcABCabcABC\necho solve('123!@#ABCabcABCabcABCabcABC'); // 321!@#abcABCabcABCabcABCabc\n\
    echo solve('123!@#ABCabcABCabcABCabcABCabc'); // 321!@#abcABCabcABCabcABCabcABC\n\
    echo solve('123!@#ABCabcABCabcABCabcABCabcABC'); // 321!@#abcABCabcABCabcABCabcABCabc\n\
    echo solve('123!@#ABCabcABCabcABCabcABCabcABCabc'); // 321!@#abcABCabcABCabcABCabcABCabcABC\n\
    echo solve('123!@#ABCabcABCabcABCabcABCabcABCabcABC'); // 321!@#abcABCabcABCabcABCabcABCabcABCabc\n\
    echo solve('123!@#ABCabcABCabcABCabcABCabcABCabcABCabc'); // 321!@#abcABCabcABCabcABCabcABCabcABCabcABC\n\
    echo solve('123!@#ABCabcABCabc", "    $s = str_split($s);\n    $letters = [];\n\
    \    $others = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $others[]\
    \ = $char;\n        }\n    }\n    $letters = array_map(function($letter) {\n \
    \       if (ctype_upper($letter)) {\n            return strtolower($letter);\n\
    \        } else {\n            return strtoupper($letter);\n        }\n    },\
    \ $letters);\n    $s = array_merge($letters, $others);\n    return implode('',\
    \ $s);\n}\n", "    $letters = str_split($s);\n    $result = '';\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ === $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n",
  "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters as $letter)\
    \ {\n        if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ === $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('Hello World');\necho solve('Hello-LOL');\necho solve('Sup DUDE!!?');\n\
    echo solve('12345');\necho solve('12345');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\necho solve('aBcD');\n\
    echo solve('aBcD');\necho solve('aBcD');\necho solve('aBc", "    $s = str_split($s);\n\
    \    $letters = [];\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $letters[] = $key;\n        }\n    }\n    if (empty($letters))\
    \ {\n        return strrev($s);\n    }\n    foreach ($letters as $key => $value)\
    \ {\n        if (ctype_lower($s[$value])) {\n            $s[$value] = strtoupper($s[$value]);\n\
    \        } else {\n            $s[$value] = strtolower($s[$value]);\n        }\n\
    \    }\n    return implode($s);\n}\n", "    $result = '';\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result\
    \ .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('aBcD'); // 'AbCd'\necho solve('aBcD12'); // 'AbCd12'\n\
    echo solve('aBcD12!@'); // 'AbCd12!@'\necho solve('aBcD12!@#$%^&*()_+'); // 'AbCd12!@#$%^&*()_+'\n\
    echo solve('aBcD12!@#$%^&*()_+-=[]{}|;:\",./<>?'); // 'AbCd12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?'\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\",./<>?`~'); // 'AbCd12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?`~'\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890-='); //\
    \ 'AbCd12!@#$%^&*()_+-=[]{}|;:\",./<>?`~1234567890-='\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?`~1234567890-=qwertyuiop[]\\asdfghjkl;zxcvbnm,./'); // 'AbCd12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?`~12345678", "    $letters = str_split($s);\n    $result = '';\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result\
    \ .= strtolower($letter) == $letter ? strtoupper($letter) : strtolower($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO\
    \ WORLD'); // hello world\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e');\
    \ // 1A2B3C4D5E\necho solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('Hello World!'); // hELLO wORLD!\necho solve('Hello\
    \ World!?!'); // hELLO wORLD!?!\necho solve('\xA1\xBFHello World?!\xA1'); // \xA1\
    \xBFhELLO wORLD?!\xA1\necho solve('\xA1\xBFHello World?!\xA1'); // \xA1\xBFhELLO\
    \ wORLD?!\xA1\necho solve('Hello World!?!\xA1\xBF'); // hELLO wORLD!?!\xA1\xBF\
    \necho solve('Hello World!?!\xA1\xBF'); // hELLO wORLD!?!\xA1\xBF\necho solve('Hello\
    \ World!?!\xA1\xBF'); // hELLO wORLD!?!\xA1\xBF\necho solve('Hello World!?!\xA1\
    \xBF'); // hELLO wORLD!?!\xA1\xBF\necho solve('Hello World!?!\xA1\xBF'); // hELLO\
    \ wORLD!?!\xA1\xBF\necho solve('Hello World!?!\xA1\xBF'); // hELLO wORLD!?!\xA1\
    \xBF\necho solve('Hello World!?!\xA1\xBF'); // hELLO wORLD!?!\xA1\xBF\necho solve('Hello\
    \ World!?!\xA1\xBF'); // hELLO wORLD!?!\xA1\xBF\necho solve('Hello World!?!\xA1\
    \xBF'); // hELLO wOR", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtolower($s[$i])\
    \ == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtolower($s[$i]) === $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n \
    \   $result = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= strtolower($letter) === $letter ? strtoupper($letter)\
    \ : strtolower($letter);\n        } else {\n            $result .= $letter;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n\
    \    $result = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= strtolower($letter) === $letter ? strtoupper($letter)\
    \ : strtolower($letter);\n        } else {\n            $result .= $letter;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    $result = [];\n    foreach ($s as\
    \ $char) {\n        if (in_array($char, $letters)) {\n            $result[] =\
    \ strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n      \
    \  } else {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $result .= strtolower($s[$i])\
    \ == $s[$i] ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n", " \
    \   $s = str_split($s);\n    $res = '';\n    foreach ($s as $char) {\n       \
    \ if (ctype_alpha($char)) {\n            $res .= ctype_lower($char) ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $res .= $char;\n       \
    \ }\n    }\n    return $res;\n}\n", "    $s = str_split($s);\n    $letters = [];\n\
    \    $nonLetters = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $nonLetters[]\
    \ = $char;\n        }\n    }\n    if (count($letters) === 0) {\n        return\
    \ strrev(implode('', $nonLetters));\n    }\n    $letters = array_map(function\
    \ ($char) {\n        return ctype_upper($char) ? strtolower($char) : strtoupper($char);\n\
    \    }, $letters);\n    return implode('', $letters) . implode('', $nonLetters);\n\
    }\n", "    $letters = str_split($s);\n    $result = '';\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result .= strtolower($letter)\
    \ == $letter ? strtoupper($letter) : strtolower($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n",
  "    $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n\
    \    $letters = array_merge($letters, array_map('strtoupper', $letters));\n  \
    \  $s = str_split($s);\n    $result = \"\";\n    foreach ($s as $char) {\n   \
    \     if (in_array($char, $letters)) {\n            if (ctype_lower($char)) {\n\
    \                $result .= strtoupper($char);\n            } else {\n       \
    \         $result .= strtolower($char);\n            }\n        } else {\n   \
    \         $result .= $char;\n        }\n    }\n    return $result;\n}\n", "  \
    \  $s = str_split($s);\n    $result = [];\n    $letters = [];\n    foreach ($s\
    \ as $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $value;\n        } else {\n            $result[] = $value;\n        }\n  \
    \  }\n    if (count($letters) === 0) {\n        return strrev(implode('', $result));\n\
    \    }\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $result[] = strtolower($value) === $value ? strtoupper(array_pop($letters))\
    \ : strtolower(array_pop($letters));\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve('Hello World');", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    $result = [];\n    foreach ($s as\
    \ $char) {\n        if (in_array($char, $letters)) {\n            $result[] =\
    \ strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n      \
    \  } else {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n", "    $letters = str_split($s);\n    $result = [];\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[]\
    \ = strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $s = str_split($s);\n    $letters = [];\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[]\
    \ = $char;\n        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    foreach ($s as $key => $char) {\n        if (ctype_alpha($char)) {\n\
    \            $s[$key] = strtolower($char) === $char ? strtoupper($char) : strtolower($char);\n\
    \        }\n    }\n    return implode('', $s);\n}\n", "    $result = '';\n   \
    \ $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $letters = array_merge($letters, array_map('strtoupper', $letters));\n  \
    \  $s = str_split($s);\n    foreach ($s as $char) {\n        if (in_array($char,\
    \ $letters)) {\n            $result .= strtolower($char) === $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result .= $char;\n    \
    \    }\n    }\n    return $result;\n}\n", "    $letters = str_split($s);\n   \
    \ $result = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO\
    \ WORLD'); // hello world\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e');\
    \ // 1A2B3C4D5E\necho solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('!@#$%^&*()_+'); // !@#$%^&*()_+\necho solve('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz');\
    \ // abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\necho solve('The quick\
    \ brown fox jumps over the lazy dog.'); // tHE QUICK BROWN FOX JUMPS OVER THE\
    \ LAZY DOG.\necho solve('THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.'); // the\
    \ quick brown fox jumps over the lazy dog.", "    $s = str_split($s);\n    $result\
    \ = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n    \
    \        $result .= strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $letters = array_flip($letters);\n    $s = str_split($s);\n\
    \    $s = array_map(function($v) use ($letters) {\n        if (isset($letters[$v]))\
    \ {\n            return ctype_lower($v) ? strtoupper($v) : strtolower($v);\n \
    \       }\n        return $v;\n    }, $s);\n    return implode('', $s);\n}\n",
  "    $s = str_split($s);\n    $res = '';\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $res .= strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $res .= $char;\n       \
    \ }\n    }\n    return $res;\n}\n", "    $s = str_split($s);\n    $res = '';\n\
    \    $flag = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $flag = true;\n            $res .= ctype_lower($char) ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $res .= $char;\n       \
    \ }\n    }\n    return $flag ? $res : strrev($res);\n}\n\necho solve('hello world');\n\
    echo solve('HELLO WORLD');\necho solve('12345');\necho solve('1a2b3c4d5e');\n\
    echo solve('String.prototype.charAt');\necho solve('String.prototype.charCodeAt');\n\
    echo solve('String.prototype.concat');\necho solve('String.prototype.indexOf');\n\
    echo solve('String.prototype.lastIndexOf');\necho solve('String.prototype.localeCompare');\n\
    echo solve('String.prototype.match');\necho solve('String.prototype.replace');\n\
    echo solve('String.prototype.search');\necho solve('String.prototype.slice');\n\
    echo solve('String.prototype.split');\necho solve('String.prototype.substring');\n\
    echo solve('String.prototype.toLocaleLowerCase');\necho solve('String.prototype.toLocaleUpperCase');\n\
    echo solve('String.prototype.toLowerCase');\necho solve('String.prototype.toString');\n\
    echo solve('String.prototype.toUpperCase');\necho solve('String.prototype.trim');\n\
    echo solve('String.prototype.valueOf');\necho solve('String.raw');\necho solve('abcdefghijklmnopqrstuvwxyz');\n\
    echo solve('ABCDEFGHIJKLMNOPQRSTUVWXYZ');\necho solve('0123456789');\necho solve('`~!@#$%^&*()-_=+[{]}\\\
    \\|;:\\'\",<.>/?');\necho solve('The quick brown fox jumps over the lazy dog.');\n\
    echo solve('THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.');\necho solve('Lorem\
    \ ipsum", "    $letters = str_split($s);\n    $result = [];\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_alpha($letter)) {\n            $result[] =\
    \ strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ implode('', $result);\n}\n", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    $result = [];\n    foreach ($s as\
    \ $char) {\n        if (in_array($char, $letters)) {\n            $result[] =\
    \ strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n      \
    \  } else {\n            $result[] = $char;\n        }\n    }\n    return implode('',\
    \ $result);\n}\n\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO\
    \ WORLD'); // hello world\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e');\
    \ // 1A2B3C4D5E\necho solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('DIGEST'); // digest\necho solve('AL-AZIZ'); // al-aziz\n\
    echo solve('CodeWars'); // cODEwARS\necho solve('abcde'); // ABCDE\necho solve('ABCDE');\
    \ // abcde\necho solve('abcdE'); // ABCDe\necho solve('abcdeF'); // ABCDEF\necho\
    \ solve('abcdeFG'); // ABCDEfg\necho solve('abcdeFGH'); // ABCDEfgh\necho solve('abcdeFGHI');\
    \ // ABCDEfghi\necho solve('abcdeFGHIJ'); // ABCDEfghij\necho solve('abcdeFGHIJK');\
    \ // ABCDEfghijk\necho solve('abcdeFGHIJKL'); // ABCDEfghijkl\necho solve('abcdeFGHIJKLM');\
    \ // ABCDEfghijklm\necho solve('abcdeFGHIJKLMN'); // ABCDEfghijklmn\necho solve('abcdeFGHIJKLMNO');\
    \ // ABCDEfghijklmno\necho solve('abcdeFGHIJKLMNOP'); // ABCDEfghij", "    $result\
    \ = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $lettersUpper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $lettersUpper = str_split($lettersUpper);\n\
    \    $s = str_split($s);\n    for ($i = 0; $i < count($s); $i++) {\n        if\
    \ (in_array($s[$i], $letters)) {\n            $s[$i] = strtoupper($s[$i]);\n \
    \       } else if (in_array($s[$i], $lettersUpper)) {\n            $s[$i] = strtolower($s[$i]);\n\
    \        }\n    }\n    $result = implode('', $s);\n    return $result;\n}\n\n\
    $s = 'aBcD';\necho solve($s);", "    $letters = str_split($s);\n    $result =\
    \ [];\n    $hasLetters = false;\n    foreach ($letters as $letter) {\n       \
    \ if (ctype_alpha($letter)) {\n            $hasLetters = true;\n            $result[]\
    \ = ctype_lower($letter) ? strtoupper($letter) : strtolower($letter);\n      \
    \  } else {\n            $result[] = $letter;\n        }\n    }\n    return $hasLetters\
    \ ? implode('', $result) : strrev($s);\n}\n", "    $letters = str_split($s);\n\
    \    $result = '';\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $result .= ctype_upper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result ? $result : strrev($s);\n}\n\necho solve('aBcD'); // 'AbCd'\necho solve('aBcD12');\
    \ // 'AbCd12'\necho solve('aBcD12!@'); // 'AbCd12!@'\necho solve('aBcD12!@#$%^&*()_+');\
    \ // 'AbCd12!@#$%^&*()_+'\necho solve('aBcD12!@#$%^&*()_+-='); // 'AbCd12!@#$%^&*()_+-='\n\
    echo solve('aBcD12!@#$%^&*()_+-=[]{}|;:\",./<>?'); // 'AbCd12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?'\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\",./<>?\\\\'); // 'AbCd12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?\\\\'\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\",./<>?\\\\`~'); // 'AbCd12!@#$%^&*()_+-=[]{}|;:\"\
    ,./<>?\\\\`~'\necho solve('aBcD12!@#$%^&*()_+-=[]{}|;:\",./<>?\\\\`~1234567890');\
    \ // 'AbCd12!@#$%^&*()_+-=[]{}|;:\",./<>?\\\\`~1234567890'\necho", "    $letters\
    \ = str_split($s);\n    $result = [];\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result[] = $letter;\n        }\n    }\n    return implode('', $result);\n\
    }\n", "    $result = '';\n    $len = strlen($s);\n    $hasLetters = false;\n \
    \   for ($i = 0; $i < $len; $i++) {\n        $char = $s[$i];\n        if (ctype_alpha($char))\
    \ {\n            $hasLetters = true;\n            $result .= strtolower($char)\
    \ == $char ? strtoupper($char) : strtolower($char);\n        } else {\n      \
    \      $result .= $char;\n        }\n    }\n    return $hasLetters ? $result :\
    \ strrev($s);\n}\n\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO\
    \ WORLD'); // hello world\necho solve('12345'); // 54321\necho solve('123456789');\
    \ // 987654321\necho solve('abcdeFgtrzw'); // ABCDEFGT", "    if (preg_match('/[a-z]/',\
    \ $s)) {\n        return strtolower($s);\n    } elseif (preg_match('/[A-Z]/',\
    \ $s)) {\n        return strtoupper($s);\n    } else {\n        return strrev($s);\n\
    \    }\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $result .= $s[$i] === strtoupper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho solve('Hello World');\
    \ // hELLO wORLD\necho solve('HELLO WORLD'); // hello world\necho solve('12345');\
    \ // 12345\necho solve('1A2B3C4D5E'); // 1a2b3c4d5e\necho solve('String.with.punctuation\
    \ characters!'); // sTRING.WITH.PUNCTUATION CHARACTERS!\necho solve('Hello World!');\
    \ // hELLO wORLD!\necho solve('Hello World! 123'); // hELLO wORLD! 123\necho solve('Hello\
    \ World! 123!'); // hELLO wORLD! 123!\necho solve('Hello World! 123!!'); // hELLO\
    \ wORLD! 123!!\necho solve('Hello World! 123!!!'); // hELLO wORLD! 123!!!\necho\
    \ solve('Hello World! 123!!!!'); // hELLO wORLD! 123!!!!\necho solve('Hello World!\
    \ 123!!!!!'); // hELLO wORLD! 123!!!!!\necho solve('Hello World! 123!!!!!!');\
    \ // hELLO wORLD! 123!!!!!!\necho solve('Hello World! 123!!!!!!!'); // hELLO wORLD!\
    \ 123!!!!!!!\necho solve('Hello World! 123!!!!!!!!'); // hELLO wORLD! 123!!!!!!!!\n\
    echo solve('Hello World! 123!!!!!!!!!'); // hELLO wORLD! 123!!!!!!!!!\necho solve('Hello\
    \ World! 123!!!!!!!!!!'); // hELLO wORLD! 123!!!!!!!!!!\necho solve('Hello World!\
    \ 123!!!!!!!!!!!'); // hELLO wORLD! 123!!!!!!!!!!!\necho solve('Hello World! 123!!!!!!!!!!!!');\
    \ // hELLO wORLD! 123!!!!!!!!!!!!\necho solve('Hello World! 123!!!!!!!!!!!!!');\
    \ // h", "    $letters = 'abcdefghijklmnopqrstuvwxyz';\n    $letters = str_split($letters);\n\
    \    $letters = array_merge($letters, array_map('strtoupper', $letters));\n  \
    \  $letters = array_flip($letters);\n    $s = str_split($s);\n    $s = array_map(function($v)\
    \ use ($letters) {\n        if (isset($letters[$v])) {\n            return $v\
    \ == strtolower($v) ? strtoupper($v) : strtolower($v);\n        }\n        return\
    \ $v;\n    }, $s);\n    return implode('', $s);\n}\n\necho solve('hello'); //\
    \ HELLO\necho solve('HELLO'); // hello\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e');\
    \ // 1A2B3C4D5E\necho solve('String.prototype.charCodeAt'); // sTRING.PROTOTYPE.CHARCODEAT\n\
    echo solve(''); //\necho solve('Qk gs1v8tP'); // qK GS1V8TP\necho solve('qk gs1v8tp');\
    \ // QK GS1V8TP\necho solve('QK GS1V8TP'); // qk gs1v8tP\necho solve('Qk Gs1v8tP');\
    \ // qK gS1V8Tp\necho solve('Qk Gs1v8tP'); // qK gS1V8Tp\necho solve('Qk Gs1v8tP');\
    \ // qK gS1V8Tp\necho solve('Qk Gs1v8tP'); // qK gS1V8Tp\necho solve('Qk Gs1v8tP');\
    \ // qK gS1V8Tp\necho solve('Qk Gs1v8tP'); // qK gS1V8Tp\necho solve('Qk Gs1v8tP');\
    \ // qK gS1V8Tp\necho solve('Qk Gs1v8tP'); // qK gS1V8", "    $letters = range('a',\
    \ 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n    $result =\
    \ '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            $result .= strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n\necho solve('Hello World');", "    $s\
    \ = str_split($s);\n    $res = '';\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $res .= strtolower($char) == $char ? strtoupper($char) : strtolower($char);\n\
    \        } else {\n            $res .= $char;\n        }\n    }\n    return $res;\n\
    }\n", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= strtolower($s[$i]) == $s[$i]\
    \ ? strtoupper($s[$i]) : strtolower($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n\necho solve('Hello World');\
    \ // hELLO wORLD\necho solve('Hello-LOL'); // hELLO-lol\necho solve('Sup DUDE!!?');\
    \ // sUP dude!!?\necho solve('12345'); // 12345\necho solve('aBcD'); // AbCd\n\
    echo solve('aBcD123'); // AbCd123\necho solve('aBcD123!@#$%^&*()_-+='); // AbCd123!@#$%^&*()_-+=\n\
    echo solve('aBcD123!@#$%^&*()_-+=][}{;:.,<>?/'); // AbCd123!@#$%^&*()_-+=][}{;:.,<>?/\n\
    echo solve('aBcD123!@#$%^&*()_-+=][}{;:.,<>?/'); // AbCd123!@#$%^&*()_-+=][}{;:.,<>?/\n\
    echo solve('aBcD123!@#$%^&*()_-+=][}{;:.,<>?/'); // AbCd123!@#$%^&*()_-+=][}{;:.,<>?/\n\
    echo solve('aBcD123!@#$%^&*()_-+=][}{;:.,<>?/'); // AbCd123!@#$%^&*()_-+=][}{;:.,<>?/\n\
    echo solve('aBcD123!@#$%^&*()_-+=][}{;:.,<>?/'); // AbCd123!@#$%^&*()_-+=][}{;:.,<",
  "    $s = str_split($s);\n    $res = '';\n    for ($i = 0; $i < count($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $res .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $res\
    \ .= $s[$i];\n        }\n    }\n    return $res;\n}\n\necho solve('HelloWorld');\
    \ // hELLOwORLD\necho solve('HelloWorld123'); // hELLOwORLD123\necho solve('HELLOworld123');\
    \ // helloWORLD123\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('HELLOworld123!!!');\
    \ // helloWORLD123!!!\necho solve('HELLOworld123!!!'); // helloWORLD123!!!\necho\
    \ solve('HELLOworld123!!!'); // helloWORLD123!!!\necho solve('", "    if(!preg_match('/[a-zA-Z]/',\
    \ $s)){\n        return strrev($s);\n    }\n    $result = '';\n    for($i = 0;\
    \ $i < strlen($s); $i++){\n        if(ctype_alpha($s[$i])){\n            $result\
    \ .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $arr = str_split($s);\n    $result = [];\n    $isLetter\
    \ = false;\n    foreach ($arr as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $isLetter = true;\n            if (ctype_lower($value)) {\n \
    \               $result[] = strtoupper($value);\n            } else {\n      \
    \          $result[] = strtolower($value);\n            }\n        } else {\n\
    \            $result[] = $value;\n        }\n    }\n    if ($isLetter) {\n   \
    \     return implode('', $result);\n    } else {\n        return strrev($s);\n\
    \    }\n}\n", "    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $s = str_split($s);\n    $result = [];\n    foreach ($s\
    \ as $char) {\n        if (in_array($char, $letters)) {\n            if (ctype_lower($char))\
    \ {\n                $result[] = strtoupper($char);\n            } else {\n  \
    \              $result[] = strtolower($char);\n            }\n        } else {\n\
    \            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n\
    }\n\necho solve('Hello World');\necho solve('Hello World!');\necho solve('Hello\
    \ World! 123');\necho solve('Hello World! 123!');\necho solve('Hello World! 123!@#');\n\
    echo solve('Hello World! 123!@#!');\necho solve('Hello World! 123!@#!$%^&*()_+');\n\
    echo solve('Hello World! 123!@#!$%^&*()_+=');\necho solve('Hello World! 123!@#!$%^&*()_+=-');\n\
    echo solve('Hello World! 123!@#!$%^&*()_+=-[]');\necho solve('Hello World! 123!@#!$%^&*()_+=-[]{}');\n\
    echo solve('Hello World! 123!@#!$%^&*()_+=-[]{}|');\necho solve('Hello World!\
    \ 123!@#!$%^&*()_+=-[]{}|\\\\');\necho solve('Hello World! 123!@#!$%^&*()_+=-[]{}|\\\
    \\/');\necho solve('Hello World! 123!@#!$%^&*()_+=-[]{}|\\\\/<>?');\necho solve('Hello\
    \ World! 123!@#!$%^&*()_+=-[]{}|\\\\/<>?`~');\necho solve('Hello World! 123!@#!$%^&*()_+=-[]{}|\\\
    \\/<>?`~\\'');\necho solve('Hello World! 123!@#!$%^&*()_+=-", "    $letters =\
    \ str_split($s);\n    $result = \"\";\n    foreach ($letters as $letter) {\n \
    \       if (ctype_alpha($letter)) {\n            $result .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $result;\n}\n\n\
    echo solve(\"Hello World\");\necho solve(\"Hello-LOL\");\necho solve(\"Sup DUDE!!?\"\
    );\necho solve(\"\");\necho solve(\"12345\");\necho solve(\"aBcDeF\");\necho solve(\"\
    aBcDeF12345\");\necho solve(\"aBcDeF12345!@#$%^&*()_-+=\");\necho solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,\"\
    );\necho solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~\");\necho solve(\"\
    aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~ \");\necho solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~\
    \  \");\necho solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~   \");\necho solve(\"\
    aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~    \");\necho solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~\
    \     \");\necho solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~      \");\n\
    echo solve(\"aBcDeF12345!@#$%^&*()_-+=][{}|';:?/>.<,`~       \");\n", "    if(!preg_match('/[a-zA-Z]/',\
    \ $s)) {\n        return strrev($s);\n    }\n    $result = '';\n    for($i = 0;\
    \ $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i])) {\n            $result\
    \ .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }\n", "    $letters = str_split(strtolower($s));\n    $result = '';\n    foreach\
    \ ($letters as $letter) {\n        if (ctype_alpha($letter)) {\n            $result\
    \ .= $letter === strtoupper($letter) ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $result;\n}\n\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO\
    \ WORLD'); // hello world\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e');\
    \ // 1A2B3C4D5E\necho solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO WORLD');\
    \ // hello world\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e'); //\
    \ 1A2B3C4D5E\necho solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO WORLD');\
    \ // hello world\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e'); //\
    \ 1A2B3C4D5E\necho solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO WORLD');\
    \ // hello world\necho solve('12345'); // 12345\necho solve('1a2b3c4d5e'); //\
    \ 1A2B3C4D5E\necho solve('String.with.punctuation characters!'); // sTRING.WITH.PUNCTUATION\
    \ CHARACTERS!\necho solve('Hello World'); // hELLO wORLD\necho solve('HELLO WORLD');\
    \ // hello world\necho solve('12345');"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

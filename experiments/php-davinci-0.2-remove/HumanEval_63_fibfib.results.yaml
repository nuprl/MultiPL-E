language: php
name: HumanEval_63_fibfib
results:
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    $a = 0;\n    $b = 0;\n\
    \    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $d;\n\
    }\n\necho fibfib(4);\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2'
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    $a = 0;\n    $b = 0;\n\
    \    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $d;\n\
    }\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2)\
    \ . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5)\
    \ . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8)\
    \ . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11)\
    \ . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14)\
    \ . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17)\
    \ . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23)\
    \ . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26)\
    \ . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32)\
    \ . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34) . \"\\n\";\necho fibfib(35)\
    \ .\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9639hynu.php on line 57

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    $a = 0;\n    $b = 0;\n\
    \    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $d;\n\
    }\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\
    \\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) .\
    \ \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8)\
    \ . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11)\
    \ . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14)\
    \ . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17)\
    \ . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23)\
    \ . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26)\
    \ . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfmrormpz.php on line 60

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n  if ($n == 0) {\n    return 0;\n \
    \ } else if ($n == 1) {\n    return 0;\n  } else if ($n == 2) {\n    return 1;\n\
    \  } else {\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n  }\n}\n\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 3) {\n        return $n\
    \ - 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n        $b = $c;\n  \
    \      $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpraliy35z.php on line 58

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    $fibfib = [0, 0, 1];\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i\
    \ - 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(10);\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $a = 0;\n    $b = 0;\n    $c =\
    \ 1;\n    for ($i = 0; $i < $n; $i++) {\n        $d = $a + $b + $c;\n        $a\
    \ = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $a;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $fibfib = [0, 0, 1];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i -\
    \ 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $fibfib = [0, 0, 1];\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i - 2] + $fibfib[$i\
    \ - 3];\n    }\n    return $fibfib[$n];\n}\n\necho fibfib(0) . PHP_EOL;\necho\
    \ fibfib(1) . PHP_EOL;\necho fibfib(2) . PHP_EOL;\necho fibfib(3) . PHP_EOL;\n\
    echo fibfib(4) . PHP_EOL;\necho fibfib(5) . PHP_EOL;\necho fibfib(6) . PHP_EOL;\n\
    echo fibfib(7) . PHP_EOL;\necho fibfib(8) . PHP_EOL;\necho fibfib(9) . PHP_EOL;\n\
    echo fibfib(10) . PHP_EOL;\necho fibfib(11) . PHP_EOL;\necho fibfib(12) . PHP_EOL;\n\
    echo fibfib(13) . PHP_EOL;\necho fibfib(14) . PHP_EOL;\necho fibfib(15) . PHP_EOL;\n\
    echo fibfib(16) . PHP_EOL;\necho fibfib(17) . PHP_EOL;\necho fibfib(18) . PHP_EOL;\n\
    echo fibfib(19) . PHP_EOL;\necho fibfib(20) . PHP_EOL;\necho fibfib(21) . PHP_EOL;\n\
    echo fibfib(22) . PHP_EOL;\necho fibfib(23) . PHP_EOL;\necho fibfib(24) . PHP_EOL;\n\
    echo fibfib(25) . PHP_EOL\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp71v_tixu.php on line 51

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return\
    \ 0;\n    } else if ($n == 2) {\n        return 1;\n    } else {\n        return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0)\
    \ . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3)\
    \ . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33)\
    \ . \"\\n\";\necho fibfib(34) . \"\\n\";\necho fibfib(35) . \"\\n\";\necho fibfib(36)\
    \ . \"\\\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9j6ygdyn.php on line 60

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $fibfib = [0, 0, 1];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i -\
    \ 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $fibfib = [0, 0, 1];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i -\
    \ 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\n\necho fibfib(10);\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(10);\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return\
    \ 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n    return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\necho fibfib(0) . \"\\\
    n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\
    \\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) .\
    \ \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\necho fibfib(10);\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $a = 0;\n    $b = 0;\n    $c =\
    \ 1;\n    for ($i = 0; $i < $n; $i++) {\n        $d = $a + $b + $c;\n        $a\
    \ = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $a;\n}\n\necho\
    \ fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\n\
    echo fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\"\
    ;\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\\
    n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) .\
    \ \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14)\
    \ . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17)\
    \ . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23)\
    \ . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26)\
    \ . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32)\
    \ . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34) . \"\\n\";\necho fib\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpk90cmnbw.php on line 57

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n\tif ($n == 0) {\n\t\treturn 0;\n\t\
    } else if ($n == 1) {\n\t\treturn 0;\n\t} else if ($n == 2) {\n\t\treturn 1;\n\
    \t} else {\n\t\treturn fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n\t}\n}\n\n\
    echo fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\"\
    ;\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\\
    n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\
    \\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11)\
    \ . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14)\
    \ . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17)\
    \ . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23)\
    \ . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26)\
    \ . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32)\
    \ . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34) . \"\\n\";\necho\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqu9pmcds.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    $a = 0;\n    $b = 0;\n\
    \    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $d;\n\
    }\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n  if ($n == 0) {\n    return 0;\n \
    \ } else if ($n == 1) {\n    return 0;\n  } else if ($n == 2) {\n    return 1;\n\
    \  } else {\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n  }\n}\n\n\
    echo fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\"\
    ;\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\\
    n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\
    \\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11)\
    \ . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14)\
    \ . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17)\
    \ . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23)\
    \ . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26)\
    \ . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32)\
    \ . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34) . \"\\n\";\necho fibfib(\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpq0778z0e.php on line 56

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 0) {\n        return -1;\n\
    \    }\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n   \
    \     return 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n    $a =\
    \ 0;\n    $b = 0;\n    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $d\
    \ = $a + $b + $c;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n\
    \    return $d;\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho\
    \ fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\n\
    echo fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\"\
    ;\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\\
    n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmph8_an_mu.php on line 63

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 3) {\n        return $n\
    \ - 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    $d = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '-1

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    29249425

    53798080

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\\
    n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\
    \\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) .\
    \ \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphkkzqmm4.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: -1
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0); // 0\necho fibfib(1); // 0\n\
    echo fibfib(2); // 1\necho fibfib(3); // 1\necho fibfib(4); // 2\necho fibfib(5);\
    \ // 4\necho fibfib(6); // 7\necho fibfib(7); // 13\necho fibfib(8); // 24\necho\
    \ fibfib(9); // 44\necho fibfib(10); // 81\necho fibfib(11); // 149\necho fibfib(12);\
    \ // 274\necho fibfib(13); // 504\necho fibfib(14); // 927\necho fibfib(15); //\
    \ 1705\necho fibfib(16); // 3136\necho fibfib(17); // 5768\necho fibfib(18); //\
    \ 10609\necho fibfib(19); // 19513\necho fibfib(20); // 35890\necho fibfib(21);\
    \ // 66012\necho fibfib(22); // 121415\necho fibfib(23); // 223317\necho fibfib(24);\
    \ // 410744\necho fibfib(25); // 755476\necho fibfib(26); // 1389537\necho fibfib(27);\
    \ // 2555757\necho fibfib(28); // 4700770\necho fibfib(29); // 8646064\necho fibfib(30);\
    \ // 15902591\necho fibfib(31); // 29249425\necho fibfib(32); // 53798080\necho\
    \ fibfib(33); // 98950096\necho fibfib(34); // 181997601\necho fibfib(35); //\
    \ 334745777\necho fibfib(36); // 615693474\necho fibfib(37); // 113\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: b'00112471324448114927450492717053136576810609195133589066012121415223317410744755476138953725557574700770864606415902591'
  timestamp: 1659730859
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $fibfib = [0, 0, 1];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i -\
    \ 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\n\necho fibfib(0) .\
    \ \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3)\
    \ . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp73_2dy9e.php on line 51

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\\
    n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\
    \\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) .\
    \ \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphkkzqmm4.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(5);\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(10);\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\\
    n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\
    \\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) .\
    \ \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphkkzqmm4.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $fibfib = [0, 0, 1];\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i - 2] + $fibfib[$i\
    \ - 3];\n    }\n    return $fibfib[$n];\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\necho fibfib(5);\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\\
    n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\
    \\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) .\
    \ \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphkkzqmm4.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return\
    \ 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n    $a = 0;\n    $b\
    \ = 0;\n    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b\
    \ + $c;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return\
    \ $d;\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $a = 0;\n    $b = 0;\n    $c =\
    \ 1;\n    for ($i = 0; $i < $n; $i++) {\n        $d = $a + $b + $c;\n        $a\
    \ = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $a;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n  if ($n == 0) {\n    return 0;\n \
    \ } else if ($n == 1) {\n    return 0;\n  } else if ($n == 2) {\n    return 1;\n\
    \  } else {\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n  }\n}\n\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\\
    n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\
    \\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) .\
    \ \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphkkzqmm4.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $fib = array(0, 0, 1);\n    for\
    \ ($i = 3; $i <= $n; $i++) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2] +\
    \ $fib[$i - 3];\n    }\n    return $fib[$n];\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\\
    n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\
    \\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) .\
    \ \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphkkzqmm4.php on line 56

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2)\
    \ . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5)\
    \ . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8)\
    \ . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11)\
    \ . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14)\
    \ . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17)\
    \ . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23)\
    \ . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26)\
    \ . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32)\
    \ . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34) . \"\\n\";\necho fibfib(35)\
    \ .\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9639hynu.php on line 57

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\\
    n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\
    \\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) .\
    \ \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphkkzqmm4.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\necho fibfib(4);\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2)\
    \ . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5)\
    \ . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8)\
    \ . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11)\
    \ . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14)\
    \ . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17)\
    \ . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23)\
    \ . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26)\
    \ . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32)\
    \ . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34) . \"\\n\";\necho fibfib(35)\
    \ .\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9639hynu.php on line 57

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\\
    n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\
    \\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) .\
    \ \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphkkzqmm4.php on line 56

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $a = 0;\n    $b = 0;\n    $c =\
    \ 1;\n    for ($i = 0; $i < $n; $i++) {\n        $a = $b;\n        $b = $c;\n\
    \        $c = $a + $b + $c;\n    }\n    return $a;\n}\n\necho fibfib(0) . \"\\\
    n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\
    \\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) .\
    \ \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33)\
    \ . \"\\n\";\necho fibfib(34) . \"\\n\";\necho fibfib(35) . \"\\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7vxenijb.php on line 61

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    $a = 0;\n    $b = 0;\n\
    \    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $d;\n\
    }\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $fibfib = [0, 0, 1];\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i - 2] + $fibfib[$i\
    \ - 3];\n    }\n    return $fibfib[$n];\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(10);\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n <= 1) {\n        return\
    \ 0;\n    } else if ($n == 2) {\n        return 1;\n    } else {\n        return\
    \ fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0)\
    \ . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3)\
    \ . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33)\
    \ . \"\\n\";\necho fibfib(34) . \"\\n\";\necho fibfib(35) . \"\\n\";\necho fibfib(36)\
    \ . \"\\\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9j6ygdyn.php on line 60

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(5);\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    } else if ($n == 2) {\n        return 1;\n    } else {\n        return fibfib($n\
    \ - 1) + fibfib($n - 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    return fibfib($n - 1)\
    \ + fibfib($n - 2) + fibfib($n - 3);\n}\n\necho fibfib(10);\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(10);\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    $d = 0;\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a =\
    \ $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8)\
    \ !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $fibfib = [0, 0, 1];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i -\
    \ 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(10);\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(4);\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2'
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 2; $i < $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n      \
    \  $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $fibfib = array(0, 0, 1);\n   \
    \ for ($i = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i\
    \ - 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\n\necho fibfib(0)\
    \ . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3)\
    \ . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33)\
    \ . \"\\n\";\necho fibfib\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp48vs1gdh.php on line 51

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2)\
    \ . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5)\
    \ . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8)\
    \ . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11)\
    \ . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14)\
    \ . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17)\
    \ . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23)\
    \ . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26)\
    \ . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32)\
    \ . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34) . \"\\n\";\necho fibfib(35)\
    \ .\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp9639hynu.php on line 57

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\\
    n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\
    \\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) .\
    \ \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphkkzqmm4.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $n1 = 0;\n    $n2 = 0;\n    $n3 = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $n1 = $n2;\n        $n2 = $n3;\n        $n3\
    \ = $n1 + $n2 + $n3;\n    }\n    return $n3;\n}\n\necho fibfib(0) . \"\\n\";\n\
    echo fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\"\
    ;\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\\
    n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\
    \\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp3hw_3fwp.php on line 60

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    return fibfib($n - 1)\
    \ + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n  \
    \  return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    $d = 0;\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a =\
    \ $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0)\
    \ . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3)\
    \ . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmihmho80.php on line 62

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $fibfib = array(0, 0, 1);\n   \
    \ for ($i = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i\
    \ - 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    $fibfib = [0, 0, 1];\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i\
    \ - 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\n\necho fibfib(10);\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    $a = 0;\n    $b = 0;\n\
    \    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $d;\n\
    }\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\
    \\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) .\
    \ \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8)\
    \ . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11)\
    \ . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14)\
    \ . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17)\
    \ . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23)\
    \ . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26)\
    \ . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfmrormpz.php on line 60

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $fibfib = [0, 0, 1];\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i - 2] + $fibfib[$i\
    \ - 3];\n    }\n    return $fibfib[$n];\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(10);\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\n$n = 5;\necho fibfib($n);\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $fibfib = array(0, 0, 1);\n   \
    \ for ($i = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i\
    \ - 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\\
    n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\
    \\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) .\
    \ \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphkkzqmm4.php on line 56

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(5);\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    return fibfib($n - 1)\
    \ + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n  \
    \  return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(10);\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    return fibfib($n-1) + fibfib($n-2)\
    \ + fibfib($n-3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== 81) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    return fibfib($n - 1)\
    \ + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n  \
    \  return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\\
    n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\
    \\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) .\
    \ \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphkkzqmm4.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(10);\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $a = 0;\n    $b = 0;\n    $c =\
    \ 1;\n    $d = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $d = $a + $b + $c;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $d;\n\
    }\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppm8s7cmq.php:27\n\
    Stack trace:\n#0 /tmp/tmppm8s7cmq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppm8s7cmq.php\
    \ on line 27\n"
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    return fibfib($n - 1)\
    \ + fibfib($n - 2) + fibfib($n - 3);\n}\n\nfunction candidate(...$args) {\n  \
    \  return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\necho fibfib(10);\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $a = 0;\n    $b = 0;\n    $c =\
    \ 1;\n    for ($i = 0; $i < $n; $i++) {\n        $d = $a + $b + $c;\n        $a\
    \ = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $a;\n}\n\necho\
    \ fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\n\
    echo fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\"\
    ;\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\\
    n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) .\
    \ \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14)\
    \ . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17)\
    \ . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23)\
    \ . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26)\
    \ . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32)\
    \ . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34) . \"\\n\";\necho fib\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpk90cmnbw.php on line 57

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\necho fibfib(5);\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n  if ($n == 0) {\n    return 0;\n \
    \ } else if ($n == 1) {\n    return 0;\n  } else if ($n == 2) {\n    return 1;\n\
    \  } else {\n    return fibfib($n-1) + fibfib($n-2) + fibfib($n-3);\n  }\n}\n\n\
    echo fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\"\
    ;\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\\
    n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\
    \\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11)\
    \ . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14)\
    \ . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17)\
    \ . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23)\
    \ . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26)\
    \ . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(32)\
    \ . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34) . \"\\n\";\necho fibfib(\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpq0778z0e.php on line 56

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    $fibfib = array(0, 0, 1);\n   \
    \ for ($i = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i\
    \ - 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\n\necho fibfib(10);\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) {\n        return 0;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    $a = 0;\n    $b = 0;\n\
    \    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $d;\n\
    }\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 0) {\n        return -1;\n\
    \    }\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n   \
    \     return 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n    $a =\
    \ 0;\n    $b = 0;\n    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $d\
    \ = $a + $b + $c;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n\
    \    return $d;\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho\
    \ fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\n\
    echo fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\"\
    ;\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\\
    n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmph8_an_mu.php on line 63

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n < 2) return 0;\n    if ($n\
    \ == 2) return 1;\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i = 3; $i\
    \ <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n        $b = $c;\n\
    \        $c = $d;\n    }\n    return $d;\n}\n\nfunction candidate(...$args) {\n\
    \    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730855
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n\
    \ - 3);\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) return 0;\n    if\
    \ ($n == 1) return 0;\n    if ($n == 2) return 1;\n    $a = 0;\n    $b = 0;\n\
    \    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n\
    \        $a = $b;\n        $b = $c;\n        $c = $d;\n    }\n    return $d;\n\
    }\n\necho fibfib(0) . \"\\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\
    \\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) .\
    \ \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8)\
    \ . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11)\
    \ . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14)\
    \ . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17)\
    \ . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20)\
    \ . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23)\
    \ . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26)\
    \ . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29)\
    \ . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31) . \"\\n\";\necho fibfib(\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpzmr3t5de.php on line 57

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\necho fibfib(0) . \"\
    \\n\";\necho fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) .\
    \ \"\\n\";\necho fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6)\
    \ . \"\\n\";\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9)\
    \ . \"\\n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return fibfib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0

    1

    1

    2

    4

    7

    13

    24

    44

    81

    149

    274

    504

    927

    1705

    3136

    5768

    10609

    19513

    35890

    66012

    121415

    223317

    410744

    755476

    1389537

    2555757

    4700770

    8646064

    15902591

    '
  timestamp: 1659730854
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n-1) + fibfib($n-2) +\
    \ fibfib($n-3);\n    }\n}\n\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $fibfib = [0, 0, 1];\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i - 2] + $fibfib[$i\
    \ - 3];\n    }\n    return $fibfib[$n];\n}\n\necho fibfib(0) . \"\\n\";\necho\
    \ fibfib(1) . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\n\
    echo fibfib(4) . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\"\
    ;\necho fibfib(7) . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\\
    n\";\necho fibfib(10) . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12)\
    \ . \"\\n\";\necho fibfib(13) . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15)\
    \ . \"\\n\";\necho fibfib(16) . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18)\
    \ . \"\\n\";\necho fibfib(19) . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21)\
    \ . \"\\n\";\necho fibfib(22) . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24)\
    \ . \"\\n\";\necho fibfib(25) . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27)\
    \ . \"\\n\";\necho fibfib(28) . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fib\n\
    function candidate(...$args) {\n    return fibfib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2) !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== 81) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14) !== 927)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp82uvywu0.php on line 56

    '
  timestamp: 1659730855
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(10);\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '81'
  timestamp: 1659730855
- exit_code: 0
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n\
    \        return 1;\n    }\n    $a = 0;\n    $b = 0;\n    $c = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $d = $a + $b + $c;\n        $a = $b;\n     \
    \   $b = $c;\n        $c = $d;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return fibfib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 4) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 24) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 81) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12) !== 274) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14) !== 927) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730854
- exit_code: 255
  program: "<?php\n// The FibFib number sequence is a sequence similar to the Fibbonacci\
    \ sequnece that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n\
    // fibfib(2) == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    // Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\nfunction fibfib($n) {\n    if ($n == 0) {\n        return\
    \ 0;\n    } else if ($n == 1) {\n        return 0;\n    } else if ($n == 2) {\n\
    \        return 1;\n    } else {\n        return fibfib($n - 1) + fibfib($n -\
    \ 2) + fibfib($n - 3);\n    }\n}\n\necho fibfib(0) . \"\\n\";\necho fibfib(1)\
    \ . \"\\n\";\necho fibfib(2) . \"\\n\";\necho fibfib(3) . \"\\n\";\necho fibfib(4)\
    \ . \"\\n\";\necho fibfib(5) . \"\\n\";\necho fibfib(6) . \"\\n\";\necho fibfib(7)\
    \ . \"\\n\";\necho fibfib(8) . \"\\n\";\necho fibfib(9) . \"\\n\";\necho fibfib(10)\
    \ . \"\\n\";\necho fibfib(11) . \"\\n\";\necho fibfib(12) . \"\\n\";\necho fibfib(13)\
    \ . \"\\n\";\necho fibfib(14) . \"\\n\";\necho fibfib(15) . \"\\n\";\necho fibfib(16)\
    \ . \"\\n\";\necho fibfib(17) . \"\\n\";\necho fibfib(18) . \"\\n\";\necho fibfib(19)\
    \ . \"\\n\";\necho fibfib(20) . \"\\n\";\necho fibfib(21) . \"\\n\";\necho fibfib(22)\
    \ . \"\\n\";\necho fibfib(23) . \"\\n\";\necho fibfib(24) . \"\\n\";\necho fibfib(25)\
    \ . \"\\n\";\necho fibfib(26) . \"\\n\";\necho fibfib(27) . \"\\n\";\necho fibfib(28)\
    \ . \"\\n\";\necho fibfib(29) . \"\\n\";\necho fibfib(30) . \"\\n\";\necho fibfib(31)\
    \ . \"\\n\";\necho fibfib(32) . \"\\n\";\necho fibfib(33) . \"\\n\";\necho fibfib(34)\
    \ . \"\\n\";\necho fibfib(\nfunction candidate(...$args) {\n    return fibfib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 24) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 81) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 274) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14)\
    \ !== 927) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjem2ocef.php on line 56

    '
  timestamp: 1659730854

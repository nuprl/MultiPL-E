name: HumanEval_30_get_positive
language: php
prompt: "<?php\n// Return only positive numbers in the list.\nfunction get_positive($l)\
  \ {\n"
tests: "function candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
  \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
  \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
  \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $result = array();\n    foreach ($l as $n) {\n        if ($n >\
    \ 0) {\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n",
  "    $result = array();\n    foreach ($l as $item) {\n        if ($item > 0) {\n\
    \            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
  "\treturn array_filter($l, function($n) {\n\t\treturn $n > 0;\n\t});\n}\n", "  $result\
    \ = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $result[]\
    \ = $item;\n    }\n  }\n  return $result;\n}\n", "    return array_filter($l,\
    \ function($x) { return $x > 0; });\n}\n", "    $result = array();\n    foreach\
    \ ($l as $n) {\n        if ($n > 0) {\n            $result[] = $n;\n        }\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    foreach ($l as\
    \ $n) {\n        if ($n > 0) {\n            $result[] = $n;\n        }\n    }\n\
    \    return $result;\n}\n", "  $result = array();\n  foreach ($l as $i) {\n  \
    \  if ($i > 0) {\n      $result[] = $i;\n    }\n  }\n  return $result;\n}\n",
  "  $result = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $result[]\
    \ = $item;\n    }\n  }\n  return $result;\n}\n", "\t$result = array();\n\tforeach\
    \ ($l as $n) {\n\t\tif ($n > 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n", "  $r = array();\n  foreach ($l as $v) {\n    if ($v > 0) {\n\
    \      $r[] = $v;\n    }\n  }\n  return $r;\n}\n", "\t$ret = array();\n\tforeach\
    \ ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$ret[] = $v;\n\t\t}\n\t}\n\treturn $ret;\n\
    }\n", "    return array_filter($l, function($n) {\n        return $n > 0;\n  \
    \  });\n}\n", "  $result = array();\n  foreach ($l as $n) {\n    if ($n > 0) {\n\
    \      $result[] = $n;\n    }\n  }\n  return $result;\n}\n", "    return array_filter($l,\
    \ function($x) { return $x > 0; });\n}\n", "\t$result = array();\n\tforeach ($l\
    \ as $n) {\n\t\tif ($n > 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "  $result = array();\n  foreach ($l as $i) {\n    if ($i > 0) {\n     \
    \ $result[] = $i;\n    }\n  }\n  return $result;\n}\n", "    $r = array();\n \
    \   foreach ($l as $v) {\n        if ($v > 0) {\n            $r[] = $v;\n    \
    \    }\n    }\n    return $r;\n}\n", "    return array_filter($l, function($x)\
    \ { return $x > 0; });\n}\n", "\t$result = array();\n\tforeach ($l as $n) {\n\t\
    \tif ($n > 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\treturn $result;\n}\n", " \
    \   return array_filter($l, function($n) {\n        return $n > 0;\n    });\n\
    }\n", "    $result = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }\n", "  $positive = array();\n  foreach ($l as $n) {\n    if ($n > 0) {\n   \
    \   $positive[] = $n;\n    }\n  }\n  return $positive;\n}\n", "    return array_filter($l,\
    \ function($x) { return $x > 0; });\n}\n", "  return array_filter($l, function($n)\
    \ {\n    return $n > 0;\n  });\n}\n", "    $result = array();\n    foreach ($l\
    \ as $n) {\n        if ($n > 0) {\n            $result[] = $n;\n        }\n  \
    \  }\n    return $result;\n}\n", "  $result = array();\n  foreach ($l as $n) {\n\
    \    if ($n > 0) {\n      $result[] = $n;\n    }\n  }\n  return $result;\n}\n",
  "  $result = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $result[]\
    \ = $item;\n    }\n  }\n  return $result;\n}\n", "    $result = array();\n   \
    \ foreach ($l as $item) {\n        if ($item > 0) {\n            $result[] = $item;\n\
    \        }\n    }\n    return $result;\n}\n", "\t$result = array();\n\tforeach\
    \ ($l as $item) {\n\t\tif ($item > 0) {\n\t\t\t$result[] = $item;\n\t\t}\n\t}\n\
    \treturn $result;\n}\n", "  $result = array();\n  foreach ($l as $n) {\n    if\
    \ ($n > 0) {\n      $result[] = $n;\n    }\n  }\n  return $result;\n}\n", "  \
    \  $result = array();\n    foreach ($l as $item) {\n        if ($item > 0) {\n\
    \            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
  "    $result = array();\n    foreach ($l as $v) {\n        if ($v > 0) {\n     \
    \       $result[] = $v;\n        }\n    }\n    return $result;\n}\n", "\t$ret\
    \ = array();\n\tforeach ($l as $n) {\n\t\tif ($n > 0) {\n\t\t\t$ret[] = $n;\n\t\
    \t}\n\t}\n\treturn $ret;\n}\n", "    $result = array();\n    foreach ($l as $n)\
    \ {\n        if ($n > 0) {\n            $result[] = $n;\n        }\n    }\n  \
    \  return $result;\n}\n", "  return array_filter($l, function($x) { return $x\
    \ > 0; });\n}\n", "    $result = array();\n    foreach ($l as $item) {\n     \
    \   if ($item > 0) {\n            $result[] = $item;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = array();\n    foreach ($l as $i) {\n        if\
    \ ($i > 0) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n\
    }\n", "\t$res = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$res[]\
    \ = $v;\n\t\t}\n\t}\n\treturn $res;\n}\n", "  $result = array();\n  foreach ($l\
    \ as $item) {\n    if ($item > 0) {\n      $result[] = $item;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $res = array();\n    foreach ($l as $v) {\n        if ($v\
    \ > 0) {\n            $res[] = $v;\n        }\n    }\n    return $res;\n}\n",
  "    return array_filter($l, function($x) { return $x > 0; });\n}\n", "    return\
    \ array_filter($l, function($x) {\n        return $x > 0;\n    });\n}\n", "  $positive\
    \ = array();\n  foreach ($l as $n) {\n    if ($n > 0) {\n      $positive[] = $n;\n\
    \    }\n  }\n  return $positive;\n}\n", "    $result = array();\n    foreach ($l\
    \ as $item) {\n        if ($item > 0) {\n            $result[] = $item;\n    \
    \    }\n    }\n    return $result;\n}\n", "    $result = array();\n    foreach\
    \ ($l as $n) {\n        if ($n > 0) {\n            $result[] = $n;\n        }\n\
    \    }\n    return $result;\n}\n", "\t$result = array();\n\tforeach ($l as $n)\
    \ {\n\t\tif ($n > 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "    return array_filter($l, function($n) {\n        return $n > 0;\n  \
    \  });\n}\n", "  $result = array();\n  foreach ($l as $value) {\n    if ($value\
    \ > 0) {\n      $result[] = $value;\n    }\n  }\n  return $result;\n}\n", "  \
    \  return array_filter($l, function($x) { return $x > 0; });\n}\n", "    $result\
    \ = array();\n    foreach ($l as $v) {\n        if ($v > 0) {\n            $result[]\
    \ = $v;\n        }\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    foreach ($l as $item) {\n        if ($item > 0) {\n            $result[]\
    \ = $item;\n        }\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    foreach ($l as $item) {\n        if ($item > 0) {\n            $result[]\
    \ = $item;\n        }\n    }\n    return $result;\n}\n", "    return array_filter($l,\
    \ function($x) { return $x > 0; });\n}\n", "  $result = array();\n  foreach ($l\
    \ as $n) {\n    if ($n > 0) {\n      $result[] = $n;\n    }\n  }\n  return $result;\n\
    }\n", "  $res = array();\n  foreach ($l as $v) {\n    if ($v > 0) {\n      $res[]\
    \ = $v;\n    }\n  }\n  return $res;\n}\n", "    return array_filter($l, function($n)\
    \ {\n        return $n > 0;\n    });\n}\n", "\t$result = array();\n\tforeach ($l\
    \ as $n) {\n\t\tif ($n > 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "  $result = array();\n  foreach ($l as $i) {\n    if ($i > 0) {\n     \
    \ $result[] = $i;\n    }\n  }\n  return $result;\n}\n", "\t$ret = array();\n\t\
    foreach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$ret[] = $v;\n\t\t}\n\t}\n\treturn\
    \ $ret;\n}\n", "\t$ret = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\
    \t\t\t$ret[] = $v;\n\t\t}\n\t}\n\treturn $ret;\n}\n", "    return array_filter($l,\
    \ function($x) { return $x > 0; });\n}\n", "    $r = array();\n    foreach ($l\
    \ as $v) {\n        if ($v > 0) {\n            $r[] = $v;\n        }\n    }\n\
    \    return $r;\n}\n", "    $result = array();\n    foreach ($l as $n) {\n   \
    \     if ($n > 0) {\n            $result[] = $n;\n        }\n    }\n    return\
    \ $result;\n}\n", "    return array_filter($l, function($n) {\n        return\
    \ $n > 0;\n    });\n}\n", "    $result = array();\n    foreach ($l as $n) {\n\
    \        if ($n > 0) {\n            $result[] = $n;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $r = array();\n    foreach ($l as $n) {\n        if ($n\
    \ > 0) {\n            $r[] = $n;\n        }\n    }\n    return $r;\n}\n", "  \
    \  $result = array();\n    foreach ($l as $item) {\n        if ($item > 0) {\n\
    \            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
  "  $result = array();\n  foreach ($l as $i) {\n    if ($i > 0) {\n      $result[]\
    \ = $i;\n    }\n  }\n  return $result;\n}\n", "  $r = array();\n  foreach ($l\
    \ as $v) {\n    if ($v > 0) {\n      $r[] = $v;\n    }\n  }\n  return $r;\n}\n",
  "    $result = array();\n    foreach ($l as $item) {\n        if ($item > 0) {\n\
    \            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
  "    $result = array();\n    foreach ($l as $n) {\n        if ($n > 0) {\n     \
    \       $result[] = $n;\n        }\n    }\n    return $result;\n}\n", "    return\
    \ array_filter($l, function($n) {\n        return $n > 0;\n    });\n}\n", "\t\
    $res = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$res[] = $v;\n\
    \t\t}\n\t}\n\treturn $res;\n}\n", "    $result = array();\n    foreach ($l as\
    \ $n) {\n        if ($n > 0) {\n            $result[] = $n;\n        }\n    }\n\
    \    return $result;\n}\n", "  $result = array();\n  foreach ($l as $item) {\n\
    \    if ($item > 0) {\n      $result[] = $item;\n    }\n  }\n  return $result;\n\
    }\n", "  return array_filter($l, function($x) { return $x > 0; });\n}\n", "  $result\
    \ = array();\n  foreach ($l as $i) {\n    if ($i > 0) {\n      $result[] = $i;\n\
    \    }\n  }\n  return $result;\n}\n", "    return array_filter($l, function($n)\
    \ { return $n > 0; });\n}\n", "  $result = array();\n  foreach ($l as $n) {\n\
    \    if ($n > 0) {\n      $result[] = $n;\n    }\n  }\n  return $result;\n}\n",
  "  $result = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n      $result[]\
    \ = $item;\n    }\n  }\n  return $result;\n}\n", "  $result = array();\n  foreach\
    \ ($l as $n) {\n    if ($n > 0) {\n      $result[] = $n;\n    }\n  }\n  return\
    \ $result;\n}\n", "\t$l = array_filter($l, function($x) { return $x > 0; });\n\
    \treturn $l;\n}\n", "\t$result = array();\n\tforeach ($l as $n) {\n\t\tif ($n\
    \ > 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\treturn $result;\n}\n", "  $ret\
    \ = array();\n  foreach ($l as $n) {\n    if ($n > 0) {\n      $ret[] = $n;\n\
    \    }\n  }\n  return $ret;\n}\n", "    $result = array();\n    foreach ($l as\
    \ $n) {\n        if ($n > 0) {\n            $result[] = $n;\n        }\n    }\n\
    \    return $result;\n}\n", "  $r = array();\n  foreach ($l as $v) {\n    if ($v\
    \ > 0) {\n      $r[] = $v;\n    }\n  }\n  return $r;\n}\n", "  return array_filter($l,\
    \ function($n) {\n    return $n > 0;\n  });\n}\n", "  $result = array();\n  foreach\
    \ ($l as $v) {\n    if ($v > 0) {\n      $result[] = $v;\n    }\n  }\n  return\
    \ $result;\n}\n", "    return array_filter($l, function($x) { return $x > 0; });\n\
    }\n", "  $result = array();\n  foreach ($l as $n) {\n    if ($n > 0) {\n     \
    \ $result[] = $n;\n    }\n  }\n  return $result;\n}\n", "  $result = array();\n\
    \  foreach ($l as $item) {\n    if ($item > 0) {\n      $result[] = $item;\n \
    \   }\n  }\n  return $result;\n}\n", "    return array_filter($l, function($x)\
    \ { return $x > 0; });\n}\n", "  $result = array();\n  foreach ($l as $n) {\n\
    \    if ($n > 0) {\n      $result[] = $n;\n    }\n  }\n  return $result;\n}\n",
  "    $result = array();\n    foreach ($l as $n) {\n        if ($n > 0) {\n     \
    \       $result[] = $n;\n        }\n    }\n    return $result;\n}\n", "  return\
    \ array_filter($l, function($n) { return $n > 0; });\n}\n", "    $result = array();\n\
    \    foreach ($l as $n) {\n        if ($n > 0) {\n            $result[] = $n;\n\
    \        }\n    }\n    return $result;\n}\n", "    return array_filter($l, function($n)\
    \ {\n        return $n > 0;\n    });\n}\n", "    $result = array();\n    foreach\
    \ ($l as $v) {\n        if ($v > 0) {\n            $result[] = $v;\n        }\n\
    \    }\n    return $result;\n}\n", "    return array_filter($l, function($x) {\
    \ return $x > 0; });\n}\n", "    $result = array();\n    foreach ($l as $n) {\n\
    \        if ($n > 0) {\n            $result[] = $n;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = array();\n    foreach ($l as $n) {\n        if\
    \ ($n > 0) {\n            $result[] = $n;\n        }\n    }\n    return $result;\n\
    }\n", "    return array_filter($l, function($x) { return $x > 0; });\n}\n", "\t\
    $result = array();\n\tforeach ($l as $n) {\n\t\tif ($n > 0) {\n\t\t\t$result[]\
    \ = $n;\n\t\t}\n\t}\n\treturn $result;\n}\n", "\t$ret = array();\n\tforeach ($l\
    \ as $v) {\n\t\tif ($v > 0) {\n\t\t\t$ret[] = $v;\n\t\t}\n\t}\n\treturn $ret;\n\
    }\n", "    return array_filter($l, function($n) { return $n > 0; });\n}\n", "\t\
    $result = array();\n\tforeach ($l as $n) {\n\t\tif ($n > 0) {\n\t\t\t$result[]\
    \ = $n;\n\t\t}\n\t}\n\treturn $result;\n}\n", "  return array_filter($l, function($n)\
    \ {\n    return $n > 0;\n  });\n}\n", "  $result = array();\n  foreach ($l as\
    \ $item) {\n    if ($item > 0) {\n      $result[] = $item;\n    }\n  }\n  return\
    \ $result;\n}\n", "  return array_filter($l, function($n) {\n    return $n > 0;\n\
    \  });\n}\n", "    return array_filter($l, function($n) {\n        return $n >\
    \ 0;\n    });\n}\n", "\t$result = array();\n\tforeach ($l as $n) {\n\t\tif ($n\
    \ > 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $result\
    \ = array();\n    foreach ($l as $item) {\n        if ($item > 0) {\n        \
    \    $result[] = $item;\n        }\n    }\n    return $result;\n}\n", "    return\
    \ array_filter($l, function($x) {\n        return $x > 0;\n    });\n}\n", "  return\
    \ array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n", "    $result\
    \ = array();\n    foreach ($l as $n) {\n        if ($n > 0) {\n            $result[]\
    \ = $n;\n        }\n    }\n    return $result;\n}\n", "    return array_filter($l,\
    \ function($x) { return $x > 0; });\n}\n", "  $r = array();\n  foreach ($l as\
    \ $v) {\n    if ($v > 0) {\n      $r[] = $v;\n    }\n  }\n  return $r;\n}\n",
  "    $result = array();\n    foreach ($l as $n) {\n        if ($n > 0) {\n     \
    \       $result[] = $n;\n        }\n    }\n    return $result;\n}\n", "  $res\
    \ = array();\n  foreach ($l as $v) {\n    if ($v > 0) {\n      $res[] = $v;\n\
    \    }\n  }\n  return $res;\n}\n", "    return array_filter($l, function($n) {\
    \ return $n > 0; });\n}\n", "    $result = array();\n    foreach ($l as $item)\
    \ {\n        if ($item > 0) {\n            $result[] = $item;\n        }\n   \
    \ }\n    return $result;\n}\n", "    return array_filter($l, function($n) {\n\
    \        return $n > 0;\n    });\n}\n", "  $result = array();\n  foreach ($l as\
    \ $i) {\n    if ($i > 0) {\n      $result[] = $i;\n    }\n  }\n  return $result;\n\
    }\n", "  return array_filter($l, function($x) {\n    return $x > 0;\n  });\n}\n",
  "    return array_filter($l, function($i) { return $i > 0; });\n}\n", "  $r = array();\n\
    \  foreach ($l as $i) {\n    if ($i > 0) {\n      $r[] = $i;\n    }\n  }\n  return\
    \ $r;\n}\n", "  $result = array();\n  foreach ($l as $n) {\n    if ($n > 0) {\n\
    \      $result[] = $n;\n    }\n  }\n  return $result;\n}\n", "\t$result = array();\n\
    \tforeach ($l as $n) {\n\t\tif ($n > 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\
    \treturn $result;\n}\n", "    return array_filter($l, function($v) { return $v\
    \ > 0; });\n}\n", "    return array_filter($l, function($n) {\n        return\
    \ $n > 0;\n    });\n}\n", "  return array_filter($l, function($x) { return $x\
    \ > 0; });\n}\n", "    $result = array();\n    foreach ($l as $n) {\n        if\
    \ ($n > 0) {\n            $result[] = $n;\n        }\n    }\n    return $result;\n\
    }\n", "    return array_filter($l, function($x) {\n        return $x > 0;\n  \
    \  });\n}\n", "\t$result = array();\n\tforeach ($l as $n) {\n\t\tif ($n > 0) {\n\
    \t\t\t$result[] = $n;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    return array_filter($l,\
    \ function($x) { return $x > 0; });\n}\n", "\t$result = array();\n\tforeach ($l\
    \ as $n) {\n\t\tif ($n > 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "  $r = array();\n  foreach ($l as $n) {\n    if ($n > 0) {\n      $r[]\
    \ = $n;\n    }\n  }\n  return $r;\n}\n", "  $new_list = array();\n  foreach ($l\
    \ as $item) {\n    if ($item > 0) {\n      $new_list[] = $item;\n    }\n  }\n\
    \  return $new_list;\n}\n", "    return array_filter($l, function($x) { return\
    \ $x > 0; });\n}\n", "    $result = array();\n    foreach ($l as $v) {\n     \
    \   if ($v > 0) {\n            $result[] = $v;\n        }\n    }\n    return $result;\n\
    }\n", "  $result = array();\n  foreach ($l as $n) {\n    if ($n > 0) {\n     \
    \ $result[] = $n;\n    }\n  }\n  return $result;\n}\n", "    return array_filter($l,\
    \ function($n) {\n        return $n > 0;\n    });\n}\n", "    return array_filter($l,\
    \ function($x) {\n        return $x > 0;\n    });\n}\n", "    return array_filter($l,\
    \ function($x) {\n        return $x > 0;\n    });\n}\n", "    $result = array();\n\
    \    foreach ($l as $item) {\n        if ($item > 0) {\n            $result[]\
    \ = $item;\n        }\n    }\n    return $result;\n}\n", "  $result = array();\n\
    \  foreach ($l as $item) {\n    if ($item > 0) {\n      $result[] = $item;\n \
    \   }\n  }\n  return $result;\n}\n", "    $result = array();\n    foreach ($l\
    \ as $n) {\n        if ($n > 0) {\n            $result[] = $n;\n        }\n  \
    \  }\n    return $result;\n}\n", "  $result = array();\n  foreach ($l as $item)\
    \ {\n    if ($item > 0) {\n      $result[] = $item;\n    }\n  }\n  return $result;\n\
    }\n", "  $result = array();\n  foreach ($l as $n) {\n    if ($n > 0) {\n     \
    \ $result[] = $n;\n    }\n  }\n  return $result;\n}\n", "    $result = array();\n\
    \    foreach ($l as $i) {\n        if ($i > 0) {\n            $result[] = $i;\n\
    \        }\n    }\n    return $result;\n}\n", "    return array_filter($l, function($n)\
    \ {\n        return $n > 0;\n    });\n}\n", "\treturn array_filter($l, function($x)\
    \ { return $x > 0; });\n}\n", "    $result = array();\n    foreach ($l as $item)\
    \ {\n        if ($item > 0) {\n            $result[] = $item;\n        }\n   \
    \ }\n    return $result;\n}\n", "    $result = array();\n    foreach ($l as $item)\
    \ {\n        if ($item > 0) {\n            $result[] = $item;\n        }\n   \
    \ }\n    return $result;\n}\n", "    $result = array();\n    foreach ($l as $item)\
    \ {\n        if ($item > 0) {\n            $result[] = $item;\n        }\n   \
    \ }\n    return $result;\n}\n", "  $result = array();\n  foreach ($l as $x) {\n\
    \    if ($x > 0) {\n      $result[] = $x;\n    }\n  }\n  return $result;\n}\n",
  "    $result = array();\n    foreach ($l as $n) {\n        if ($n > 0) {\n     \
    \       $result[] = $n;\n        }\n    }\n    return $result;\n}\n", "  $result\
    \ = array();\n  foreach ($l as $n) {\n    if ($n > 0) {\n      $result[] = $n;\n\
    \    }\n  }\n  return $result;\n}\n", "  $result = array();\n  foreach ($l as\
    \ $i) {\n    if ($i > 0) {\n      $result[] = $i;\n    }\n  }\n  return $result;\n\
    }\n", "  $result = array();\n  foreach ($l as $n) {\n    if ($n > 0) {\n     \
    \ $result[] = $n;\n    }\n  }\n  return $result;\n}\n", "    $result = array();\n\
    \    foreach ($l as $n) {\n        if ($n > 0) {\n            $result[] = $n;\n\
    \        }\n    }\n    return $result;\n}\n", "\t$result = array();\n\tforeach\
    \ ($l as $n) {\n\t\tif ($n > 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n", "    $result = array();\n    foreach ($l as $n) {\n        if\
    \ ($n > 0) {\n            $result[] = $n;\n        }\n    }\n    return $result;\n\
    }\n", "  $result = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n\
    \      $result[] = $item;\n    }\n  }\n  return $result;\n}\n", "  return array_filter($l,\
    \ function($n) {\n    return $n > 0;\n  });\n}\n", "    $result = array();\n \
    \   foreach ($l as $n) {\n        if ($n > 0) {\n            $result[] = $n;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = array();\n    foreach\
    \ ($l as $item) {\n        if ($item > 0) {\n            $result[] = $item;\n\
    \        }\n    }\n    return $result;\n}\n", "    $r = array();\n    foreach\
    \ ($l as $n) {\n        if ($n > 0) {\n            $r[] = $n;\n        }\n   \
    \ }\n    return $r;\n}\n", "  $ret = array();\n  foreach ($l as $e) {\n    if\
    \ ($e > 0) {\n      $ret[] = $e;\n    }\n  }\n  return $ret;\n}\n", "    $result\
    \ = array();\n    foreach ($l as $n) {\n        if ($n > 0) {\n            $result[]\
    \ = $n;\n        }\n    }\n    return $result;\n}\n", "  $result = array();\n\
    \  foreach ($l as $i) {\n    if ($i > 0) {\n      $result[] = $i;\n    }\n  }\n\
    \  return $result;\n}\n", "  $result = array();\n  foreach ($l as $i) {\n    if\
    \ ($i > 0) {\n      $result[] = $i;\n    }\n  }\n  return $result;\n}\n", "  \
    \  $result = array();\n    foreach ($l as $item) {\n        if ($item > 0) {\n\
    \            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
  "\t$result = array();\n\tforeach ($l as $n) {\n\t\tif ($n > 0) {\n\t\t\t$result[]\
    \ = $n;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    return array_filter($l, function($x)\
    \ {\n        return $x > 0;\n    });\n}\n", "  $r = array();\n  foreach ($l as\
    \ $v) {\n    if ($v > 0) {\n      $r[] = $v;\n    }\n  }\n  return $r;\n}\n",
  "\t$result = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$result[]\
    \ = $v;\n\t\t}\n\t}\n\treturn $result;\n}\n", "\t$result = array();\n\tforeach\
    \ ($l as $n) {\n\t\tif ($n > 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n", "    $result = array();\n    foreach ($l as $n) {\n        if\
    \ ($n > 0) {\n            $result[] = $n;\n        }\n    }\n    return $result;\n\
    }\n", "\t$result = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t\
    $result[] = $v;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    return array_filter($l,\
    \ function($x) {\n        return $x > 0;\n    });\n}\n", "    $result = array();\n\
    \    foreach ($l as $n) {\n        if ($n > 0) {\n            $result[] = $n;\n\
    \        }\n    }\n    return $result;\n}\n", "  $r = array();\n  foreach ($l\
    \ as $n) {\n    if ($n > 0) {\n      $r[] = $n;\n    }\n  }\n  return $r;\n}\n",
  "  $r = array();\n  foreach ($l as $v) {\n    if ($v > 0) {\n      $r[] = $v;\n\
    \    }\n  }\n  return $r;\n}\n", "    return array_filter($l, function($i) { return\
    \ $i > 0; });\n}\n", "  $result = array();\n  foreach ($l as $x) {\n    if ($x\
    \ > 0) {\n      $result[] = $x;\n    }\n  }\n  return $result;\n}\n", "\t$r =\
    \ array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$r[] = $v;\n\t\t\
    }\n\t}\n\treturn $r;\n}\n", "\t$result = array();\n\tforeach ($l as $i) {\n\t\t\
    if ($i > 0) {\n\t\t\t$result[] = $i;\n\t\t}\n\t}\n\treturn $result;\n}\n", " \
    \   return array_filter($l, function($n) {\n        return $n > 0;\n    });\n\
    }\n", "  $r = array();\n  foreach ($l as $v) {\n    if ($v >= 0) {\n      $r[]\
    \ = $v;\n    }\n  }\n  return $r;\n}\n", "  $r = array();\n  foreach ($l as $i)\
    \ {\n    if ($i > 0) {\n      $r[] = $i;\n    }\n  }\n  return $r;\n}\n", "  \
    \  $result = array();\n    foreach ($l as $item) {\n        if ($item > 0) {\n\
    \            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
  "  $result = array();\n  foreach ($l as $i) {\n    if ($i > 0) {\n      $result[]\
    \ = $i;\n    }\n  }\n  return $result;\n}\n", "    $result = array();\n    foreach\
    \ ($l as $i) {\n        if ($i > 0) {\n            $result[] = $i;\n        }\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    foreach ($l as\
    \ $n) {\n        if ($n > 0) {\n            $result[] = $n;\n        }\n    }\n\
    \    return $result;\n}\n", "\t$result = array();\n\tforeach ($l as $n) {\n\t\t\
    if ($n > 0) {\n\t\t\t$result[] = $n;\n\t\t}\n\t}\n\treturn $result;\n}\n", " \
    \   $result = array();\n    foreach ($l as $n) {\n        if ($n > 0) {\n    \
    \        $result[] = $n;\n        }\n    }\n    return $result;\n}\n", "  $result\
    \ = array();\n  foreach ($l as $x) {\n    if ($x > 0) {\n      $result[] = $x;\n\
    \    }\n  }\n  return $result;\n}\n", "  $result = array();\n  foreach ($l as\
    \ $item) {\n    if ($item > 0) {\n      $result[] = $item;\n    }\n  }\n  return\
    \ $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"
